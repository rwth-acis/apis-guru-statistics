{"openapi":"3.0.0","x-hasEquivalentPaths":true,"info":{"contact":{"email":"mike.ralphson@gmail.com","name":"Mike Ralphson","url":"https://github.com/mermade/aws2openapi","x-twitter":"PermittedSoc"},"description":"AWS AppSync provides API actions for creating and interacting with data sources using GraphQL from your application.","license":{"name":"Apache 2.0 License","url":"http://www.apache.org/licenses/"},"termsOfService":"https://aws.amazon.com/service-terms/","title":"AWS AppSync","version":"2017-07-25","x-apiClientRegistration":{"url":"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"},"x-apisguru-categories":["cloud"],"x-logo":{"backgroundColor":"#FFFFFF","url":"https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"},"x-origin":[{"contentType":"application/json","converter":{"url":"https://github.com/mermade/aws2openapi","version":"1.0.0"},"url":"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appsync-2017-07-25.normal.json","x-apisguru-direct":true}],"x-preferred":true,"x-providerName":"amazonaws.com","x-release":"v4","x-serviceName":"appsync"},"externalDocs":{"description":"Amazon Web Services documentation","url":"https://docs.aws.amazon.com/appsync/"},"security":[{"hmac":[]}],"paths":{"/v1/apis":{"get":{"description":"Lists your GraphQL APIs.","operationId":"ListGraphqlApis","parameters":[{"description":"An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list. ","in":"query","name":"nextToken","required":false,"schema":{"type":"string","pattern":"[\\\\S]+"}},{"description":"The maximum number of results you want the request to return.","in":"query","name":"maxResults","required":false,"schema":{"type":"integer","minimum":0,"maximum":25}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListGraphqlApisResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"482":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Creates a <code>GraphqlApi</code> object.","operationId":"CreateGraphqlApi","requestBody":{"content":{"application/json":{"schema":{"properties":{"additionalAuthenticationProviders":{"description":"A list of additional authentication providers for the <code>GraphqlApi</code> API.","items":{"$ref":"#/components/schemas/AdditionalAuthenticationProvider"},"type":"array"},"authenticationType":{"description":"The authentication type: API key, AWS IAM, OIDC, or Amazon Cognito user pools.","enum":["API_KEY","AWS_IAM","AMAZON_COGNITO_USER_POOLS","OPENID_CONNECT"],"type":"string"},"logConfig":{"description":"The CloudWatch Logs configuration.","properties":{"cloudWatchLogsRoleArn":{"$ref":"#/components/schemas/String"},"excludeVerboseContent":{"$ref":"#/components/schemas/Boolean"},"fieldLogLevel":{"$ref":"#/components/schemas/FieldLogLevel"}},"type":"object"},"name":{"description":"A user-supplied name for the <code>GraphqlApi</code>.","type":"string"},"openIDConnectConfig":{"description":"Describes an OpenID Connect configuration.","properties":{"authTTL":{"$ref":"#/components/schemas/Long"},"clientId":{"$ref":"#/components/schemas/String"},"iatTTL":{"$ref":"#/components/schemas/Long"},"issuer":{"$ref":"#/components/schemas/String"}},"type":"object"},"tags":{"additionalProperties":{"$ref":"#/components/schemas/TagValue"},"description":"A map with keys of <code>TagKey</code> objects and values of <code>TagValue</code> objects.","maxProperties":50,"minProperties":1,"type":"object"},"userPoolConfig":{"description":"Describes an Amazon Cognito user pool configuration.","properties":{"appIdClientRegex":{"$ref":"#/components/schemas/String"},"awsRegion":{"$ref":"#/components/schemas/String"},"defaultAction":{"$ref":"#/components/schemas/DefaultAction"},"userPoolId":{"$ref":"#/components/schemas/String"}},"type":"object"}},"required":["name","logConfig","authenticationType","userPoolConfig","openIDConnectConfig"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateGraphqlApiResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"LimitExceededException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LimitExceededException"}}}},"482":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"485":{"description":"ApiLimitExceededException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiLimitExceededException"}}}}}}},"/v1/apis/{apiId}":{"delete":{"description":"Deletes a <code>GraphqlApi</code> object.","operationId":"DeleteGraphqlApi","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteGraphqlApiResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"485":{"description":"AccessDeniedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessDeniedException"}}}}}},"get":{"description":"Retrieves a <code>GraphqlApi</code> object.","operationId":"GetGraphqlApi","parameters":[{"description":"The API ID for the GraphQL API.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetGraphqlApiResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"484":{"description":"AccessDeniedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessDeniedException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Updates a <code>GraphqlApi</code> object.","operationId":"UpdateGraphqlApi","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"additionalAuthenticationProviders":{"description":"A list of additional authentication providers for the <code>GraphqlApi</code> API.","items":{"$ref":"#/components/schemas/AdditionalAuthenticationProvider"},"type":"array"},"authenticationType":{"description":"The new authentication type for the <code>GraphqlApi</code> object.","enum":["API_KEY","AWS_IAM","AMAZON_COGNITO_USER_POOLS","OPENID_CONNECT"],"type":"string"},"logConfig":{"description":"The CloudWatch Logs configuration.","properties":{"cloudWatchLogsRoleArn":{"$ref":"#/components/schemas/String"},"excludeVerboseContent":{"$ref":"#/components/schemas/Boolean"},"fieldLogLevel":{"$ref":"#/components/schemas/FieldLogLevel"}},"type":"object"},"name":{"description":"The new name for the <code>GraphqlApi</code> object.","type":"string"},"openIDConnectConfig":{"description":"Describes an OpenID Connect configuration.","properties":{"authTTL":{"$ref":"#/components/schemas/Long"},"clientId":{"$ref":"#/components/schemas/String"},"iatTTL":{"$ref":"#/components/schemas/Long"},"issuer":{"$ref":"#/components/schemas/String"}},"type":"object"},"userPoolConfig":{"description":"Describes an Amazon Cognito user pool configuration.","properties":{"appIdClientRegex":{"$ref":"#/components/schemas/String"},"awsRegion":{"$ref":"#/components/schemas/String"},"defaultAction":{"$ref":"#/components/schemas/DefaultAction"},"userPoolId":{"$ref":"#/components/schemas/String"}},"type":"object"}},"required":["name","logConfig","userPoolConfig","openIDConnectConfig"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateGraphqlApiResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"485":{"description":"AccessDeniedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessDeniedException"}}}}}}},"/v1/apis/{apiId}/apikeys":{"get":{"description":"<p>Lists the API keys for a given API.</p> <note> <p>API keys are deleted automatically sometime after they expire. However, they may still be included in the response until they have actually been deleted. You can safely call <code>DeleteApiKey</code> to manually delete a key before it's automatically deleted.</p> </note>","operationId":"ListApiKeys","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.","in":"query","name":"nextToken","required":false,"schema":{"type":"string","pattern":"[\\\\S]+"}},{"description":"The maximum number of results you want the request to return.","in":"query","name":"maxResults","required":false,"schema":{"type":"integer","minimum":0,"maximum":25}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListApiKeysResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Creates a unique key that you can distribute to clients who are executing your API.","operationId":"CreateApiKey","parameters":[{"description":"The ID for your GraphQL API.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"description":{"description":"A description of the purpose of the API key.","type":"string"},"expires":{"description":"The time from creation time after which the API key expires. The date is represented as seconds since the epoch, rounded down to the nearest hour. The default value for this parameter is 7 days from creation time. For more information, see .","type":"integer"}},"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateApiKeyResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"LimitExceededException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LimitExceededException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"LimitExceededException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LimitExceededException"}}}},"485":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"486":{"description":"ApiKeyLimitExceededException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiKeyLimitExceededException"}}}},"487":{"description":"ApiKeyValidityOutOfBoundsException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiKeyValidityOutOfBoundsException"}}}}}}},"/v1/apis/{apiId}/apikeys/{id}":{"delete":{"description":"Deletes an API key.","operationId":"DeleteApiKey","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The ID for the API key.","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteApiKeyResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Updates an API key.","operationId":"UpdateApiKey","parameters":[{"description":"The ID for the GraphQL API.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The API key ID.","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"description":{"description":"A description of the purpose of the API key.","type":"string"},"expires":{"description":"The time from update time after which the API key expires. The date is represented as seconds since the epoch. For more information, see .","type":"integer"}},"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateApiKeyResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"LimitExceededException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LimitExceededException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"485":{"description":"ApiKeyValidityOutOfBoundsException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiKeyValidityOutOfBoundsException"}}}}}}},"/v1/apis/{apiId}/datasources":{"get":{"description":"Lists the data sources for a given API.","operationId":"ListDataSources","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list. ","in":"query","name":"nextToken","required":false,"schema":{"type":"string","pattern":"[\\\\S]+"}},{"description":"The maximum number of results you want the request to return.","in":"query","name":"maxResults","required":false,"schema":{"type":"integer","minimum":0,"maximum":25}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListDataSourcesResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Creates a <code>DataSource</code> object.","operationId":"CreateDataSource","parameters":[{"description":"The API ID for the GraphQL API for the <code>DataSource</code>.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"description":{"description":"A description of the <code>DataSource</code>.","type":"string"},"dynamodbConfig":{"description":"Describes an Amazon DynamoDB data source configuration.","properties":{"awsRegion":{"$ref":"#/components/schemas/String"},"tableName":{"$ref":"#/components/schemas/String"},"useCallerCredentials":{"$ref":"#/components/schemas/Boolean"}},"type":"object"},"elasticsearchConfig":{"description":"Describes an Elasticsearch data source configuration.","properties":{"awsRegion":{"$ref":"#/components/schemas/String"},"endpoint":{"$ref":"#/components/schemas/String"}},"type":"object"},"httpConfig":{"description":"Describes an HTTP data source configuration.","properties":{"authorizationConfig":{"$ref":"#/components/schemas/AuthorizationConfig"},"endpoint":{"$ref":"#/components/schemas/String"}},"type":"object"},"lambdaConfig":{"description":"Describes an AWS Lambda data source configuration.","properties":{"lambdaFunctionArn":{"$ref":"#/components/schemas/String"}},"type":"object"},"name":{"description":"A user-supplied name for the <code>DataSource</code>.","pattern":"[_A-Za-z][_0-9A-Za-z]*","type":"string"},"relationalDatabaseConfig":{"description":"Describes a relational database data source configuration.","properties":{"rdsHttpEndpointConfig":{"$ref":"#/components/schemas/RdsHttpEndpointConfig"},"relationalDatabaseSourceType":{"$ref":"#/components/schemas/RelationalDatabaseSourceType"}},"type":"object"},"serviceRoleArn":{"description":"The AWS IAM service role ARN for the data source. The system assumes this role when accessing the data source.","type":"string"},"type":{"description":"The type of the <code>DataSource</code>.","enum":["AWS_LAMBDA","AMAZON_DYNAMODB","AMAZON_ELASTICSEARCH","NONE","HTTP","RELATIONAL_DATABASE"],"type":"string"}},"required":["name","type","dynamodbConfig","lambdaConfig","elasticsearchConfig"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateDataSourceResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}}},"/v1/apis/{apiId}/datasources/{name}":{"delete":{"description":"Deletes a <code>DataSource</code> object.","operationId":"DeleteDataSource","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The name of the data source.","in":"path","name":"name","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteDataSourceResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"get":{"description":"Retrieves a <code>DataSource</code> object.","operationId":"GetDataSource","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The name of the data source.","in":"path","name":"name","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetDataSourceResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Updates a <code>DataSource</code> object.","operationId":"UpdateDataSource","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The new name for the data source.","in":"path","name":"name","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"description":{"description":"The new description for the data source.","type":"string"},"dynamodbConfig":{"description":"Describes an Amazon DynamoDB data source configuration.","properties":{"awsRegion":{"$ref":"#/components/schemas/String"},"tableName":{"$ref":"#/components/schemas/String"},"useCallerCredentials":{"$ref":"#/components/schemas/Boolean"}},"type":"object"},"elasticsearchConfig":{"description":"Describes an Elasticsearch data source configuration.","properties":{"awsRegion":{"$ref":"#/components/schemas/String"},"endpoint":{"$ref":"#/components/schemas/String"}},"type":"object"},"httpConfig":{"description":"Describes an HTTP data source configuration.","properties":{"authorizationConfig":{"$ref":"#/components/schemas/AuthorizationConfig"},"endpoint":{"$ref":"#/components/schemas/String"}},"type":"object"},"lambdaConfig":{"description":"Describes an AWS Lambda data source configuration.","properties":{"lambdaFunctionArn":{"$ref":"#/components/schemas/String"}},"type":"object"},"relationalDatabaseConfig":{"description":"Describes a relational database data source configuration.","properties":{"rdsHttpEndpointConfig":{"$ref":"#/components/schemas/RdsHttpEndpointConfig"},"relationalDatabaseSourceType":{"$ref":"#/components/schemas/RelationalDatabaseSourceType"}},"type":"object"},"serviceRoleArn":{"description":"The new service role ARN for the data source.","type":"string"},"type":{"description":"The new data source type.","enum":["AWS_LAMBDA","AMAZON_DYNAMODB","AMAZON_ELASTICSEARCH","NONE","HTTP","RELATIONAL_DATABASE"],"type":"string"}},"required":["type","dynamodbConfig","lambdaConfig","elasticsearchConfig"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateDataSourceResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}}},"/v1/apis/{apiId}/functions":{"get":{"description":"List multiple functions.","operationId":"ListFunctions","parameters":[{"description":"The GraphQL API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.","in":"query","name":"nextToken","required":false,"schema":{"type":"string","pattern":"[\\\\S]+"}},{"description":"The maximum number of results you want the request to return.","in":"query","name":"maxResults","required":false,"schema":{"type":"integer","minimum":0,"maximum":25}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListFunctionsResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"<p>Creates a <code>Function</code> object.</p> <p>A function is a reusable entity. Multiple functions can be used to compose the resolver logic.</p>","operationId":"CreateFunction","parameters":[{"description":"The GraphQL API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"dataSourceName":{"description":"The <code>Function</code> <code>DataSource</code> name.","pattern":"[_A-Za-z][_0-9A-Za-z]*","type":"string"},"description":{"description":"The <code>Function</code> description.","type":"string"},"functionVersion":{"description":"The <code>version</code> of the request mapping template. Currently the supported value is 2018-05-29. ","type":"string"},"name":{"description":"The <code>Function</code> name. The function name does not have to be unique.","pattern":"[_A-Za-z][_0-9A-Za-z]*","type":"string"},"requestMappingTemplate":{"description":"The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.","maxLength":65536,"minLength":1,"type":"string"},"responseMappingTemplate":{"description":"The <code>Function</code> response mapping template. ","maxLength":65536,"minLength":1,"type":"string"}},"required":["name","dataSourceName","requestMappingTemplate","functionVersion"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFunctionResponse"}}}},"480":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}}},"/v1/apis/{apiId}/functions/{functionId}":{"delete":{"description":"Deletes a <code>Function</code>.","operationId":"DeleteFunction","parameters":[{"description":"The GraphQL API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The <code>Function</code> ID.","in":"path","name":"functionId","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteFunctionResponse"}}}},"480":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"get":{"description":"Get a <code>Function</code>.","operationId":"GetFunction","parameters":[{"description":"The GraphQL API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The <code>Function</code> ID.","in":"path","name":"functionId","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetFunctionResponse"}}}},"480":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Updates a <code>Function</code> object.","operationId":"UpdateFunction","parameters":[{"description":"The GraphQL API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The function ID.","in":"path","name":"functionId","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"dataSourceName":{"description":"The <code>Function</code> <code>DataSource</code> name.","pattern":"[_A-Za-z][_0-9A-Za-z]*","type":"string"},"description":{"description":"The <code>Function</code> description.","type":"string"},"functionVersion":{"description":"The <code>version</code> of the request mapping template. Currently the supported value is 2018-05-29. ","type":"string"},"name":{"description":"The <code>Function</code> name.","pattern":"[_A-Za-z][_0-9A-Za-z]*","type":"string"},"requestMappingTemplate":{"description":"The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.","maxLength":65536,"minLength":1,"type":"string"},"responseMappingTemplate":{"description":"The <code>Function</code> request mapping template. ","maxLength":65536,"minLength":1,"type":"string"}},"required":["name","dataSourceName","requestMappingTemplate","functionVersion"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateFunctionResponse"}}}},"480":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}}},"/v1/apis/{apiId}/functions/{functionId}/resolvers":{"get":{"description":"List the resolvers that are associated with a specific function.","operationId":"ListResolversByFunction","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The Function ID.","in":"path","name":"functionId","required":true,"schema":{"type":"string"}},{"description":"An identifier that was returned from the previous call to this operation, which you can use to return the next set of items in the list.","in":"query","name":"nextToken","required":false,"schema":{"type":"string","pattern":"[\\\\S]+"}},{"description":"The maximum number of results you want the request to return.","in":"query","name":"maxResults","required":false,"schema":{"type":"integer","minimum":0,"maximum":25}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListResolversByFunctionResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}]},"/v1/apis/{apiId}/schema#format":{"get":{"description":"Retrieves the introspection schema for a GraphQL API.","operationId":"GetIntrospectionSchema","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The schema format: SDL or JSON.","in":"query","name":"format","required":true,"schema":{"type":"string","enum":["SDL","JSON"]}},{"description":"A flag that specifies whether the schema introspection should contain directives.","in":"query","name":"includeDirectives","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetIntrospectionSchemaResponse"}}}},"480":{"description":"GraphQLSchemaException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GraphQLSchemaException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}]},"/v1/apis/{apiId}/schemacreation":{"get":{"description":"Retrieves the current status of a schema creation operation.","operationId":"GetSchemaCreationStatus","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetSchemaCreationStatusResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"<p>Adds a new schema to your GraphQL API.</p> <p>This operation is asynchronous. Use to determine when it has completed.</p>","operationId":"StartSchemaCreation","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"definition":{"description":"The schema definition, in GraphQL schema language format.","type":"string"}},"required":["definition"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StartSchemaCreationResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}}},"/v1/apis/{apiId}/types":{"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Creates a <code>Type</code> object.","operationId":"CreateType","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"definition":{"description":"<p>The type definition, in GraphQL Schema Definition Language (SDL) format.</p> <p>For more information, see the <a href=\"http://graphql.org/learn/schema/\">GraphQL SDL documentation</a>.</p>","type":"string"},"format":{"description":"The type format: SDL or JSON.","enum":["SDL","JSON"],"type":"string"}},"required":["definition","format"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTypeResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}}},"/v1/apis/{apiId}/types#format":{"get":{"description":"Lists the types for a given API.","operationId":"ListTypes","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The type format: SDL or JSON.","in":"query","name":"format","required":true,"schema":{"type":"string","enum":["SDL","JSON"]}},{"description":"An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list. ","in":"query","name":"nextToken","required":false,"schema":{"type":"string","pattern":"[\\\\S]+"}},{"description":"The maximum number of results you want the request to return.","in":"query","name":"maxResults","required":false,"schema":{"type":"integer","minimum":0,"maximum":25}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListTypesResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}]},"/v1/apis/{apiId}/types/{typeName}":{"delete":{"description":"Deletes a <code>Type</code> object.","operationId":"DeleteType","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The type name.","in":"path","name":"typeName","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteTypeResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Updates a <code>Type</code> object.","operationId":"UpdateType","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The new type name.","in":"path","name":"typeName","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"definition":{"description":"The new definition.","type":"string"},"format":{"description":"The new type format: SDL or JSON.","enum":["SDL","JSON"],"type":"string"}},"required":["format"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateTypeResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}}},"/v1/apis/{apiId}/types/{typeName}#format":{"get":{"description":"Retrieves a <code>Type</code> object.","operationId":"GetType","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The type name.","in":"path","name":"typeName","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}},{"description":"The type format: SDL or JSON.","in":"query","name":"format","required":true,"schema":{"type":"string","enum":["SDL","JSON"]}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetTypeResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"482":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}]},"/v1/apis/{apiId}/types/{typeName}/resolvers":{"get":{"description":"Lists the resolvers for a given API and type.","operationId":"ListResolvers","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The type name.","in":"path","name":"typeName","required":true,"schema":{"type":"string"}},{"description":"An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list. ","in":"query","name":"nextToken","required":false,"schema":{"type":"string","pattern":"[\\\\S]+"}},{"description":"The maximum number of results you want the request to return.","in":"query","name":"maxResults","required":false,"schema":{"type":"integer","minimum":0,"maximum":25}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListResolversResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"<p>Creates a <code>Resolver</code> object.</p> <p>A resolver converts incoming requests into a format that a data source can understand and converts the data source's responses into GraphQL.</p>","operationId":"CreateResolver","parameters":[{"description":"The ID for the GraphQL API for which the resolver is being created.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The name of the <code>Type</code>.","in":"path","name":"typeName","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"dataSourceName":{"description":"The name of the data source for which the resolver is being created.","pattern":"[_A-Za-z][_0-9A-Za-z]*","type":"string"},"fieldName":{"description":"The name of the field to attach the resolver to.","pattern":"[_A-Za-z][_0-9A-Za-z]*","type":"string"},"kind":{"description":"<p>The resolver type.</p> <ul> <li> <p> <b>UNIT</b>: A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.</p> </li> <li> <p> <b>PIPELINE</b>: A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</p> </li> </ul>","enum":["UNIT","PIPELINE"],"type":"string"},"pipelineConfig":{"description":"The pipeline configuration for a resolver of kind <code>PIPELINE</code>.","properties":{"functions":{"$ref":"#/components/schemas/FunctionsIds"}},"type":"object"},"requestMappingTemplate":{"description":"<p>The mapping template to be used for requests.</p> <p>A resolver uses a request mapping template to convert a GraphQL expression into a format that a data source can understand. Mapping templates are written in Apache Velocity Template Language (VTL).</p>","maxLength":65536,"minLength":1,"type":"string"},"responseMappingTemplate":{"description":"The mapping template to be used for responses from the data source.","maxLength":65536,"minLength":1,"type":"string"}},"required":["fieldName","requestMappingTemplate"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateResolverResponse"}}}},"480":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}}},"/v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}":{"delete":{"description":"Deletes a <code>Resolver</code> object.","operationId":"DeleteResolver","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The name of the resolver type.","in":"path","name":"typeName","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}},{"description":"The resolver field name.","in":"path","name":"fieldName","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteResolverResponse"}}}},"480":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}},"get":{"description":"Retrieves a <code>Resolver</code> object.","operationId":"GetResolver","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The resolver type name.","in":"path","name":"typeName","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}},{"description":"The resolver field name.","in":"path","name":"fieldName","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetResolverResponse"}}}},"480":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Updates a <code>Resolver</code> object.","operationId":"UpdateResolver","parameters":[{"description":"The API ID.","in":"path","name":"apiId","required":true,"schema":{"type":"string"}},{"description":"The new type name.","in":"path","name":"typeName","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}},{"description":"The new field name.","in":"path","name":"fieldName","required":true,"schema":{"type":"string","pattern":"[_A-Za-z][_0-9A-Za-z]*"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"dataSourceName":{"description":"The new data source name.","pattern":"[_A-Za-z][_0-9A-Za-z]*","type":"string"},"kind":{"description":"<p>The resolver type.</p> <ul> <li> <p> <b>UNIT</b>: A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.</p> </li> <li> <p> <b>PIPELINE</b>: A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</p> </li> </ul>","enum":["UNIT","PIPELINE"],"type":"string"},"pipelineConfig":{"description":"The pipeline configuration for a resolver of kind <code>PIPELINE</code>.","properties":{"functions":{"$ref":"#/components/schemas/FunctionsIds"}},"type":"object"},"requestMappingTemplate":{"description":"The new request mapping template.","maxLength":65536,"minLength":1,"type":"string"},"responseMappingTemplate":{"description":"The new response mapping template.","maxLength":65536,"minLength":1,"type":"string"}},"required":["requestMappingTemplate"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateResolverResponse"}}}},"480":{"description":"ConcurrentModificationException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConcurrentModificationException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}}}}},"/v1/tags/{resourceArn}":{"get":{"description":"Lists the tags for a resource.","operationId":"ListTagsForResource","parameters":[{"description":"The <code>GraphqlApi</code> ARN.","in":"path","name":"resourceArn","required":true,"schema":{"type":"string","minLength":70,"maxLength":75,"pattern":"^arn:aws:appsync:[A-Za-z0-9_/.-]{0,63}:\\d{12}:apis/[0-9A-Za-z_-]{26}$"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListTagsForResourceResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"LimitExceededException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LimitExceededException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"485":{"description":"AccessDeniedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessDeniedException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Tags a resource with user-supplied tags.","operationId":"TagResource","parameters":[{"description":"The <code>GraphqlApi</code> ARN.","in":"path","name":"resourceArn","required":true,"schema":{"type":"string","minLength":70,"maxLength":75,"pattern":"^arn:aws:appsync:[A-Za-z0-9_/.-]{0,63}:\\d{12}:apis/[0-9A-Za-z_-]{26}$"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"tags":{"additionalProperties":{"$ref":"#/components/schemas/TagValue"},"description":"A map with keys of <code>TagKey</code> objects and values of <code>TagValue</code> objects.","maxProperties":50,"minProperties":1,"type":"object"}},"required":["tags"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagResourceResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"LimitExceededException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LimitExceededException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"485":{"description":"AccessDeniedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessDeniedException"}}}}}}},"/v1/tags/{resourceArn}#tagKeys":{"delete":{"description":"Untags a resource.","operationId":"UntagResource","parameters":[{"description":"The <code>GraphqlApi</code> ARN.","in":"path","name":"resourceArn","required":true,"schema":{"type":"string","minLength":70,"maxLength":75,"pattern":"^arn:aws:appsync:[A-Za-z0-9_/.-]{0,63}:\\d{12}:apis/[0-9A-Za-z_-]{26}$"}},{"description":"A list of <code>TagKey</code> objects.","in":"query","name":"tagKeys","required":true,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UntagResourceResponse"}}}},"480":{"description":"BadRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestException"}}}},"481":{"description":"NotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundException"}}}},"482":{"description":"LimitExceededException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LimitExceededException"}}}},"483":{"description":"UnauthorizedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedException"}}}},"484":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"485":{"description":"AccessDeniedException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessDeniedException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}]}},"servers":[{"description":"The AWSAppSync multi-region endpoint","url":"http://appsync.{region}.amazonaws.com","variables":{"region":{"default":"us-east-1","description":"The AWS region","enum":["us-east-1","us-east-2","us-west-1","us-west-2","us-gov-west-1","us-gov-east-1","ca-central-1","eu-north-1","eu-west-1","eu-west-2","eu-west-3","eu-central-1","ap-northeast-1","ap-northeast-2","ap-northeast-3","ap-southeast-1","ap-southeast-2","ap-south-1","sa-east-1"]}}},{"description":"The AWSAppSync multi-region endpoint","url":"https://appsync.{region}.amazonaws.com","variables":{"region":{"default":"us-east-1","description":"The AWS region","enum":["us-east-1","us-east-2","us-west-1","us-west-2","us-gov-west-1","us-gov-east-1","ca-central-1","eu-north-1","eu-west-1","eu-west-2","eu-west-3","eu-central-1","ap-northeast-1","ap-northeast-2","ap-northeast-3","ap-southeast-1","ap-southeast-2","ap-south-1","sa-east-1"]}}},{"description":"The AWSAppSync endpoint for China (Beijing) and China (Ningxia)","url":"http://appsync.{region}.amazonaws.com.cn","variables":{"region":{"default":"cn-north-1","description":"The AWS region","enum":["cn-north-1","cn-northwest-1"]}}},{"description":"The AWSAppSync endpoint for China (Beijing) and China (Ningxia)","url":"https://appsync.{region}.amazonaws.com.cn","variables":{"region":{"default":"cn-north-1","description":"The AWS region","enum":["cn-north-1","cn-northwest-1"]}}}],"components":{"parameters":{"X-Amz-Algorithm":{"in":"header","name":"X-Amz-Algorithm","required":false,"schema":{"type":"string"}},"X-Amz-Content-Sha256":{"in":"header","name":"X-Amz-Content-Sha256","required":false,"schema":{"type":"string"}},"X-Amz-Credential":{"in":"header","name":"X-Amz-Credential","required":false,"schema":{"type":"string"}},"X-Amz-Date":{"in":"header","name":"X-Amz-Date","required":false,"schema":{"type":"string"}},"X-Amz-Security-Token":{"in":"header","name":"X-Amz-Security-Token","required":false,"schema":{"type":"string"}},"X-Amz-Signature":{"in":"header","name":"X-Amz-Signature","required":false,"schema":{"type":"string"}},"X-Amz-SignedHeaders":{"in":"header","name":"X-Amz-SignedHeaders","required":false,"schema":{"type":"string"}}},"securitySchemes":{"hmac":{"description":"Amazon Signature authorization v4","in":"header","name":"Authorization","type":"apiKey","x-amazon-apigateway-authtype":"awsSigv4"}},"schemas":{"AccessDeniedException":{},"AdditionalAuthenticationProvider":{"description":"Describes an additional authentication provider.","properties":{"authenticationType":{"$ref":"#/components/schemas/AuthenticationType"},"openIDConnectConfig":{"$ref":"#/components/schemas/OpenIDConnectConfig"},"userPoolConfig":{"$ref":"#/components/schemas/CognitoUserPoolConfig"}},"type":"object"},"AdditionalAuthenticationProviders":{"items":{"$ref":"#/components/schemas/AdditionalAuthenticationProvider"},"type":"array"},"ApiKey":{"description":"<p>Describes an API key.</p> <p>Customers invoke AWS AppSync GraphQL API operations with API keys as an identity mechanism. There are two key versions:</p> <p> <b>da1</b>: This version was introduced at launch in November 2017. These keys always expire after 7 days. Key expiration is managed by Amazon DynamoDB TTL. The keys ceased to be valid after February 21, 2018 and should not be used after that date.</p> <ul> <li> <p> <code>ListApiKeys</code> returns the expiration time in milliseconds.</p> </li> <li> <p> <code>CreateApiKey</code> returns the expiration time in milliseconds.</p> </li> <li> <p> <code>UpdateApiKey</code> is not available for this key version.</p> </li> <li> <p> <code>DeleteApiKey</code> deletes the item from the table.</p> </li> <li> <p>Expiration is stored in Amazon DynamoDB as milliseconds. This results in a bug where keys are not automatically deleted because DynamoDB expects the TTL to be stored in seconds. As a one-time action, we will delete these keys from the table after February 21, 2018.</p> </li> </ul> <p> <b>da2</b>: This version was introduced in February 2018 when AppSync added support to extend key expiration.</p> <ul> <li> <p> <code>ListApiKeys</code> returns the expiration time in seconds.</p> </li> <li> <p> <code>CreateApiKey</code> returns the expiration time in seconds and accepts a user-provided expiration time in seconds.</p> </li> <li> <p> <code>UpdateApiKey</code> returns the expiration time in seconds and accepts a user-provided expiration time in seconds. Key expiration can only be updated while the key has not expired.</p> </li> <li> <p> <code>DeleteApiKey</code> deletes the item from the table.</p> </li> <li> <p>Expiration is stored in Amazon DynamoDB as seconds.</p> </li> </ul>","properties":{"description":{"$ref":"#/components/schemas/String"},"expires":{"$ref":"#/components/schemas/Long"},"id":{"$ref":"#/components/schemas/String"}},"type":"object"},"ApiKeyLimitExceededException":{},"ApiKeyValidityOutOfBoundsException":{},"ApiKeys":{"items":{"$ref":"#/components/schemas/ApiKey"},"type":"array"},"ApiLimitExceededException":{},"AuthenticationType":{"enum":["API_KEY","AWS_IAM","AMAZON_COGNITO_USER_POOLS","OPENID_CONNECT"],"type":"string"},"AuthorizationConfig":{"description":"The authorization config in case the HTTP endpoint requires authorization.","properties":{"authorizationType":{"$ref":"#/components/schemas/AuthorizationType"},"awsIamConfig":{"$ref":"#/components/schemas/AwsIamConfig"}},"required":["authorizationType"],"type":"object"},"AuthorizationType":{"enum":["AWS_IAM"],"type":"string"},"AwsIamConfig":{"description":"The AWS IAM configuration.","properties":{"signingRegion":{"$ref":"#/components/schemas/String"},"signingServiceName":{"$ref":"#/components/schemas/String"}},"type":"object"},"BadRequestException":{},"Blob":{"type":"string"},"Boolean":{"type":"boolean"},"BooleanValue":{"type":"boolean"},"CognitoUserPoolConfig":{"description":"Describes an Amazon Cognito user pool configuration.","properties":{"appIdClientRegex":{"$ref":"#/components/schemas/String"},"awsRegion":{"$ref":"#/components/schemas/String"},"userPoolId":{"$ref":"#/components/schemas/String"}},"required":["userPoolId","awsRegion"],"type":"object"},"ConcurrentModificationException":{},"CreateApiKeyRequest":{"properties":{"description":{"$ref":"#/components/schemas/String"},"expires":{"$ref":"#/components/schemas/Long"}},"type":"object"},"CreateApiKeyResponse":{"properties":{"apiKey":{"$ref":"#/components/schemas/ApiKey"}},"type":"object"},"CreateDataSourceRequest":{"properties":{"description":{"$ref":"#/components/schemas/String"},"dynamodbConfig":{"$ref":"#/components/schemas/DynamodbDataSourceConfig"},"elasticsearchConfig":{"$ref":"#/components/schemas/ElasticsearchDataSourceConfig"},"httpConfig":{"$ref":"#/components/schemas/HttpDataSourceConfig"},"lambdaConfig":{"$ref":"#/components/schemas/LambdaDataSourceConfig"},"name":{"$ref":"#/components/schemas/ResourceName"},"relationalDatabaseConfig":{"$ref":"#/components/schemas/RelationalDatabaseDataSourceConfig"},"serviceRoleArn":{"$ref":"#/components/schemas/String"},"type":{"$ref":"#/components/schemas/DataSourceType"}},"required":["name","type"],"type":"object"},"CreateDataSourceResponse":{"properties":{"dataSource":{"$ref":"#/components/schemas/DataSource"}},"type":"object"},"CreateFunctionRequest":{"properties":{"dataSourceName":{"$ref":"#/components/schemas/ResourceName"},"description":{"$ref":"#/components/schemas/String"},"functionVersion":{"$ref":"#/components/schemas/String"},"name":{"$ref":"#/components/schemas/ResourceName"},"requestMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"},"responseMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"}},"required":["name","dataSourceName","requestMappingTemplate","functionVersion"],"type":"object"},"CreateFunctionResponse":{"properties":{"functionConfiguration":{"$ref":"#/components/schemas/FunctionConfiguration"}},"type":"object"},"CreateGraphqlApiRequest":{"properties":{"additionalAuthenticationProviders":{"$ref":"#/components/schemas/AdditionalAuthenticationProviders"},"authenticationType":{"$ref":"#/components/schemas/AuthenticationType"},"logConfig":{"$ref":"#/components/schemas/LogConfig"},"name":{"$ref":"#/components/schemas/String"},"openIDConnectConfig":{"$ref":"#/components/schemas/OpenIDConnectConfig"},"tags":{"$ref":"#/components/schemas/TagMap"},"userPoolConfig":{"$ref":"#/components/schemas/UserPoolConfig"}},"required":["name","authenticationType"],"type":"object"},"CreateGraphqlApiResponse":{"properties":{"graphqlApi":{"$ref":"#/components/schemas/GraphqlApi"}},"type":"object"},"CreateResolverRequest":{"properties":{"dataSourceName":{"$ref":"#/components/schemas/ResourceName"},"fieldName":{"$ref":"#/components/schemas/ResourceName"},"kind":{"$ref":"#/components/schemas/ResolverKind"},"pipelineConfig":{"$ref":"#/components/schemas/PipelineConfig"},"requestMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"},"responseMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"}},"required":["fieldName","requestMappingTemplate"],"type":"object"},"CreateResolverResponse":{"properties":{"resolver":{"$ref":"#/components/schemas/Resolver"}},"type":"object"},"CreateTypeRequest":{"properties":{"definition":{"$ref":"#/components/schemas/String"},"format":{"$ref":"#/components/schemas/TypeDefinitionFormat"}},"required":["definition","format"],"type":"object"},"CreateTypeResponse":{"properties":{"type":{"$ref":"#/components/schemas/Type"}},"type":"object"},"DataSource":{"description":"Describes a data source.","properties":{"dataSourceArn":{"$ref":"#/components/schemas/String"},"description":{"$ref":"#/components/schemas/String"},"dynamodbConfig":{"$ref":"#/components/schemas/DynamodbDataSourceConfig"},"elasticsearchConfig":{"$ref":"#/components/schemas/ElasticsearchDataSourceConfig"},"httpConfig":{"$ref":"#/components/schemas/HttpDataSourceConfig"},"lambdaConfig":{"$ref":"#/components/schemas/LambdaDataSourceConfig"},"name":{"$ref":"#/components/schemas/ResourceName"},"relationalDatabaseConfig":{"$ref":"#/components/schemas/RelationalDatabaseDataSourceConfig"},"serviceRoleArn":{"$ref":"#/components/schemas/String"},"type":{"$ref":"#/components/schemas/DataSourceType"}},"type":"object"},"DataSourceType":{"enum":["AWS_LAMBDA","AMAZON_DYNAMODB","AMAZON_ELASTICSEARCH","NONE","HTTP","RELATIONAL_DATABASE"],"type":"string"},"DataSources":{"items":{"$ref":"#/components/schemas/DataSource"},"type":"array"},"DefaultAction":{"enum":["ALLOW","DENY"],"type":"string"},"DeleteApiKeyRequest":{"properties":{},"type":"object"},"DeleteApiKeyResponse":{"properties":{},"type":"object"},"DeleteDataSourceRequest":{"properties":{},"type":"object"},"DeleteDataSourceResponse":{"properties":{},"type":"object"},"DeleteFunctionRequest":{"properties":{},"type":"object"},"DeleteFunctionResponse":{"properties":{},"type":"object"},"DeleteGraphqlApiRequest":{"properties":{},"type":"object"},"DeleteGraphqlApiResponse":{"properties":{},"type":"object"},"DeleteResolverRequest":{"properties":{},"type":"object"},"DeleteResolverResponse":{"properties":{},"type":"object"},"DeleteTypeRequest":{"properties":{},"type":"object"},"DeleteTypeResponse":{"properties":{},"type":"object"},"DynamodbDataSourceConfig":{"description":"Describes an Amazon DynamoDB data source configuration.","properties":{"awsRegion":{"$ref":"#/components/schemas/String"},"tableName":{"$ref":"#/components/schemas/String"},"useCallerCredentials":{"$ref":"#/components/schemas/Boolean"}},"required":["tableName","awsRegion"],"type":"object"},"ElasticsearchDataSourceConfig":{"description":"Describes an Elasticsearch data source configuration.","properties":{"awsRegion":{"$ref":"#/components/schemas/String"},"endpoint":{"$ref":"#/components/schemas/String"}},"required":["endpoint","awsRegion"],"type":"object"},"FieldLogLevel":{"enum":["NONE","ERROR","ALL"],"type":"string"},"FunctionConfiguration":{"description":"A function is a reusable entity. Multiple functions can be used to compose the resolver logic.","properties":{"dataSourceName":{"$ref":"#/components/schemas/ResourceName"},"description":{"$ref":"#/components/schemas/String"},"functionArn":{"$ref":"#/components/schemas/String"},"functionId":{"$ref":"#/components/schemas/String"},"functionVersion":{"$ref":"#/components/schemas/String"},"name":{"$ref":"#/components/schemas/ResourceName"},"requestMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"},"responseMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"}},"type":"object"},"Functions":{"items":{"$ref":"#/components/schemas/FunctionConfiguration"},"type":"array"},"FunctionsIds":{"items":{"$ref":"#/components/schemas/String"},"type":"array"},"GetDataSourceRequest":{"properties":{},"type":"object"},"GetDataSourceResponse":{"properties":{"dataSource":{"$ref":"#/components/schemas/DataSource"}},"type":"object"},"GetFunctionRequest":{"properties":{},"type":"object"},"GetFunctionResponse":{"properties":{"functionConfiguration":{"$ref":"#/components/schemas/FunctionConfiguration"}},"type":"object"},"GetGraphqlApiRequest":{"properties":{},"type":"object"},"GetGraphqlApiResponse":{"properties":{"graphqlApi":{"$ref":"#/components/schemas/GraphqlApi"}},"type":"object"},"GetIntrospectionSchemaRequest":{"properties":{},"type":"object"},"GetIntrospectionSchemaResponse":{"properties":{"schema":{"$ref":"#/components/schemas/Blob"}},"type":"object"},"GetResolverRequest":{"properties":{},"type":"object"},"GetResolverResponse":{"properties":{"resolver":{"$ref":"#/components/schemas/Resolver"}},"type":"object"},"GetSchemaCreationStatusRequest":{"properties":{},"type":"object"},"GetSchemaCreationStatusResponse":{"properties":{"details":{"$ref":"#/components/schemas/String"},"status":{"$ref":"#/components/schemas/SchemaStatus"}},"type":"object"},"GetTypeRequest":{"properties":{},"type":"object"},"GetTypeResponse":{"properties":{"type":{"$ref":"#/components/schemas/Type"}},"type":"object"},"GraphQLSchemaException":{},"GraphqlApi":{"description":"Describes a GraphQL API.","properties":{"additionalAuthenticationProviders":{"$ref":"#/components/schemas/AdditionalAuthenticationProviders"},"apiId":{"$ref":"#/components/schemas/String"},"arn":{"$ref":"#/components/schemas/String"},"authenticationType":{"$ref":"#/components/schemas/AuthenticationType"},"logConfig":{"$ref":"#/components/schemas/LogConfig"},"name":{"$ref":"#/components/schemas/ResourceName"},"openIDConnectConfig":{"$ref":"#/components/schemas/OpenIDConnectConfig"},"tags":{"$ref":"#/components/schemas/TagMap"},"uris":{"$ref":"#/components/schemas/MapOfStringToString"},"userPoolConfig":{"$ref":"#/components/schemas/UserPoolConfig"}},"type":"object"},"GraphqlApis":{"items":{"$ref":"#/components/schemas/GraphqlApi"},"type":"array"},"HttpDataSourceConfig":{"description":"Describes an HTTP data source configuration.","properties":{"authorizationConfig":{"$ref":"#/components/schemas/AuthorizationConfig"},"endpoint":{"$ref":"#/components/schemas/String"}},"type":"object"},"InternalFailureException":{},"LambdaDataSourceConfig":{"description":"Describes an AWS Lambda data source configuration.","properties":{"lambdaFunctionArn":{"$ref":"#/components/schemas/String"}},"required":["lambdaFunctionArn"],"type":"object"},"LimitExceededException":{},"ListApiKeysRequest":{"properties":{},"type":"object"},"ListApiKeysResponse":{"properties":{"apiKeys":{"$ref":"#/components/schemas/ApiKeys"},"nextToken":{"$ref":"#/components/schemas/PaginationToken"}},"type":"object"},"ListDataSourcesRequest":{"properties":{},"type":"object"},"ListDataSourcesResponse":{"properties":{"dataSources":{"$ref":"#/components/schemas/DataSources"},"nextToken":{"$ref":"#/components/schemas/PaginationToken"}},"type":"object"},"ListFunctionsRequest":{"properties":{},"type":"object"},"ListFunctionsResponse":{"properties":{"functions":{"$ref":"#/components/schemas/Functions"},"nextToken":{"$ref":"#/components/schemas/PaginationToken"}},"type":"object"},"ListGraphqlApisRequest":{"properties":{},"type":"object"},"ListGraphqlApisResponse":{"properties":{"graphqlApis":{"$ref":"#/components/schemas/GraphqlApis"},"nextToken":{"$ref":"#/components/schemas/PaginationToken"}},"type":"object"},"ListResolversByFunctionRequest":{"properties":{},"type":"object"},"ListResolversByFunctionResponse":{"properties":{"nextToken":{"$ref":"#/components/schemas/PaginationToken"},"resolvers":{"$ref":"#/components/schemas/Resolvers"}},"type":"object"},"ListResolversRequest":{"properties":{},"type":"object"},"ListResolversResponse":{"properties":{"nextToken":{"$ref":"#/components/schemas/PaginationToken"},"resolvers":{"$ref":"#/components/schemas/Resolvers"}},"type":"object"},"ListTagsForResourceRequest":{"properties":{},"type":"object"},"ListTagsForResourceResponse":{"properties":{"tags":{"$ref":"#/components/schemas/TagMap"}},"type":"object"},"ListTypesRequest":{"properties":{},"type":"object"},"ListTypesResponse":{"properties":{"nextToken":{"$ref":"#/components/schemas/PaginationToken"},"types":{"$ref":"#/components/schemas/TypeList"}},"type":"object"},"LogConfig":{"description":"The CloudWatch Logs configuration.","properties":{"cloudWatchLogsRoleArn":{"$ref":"#/components/schemas/String"},"excludeVerboseContent":{"$ref":"#/components/schemas/Boolean"},"fieldLogLevel":{"$ref":"#/components/schemas/FieldLogLevel"}},"required":["fieldLogLevel","cloudWatchLogsRoleArn"],"type":"object"},"Long":{"type":"integer"},"MapOfStringToString":{"additionalProperties":{"$ref":"#/components/schemas/String"},"type":"object"},"MappingTemplate":{"maxLength":65536,"minLength":1,"type":"string"},"MaxResults":{"maximum":25,"minimum":0,"type":"integer"},"NotFoundException":{},"OpenIDConnectConfig":{"description":"Describes an OpenID Connect configuration.","properties":{"authTTL":{"$ref":"#/components/schemas/Long"},"clientId":{"$ref":"#/components/schemas/String"},"iatTTL":{"$ref":"#/components/schemas/Long"},"issuer":{"$ref":"#/components/schemas/String"}},"required":["issuer"],"type":"object"},"OutputType":{"enum":["SDL","JSON"],"type":"string"},"PaginationToken":{"pattern":"[\\\\S]+","type":"string"},"PipelineConfig":{"description":"The pipeline configuration for a resolver of kind <code>PIPELINE</code>.","properties":{"functions":{"$ref":"#/components/schemas/FunctionsIds"}},"type":"object"},"RdsHttpEndpointConfig":{"description":"The Amazon RDS HTTP endpoint configuration.","properties":{"awsRegion":{"$ref":"#/components/schemas/String"},"awsSecretStoreArn":{"$ref":"#/components/schemas/String"},"databaseName":{"$ref":"#/components/schemas/String"},"dbClusterIdentifier":{"$ref":"#/components/schemas/String"},"schema":{"$ref":"#/components/schemas/String"}},"type":"object"},"RelationalDatabaseDataSourceConfig":{"description":"Describes a relational database data source configuration.","properties":{"rdsHttpEndpointConfig":{"$ref":"#/components/schemas/RdsHttpEndpointConfig"},"relationalDatabaseSourceType":{"$ref":"#/components/schemas/RelationalDatabaseSourceType"}},"type":"object"},"RelationalDatabaseSourceType":{"enum":["RDS_HTTP_ENDPOINT"],"type":"string"},"Resolver":{"description":"Describes a resolver.","properties":{"dataSourceName":{"$ref":"#/components/schemas/ResourceName"},"fieldName":{"$ref":"#/components/schemas/ResourceName"},"kind":{"$ref":"#/components/schemas/ResolverKind"},"pipelineConfig":{"$ref":"#/components/schemas/PipelineConfig"},"requestMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"},"resolverArn":{"$ref":"#/components/schemas/String"},"responseMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"},"typeName":{"$ref":"#/components/schemas/ResourceName"}},"type":"object"},"ResolverKind":{"enum":["UNIT","PIPELINE"],"type":"string"},"Resolvers":{"items":{"$ref":"#/components/schemas/Resolver"},"type":"array"},"ResourceArn":{"maxLength":75,"minLength":70,"pattern":"^arn:aws:appsync:[A-Za-z0-9_/.-]{0,63}:\\d{12}:apis/[0-9A-Za-z_-]{26}$","type":"string"},"ResourceName":{"pattern":"[_A-Za-z][_0-9A-Za-z]*","type":"string"},"SchemaStatus":{"enum":["PROCESSING","ACTIVE","DELETING","FAILED","SUCCESS","NOT_APPLICABLE"],"type":"string"},"StartSchemaCreationRequest":{"properties":{"definition":{"$ref":"#/components/schemas/Blob"}},"required":["definition"],"type":"object"},"StartSchemaCreationResponse":{"properties":{"status":{"$ref":"#/components/schemas/SchemaStatus"}},"type":"object"},"String":{"type":"string"},"TagKey":{"description":"The key for the tag.","maxLength":128,"minLength":1,"pattern":"^(?!aws:)[a-zA-Z+-=._:/]+$","type":"string"},"TagKeyList":{"items":{"$ref":"#/components/schemas/TagKey"},"maxItems":50,"minItems":1,"type":"array"},"TagMap":{"additionalProperties":{"$ref":"#/components/schemas/TagValue"},"description":"A map with keys of <code>TagKey</code> objects and values of <code>TagValue</code> objects.","maxProperties":50,"minProperties":1,"type":"object"},"TagResourceRequest":{"properties":{"tags":{"$ref":"#/components/schemas/TagMap"}},"required":["tags"],"type":"object"},"TagResourceResponse":{"properties":{},"type":"object"},"TagValue":{"description":"The value for the tag.","maxLength":256,"type":"string"},"Type":{"description":"Describes a type.","properties":{"arn":{"$ref":"#/components/schemas/String"},"definition":{"$ref":"#/components/schemas/String"},"description":{"$ref":"#/components/schemas/String"},"format":{"$ref":"#/components/schemas/TypeDefinitionFormat"},"name":{"$ref":"#/components/schemas/ResourceName"}},"type":"object"},"TypeDefinitionFormat":{"enum":["SDL","JSON"],"type":"string"},"TypeList":{"items":{"$ref":"#/components/schemas/Type"},"type":"array"},"UnauthorizedException":{},"UntagResourceRequest":{"properties":{},"type":"object"},"UntagResourceResponse":{"properties":{},"type":"object"},"UpdateApiKeyRequest":{"properties":{"description":{"$ref":"#/components/schemas/String"},"expires":{"$ref":"#/components/schemas/Long"}},"type":"object"},"UpdateApiKeyResponse":{"properties":{"apiKey":{"$ref":"#/components/schemas/ApiKey"}},"type":"object"},"UpdateDataSourceRequest":{"properties":{"description":{"$ref":"#/components/schemas/String"},"dynamodbConfig":{"$ref":"#/components/schemas/DynamodbDataSourceConfig"},"elasticsearchConfig":{"$ref":"#/components/schemas/ElasticsearchDataSourceConfig"},"httpConfig":{"$ref":"#/components/schemas/HttpDataSourceConfig"},"lambdaConfig":{"$ref":"#/components/schemas/LambdaDataSourceConfig"},"relationalDatabaseConfig":{"$ref":"#/components/schemas/RelationalDatabaseDataSourceConfig"},"serviceRoleArn":{"$ref":"#/components/schemas/String"},"type":{"$ref":"#/components/schemas/DataSourceType"}},"required":["type"],"type":"object"},"UpdateDataSourceResponse":{"properties":{"dataSource":{"$ref":"#/components/schemas/DataSource"}},"type":"object"},"UpdateFunctionRequest":{"properties":{"dataSourceName":{"$ref":"#/components/schemas/ResourceName"},"description":{"$ref":"#/components/schemas/String"},"functionVersion":{"$ref":"#/components/schemas/String"},"name":{"$ref":"#/components/schemas/ResourceName"},"requestMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"},"responseMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"}},"required":["name","dataSourceName","requestMappingTemplate","functionVersion"],"type":"object"},"UpdateFunctionResponse":{"properties":{"functionConfiguration":{"$ref":"#/components/schemas/FunctionConfiguration"}},"type":"object"},"UpdateGraphqlApiRequest":{"properties":{"additionalAuthenticationProviders":{"$ref":"#/components/schemas/AdditionalAuthenticationProviders"},"authenticationType":{"$ref":"#/components/schemas/AuthenticationType"},"logConfig":{"$ref":"#/components/schemas/LogConfig"},"name":{"$ref":"#/components/schemas/String"},"openIDConnectConfig":{"$ref":"#/components/schemas/OpenIDConnectConfig"},"userPoolConfig":{"$ref":"#/components/schemas/UserPoolConfig"}},"required":["name"],"type":"object"},"UpdateGraphqlApiResponse":{"properties":{"graphqlApi":{"$ref":"#/components/schemas/GraphqlApi"}},"type":"object"},"UpdateResolverRequest":{"properties":{"dataSourceName":{"$ref":"#/components/schemas/ResourceName"},"kind":{"$ref":"#/components/schemas/ResolverKind"},"pipelineConfig":{"$ref":"#/components/schemas/PipelineConfig"},"requestMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"},"responseMappingTemplate":{"$ref":"#/components/schemas/MappingTemplate"}},"required":["requestMappingTemplate"],"type":"object"},"UpdateResolverResponse":{"properties":{"resolver":{"$ref":"#/components/schemas/Resolver"}},"type":"object"},"UpdateTypeRequest":{"properties":{"definition":{"$ref":"#/components/schemas/String"},"format":{"$ref":"#/components/schemas/TypeDefinitionFormat"}},"required":["format"],"type":"object"},"UpdateTypeResponse":{"properties":{"type":{"$ref":"#/components/schemas/Type"}},"type":"object"},"UserPoolConfig":{"description":"Describes an Amazon Cognito user pool configuration.","properties":{"appIdClientRegex":{"$ref":"#/components/schemas/String"},"awsRegion":{"$ref":"#/components/schemas/String"},"defaultAction":{"$ref":"#/components/schemas/DefaultAction"},"userPoolId":{"$ref":"#/components/schemas/String"}},"required":["userPoolId","awsRegion","defaultAction"],"type":"object"}}}}