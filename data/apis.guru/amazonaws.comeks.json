{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on AWS without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Elastic Kubernetes Service",
    "version": "2017-11-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/eks-2017-11-01.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "eks"
  },
  "externalDocs": { "description": "Amazon Web Services documentation", "url": "https://docs.aws.amazon.com/eks/" },
  "security": [{ "hmac": [] }],
  "paths": {
    "/clusters": {
      "get": {
        "description": "Lists the Amazon EKS clusters in your AWS account in the specified Region.",
        "operationId": "ListClusters",
        "parameters": [
          {
            "description": "The maximum number of cluster results returned by <code>ListClusters</code> in paginated output. When you use this parameter, <code>ListClusters</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListClusters</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListClusters</code> returns up to 100 results and a <code>nextToken</code> value if applicable.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 100 }
          },
          {
            "description": "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListClusters</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note> <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListClustersResponse" } } }
          },
          "480": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "481": {
            "description": "ClientException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClientException" } } }
          },
          "482": {
            "description": "ServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerException" } } }
          },
          "483": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates an Amazon EKS control plane. </p> <p>The Amazon EKS control plane consists of control plane instances that run the Kubernetes software, such as <code>etcd</code> and the API server. The control plane runs in an account managed by AWS, and the Kubernetes API is exposed via the Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single-tenant and unique and runs on its own set of Amazon EC2 instances.</p> <p>The cluster control plane is provisioned across multiple Availability Zones and fronted by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic network interfaces in your VPC subnets to provide connectivity from the control plane instances to the worker nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>, and <code>proxy</code> data flows).</p> <p>Amazon EKS worker nodes run in your AWS account and connect to your cluster's control plane via the Kubernetes API server endpoint and a certificate file that is created for your cluster.</p> <p>You can use the <code>endpointPublicAccess</code> and <code>endpointPrivateAccess</code> parameters to enable or disable public and private access to your cluster's Kubernetes API server endpoint. By default, public access is enabled, and private access is disabled. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html\">Amazon EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User Guide</i> </i>. </p> <p>You can use the <code>logging</code> parameter to enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html\">Amazon EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p> <note> <p>CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see <a href=\"http://aws.amazon.com/cloudwatch/pricing/\">Amazon CloudWatch Pricing</a>.</p> </note> <p>Cluster creation typically takes between 10 and 15 minutes. After you create an Amazon EKS cluster, you must configure your Kubernetes tooling to communicate with the API server and launch worker nodes into your cluster. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html\">Managing Cluster Authentication</a> and <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html\">Launching Amazon EKS Worker Nodes</a> in the <i>Amazon EKS User Guide</i>.</p>",
        "operationId": "CreateCluster",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "clientRequestToken": {
                    "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
                    "type": "string"
                  },
                  "logging": {
                    "description": "An object representing the logging configuration for resources in your cluster.",
                    "properties": { "clusterLogging": { "$ref": "#/components/schemas/LogSetups" } },
                    "type": "object"
                  },
                  "name": {
                    "description": "The unique name to give to your cluster.",
                    "maxLength": 100,
                    "minLength": 1,
                    "pattern": "^[0-9A-Za-z][A-Za-z0-9\\-_]*",
                    "type": "string"
                  },
                  "resourcesVpcConfig": {
                    "description": "An object representing the VPC configuration to use for an Amazon EKS cluster.",
                    "properties": {
                      "endpointPrivateAccess": { "$ref": "#/components/schemas/BoxedBoolean" },
                      "endpointPublicAccess": { "$ref": "#/components/schemas/BoxedBoolean" },
                      "securityGroupIds": { "$ref": "#/components/schemas/StringList" },
                      "subnetIds": { "$ref": "#/components/schemas/StringList" }
                    },
                    "type": "object"
                  },
                  "roleArn": {
                    "description": "The Amazon Resource Name (ARN) of the IAM role that provides permissions for Amazon EKS to make calls to other AWS API operations on your behalf. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html\">Amazon EKS Service IAM Role</a> in the <i> <i>Amazon EKS User Guide</i> </i>.",
                    "type": "string"
                  },
                  "version": {
                    "description": "The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in Amazon EKS is used.",
                    "type": "string"
                  }
                },
                "required": ["name", "roleArn", "resourcesVpcConfig"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateClusterResponse" } } }
          },
          "480": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "481": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceLimitExceededException" } }
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "483": {
            "description": "ClientException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClientException" } } }
          },
          "484": {
            "description": "ServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerException" } } }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          },
          "486": {
            "description": "UnsupportedAvailabilityZoneException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedAvailabilityZoneException" } }
            }
          }
        }
      }
    },
    "/clusters/{name}": {
      "delete": {
        "description": "<p>Deletes the Amazon EKS cluster control plane. </p> <note> <p>If you have active services in your cluster that are associated with a load balancer, you must delete those services before deleting the cluster so that the load balancers are deleted properly. Otherwise, you can have orphaned resources in your VPC that prevent you from being able to delete the VPC. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html\">Deleting a Cluster</a> in the <i>Amazon EKS User Guide</i>.</p> </note>",
        "operationId": "DeleteCluster",
        "parameters": [
          {
            "description": "The name of the cluster to delete.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteClusterResponse" } } }
          },
          "480": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "ClientException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClientException" } } }
          },
          "483": {
            "description": "ServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerException" } } }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      },
      "get": {
        "description": "<p>Returns descriptive information about an Amazon EKS cluster.</p> <p>The API server endpoint and certificate authority data returned by this operation are required for <code>kubelet</code> and <code>kubectl</code> to communicate with your Kubernetes API server. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html\">Create a kubeconfig for Amazon EKS</a>.</p> <note> <p>The API server endpoint and certificate authority data aren't available until the cluster reaches the <code>ACTIVE</code> state.</p> </note>",
        "operationId": "DescribeCluster",
        "parameters": [
          {
            "description": "The name of the cluster to describe.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeClusterResponse" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "ClientException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClientException" } } }
          },
          "482": {
            "description": "ServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerException" } } }
          },
          "483": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/clusters/{name}/update-config": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates an Amazon EKS cluster configuration. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the <a>DescribeUpdate</a> API operation.</p> <p>You can use this API operation to enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html\">Amazon EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p> <note> <p>CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see <a href=\"http://aws.amazon.com/cloudwatch/pricing/\">Amazon CloudWatch Pricing</a>.</p> </note> <p>You can also use this API operation to enable or disable public and private access to your cluster's Kubernetes API server endpoint. By default, public access is enabled, and private access is disabled. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html\">Amazon EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User Guide</i> </i>. </p> <important> <p>At this time, you can not update the subnets or security group IDs for an existing cluster.</p> </important> <p>Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to <code>UPDATING</code> (this status transition is eventually consistent). When the update is complete (either <code>Failed</code> or <code>Successful</code>), the cluster status moves to <code>Active</code>.</p>",
        "operationId": "UpdateClusterConfig",
        "parameters": [
          {
            "description": "The name of the Amazon EKS cluster to update.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "clientRequestToken": {
                    "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
                    "type": "string"
                  },
                  "logging": {
                    "description": "An object representing the logging configuration for resources in your cluster.",
                    "properties": { "clusterLogging": { "$ref": "#/components/schemas/LogSetups" } },
                    "type": "object"
                  },
                  "resourcesVpcConfig": {
                    "description": "An object representing the VPC configuration to use for an Amazon EKS cluster.",
                    "properties": {
                      "endpointPrivateAccess": { "$ref": "#/components/schemas/BoxedBoolean" },
                      "endpointPublicAccess": { "$ref": "#/components/schemas/BoxedBoolean" },
                      "securityGroupIds": { "$ref": "#/components/schemas/StringList" },
                      "subnetIds": { "$ref": "#/components/schemas/StringList" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateClusterConfigResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "481": {
            "description": "ClientException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClientException" } } }
          },
          "482": {
            "description": "ServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerException" } } }
          },
          "483": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "485": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          }
        }
      }
    },
    "/clusters/{name}/updates": {
      "get": {
        "description": "Lists the updates associated with an Amazon EKS cluster in your AWS account, in the specified Region.",
        "operationId": "ListUpdates",
        "parameters": [
          {
            "description": "The name of the Amazon EKS cluster to list updates for.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The <code>nextToken</code> value returned from a previous paginated <code>ListUpdates</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of update results returned by <code>ListUpdates</code> in paginated output. When you use this parameter, <code>ListUpdates</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListUpdates</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListUpdates</code> returns up to 100 results and a <code>nextToken</code> value if applicable.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 100 }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListUpdatesResponse" } } }
          },
          "480": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "481": {
            "description": "ClientException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClientException" } } }
          },
          "482": {
            "description": "ServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerException" } } }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the <a>DescribeUpdate</a> API operation.</p> <p>Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to <code>UPDATING</code> (this status transition is eventually consistent). When the update is complete (either <code>Failed</code> or <code>Successful</code>), the cluster status moves to <code>Active</code>.</p>",
        "operationId": "UpdateClusterVersion",
        "parameters": [
          {
            "description": "The name of the Amazon EKS cluster to update.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "clientRequestToken": {
                    "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
                    "type": "string"
                  },
                  "version": {
                    "description": "The desired Kubernetes version following a successful update.",
                    "type": "string"
                  }
                },
                "required": ["version"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateClusterVersionResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "481": {
            "description": "ClientException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClientException" } } }
          },
          "482": {
            "description": "ServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerException" } } }
          },
          "483": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "485": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          }
        }
      }
    },
    "/clusters/{name}/updates/{updateId}": {
      "get": {
        "description": "<p>Returns descriptive information about an update against your Amazon EKS cluster.</p> <p>When the status of the update is <code>Succeeded</code>, the update is complete. If an update fails, the status is <code>Failed</code>, and an error detail explains the reason for the failure.</p>",
        "operationId": "DescribeUpdate",
        "parameters": [
          {
            "description": "The name of the Amazon EKS cluster to update.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The ID of the update to describe.",
            "in": "path",
            "name": "updateId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeUpdateResponse" } } }
          },
          "480": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "481": {
            "description": "ClientException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClientException" } } }
          },
          "482": {
            "description": "ServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerException" } } }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    }
  },
  "servers": [
    {
      "description": "The Amazon EKS multi-region endpoint",
      "url": "http://eks.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon EKS multi-region endpoint",
      "url": "https://eks.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon EKS endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://eks.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Amazon EKS endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://eks.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "Boolean": { "type": "boolean" },
      "BoxedBoolean": { "type": "boolean" },
      "Certificate": {
        "description": "An object representing the <code>certificate-authority-data</code> for your cluster.",
        "properties": { "data": { "$ref": "#/components/schemas/String" } },
        "type": "object"
      },
      "ClientException": {},
      "Cluster": {
        "description": "An object representing an Amazon EKS cluster.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/String" },
          "certificateAuthority": { "$ref": "#/components/schemas/Certificate" },
          "clientRequestToken": { "$ref": "#/components/schemas/String" },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" },
          "endpoint": { "$ref": "#/components/schemas/String" },
          "logging": { "$ref": "#/components/schemas/Logging" },
          "name": { "$ref": "#/components/schemas/String" },
          "platformVersion": { "$ref": "#/components/schemas/String" },
          "resourcesVpcConfig": { "$ref": "#/components/schemas/VpcConfigResponse" },
          "roleArn": { "$ref": "#/components/schemas/String" },
          "status": { "$ref": "#/components/schemas/ClusterStatus" },
          "version": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ClusterName": { "maxLength": 100, "minLength": 1, "pattern": "^[0-9A-Za-z][A-Za-z0-9\\-_]*", "type": "string" },
      "ClusterStatus": { "enum": ["CREATING", "ACTIVE", "DELETING", "FAILED"], "type": "string" },
      "CreateClusterRequest": {
        "properties": {
          "clientRequestToken": { "$ref": "#/components/schemas/String" },
          "logging": { "$ref": "#/components/schemas/Logging" },
          "name": { "$ref": "#/components/schemas/ClusterName" },
          "resourcesVpcConfig": { "$ref": "#/components/schemas/VpcConfigRequest" },
          "roleArn": { "$ref": "#/components/schemas/String" },
          "version": { "$ref": "#/components/schemas/String" }
        },
        "required": ["name", "roleArn", "resourcesVpcConfig"],
        "type": "object"
      },
      "CreateClusterResponse": {
        "example": {},
        "properties": { "cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "DeleteClusterRequest": { "properties": {}, "type": "object" },
      "DeleteClusterResponse": {
        "example": {},
        "properties": { "cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "DescribeClusterRequest": { "properties": {}, "type": "object" },
      "DescribeClusterResponse": {
        "example": {
          "cluster": {
            "arn": "arn:aws:eks:us-west-2:012345678910:cluster/devel",
            "certificateAuthority": {
              "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNE1EVXpNVEl6TVRFek1Wb1hEVEk0TURVeU9ESXpNVEV6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTZWCjVUaG4rdFcySm9Xa2hQMzRlVUZMNitaRXJOZGIvWVdrTmtDdWNGS2RaaXl2TjlMVmdvUmV2MjlFVFZlN1ZGbSsKUTJ3ZURyRXJiQyt0dVlibkFuN1ZLYmE3ay9hb1BHekZMdmVnb0t6b0M1N2NUdGVwZzRIazRlK2tIWHNaME10MApyb3NzcjhFM1ROeExETnNJTThGL1cwdjhsTGNCbWRPcjQyV2VuTjFHZXJnaDNSZ2wzR3JIazBnNTU0SjFWenJZCm9hTi8zODFUczlOTFF2QTBXb0xIcjBFRlZpTFdSZEoyZ3lXaC9ybDVyOFNDOHZaQXg1YW1BU0hVd01aTFpWRC8KTDBpOW4wRVM0MkpVdzQyQmxHOEdpd3NhTkJWV3lUTHZKclNhRXlDSHFtVVZaUTFDZkFXUjl0L3JleVVOVXM3TApWV1FqM3BFbk9RMitMSWJrc0RzQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFNZ3RsQ1dIQ2U2YzVHMXl2YlFTS0Q4K2hUalkKSm1NSG56L2EvRGt0WG9YUjFVQzIrZUgzT1BZWmVjRVZZZHVaSlZCckNNQ2VWR0ZkeWdBYlNLc1FxWDg0S2RXbAp1MU5QaERDSmEyRHliN2pVMUV6VThTQjFGZUZ5ZFE3a0hNS1E1blpBRVFQOTY4S01hSGUrSm0yQ2x1UFJWbEJVCjF4WlhTS1gzTVZ0K1Q0SU1EV2d6c3JRSjVuQkRjdEtLcUZtM3pKdVVubHo5ZEpVckdscEltMjVJWXJDckxYUFgKWkUwRUtRNWEzMHhkVWNrTHRGQkQrOEtBdFdqSS9yZUZPNzM1YnBMdVoyOTBaNm42QlF3elRrS0p4cnhVc3QvOAppNGsxcnlsaUdWMm5SSjBUYjNORkczNHgrYWdzYTRoSTFPbU90TFM0TmgvRXJxT3lIUXNDc2hEQUtKUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            },
            "createdAt": 1527807879.988,
            "endpoint": "https://A0DCCD80A04F01705DD065655C30CC3D.yl4.us-west-2.eks.amazonaws.com",
            "name": "devel",
            "resourcesVpcConfig": {
              "securityGroupIds": ["sg-6979fe18"],
              "subnetIds": ["subnet-6782e71e", "subnet-e7e761ac"],
              "vpcId": "vpc-950809ec"
            },
            "roleArn": "arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI",
            "status": "ACTIVE",
            "version": "1.10"
          }
        },
        "properties": { "cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "DescribeUpdateRequest": { "properties": {}, "type": "object" },
      "DescribeUpdateResponse": {
        "properties": { "update": { "$ref": "#/components/schemas/Update" } },
        "type": "object"
      },
      "ErrorCode": {
        "enum": [
          "SubnetNotFound",
          "SecurityGroupNotFound",
          "EniLimitReached",
          "IpNotAvailable",
          "AccessDenied",
          "OperationNotPermitted",
          "VpcIdNotFound",
          "Unknown"
        ],
        "type": "string"
      },
      "ErrorDetail": {
        "description": "An object representing an error when an asynchronous operation fails.",
        "properties": {
          "errorCode": { "$ref": "#/components/schemas/ErrorCode" },
          "errorMessage": { "$ref": "#/components/schemas/String" },
          "resourceIds": { "$ref": "#/components/schemas/StringList" }
        },
        "type": "object"
      },
      "ErrorDetails": { "items": { "$ref": "#/components/schemas/ErrorDetail" }, "type": "array" },
      "InvalidParameterException": {},
      "InvalidRequestException": {},
      "ListClustersRequest": { "properties": {}, "type": "object" },
      "ListClustersRequestMaxResults": { "maximum": 100, "minimum": 1, "type": "integer" },
      "ListClustersResponse": {
        "example": { "clusters": ["devel", "prod"] },
        "properties": {
          "clusters": { "$ref": "#/components/schemas/StringList" },
          "nextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListUpdatesRequest": { "properties": {}, "type": "object" },
      "ListUpdatesRequestMaxResults": { "maximum": 100, "minimum": 1, "type": "integer" },
      "ListUpdatesResponse": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/String" },
          "updateIds": { "$ref": "#/components/schemas/StringList" }
        },
        "type": "object"
      },
      "LogSetup": {
        "description": "An object representing the enabled or disabled Kubernetes control plane logs for your cluster.",
        "properties": {
          "enabled": { "$ref": "#/components/schemas/BoxedBoolean" },
          "types": { "$ref": "#/components/schemas/LogTypes" }
        },
        "type": "object"
      },
      "LogSetups": { "items": { "$ref": "#/components/schemas/LogSetup" }, "type": "array" },
      "LogType": { "enum": ["api", "audit", "authenticator", "controllerManager", "scheduler"], "type": "string" },
      "LogTypes": { "items": { "$ref": "#/components/schemas/LogType" }, "type": "array" },
      "Logging": {
        "description": "An object representing the logging configuration for resources in your cluster.",
        "properties": { "clusterLogging": { "$ref": "#/components/schemas/LogSetups" } },
        "type": "object"
      },
      "ResourceInUseException": {},
      "ResourceLimitExceededException": {},
      "ResourceNotFoundException": {},
      "ServerException": {},
      "ServiceUnavailableException": {},
      "String": { "type": "string" },
      "StringList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "Timestamp": { "format": "date-time", "type": "string" },
      "UnsupportedAvailabilityZoneException": {},
      "Update": {
        "description": "An object representing an asynchronous update.",
        "properties": {
          "createdAt": { "$ref": "#/components/schemas/Timestamp" },
          "errors": { "$ref": "#/components/schemas/ErrorDetails" },
          "id": { "$ref": "#/components/schemas/String" },
          "params": { "$ref": "#/components/schemas/UpdateParams" },
          "status": { "$ref": "#/components/schemas/UpdateStatus" },
          "type": { "$ref": "#/components/schemas/UpdateType" }
        },
        "type": "object"
      },
      "UpdateClusterConfigRequest": {
        "properties": {
          "clientRequestToken": { "$ref": "#/components/schemas/String" },
          "logging": { "$ref": "#/components/schemas/Logging" },
          "resourcesVpcConfig": { "$ref": "#/components/schemas/VpcConfigRequest" }
        },
        "type": "object"
      },
      "UpdateClusterConfigResponse": {
        "properties": { "update": { "$ref": "#/components/schemas/Update" } },
        "type": "object"
      },
      "UpdateClusterVersionRequest": {
        "properties": {
          "clientRequestToken": { "$ref": "#/components/schemas/String" },
          "version": { "$ref": "#/components/schemas/String" }
        },
        "required": ["version"],
        "type": "object"
      },
      "UpdateClusterVersionResponse": {
        "properties": { "update": { "$ref": "#/components/schemas/Update" } },
        "type": "object"
      },
      "UpdateParam": {
        "description": "An object representing the details of an update request.",
        "properties": {
          "type": { "$ref": "#/components/schemas/UpdateParamType" },
          "value": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "UpdateParamType": {
        "enum": ["Version", "PlatformVersion", "EndpointPrivateAccess", "EndpointPublicAccess", "ClusterLogging"],
        "type": "string"
      },
      "UpdateParams": { "items": { "$ref": "#/components/schemas/UpdateParam" }, "type": "array" },
      "UpdateStatus": { "enum": ["InProgress", "Failed", "Cancelled", "Successful"], "type": "string" },
      "UpdateType": { "enum": ["VersionUpdate", "EndpointAccessUpdate", "LoggingUpdate"], "type": "string" },
      "VpcConfigRequest": {
        "description": "An object representing the VPC configuration to use for an Amazon EKS cluster.",
        "properties": {
          "endpointPrivateAccess": { "$ref": "#/components/schemas/BoxedBoolean" },
          "endpointPublicAccess": { "$ref": "#/components/schemas/BoxedBoolean" },
          "securityGroupIds": { "$ref": "#/components/schemas/StringList" },
          "subnetIds": { "$ref": "#/components/schemas/StringList" }
        },
        "type": "object"
      },
      "VpcConfigResponse": {
        "description": "An object representing an Amazon EKS cluster VPC configuration response.",
        "properties": {
          "endpointPrivateAccess": { "$ref": "#/components/schemas/Boolean" },
          "endpointPublicAccess": { "$ref": "#/components/schemas/Boolean" },
          "securityGroupIds": { "$ref": "#/components/schemas/StringList" },
          "subnetIds": { "$ref": "#/components/schemas/StringList" },
          "vpcId": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      }
    }
  }
}
