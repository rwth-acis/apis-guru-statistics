{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "title": "NetworkManagementClient",
    "version": "2018-12-01",
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2018-12-01/routeFilter.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "azure.com",
    "x-serviceName": "network-routeFilter",
    "x-tags": ["Azure", "Microsoft"]
  },
  "security": [{ "azure_auth": ["user_impersonation"] }],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters": {
      "get": {
        "description": "Gets all route filters in a subscription.",
        "operationId": "RouteFilters_List",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterList": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterList": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Route Filter resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilterListResult" },
                "examples": { "RouteFilterList": { "$ref": "#/components/examples/RouteFilterList" } }
              }
            }
          }
        },
        "tags": ["RouteFilters"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters": {
      "get": {
        "description": "Gets all route filters in a resource group.",
        "operationId": "RouteFilters_ListByResourceGroup",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterListByResourceGroup": { "value": "rg1" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterListByResourceGroup": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterListByResourceGroup": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Route Filter resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilterListResult" },
                "examples": {
                  "RouteFilterListByResourceGroup": { "$ref": "#/components/examples/RouteFilterListByResourceGroup" }
                }
              }
            }
          }
        },
        "tags": ["RouteFilters"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}": {
      "delete": {
        "description": "Deletes the specified route filter.",
        "operationId": "RouteFilters_Delete",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterDelete": { "value": "rg1" } }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterDelete": { "value": "filterName" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterDelete": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterDelete": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": { "description": "Delete successful." },
          "202": { "description": "Accepted and the operation will complete asynchronously." },
          "204": { "description": "Delete successful." }
        },
        "tags": ["RouteFilters"],
        "x-ms-long-running-operation": true
      },
      "get": {
        "description": "Gets the specified route filter.",
        "operationId": "RouteFilters_Get",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterGet": { "value": "rg1" } }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterGet": { "value": "filterName" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterGet": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterGet": { "value": "subid" } }
          },
          {
            "description": "Expands referenced express route bgp peering resources.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route Filter resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilter" },
                "examples": { "RouteFilterGet": { "$ref": "#/components/examples/RouteFilterGet" } }
              }
            }
          }
        },
        "tags": ["RouteFilters"]
      },
      "patch": {
        "description": "Updates a route filter in a specified resource group.",
        "operationId": "RouteFilters_Update",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterUpdate": { "value": "rg1" } }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterUpdate": { "value": "filterName" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterUpdate": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterUpdate": { "value": "subid" } }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PatchRouteFilter" } } },
          "description": "Parameters supplied to the update route filter operation.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route Filter resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilter" },
                "examples": { "RouteFilterUpdate": { "$ref": "#/components/examples/RouteFilterUpdate" } }
              }
            }
          }
        },
        "tags": ["RouteFilters"],
        "x-ms-long-running-operation": true
      },
      "put": {
        "description": "Creates or updates a route filter in a specified resource group.",
        "operationId": "RouteFilters_CreateOrUpdate",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterCreate": { "value": "rg1" } }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterCreate": { "value": "filterName" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterCreate": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterCreate": { "value": "subid" } }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RouteFilter" } } },
          "description": "Parameters supplied to the create or update route filter operation.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route Filter resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilter" },
                "examples": { "RouteFilterCreate": { "$ref": "#/components/examples/RouteFilterCreate" } }
              }
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting Route Filter resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilter" },
                "examples": { "RouteFilterCreate": { "$ref": "#/components/examples/RouteFilterCreate" } }
              }
            }
          }
        },
        "tags": ["RouteFilters"],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules": {
      "get": {
        "description": "Gets all RouteFilterRules in a route filter.",
        "operationId": "RouteFilterRules_ListByRouteFilter",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleListByRouteFilter": { "value": "rg1" } }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleListByRouteFilter": { "value": "filterName" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleListByRouteFilter": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleListByRouteFilter": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Route Filter Rule resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilterRuleListResult" },
                "examples": {
                  "RouteFilterRuleListByRouteFilter": {
                    "$ref": "#/components/examples/RouteFilterRuleListByRouteFilter"
                  }
                }
              }
            }
          }
        },
        "tags": ["RouteFilterRules"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}": {
      "delete": {
        "description": "Deletes the specified rule from a route filter.",
        "operationId": "RouteFilterRules_Delete",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleDelete": { "value": "rg1" } }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleDelete": { "value": "filterName" } }
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleDelete": { "value": "ruleName" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleDelete": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleDelete": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": { "description": "Accepted." },
          "202": { "description": "Accepted and the operation will complete asynchronously." },
          "204": { "description": "Rule was deleted or not found." }
        },
        "tags": ["RouteFilterRules"],
        "x-ms-long-running-operation": true
      },
      "get": {
        "description": "Gets the specified rule from a route filter.",
        "operationId": "RouteFilterRules_Get",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleGet": { "value": "rg1" } }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleGet": { "value": "filterName" } }
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleGet": { "value": "filterName" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleGet": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleGet": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route Filter Rule resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilterRule" },
                "examples": { "RouteFilterRuleGet": { "$ref": "#/components/examples/RouteFilterRuleGet" } }
              }
            }
          }
        },
        "tags": ["RouteFilterRules"]
      },
      "patch": {
        "description": "Updates a route in the specified route filter.",
        "operationId": "RouteFilterRules_Update",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleUpdate": { "value": "rg1" } }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleUpdate": { "value": "filterName" } }
          },
          {
            "description": "The name of the route filter rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleUpdate": { "value": "ruleName" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleUpdate": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleUpdate": { "value": "subid" } }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PatchRouteFilterRule" } } },
          "description": "Parameters supplied to the update route filter rule operation.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Route Filter Rule resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilterRule" },
                "examples": { "RouteFilterRuleUpdate": { "$ref": "#/components/examples/RouteFilterRuleUpdate" } }
              }
            }
          }
        },
        "tags": ["RouteFilterRules"],
        "x-ms-long-running-operation": true
      },
      "put": {
        "description": "Creates or updates a route in the specified route filter.",
        "operationId": "RouteFilterRules_CreateOrUpdate",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleCreate": { "value": "rg1" } }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleCreate": { "value": "filterName" } }
          },
          {
            "description": "The name of the route filter rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleCreate": { "value": "ruleName" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleCreate": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "RouteFilterRuleCreate": { "value": "subid" } }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RouteFilterRule" } } },
          "description": "Parameters supplied to the create or update route filter rule operation.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Route Filter Rule resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilterRule" },
                "examples": { "RouteFilterRuleCreate": { "$ref": "#/components/examples/RouteFilterRuleCreate" } }
              }
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting Route Filter Rule resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RouteFilterRule" },
                "examples": { "RouteFilterRuleCreate": { "$ref": "#/components/examples/RouteFilterRuleCreate" } }
              }
            }
          }
        },
        "tags": ["RouteFilterRules"],
        "x-ms-long-running-operation": true
      }
    }
  },
  "servers": [{ "url": "https://management.azure.com" }],
  "components": {
    "examples": {
      "RouteFilterList": {
        "value": {
          "value": [
            {
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
              "location": "West US",
              "name": "filterName",
              "properties": {
                "peerings": [],
                "provisioningState": "Succeeded",
                "rules": [
                  {
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                    "name": "ruleName",
                    "properties": {
                      "access": "Allow",
                      "communities": ["12076:5030", "12076:5040"],
                      "provisioningState": "Succeeded",
                      "routeFilterRuleType": "Community"
                    }
                  }
                ]
              },
              "tags": { "key1": "value1" },
              "type": "Microsofot.Network/routeFilters"
            }
          ]
        }
      },
      "RouteFilterListByResourceGroup": {
        "value": {
          "value": [
            {
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
              "location": "West US",
              "name": "filterName",
              "properties": {
                "peerings": [],
                "provisioningState": "Succeeded",
                "rules": [
                  {
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                    "name": "ruleName",
                    "properties": {
                      "access": "Allow",
                      "communities": ["12076:5030", "12076:5040"],
                      "provisioningState": "Succeeded",
                      "routeFilterRuleType": "Community"
                    }
                  }
                ]
              },
              "tags": { "key1": "value1" },
              "type": "Microsofot.Network/routeFilters"
            }
          ]
        }
      },
      "RouteFilterGet": {
        "value": {
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
          "location": "West US",
          "name": "filterName",
          "properties": {
            "peerings": [],
            "provisioningState": "Succeeded",
            "rules": [
              {
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                "name": "ruleName",
                "properties": {
                  "access": "Allow",
                  "communities": ["12076:5030", "12076:5040"],
                  "provisioningState": "Succeeded",
                  "routeFilterRuleType": "Community"
                }
              }
            ]
          },
          "tags": { "key1": "value1" },
          "type": "Microsofot.Network/routeFilters"
        }
      },
      "RouteFilterUpdate": {
        "value": {
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
          "location": "West US",
          "name": "filterName",
          "properties": {
            "peerings": [],
            "provisioningState": "Succeeded",
            "rules": [
              {
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                "name": "ruleName",
                "properties": {
                  "access": "Allow",
                  "communities": ["12076:5030"],
                  "provisioningState": "Succeeded",
                  "routeFilterRuleType": "Community"
                }
              }
            ]
          },
          "tags": { "key1": "value1" },
          "type": "Microsofot.Network/routeFilters"
        }
      },
      "RouteFilterCreate": {
        "value": {
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
          "location": "West US",
          "name": "filterName",
          "properties": {
            "peerings": [],
            "provisioningState": "Succeeded",
            "rules": [
              {
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                "name": "ruleName",
                "properties": {
                  "access": "Allow",
                  "communities": ["12076:5030", "12076:5040"],
                  "provisioningState": "Succeeded",
                  "routeFilterRuleType": "Community"
                }
              }
            ]
          },
          "tags": { "key1": "value1" },
          "type": "Microsofot.Network/routeFilters"
        }
      },
      "RouteFilterRuleListByRouteFilter": {
        "value": {
          "value": [
            {
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
              "name": "ruleName",
              "properties": {
                "access": "Allow",
                "communities": ["12076:5030", "12076:5040"],
                "provisioningState": "Succeeded",
                "routeFilterRuleType": "Community"
              }
            }
          ]
        }
      },
      "RouteFilterRuleGet": {
        "value": {
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
          "name": "ruleName",
          "properties": {
            "access": "Allow",
            "communities": ["12076:5030", "12076:5040"],
            "provisioningState": "Succeeded",
            "routeFilterRuleType": "Community"
          }
        }
      },
      "RouteFilterRuleUpdate": {
        "value": {
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
          "name": "ruleName",
          "properties": {
            "access": "Allow",
            "communities": ["12076:5030", "12076:5040"],
            "provisioningState": "Succeeded",
            "routeFilterRuleType": "Community"
          }
        }
      },
      "RouteFilterRuleCreate": {
        "value": {
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
          "name": "ruleName",
          "properties": {
            "access": "Allow",
            "communities": ["12076:5030", "12076:5040"],
            "provisioningState": "Succeeded",
            "routeFilterRuleType": "Community"
          }
        }
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": { "user_impersonation": "impersonate your user account" }
          }
        }
      }
    },
    "schemas": {
      "PatchRouteFilter": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Route Filter Resource.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "readOnly": true,
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/RouteFilterPropertiesFormat" },
          "tags": { "additionalProperties": { "type": "string" }, "description": "Resource tags.", "type": "object" },
          "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
        }
      },
      "PatchRouteFilterRule": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Route Filter Rule Resource",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "readOnly": true,
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/RouteFilterRulePropertiesFormat" }
        }
      },
      "RouteFilter": {
        "allOf": [
          {
            "description": "Common resource representation.",
            "properties": {
              "id": { "description": "Resource ID.", "type": "string" },
              "location": { "description": "Resource location.", "type": "string" },
              "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
              "tags": {
                "additionalProperties": { "type": "string" },
                "description": "Resource tags.",
                "type": "object"
              },
              "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
            },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Route Filter Resource.",
        "properties": {
          "etag": {
            "description": "Gets a unique read-only string that changes whenever the resource is updated.",
            "readOnly": true,
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/RouteFilterPropertiesFormat" }
        },
        "required": ["location"]
      },
      "RouteFilterListResult": {
        "description": "Response for the ListRouteFilters API service call.",
        "properties": {
          "nextLink": { "description": "The URL to get the next set of results.", "type": "string" },
          "value": {
            "description": "Gets a list of route filters in a resource group.",
            "items": { "$ref": "#/components/schemas/RouteFilter" },
            "type": "array"
          }
        }
      },
      "RouteFilterPropertiesFormat": {
        "description": "Route Filter Resource",
        "properties": {
          "peerings": {
            "description": "A collection of references to express route circuit peerings.",
            "items": { "$ref": "./expressRouteCircuit.json#/definitions/ExpressRouteCircuitPeering" },
            "type": "array"
          },
          "provisioningState": {
            "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.",
            "readOnly": true,
            "type": "string"
          },
          "rules": {
            "description": "Collection of RouteFilterRules contained within a route filter.",
            "items": {
              "allOf": [
                {
                  "description": "Reference to another subresource.",
                  "properties": { "id": { "description": "Resource ID.", "type": "string" } },
                  "x-ms-azure-resource": true
                }
              ],
              "description": "Route Filter Rule Resource",
              "properties": {
                "etag": {
                  "description": "A unique read-only string that changes whenever the resource is updated.",
                  "readOnly": true,
                  "type": "string"
                },
                "location": { "description": "Resource location.", "type": "string" },
                "name": {
                  "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                  "type": "string"
                },
                "properties": {
                  "description": "Route Filter Rule Resource",
                  "properties": {
                    "access": {
                      "description": "The access type of the rule. Valid values are: 'Allow', 'Deny'",
                      "enum": ["Allow", "Deny"],
                      "type": "string",
                      "x-ms-enum": { "modelAsString": true, "name": "Access" }
                    },
                    "communities": {
                      "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']",
                      "items": { "type": "string" },
                      "type": "array"
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "routeFilterRuleType": {
                      "description": "The rule type of the rule. Valid value is: 'Community'",
                      "enum": ["Community"],
                      "type": "string",
                      "x-ms-enum": { "modelAsString": true, "name": "RouteFilterRuleType" }
                    }
                  },
                  "required": ["access", "routeFilterRuleType", "communities"]
                }
              }
            },
            "type": "array"
          }
        }
      },
      "RouteFilterRule": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Route Filter Rule Resource",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "readOnly": true,
            "type": "string"
          },
          "location": { "description": "Resource location.", "type": "string" },
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "type": "string"
          },
          "properties": {
            "description": "Route Filter Rule Resource",
            "properties": {
              "access": {
                "description": "The access type of the rule. Valid values are: 'Allow', 'Deny'",
                "enum": ["Allow", "Deny"],
                "type": "string",
                "x-ms-enum": { "modelAsString": true, "name": "Access" }
              },
              "communities": {
                "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']",
                "items": { "type": "string" },
                "type": "array"
              },
              "provisioningState": {
                "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.",
                "readOnly": true,
                "type": "string"
              },
              "routeFilterRuleType": {
                "description": "The rule type of the rule. Valid value is: 'Community'",
                "enum": ["Community"],
                "type": "string",
                "x-ms-enum": { "modelAsString": true, "name": "RouteFilterRuleType" }
              }
            },
            "required": ["access", "routeFilterRuleType", "communities"]
          }
        }
      },
      "RouteFilterRuleListResult": {
        "description": "Response for the ListRouteFilterRules API service call",
        "properties": {
          "nextLink": { "description": "The URL to get the next set of results.", "type": "string" },
          "value": {
            "description": "Gets a list of RouteFilterRules in a resource group.",
            "items": { "$ref": "#/components/schemas/RouteFilterRule" },
            "type": "array"
          }
        }
      },
      "RouteFilterRulePropertiesFormat": {
        "description": "Route Filter Rule Resource",
        "properties": {
          "access": {
            "description": "The access type of the rule. Valid values are: 'Allow', 'Deny'",
            "enum": ["Allow", "Deny"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "Access" }
          },
          "communities": {
            "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']",
            "items": { "type": "string" },
            "type": "array"
          },
          "provisioningState": {
            "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.",
            "readOnly": true,
            "type": "string"
          },
          "routeFilterRuleType": {
            "description": "The rule type of the rule. Valid value is: 'Community'",
            "enum": ["Community"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "RouteFilterRuleType" }
          }
        },
        "required": ["access", "routeFilterRuleType", "communities"]
      }
    }
  }
}
