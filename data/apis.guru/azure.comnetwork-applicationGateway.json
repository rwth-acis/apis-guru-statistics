{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "title": "NetworkManagementClient",
    "version": "2018-12-01",
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2018-12-01/applicationGateway.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "azure.com",
    "x-serviceName": "network-applicationGateway",
    "x-tags": ["Azure", "Microsoft"]
  },
  "security": [{ "azure_auth": ["user_impersonation"] }],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableRequestHeaders": {
      "get": {
        "description": "Lists all available request headers.",
        "operationId": "ApplicationGateways_ListAvailableRequestHeaders",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Request Headers": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Request Headers": { "value": "72f988bf-86f1-41af-91ab-2d7cd0dddd4" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available request headers.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGatewayAvailableRequestHeadersResult" },
                "examples": {
                  "Get Available Request Headers": { "$ref": "#/components/examples/Get_Available_Request_Headers" }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": { "type": "string" },
                    "details": {
                      "items": {
                        "properties": {
                          "code": { "type": "string" },
                          "message": { "type": "string" },
                          "target": { "type": "string" }
                        }
                      },
                      "type": "array"
                    },
                    "innerError": { "type": "string" },
                    "message": { "type": "string" },
                    "target": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "tags": ["ApplicationGateways"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableResponseHeaders": {
      "get": {
        "description": "Lists all available response headers.",
        "operationId": "ApplicationGateways_ListAvailableResponseHeaders",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Response Headers": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Response Headers": { "value": "72f988bf-86f1-41af-91ab-2d7cd0dddd4" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available response headers.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGatewayAvailableResponseHeadersResult" },
                "examples": {
                  "Get Available Response Headers": { "$ref": "#/components/examples/Get_Available_Response_Headers" }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": { "type": "string" },
                    "details": {
                      "items": {
                        "properties": {
                          "code": { "type": "string" },
                          "message": { "type": "string" },
                          "target": { "type": "string" }
                        }
                      },
                      "type": "array"
                    },
                    "innerError": { "type": "string" },
                    "message": { "type": "string" },
                    "target": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "tags": ["ApplicationGateways"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableServerVariables": {
      "get": {
        "description": "Lists all available server variables.",
        "operationId": "ApplicationGateways_ListAvailableServerVariables",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Server Variables": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Server Variables": { "value": "72f988bf-86f1-41af-91ab-2d7cd0dddd4" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available server variables.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGatewayAvailableServerVariablesResult" },
                "examples": {
                  "Get Available Server Variables": { "$ref": "#/components/examples/Get_Available_Server_Variables" }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": { "type": "string" },
                    "details": {
                      "items": {
                        "properties": {
                          "code": { "type": "string" },
                          "message": { "type": "string" },
                          "target": { "type": "string" }
                        }
                      },
                      "type": "array"
                    },
                    "innerError": { "type": "string" },
                    "message": { "type": "string" },
                    "target": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "tags": ["ApplicationGateways"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default": {
      "get": {
        "description": "Lists available Ssl options for configuring Ssl policy.",
        "operationId": "ApplicationGateways_ListAvailableSslOptions",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Ssl Options": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Ssl Options": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns all available Ssl options for configuring Ssl policy.",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ApplicationGatewayAvailableSslOptions" } }
            }
          }
        },
        "tags": ["ApplicationGateways"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies": {
      "get": {
        "description": "Lists all SSL predefined policies for configuring Ssl policy.",
        "operationId": "ApplicationGateways_ListAvailableSslPredefinedPolicies",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Ssl Predefined Policies": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Ssl Predefined Policies": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a lists of all Ssl predefined policies for configuring Ssl policy.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGatewayAvailableSslPredefinedPolicies" }
              }
            }
          }
        },
        "tags": ["ApplicationGateways"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies/{predefinedPolicyName}": {
      "get": {
        "description": "Gets Ssl predefined policy with the specified policy name.",
        "operationId": "ApplicationGateways_GetSslPredefinedPolicy",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Ssl Predefined Policy by name": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Ssl Predefined Policy by name": { "value": "subid" } }
          },
          {
            "description": "Name of Ssl predefined policy.",
            "in": "path",
            "name": "predefinedPolicyName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Ssl Predefined Policy by name": { "value": "AppGwSslPolicy20150501" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a Ssl predefined policy with the specified policy name.",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ApplicationGatewaySslPredefinedPolicy" } }
            }
          }
        },
        "tags": ["ApplicationGateways"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableWafRuleSets": {
      "get": {
        "description": "Lists all available web application firewall rule sets.",
        "operationId": "ApplicationGateways_ListAvailableWafRuleSets",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Waf Rule Sets": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Available Waf Rule Sets": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available web application firewall rule sets.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGatewayAvailableWafRuleSetsResult" },
                "examples": {
                  "Get Available Waf Rule Sets": { "$ref": "#/components/examples/Get_Available_Waf_Rule_Sets" }
                }
              }
            }
          }
        },
        "tags": ["ApplicationGateways"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways": {
      "get": {
        "description": "Gets all the application gateways in a subscription.",
        "operationId": "ApplicationGateways_ListAll",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Lists all application gateways in a subscription": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Lists all application gateways in a subscription": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of ApplicationGateway resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGatewayListResult" },
                "examples": {
                  "Lists all application gateways in a subscription": {
                    "$ref": "#/components/examples/Lists_all_application_gateways_in_a_subscription"
                  }
                }
              }
            }
          }
        },
        "tags": ["ApplicationGateways"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways": {
      "get": {
        "description": "Lists all application gateways in a resource group.",
        "operationId": "ApplicationGateways_List",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Lists all application gateways in a resource group": { "value": "rg1" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Lists all application gateways in a resource group": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Lists all application gateways in a resource group": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of ApplicationGateway resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGatewayListResult" },
                "examples": {
                  "Lists all application gateways in a resource group": {
                    "$ref": "#/components/examples/Lists_all_application_gateways_in_a_resource_group"
                  }
                }
              }
            }
          }
        },
        "tags": ["ApplicationGateways"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}": {
      "delete": {
        "description": "Deletes the specified application gateway.",
        "operationId": "ApplicationGateways_Delete",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete ApplicationGateway": { "value": "rg1" } }
          },
          {
            "description": "The name of the application gateway.",
            "in": "path",
            "name": "applicationGatewayName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete ApplicationGateway": { "value": "appgw" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete ApplicationGateway": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete ApplicationGateway": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": { "description": "Delete successful." },
          "202": { "description": "Accepted and the operation will complete asynchronously." },
          "204": { "description": "Request successful. Resource with the specified name does not exist" }
        },
        "tags": ["ApplicationGateways"],
        "x-ms-long-running-operation": true
      },
      "get": {
        "description": "Gets the specified application gateway.",
        "operationId": "ApplicationGateways_Get",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get ApplicationGateway": { "value": "rg1" } }
          },
          {
            "description": "The name of the application gateway.",
            "in": "path",
            "name": "applicationGatewayName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get ApplicationGateway": { "value": "appgw" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get ApplicationGateway": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get ApplicationGateway": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns an ApplicationGateway resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGateway" },
                "examples": { "Get ApplicationGateway": { "$ref": "#/components/examples/Get_ApplicationGateway" } }
              }
            }
          }
        },
        "tags": ["ApplicationGateways"]
      },
      "patch": {
        "description": "Updates the specified application gateway tags.",
        "operationId": "ApplicationGateways_UpdateTags",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Update Application Gateway tags": { "value": "rg1" } }
          },
          {
            "description": "The name of the application gateway.",
            "in": "path",
            "name": "applicationGatewayName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Update Application Gateway tags": { "value": "AppGw" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Update Application Gateway tags": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Update Application Gateway tags": { "value": "subid" } }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Tags object for patch operations.",
                "properties": {
                  "tags": {
                    "additionalProperties": { "type": "string" },
                    "description": "Resource tags.",
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "Parameters supplied to update application gateway tags.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ApplicationGateway resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGateway" },
                "examples": {
                  "Update Application Gateway tags": { "$ref": "#/components/examples/Update_Application_Gateway_tags" }
                }
              }
            }
          }
        },
        "tags": ["ApplicationGateways"],
        "x-ms-long-running-operation": true
      },
      "put": {
        "description": "Creates or updates the specified application gateway.",
        "operationId": "ApplicationGateways_CreateOrUpdate",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Create Application Gateway": { "value": "rg1" } }
          },
          {
            "description": "The name of the application gateway.",
            "in": "path",
            "name": "applicationGatewayName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Create Application Gateway": { "value": "appgw" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Create Application Gateway": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Create Application Gateway": { "value": "subid" } }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ApplicationGateway" } } },
          "description": "Parameters supplied to the create or update application gateway operation.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ApplicationGateway resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGateway" },
                "examples": {
                  "Create Application Gateway": { "$ref": "#/components/examples/Create_Application_Gateway" }
                }
              }
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ApplicationGateway resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGateway" },
                "examples": {
                  "Create Application Gateway": { "$ref": "#/components/examples/Create_Application_Gateway" }
                }
              }
            }
          }
        },
        "tags": ["ApplicationGateways"],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth": {
      "post": {
        "description": "Gets the backend health of the specified application gateway in a resource group.",
        "operationId": "ApplicationGateways_BackendHealth",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Backend Health": { "value": "appgw" } }
          },
          {
            "description": "The name of the application gateway.",
            "in": "path",
            "name": "applicationGatewayName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Backend Health": { "value": "appgw" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Backend Health": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get Backend Health": { "value": "subid" } }
          },
          {
            "description": "Expands BackendAddressPool and BackendHttpSettings referenced in backend health.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicationGatewayBackendHealth" },
                "examples": { "Get Backend Health": { "$ref": "#/components/examples/Get_Backend_Health" } }
              }
            }
          },
          "202": { "description": "Accepted and the operation will complete asynchronously." }
        },
        "tags": ["ApplicationGateways"],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start": {
      "post": {
        "description": "Starts the specified application gateway.",
        "operationId": "ApplicationGateways_Start",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Start Application Gateway": { "value": "rg1" } }
          },
          {
            "description": "The name of the application gateway.",
            "in": "path",
            "name": "applicationGatewayName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Start Application Gateway": { "value": "appgw" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Start Application Gateway": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Start Application Gateway": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": { "description": "Request successful. The operation starts the ApplicationGateway resource." },
          "202": { "description": "Accepted and the operation will complete asynchronously." }
        },
        "tags": ["ApplicationGateways"],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop": {
      "post": {
        "description": "Stops the specified application gateway in a resource group.",
        "operationId": "ApplicationGateways_Stop",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Stop Application Gateway": { "value": "rg1" } }
          },
          {
            "description": "The name of the application gateway.",
            "in": "path",
            "name": "applicationGatewayName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Stop Application Gateway": { "value": "appgw" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Stop Application Gateway": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Stop Application Gateway": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": { "description": "Request successful. The operation stops the ApplicationGateway resource." },
          "202": { "description": "Accepted and the operation will complete asynchronously." }
        },
        "tags": ["ApplicationGateways"],
        "x-ms-long-running-operation": true
      }
    }
  },
  "servers": [{ "url": "https://management.azure.com" }],
  "components": {
    "examples": {
      "Get_Available_Request_Headers": { "value": ["Accept-Charset"] },
      "Get_Available_Response_Headers": { "value": ["Access-Control-Allow-Origin"] },
      "Get_Available_Server_Variables": { "value": ["request_query"] },
      "Get_Available_Waf_Rule_Sets": {
        "value": {
          "value": [
            {
              "id": "/subscriptions//resourceGroups//providers/Microsoft.Network/applicationGatewayAvailableWafRuleSets/",
              "name": "OWASP_3.0",
              "properties": {
                "provisioningState": "Succeeded",
                "ruleGroups": [
                  {
                    "description": "",
                    "ruleGroupName": "General",
                    "rules": [{ "description": "Possible Multipart Unmatched Boundary.", "ruleId": 200004 }]
                  }
                ],
                "ruleSetType": "OWASP",
                "ruleSetVersion": "3.0"
              },
              "type": "Microsoft.Network/applicationGatewayAvailableWafRuleSets"
            }
          ]
        }
      },
      "Lists_all_application_gateways_in_a_subscription": {
        "value": {
          "value": [
            {
              "location": "southcentralus",
              "name": "appgw",
              "properties": {
                "backendAddressPools": [
                  {
                    "name": "appgwpool",
                    "properties": { "backendAddresses": [{ "ipAddress": "10.0.1.1" }, { "ipAddress": "10.0.1.2" }] }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "appgwbhs",
                    "properties": {
                      "cookieBasedAffinity": "Disabled",
                      "port": 80,
                      "protocol": "Http",
                      "requestTimeout": 30
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "appgwfip",
                    "properties": {
                      "publicIPAddress": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip"
                      }
                    }
                  }
                ],
                "frontendPorts": [{ "name": "appgwfp", "properties": { "port": 443 } }],
                "gatewayIPConfigurations": [
                  {
                    "name": "appgwipc",
                    "properties": {
                      "subnet": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/appgwsubnet"
                      }
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "appgwhl",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                      },
                      "frontendPort": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp"
                      },
                      "protocol": "Https",
                      "requireServerNameIndication": false,
                      "sslCertificate": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert"
                      }
                    }
                  }
                ],
                "requestRoutingRules": [
                  {
                    "name": "appgwrule",
                    "properties": {
                      "backendAddressPool": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                      },
                      "backendHttpSettings": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                      },
                      "httpListener": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl"
                      },
                      "ruleType": "Basic"
                    }
                  }
                ],
                "sku": { "capacity": 3, "name": "Standard_Medium", "tier": "Standard" },
                "sslCertificates": [
                  { "name": "sslcert", "properties": { "data": "base64-pfxData", "password": "pass1" } }
                ]
              },
              "type": "Microsoft.Network/applicationGateways"
            }
          ]
        }
      },
      "Lists_all_application_gateways_in_a_resource_group": {
        "value": {
          "value": [
            {
              "location": "southcentralus",
              "name": "appgw",
              "properties": {
                "backendAddressPools": [
                  {
                    "name": "appgwpool",
                    "properties": { "backendAddresses": [{ "ipAddress": "10.0.1.1" }, { "ipAddress": "10.0.1.2" }] }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "appgwbhs",
                    "properties": {
                      "cookieBasedAffinity": "Disabled",
                      "port": 80,
                      "protocol": "Http",
                      "requestTimeout": 30
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "appgwfip",
                    "properties": {
                      "publicIPAddress": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip"
                      }
                    }
                  }
                ],
                "frontendPorts": [{ "name": "appgwfp", "properties": { "port": 443 } }],
                "gatewayIPConfigurations": [
                  {
                    "name": "appgwipc",
                    "properties": {
                      "subnet": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/appgwsubnet"
                      }
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "appgwhl",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                      },
                      "frontendPort": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp"
                      },
                      "protocol": "Https",
                      "requireServerNameIndication": false,
                      "sslCertificate": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert"
                      }
                    }
                  }
                ],
                "requestRoutingRules": [
                  {
                    "name": "appgwrule",
                    "properties": {
                      "backendAddressPool": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                      },
                      "backendHttpSettings": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                      },
                      "httpListener": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl"
                      },
                      "ruleType": "Basic"
                    }
                  }
                ],
                "sku": { "capacity": 3, "name": "Standard_Medium", "tier": "Standard" },
                "sslCertificates": [
                  { "name": "sslcert", "properties": { "data": "base64-pfxData", "password": "pass1" } }
                ]
              },
              "type": "Microsoft.Network/applicationGateways"
            }
          ]
        }
      },
      "Get_ApplicationGateway": {
        "value": {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw",
          "location": "southcentralus",
          "name": "appgw",
          "properties": {
            "authenticationCertificates": [],
            "backendAddressPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool",
                "name": "appgwpool",
                "properties": { "backendAddresses": [], "provisioningState": "Succeeded" }
              }
            ],
            "backendHttpSettingsCollection": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs",
                "name": "appgwbhs",
                "properties": {
                  "cookieBasedAffinity": "Disabled",
                  "port": 80,
                  "protocol": "Http",
                  "provisioningState": "Succeeded",
                  "requestTimeout": 30
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip",
                "name": "appgwfip",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "provisioningState": "Succeeded",
                  "publicIPAddress": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip"
                  }
                }
              }
            ],
            "frontendPorts": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp",
                "name": "appgwfp",
                "properties": { "port": 443, "provisioningState": "Succeeded" }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80",
                "name": "appgwfp80",
                "properties": { "port": 80, "provisioningState": "Succeeded" }
              }
            ],
            "gatewayIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/gatewayIPConfigurations/appgwipc",
                "name": "appgwipc",
                "properties": {
                  "provisioningState": "Succeeded",
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/virtualNetwork1/subnets/appgwsubnet"
                  }
                }
              }
            ],
            "httpListeners": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl",
                "name": "appgwhl",
                "properties": {
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                  },
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp"
                  },
                  "protocol": "Https",
                  "provisioningState": "Succeeded",
                  "requireServerNameIndication": false,
                  "sslCertificate": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert"
                  }
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener",
                "name": "appgwhttplistener",
                "properties": {
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                  },
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80"
                  },
                  "protocol": "Http",
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "operationalState": "Running",
            "probes": [],
            "provisioningState": "Succeeded",
            "requestRoutingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/requestRoutingRules/appgwrule",
                "name": "appgwrule",
                "properties": {
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                  },
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                  },
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl"
                  },
                  "provisioningState": "Succeeded",
                  "rewriteRuleSet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                  },
                  "ruleType": "Basic"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/requestRoutingRules/appgwPathBasedRule",
                "name": "appgwPathBasedRule",
                "properties": {
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener"
                  },
                  "provisioningState": "Succeeded",
                  "ruleType": "PathBasedRouting",
                  "urlPathMap": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1"
                  }
                }
              }
            ],
            "rewriteRuleSets": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1",
                "name": "rewriteRuleSet1",
                "properties": {
                  "provisioningState": "Succeeded",
                  "rewriteRules": [
                    {
                      "actionSet": {
                        "requestHeaderConfigurations": [
                          { "headerName": "X-Forwarded-For", "headerValue": "{var_remote-addr}" }
                        ],
                        "responseHeaderConfigurations": [
                          { "headerName": "Strict-Transport-Security", "headerValue": "max-age=31536000" }
                        ]
                      },
                      "conditions": [
                        {
                          "ignoreCase": true,
                          "negate": false,
                          "pattern": "^Bearer",
                          "variable": "http_req_Authorization"
                        }
                      ],
                      "name": "Set X-Forwarded-For",
                      "ruleSequence": 102
                    }
                  ]
                }
              }
            ],
            "sku": { "capacity": 3, "name": "Standard_Medium", "tier": "Standard" },
            "sslCertificates": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert",
                "name": "sslcert",
                "properties": { "provisioningState": "Succeeded", "publicCertData": "*****" }
              }
            ],
            "urlPathMaps": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1",
                "name": "pathMap1",
                "properties": {
                  "defaultBackendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                  },
                  "defaultBackendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                  },
                  "defaultRewriteRuleSet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                  },
                  "pathRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1/pathRules/apiPaths",
                      "name": "apiPaths",
                      "properties": {
                        "backendAddressPool": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                        },
                        "backendHttpSettings": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                        },
                        "paths": ["/api", "/v1/api"],
                        "provisioningState": "Succeeded",
                        "rewriteRuleSet": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                        }
                      }
                    }
                  ],
                  "provisioningState": "Succeeded"
                }
              }
            ]
          },
          "type": "Microsoft.Network/applicationGateways"
        }
      },
      "Update_Application_Gateway_tags": {
        "value": {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw",
          "location": "westus",
          "name": "AppGw",
          "properties": {
            "authenticationCertificates": [],
            "backendAddressPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/backendAddressPools/Pool01",
                "name": "Pool01",
                "properties": {
                  "backendAddresses": [
                    { "ipAddress": "10.10.10.1" },
                    { "ipAddress": "10.10.10.2" },
                    { "ipAddress": "10.10.10.3" }
                  ],
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "backendHttpSettingsCollection": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/backendHttpSettingsCollection/PoolSetting01",
                "name": "PoolSetting01",
                "properties": {
                  "cookieBasedAffinity": "Disabled",
                  "pickHostNameFromBackendAddress": false,
                  "port": 80,
                  "protocol": "Http",
                  "provisioningState": "Succeeded",
                  "requestTimeout": 30
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/frontendIPConfigurations/FrontEndConfig01",
                "name": "FrontEndConfig01",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "provisioningState": "Succeeded",
                  "publicIPAddress": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/publicIp1"
                  }
                }
              }
            ],
            "frontendPorts": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/frontendPorts/FrontEndPort01",
                "name": "FrontEndPort01",
                "properties": { "port": 80, "provisioningState": "Succeeded" }
              }
            ],
            "gatewayIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/gatewayIPConfigurations/GatewayIp01",
                "name": "GatewayIp01",
                "properties": {
                  "provisioningState": "Succeeded",
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/subnet1"
                  }
                }
              }
            ],
            "httpListeners": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/httpListeners/listener1",
                "name": "listener1",
                "properties": {
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/frontendIPConfigurations/FrontEndConfig01"
                  },
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/frontendPorts/FrontEndPort01"
                  },
                  "protocol": "Http",
                  "provisioningState": "Succeeded",
                  "requireServerNameIndication": false
                }
              }
            ],
            "operationalState": "Running",
            "probes": [],
            "provisioningState": "Succeeded",
            "redirectConfigurations": [],
            "requestRoutingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/requestRoutingRules/Rule01",
                "name": "Rule01",
                "properties": {
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/backendAddressPools/Pool01"
                  },
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/backendHttpSettingsCollection/PoolSetting01"
                  },
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/httpListeners/listener1"
                  },
                  "provisioningState": "Succeeded",
                  "ruleType": "Basic"
                }
              }
            ],
            "resourceGuid": "00000000-0000-0000-0000-000000000000",
            "sku": { "capacity": 2, "name": "Standard_Small", "tier": "Standard" },
            "sslCertificates": [],
            "urlPathMaps": []
          },
          "tags": { "tag1": "value1", "tag2": "value2" },
          "type": "Microsoft.Network/applicationGateways"
        }
      },
      "Create_Application_Gateway": {
        "value": {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw",
          "location": "southcentralus",
          "name": "appgw",
          "properties": {
            "authenticationCertificates": [],
            "backendAddressPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool",
                "name": "appgwpool",
                "properties": { "backendAddresses": [], "provisioningState": "Succeeded" }
              }
            ],
            "backendHttpSettingsCollection": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs",
                "name": "appgwbhs",
                "properties": {
                  "cookieBasedAffinity": "Disabled",
                  "port": 80,
                  "protocol": "Http",
                  "provisioningState": "Succeeded",
                  "requestTimeout": 30
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip",
                "name": "appgwfip",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "provisioningState": "Succeeded",
                  "publicIPAddress": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip"
                  }
                }
              }
            ],
            "frontendPorts": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp",
                "name": "appgwfp",
                "properties": { "port": 443, "provisioningState": "Succeeded" }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80",
                "name": "appgwfp80",
                "properties": { "port": 80, "provisioningState": "Succeeded" }
              }
            ],
            "gatewayIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/gatewayIPConfigurations/appgwipc",
                "name": "appgwipc",
                "properties": {
                  "provisioningState": "Succeeded",
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/virtualNetwork1/subnets/appgwsubnet"
                  }
                }
              }
            ],
            "httpListeners": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl",
                "name": "appgwhl",
                "properties": {
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                  },
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp"
                  },
                  "protocol": "Https",
                  "provisioningState": "Succeeded",
                  "requireServerNameIndication": false,
                  "sslCertificate": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert"
                  }
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener",
                "name": "appgwhttplistener",
                "properties": {
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                  },
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80"
                  },
                  "protocol": "Http",
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "operationalState": "Running",
            "probes": [],
            "provisioningState": "Succeeded",
            "requestRoutingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/requestRoutingRules/appgwrule",
                "name": "appgwrule",
                "properties": {
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                  },
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                  },
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl"
                  },
                  "provisioningState": "Succeeded",
                  "rewriteRuleSet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                  },
                  "ruleType": "Basic"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/requestRoutingRules/appgwPathBasedRule",
                "name": "appgwPathBasedRule",
                "properties": {
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener"
                  },
                  "provisioningState": "Succeeded",
                  "ruleType": "PathBasedRouting",
                  "urlPathMap": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1"
                  }
                }
              }
            ],
            "rewriteRuleSets": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1",
                "name": "rewriteRuleSet1",
                "properties": {
                  "provisioningState": "Succeeded",
                  "rewriteRules": [
                    {
                      "actionSet": {
                        "requestHeaderConfigurations": [
                          { "headerName": "X-Forwarded-For", "headerValue": "{var_remote-addr}" }
                        ],
                        "responseHeaderConfigurations": [
                          { "headerName": "Strict-Transport-Security", "headerValue": "max-age=31536000" }
                        ]
                      },
                      "conditions": [
                        {
                          "ignoreCase": true,
                          "negate": false,
                          "pattern": "^Bearer",
                          "variable": "http_req_Authorization"
                        }
                      ],
                      "name": "Set X-Forwarded-For",
                      "ruleSequence": 102
                    }
                  ]
                }
              }
            ],
            "sku": { "capacity": 3, "name": "Standard_Medium", "tier": "Standard" },
            "sslCertificates": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert",
                "name": "sslcert",
                "properties": { "provisioningState": "Succeeded", "publicCertData": "*****" }
              }
            ],
            "urlPathMaps": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1",
                "name": "pathMap1",
                "properties": {
                  "defaultBackendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                  },
                  "defaultBackendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                  },
                  "defaultRewriteRuleSet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                  },
                  "pathRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1/pathRules/apiPaths",
                      "name": "apiPaths",
                      "properties": {
                        "backendAddressPool": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                        },
                        "backendHttpSettings": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                        },
                        "paths": ["/api", "/v1/api"],
                        "provisioningState": "Succeeded",
                        "rewriteRuleSet": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                        }
                      }
                    }
                  ],
                  "provisioningState": "Succeeded"
                }
              }
            ]
          },
          "type": "Microsoft.Network/applicationGateways"
        }
      },
      "Get_Backend_Health": {
        "value": {
          "backendAddressPools": [
            {
              "backendAddressPool": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendaddressPools/MFAnalyticsPool"
              },
              "backendHttpSettingsCollection": [
                {
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/MFPoolSettings"
                  },
                  "servers": [{ "address": "10.220.1.8", "health": "Up" }]
                }
              ]
            },
            {
              "backendAddressPool": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendaddressPools/MFPool"
              },
              "backendHttpSettingsCollection": [
                {
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/MFPoolSettings"
                  },
                  "servers": [{ "address": "10.220.1.4", "health": "Up" }, { "address": "10.220.1.5", "health": "Up" }]
                }
              ]
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": { "user_impersonation": "impersonate your user account" }
          }
        }
      }
    },
    "schemas": {
      "ApplicationGateway": {
        "allOf": [
          {
            "description": "Common resource representation.",
            "properties": {
              "id": { "description": "Resource ID.", "type": "string" },
              "location": { "description": "Resource location.", "type": "string" },
              "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
              "tags": {
                "additionalProperties": { "type": "string" },
                "description": "Resource tags.",
                "type": "object"
              },
              "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
            },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Application gateway resource",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "identity": {
            "description": "Identity for the resource.",
            "properties": {
              "principalId": {
                "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity.",
                "readOnly": true,
                "type": "string"
              },
              "tenantId": {
                "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.",
                "readOnly": true,
                "type": "string"
              },
              "type": {
                "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.",
                "enum": ["SystemAssigned", "UserAssigned", "SystemAssigned, UserAssigned", "None"],
                "type": "string",
                "x-ms-enum": { "modelAsString": false, "name": "ResourceIdentityType" }
              },
              "userAssignedIdentities": {
                "additionalProperties": {
                  "properties": {
                    "clientId": {
                      "description": "The client id of user assigned identity.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "principalId": {
                      "description": "The principal id of user assigned identity.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                "type": "object"
              }
            }
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayPropertiesFormat" },
          "zones": {
            "description": "A list of availability zones denoting where the resource needs to come from.",
            "items": { "type": "string" },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayAuthenticationCertificate": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Authentication certificates of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the authentication certificate that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayAuthenticationCertificatePropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayAuthenticationCertificatePropertiesFormat": {
        "description": "Authentication certificates properties of an application gateway.",
        "properties": {
          "data": { "description": "Certificate public data.", "type": "string" },
          "provisioningState": {
            "description": "Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          }
        }
      },
      "ApplicationGatewayAutoscaleConfiguration": {
        "description": "Application Gateway autoscale configuration.",
        "properties": {
          "maxCapacity": {
            "description": "Upper bound on number of Application Gateway capacity",
            "exclusiveMinimum": false,
            "format": "int32",
            "minimum": 2,
            "type": "integer"
          },
          "minCapacity": {
            "description": "Lower bound on number of Application Gateway capacity",
            "exclusiveMinimum": false,
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": ["minCapacity"]
      },
      "ApplicationGatewayAvailableRequestHeadersResult": {
        "description": "Response for ApplicationGatewayAvailableRequestHeaders API service call.",
        "items": { "type": "string" },
        "type": "array"
      },
      "ApplicationGatewayAvailableResponseHeadersResult": {
        "description": "Response for ApplicationGatewayAvailableResponseHeaders API service call.",
        "items": { "type": "string" },
        "type": "array"
      },
      "ApplicationGatewayAvailableServerVariablesResult": {
        "description": "Response for ApplicationGatewayAvailableServerVariables API service call.",
        "items": { "type": "string" },
        "type": "array"
      },
      "ApplicationGatewayAvailableSslOptions": {
        "allOf": [
          {
            "description": "Common resource representation.",
            "properties": {
              "id": { "description": "Resource ID.", "type": "string" },
              "location": { "description": "Resource location.", "type": "string" },
              "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
              "tags": {
                "additionalProperties": { "type": "string" },
                "description": "Resource tags.",
                "type": "object"
              },
              "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
            },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Response for ApplicationGatewayAvailableSslOptions API service call.",
        "properties": {
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayAvailableSslOptionsPropertiesFormat" }
        }
      },
      "ApplicationGatewayAvailableSslOptionsPropertiesFormat": {
        "description": "Properties of ApplicationGatewayAvailableSslOptions",
        "properties": {
          "availableCipherSuites": {
            "description": "List of available Ssl cipher suites.",
            "items": { "$ref": "#/components/schemas/CipherSuitesEnum" },
            "type": "array"
          },
          "availableProtocols": {
            "description": "List of available Ssl protocols.",
            "items": { "$ref": "#/components/schemas/ProtocolsEnum" },
            "type": "array"
          },
          "defaultPolicy": { "$ref": "#/components/schemas/PolicyNameEnum" },
          "predefinedPolicies": {
            "description": "List of available Ssl predefined policy.",
            "items": {
              "description": "Reference to another subresource.",
              "properties": { "id": { "description": "Resource ID.", "type": "string" } },
              "x-ms-azure-resource": true
            },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayAvailableSslPredefinedPolicies": {
        "description": "Response for ApplicationGatewayAvailableSslOptions API service call.",
        "properties": {
          "nextLink": { "description": "URL to get the next set of results.", "type": "string" },
          "value": {
            "description": "List of available Ssl predefined policy.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewaySslPredefinedPolicy" },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayAvailableWafRuleSetsResult": {
        "description": "Response for ApplicationGatewayAvailableWafRuleSets API service call.",
        "properties": {
          "value": {
            "description": "The list of application gateway rule sets.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayFirewallRuleSet" },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayBackendAddress": {
        "description": "Backend address of an application gateway.",
        "properties": {
          "fqdn": { "description": "Fully qualified domain name (FQDN).", "type": "string" },
          "ipAddress": { "description": "IP address", "type": "string" }
        }
      },
      "ApplicationGatewayBackendAddressPool": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Backend Address Pool of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the backend address pool that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayBackendAddressPoolPropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayBackendAddressPoolPropertiesFormat": {
        "description": "Properties of Backend Address Pool of an application gateway.",
        "properties": {
          "backendAddresses": {
            "description": "Backend addresses",
            "items": {
              "description": "Backend address of an application gateway.",
              "properties": {
                "fqdn": { "description": "Fully qualified domain name (FQDN).", "type": "string" },
                "ipAddress": { "description": "IP address", "type": "string" }
              }
            },
            "type": "array"
          },
          "backendIPConfigurations": {
            "description": "Collection of references to IPs defined in network interfaces.",
            "items": { "$ref": "./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration" },
            "type": "array"
          },
          "provisioningState": {
            "description": "Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          }
        }
      },
      "ApplicationGatewayBackendHealth": {
        "description": "List of ApplicationGatewayBackendHealthPool resources.",
        "properties": {
          "backendAddressPools": {
            "items": { "$ref": "#/components/schemas/ApplicationGatewayBackendHealthPool" },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayBackendHealthHttpSettings": {
        "description": "Application gateway BackendHealthHttp settings.",
        "properties": {
          "backendHttpSettings": { "$ref": "#/components/schemas/ApplicationGatewayBackendHttpSettings" },
          "servers": {
            "description": "List of ApplicationGatewayBackendHealthServer resources.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayBackendHealthServer" },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayBackendHealthPool": {
        "description": "Application gateway BackendHealth pool.",
        "properties": {
          "backendAddressPool": { "$ref": "#/components/schemas/ApplicationGatewayBackendAddressPool" },
          "backendHttpSettingsCollection": {
            "description": "List of ApplicationGatewayBackendHealthHttpSettings resources.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayBackendHealthHttpSettings" },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayBackendHealthServer": {
        "description": "Application gateway backendhealth http settings.",
        "properties": {
          "address": { "description": "IP address or FQDN of backend server.", "type": "string" },
          "health": {
            "description": "Health of backend server.",
            "enum": ["Unknown", "Up", "Down", "Partial", "Draining"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayBackendHealthServerHealth" }
          },
          "healthProbeLog": { "description": "Health Probe Log.", "type": "string" },
          "ipConfiguration": {
            "allOf": [
              {
                "description": "Reference to another subresource.",
                "properties": { "id": { "description": "Resource ID.", "type": "string" } },
                "x-ms-azure-resource": true
              }
            ],
            "description": "IPConfiguration in a network interface.",
            "properties": {
              "etag": {
                "description": "A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "name": {
                "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                "type": "string"
              },
              "properties": { "$ref": "#/components/schemas/NetworkInterfaceIPConfigurationPropertiesFormat" }
            }
          }
        }
      },
      "ApplicationGatewayBackendHttpSettings": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Backend address pool settings of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the backend http settings that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayBackendHttpSettingsPropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayBackendHttpSettingsPropertiesFormat": {
        "description": "Properties of Backend address pool settings of an application gateway.",
        "properties": {
          "affinityCookieName": { "description": "Cookie name to use for the affinity cookie.", "type": "string" },
          "authenticationCertificates": {
            "description": "Array of references to application gateway authentication certificates.",
            "items": {
              "description": "Reference to another subresource.",
              "properties": { "id": { "description": "Resource ID.", "type": "string" } },
              "x-ms-azure-resource": true
            },
            "type": "array"
          },
          "connectionDraining": { "$ref": "#/components/schemas/ApplicationGatewayConnectionDraining" },
          "cookieBasedAffinity": {
            "description": "Cookie based affinity.",
            "enum": ["Enabled", "Disabled"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayCookieBasedAffinity" }
          },
          "hostName": { "description": "Host header to be sent to the backend servers.", "type": "string" },
          "path": {
            "description": "Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.",
            "type": "string"
          },
          "pickHostNameFromBackendAddress": {
            "description": "Whether to pick host header should be picked from the host name of the backend server. Default value is false.",
            "type": "boolean"
          },
          "port": { "description": "The destination port on the backend.", "format": "int32", "type": "integer" },
          "probe": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "probeEnabled": { "description": "Whether the probe is enabled. Default value is false.", "type": "boolean" },
          "protocol": {
            "description": "The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.",
            "enum": ["Http", "Https"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayProtocol" }
          },
          "provisioningState": {
            "description": "Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "requestTimeout": {
            "description": "Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.",
            "format": "int32",
            "type": "integer"
          },
          "trustedRootCertificates": {
            "description": "Array of references to application gateway trusted root certificates.",
            "items": {
              "description": "Reference to another subresource.",
              "properties": { "id": { "description": "Resource ID.", "type": "string" } },
              "x-ms-azure-resource": true
            },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayConnectionDraining": {
        "description": "Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.",
        "properties": {
          "drainTimeoutInSec": {
            "description": "The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "format": "int32",
            "maximum": 3600,
            "minimum": 1,
            "type": "integer"
          },
          "enabled": { "description": "Whether connection draining is enabled or not.", "type": "boolean" }
        },
        "required": ["enabled", "drainTimeoutInSec"]
      },
      "ApplicationGatewayCustomError": {
        "description": "Customer error of an application gateway.",
        "properties": {
          "customErrorPageUrl": {
            "description": "Error page URL of the application gateway customer error.",
            "type": "string"
          },
          "statusCode": {
            "description": "Status code of the application gateway customer error.",
            "enum": ["HttpStatus403", "HttpStatus502"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayCustomErrorStatusCode" }
          }
        }
      },
      "ApplicationGatewayFirewallDisabledRuleGroup": {
        "description": "Allows to disable rules within a rule group or an entire rule group.",
        "properties": {
          "ruleGroupName": { "description": "The name of the rule group that will be disabled.", "type": "string" },
          "rules": {
            "description": "The list of rules that will be disabled. If null, all rules of the rule group will be disabled.",
            "items": { "format": "int32", "type": "integer", "nullable": false },
            "type": "array"
          }
        },
        "required": ["ruleGroupName"]
      },
      "ApplicationGatewayFirewallExclusion": {
        "description": "Allow to exclude some variable satisfy the condition for the WAF check",
        "properties": {
          "matchVariable": { "description": "The variable to be excluded.", "type": "string" },
          "selector": {
            "description": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.",
            "type": "string"
          },
          "selectorMatchOperator": {
            "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.",
            "type": "string"
          }
        },
        "required": ["matchVariable", "selectorMatchOperator", "selector"]
      },
      "ApplicationGatewayFirewallRule": {
        "description": "A web application firewall rule.",
        "properties": {
          "description": { "description": "The description of the web application firewall rule.", "type": "string" },
          "ruleId": {
            "description": "The identifier of the web application firewall rule.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": ["ruleId"]
      },
      "ApplicationGatewayFirewallRuleGroup": {
        "description": "A web application firewall rule group.",
        "properties": {
          "description": {
            "description": "The description of the web application firewall rule group.",
            "type": "string"
          },
          "ruleGroupName": { "description": "The name of the web application firewall rule group.", "type": "string" },
          "rules": {
            "description": "The rules of the web application firewall rule group.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayFirewallRule" },
            "type": "array"
          }
        },
        "required": ["ruleGroupName", "rules"]
      },
      "ApplicationGatewayFirewallRuleSet": {
        "allOf": [
          {
            "description": "Common resource representation.",
            "properties": {
              "id": { "description": "Resource ID.", "type": "string" },
              "location": { "description": "Resource location.", "type": "string" },
              "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
              "tags": {
                "additionalProperties": { "type": "string" },
                "description": "Resource tags.",
                "type": "object"
              },
              "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
            },
            "x-ms-azure-resource": true
          }
        ],
        "description": "A web application firewall rule set.",
        "properties": {
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayFirewallRuleSetPropertiesFormat" }
        }
      },
      "ApplicationGatewayFirewallRuleSetPropertiesFormat": {
        "description": "Properties of the web application firewall rule set.",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state of the web application firewall rule set.",
            "type": "string"
          },
          "ruleGroups": {
            "description": "The rule groups of the web application firewall rule set.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayFirewallRuleGroup" },
            "type": "array"
          },
          "ruleSetType": { "description": "The type of the web application firewall rule set.", "type": "string" },
          "ruleSetVersion": {
            "description": "The version of the web application firewall rule set type.",
            "type": "string"
          }
        },
        "required": ["ruleSetType", "ruleSetVersion", "ruleGroups"]
      },
      "ApplicationGatewayFrontendIPConfiguration": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Frontend IP configuration of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the frontend IP configuration that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayFrontendIPConfigurationPropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayFrontendIPConfigurationPropertiesFormat": {
        "description": "Properties of Frontend IP configuration of an application gateway.",
        "properties": {
          "privateIPAddress": {
            "description": "PrivateIPAddress of the network interface IP Configuration.",
            "type": "string"
          },
          "privateIPAllocationMethod": {
            "description": "PrivateIP allocation method.",
            "enum": ["Static", "Dynamic"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "IPAllocationMethod" }
          },
          "provisioningState": {
            "description": "Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "publicIPAddress": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "subnet": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        }
      },
      "ApplicationGatewayFrontendPort": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Frontend port of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the frontend port that is unique within an Application Gateway",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayFrontendPortPropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayFrontendPortPropertiesFormat": {
        "description": "Properties of Frontend port of an application gateway.",
        "properties": {
          "port": { "description": "Frontend port", "format": "int32", "type": "integer" },
          "provisioningState": {
            "description": "Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          }
        }
      },
      "ApplicationGatewayHeaderConfiguration": {
        "description": "Header configuration of the Actions set in Application Gateway.",
        "properties": {
          "headerName": { "description": "Header name of the header configuration", "type": "string" },
          "headerValue": { "description": "Header value of the header configuration", "type": "string" }
        }
      },
      "ApplicationGatewayHttpListener": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Http listener of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the HTTP listener that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayHttpListenerPropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayHttpListenerPropertiesFormat": {
        "description": "Properties of HTTP listener of an application gateway.",
        "properties": {
          "customErrorConfigurations": {
            "description": "Custom error configurations of the HTTP listener.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayCustomError" },
            "type": "array"
          },
          "frontendIPConfiguration": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "frontendPort": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "hostName": { "description": "Host name of HTTP listener.", "type": "string" },
          "protocol": {
            "description": "Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.",
            "enum": ["Http", "Https"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayProtocol" }
          },
          "provisioningState": {
            "description": "Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "requireServerNameIndication": {
            "description": "Applicable only if protocol is https. Enables SNI for multi-hosting.",
            "type": "boolean"
          },
          "sslCertificate": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        }
      },
      "ApplicationGatewayIPConfiguration": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the IP configuration that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayIPConfigurationPropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayIPConfigurationPropertiesFormat": {
        "description": "Properties of IP configuration of an application gateway.",
        "properties": {
          "provisioningState": {
            "description": "Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "subnet": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        }
      },
      "ApplicationGatewayListResult": {
        "description": "Response for ListApplicationGateways API service call.",
        "properties": {
          "nextLink": { "description": "URL to get the next set of results.", "type": "string" },
          "value": {
            "description": "List of an application gateways in a resource group.",
            "items": { "$ref": "#/components/schemas/ApplicationGateway" },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayPathRule": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Path rule of URL path map of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the path rule that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayPathRulePropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayPathRulePropertiesFormat": {
        "description": "Properties of path rule of an application gateway.",
        "properties": {
          "backendAddressPool": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "backendHttpSettings": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "paths": { "description": "Path rules of URL path map.", "items": { "type": "string" }, "type": "array" },
          "provisioningState": {
            "description": "Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "redirectConfiguration": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "rewriteRuleSet": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        }
      },
      "ApplicationGatewayProbe": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Probe of the application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the probe that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayProbePropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayProbeHealthResponseMatch": {
        "description": "Application gateway probe health response match",
        "properties": {
          "body": {
            "description": "Body that must be contained in the health response. Default value is empty.",
            "type": "string"
          },
          "statusCodes": {
            "description": "Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.",
            "items": { "type": "string" },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayProbePropertiesFormat": {
        "description": "Properties of probe of an application gateway.",
        "properties": {
          "host": { "description": "Host name to send the probe to.", "type": "string" },
          "interval": {
            "description": "The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.",
            "format": "int32",
            "type": "integer"
          },
          "match": { "$ref": "#/components/schemas/ApplicationGatewayProbeHealthResponseMatch" },
          "minServers": {
            "description": "Minimum number of servers that are always marked healthy. Default value is 0.",
            "format": "int32",
            "type": "integer"
          },
          "path": {
            "description": "Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>",
            "type": "string"
          },
          "pickHostNameFromBackendHttpSettings": {
            "description": "Whether the host header should be picked from the backend http settings. Default value is false.",
            "type": "boolean"
          },
          "protocol": {
            "description": "The protocol used for the probe. Possible values are 'Http' and 'Https'.",
            "enum": ["Http", "Https"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayProtocol" }
          },
          "provisioningState": {
            "description": "Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "timeout": {
            "description": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.",
            "format": "int32",
            "type": "integer"
          },
          "unhealthyThreshold": {
            "description": "The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.",
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ApplicationGatewayPropertiesFormat": {
        "description": "Properties of the application gateway.",
        "properties": {
          "authenticationCertificates": {
            "description": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayAuthenticationCertificate" },
            "type": "array"
          },
          "autoscaleConfiguration": { "$ref": "#/components/schemas/ApplicationGatewayAutoscaleConfiguration" },
          "backendAddressPools": {
            "description": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayBackendAddressPool" },
            "type": "array"
          },
          "backendHttpSettingsCollection": {
            "description": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayBackendHttpSettings" },
            "type": "array"
          },
          "customErrorConfigurations": {
            "description": "Custom error configurations of the application gateway resource.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayCustomError" },
            "type": "array"
          },
          "enableFips": {
            "description": "Whether FIPS is enabled on the application gateway resource.",
            "type": "boolean"
          },
          "enableHttp2": {
            "description": "Whether HTTP2 is enabled on the application gateway resource.",
            "type": "boolean"
          },
          "firewallPolicy": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "frontendIPConfigurations": {
            "description": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayFrontendIPConfiguration" },
            "type": "array"
          },
          "frontendPorts": {
            "description": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayFrontendPort" },
            "type": "array"
          },
          "gatewayIPConfigurations": {
            "description": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayIPConfiguration" },
            "type": "array"
          },
          "httpListeners": {
            "description": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayHttpListener" },
            "type": "array"
          },
          "operationalState": {
            "description": "Operational state of the application gateway resource.",
            "enum": ["Stopped", "Starting", "Running", "Stopping"],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayOperationalState" }
          },
          "probes": {
            "description": "Probes of the application gateway resource.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayProbe" },
            "type": "array"
          },
          "provisioningState": {
            "description": "Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "redirectConfigurations": {
            "description": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayRedirectConfiguration" },
            "type": "array"
          },
          "requestRoutingRules": {
            "description": "Request routing rules of the application gateway resource.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayRequestRoutingRule" },
            "type": "array"
          },
          "resourceGuid": {
            "description": "Resource GUID property of the application gateway resource.",
            "type": "string"
          },
          "rewriteRuleSets": {
            "description": "Rewrite rules for the application gateway resource.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayRewriteRuleSet" },
            "type": "array"
          },
          "sku": { "$ref": "#/components/schemas/ApplicationGatewaySku" },
          "sslCertificates": {
            "description": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewaySslCertificate" },
            "type": "array"
          },
          "sslPolicy": { "$ref": "#/components/schemas/ApplicationGatewaySslPolicy" },
          "trustedRootCertificates": {
            "description": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayTrustedRootCertificate" },
            "type": "array"
          },
          "urlPathMaps": {
            "description": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayUrlPathMap" },
            "type": "array"
          },
          "webApplicationFirewallConfiguration": {
            "$ref": "#/components/schemas/ApplicationGatewayWebApplicationFirewallConfiguration"
          }
        }
      },
      "ApplicationGatewayRedirectConfiguration": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Redirect configuration of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the redirect configuration that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayRedirectConfigurationPropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayRedirectConfigurationPropertiesFormat": {
        "description": "Properties of redirect configuration of the application gateway.",
        "properties": {
          "includePath": { "description": "Include path in the redirected url.", "type": "boolean" },
          "includeQueryString": { "description": "Include query string in the redirected url.", "type": "boolean" },
          "pathRules": {
            "description": "Path rules specifying redirect configuration.",
            "items": {
              "description": "Reference to another subresource.",
              "properties": { "id": { "description": "Resource ID.", "type": "string" } },
              "x-ms-azure-resource": true
            },
            "type": "array"
          },
          "redirectType": { "$ref": "#/components/schemas/RedirectTypeEnum" },
          "requestRoutingRules": {
            "description": "Request routing specifying redirect configuration.",
            "items": {
              "description": "Reference to another subresource.",
              "properties": { "id": { "description": "Resource ID.", "type": "string" } },
              "x-ms-azure-resource": true
            },
            "type": "array"
          },
          "targetListener": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "targetUrl": { "description": "Url to redirect the request to.", "type": "string" },
          "urlPathMaps": {
            "description": "Url path maps specifying default redirect configuration.",
            "items": {
              "description": "Reference to another subresource.",
              "properties": { "id": { "description": "Resource ID.", "type": "string" } },
              "x-ms-azure-resource": true
            },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayRequestRoutingRule": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Request routing rule of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the request routing rule that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayRequestRoutingRulePropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayRequestRoutingRulePropertiesFormat": {
        "description": "Properties of request routing rule of the application gateway.",
        "properties": {
          "backendAddressPool": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "backendHttpSettings": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "httpListener": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "provisioningState": {
            "description": "Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "redirectConfiguration": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "rewriteRuleSet": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "ruleType": {
            "description": "Rule type.",
            "enum": ["Basic", "PathBasedRouting"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayRequestRoutingRuleType" }
          },
          "urlPathMap": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        }
      },
      "ApplicationGatewayRewriteRule": {
        "description": "Rewrite rule of an application gateway.",
        "properties": {
          "actionSet": { "$ref": "#/components/schemas/ApplicationGatewayRewriteRuleActionSet" },
          "conditions": {
            "description": "Conditions based on which the action set execution will be evaluated.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayRewriteRuleCondition" },
            "type": "array"
          },
          "name": {
            "description": "Name of the rewrite rule that is unique within an Application Gateway.",
            "type": "string"
          },
          "ruleSequence": {
            "description": "Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.",
            "type": "integer"
          }
        }
      },
      "ApplicationGatewayRewriteRuleActionSet": {
        "description": "Set of actions in the Rewrite Rule in Application Gateway.",
        "properties": {
          "requestHeaderConfigurations": {
            "description": "Request Header Actions in the Action Set",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayHeaderConfiguration" },
            "type": "array"
          },
          "responseHeaderConfigurations": {
            "description": "Response Header Actions in the Action Set",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayHeaderConfiguration" },
            "type": "array"
          }
        }
      },
      "ApplicationGatewayRewriteRuleCondition": {
        "description": "Set of conditions in the Rewrite Rule in Application Gateway.",
        "properties": {
          "ignoreCase": {
            "description": "Setting this paramter to truth value with force the pattern to do a case in-sensitive comparison.",
            "type": "boolean"
          },
          "negate": {
            "description": "Setting this value as truth will force to check the negation of the condition given by the user.",
            "type": "boolean"
          },
          "pattern": {
            "description": "The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition",
            "type": "string"
          },
          "variable": { "description": "The condition parameter of the RewriteRuleCondition.", "type": "string" }
        }
      },
      "ApplicationGatewayRewriteRuleSet": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Rewrite rule set of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the rewrite rule set that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayRewriteRuleSetPropertiesFormat" }
        }
      },
      "ApplicationGatewayRewriteRuleSetPropertiesFormat": {
        "description": "Properties of rewrite rule set of the application gateway.",
        "properties": {
          "provisioningState": {
            "description": "Provisioning state of the rewrite rule set resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "readOnly": true,
            "type": "string"
          },
          "rewriteRules": {
            "description": "Rewrite rules in the rewrite rule set.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayRewriteRule" },
            "type": "array"
          }
        }
      },
      "ApplicationGatewaySku": {
        "description": "SKU of an application gateway",
        "properties": {
          "capacity": {
            "description": "Capacity (instance count) of an application gateway.",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Name of an application gateway SKU.",
            "enum": [
              "Standard_Small",
              "Standard_Medium",
              "Standard_Large",
              "WAF_Medium",
              "WAF_Large",
              "Standard_v2",
              "WAF_v2"
            ],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewaySkuName" }
          },
          "tier": {
            "description": "Tier of an application gateway.",
            "enum": ["Standard", "WAF", "Standard_v2", "WAF_v2"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayTier" }
          }
        }
      },
      "ApplicationGatewaySslCertificate": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "SSL certificates of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the SSL certificate that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewaySslCertificatePropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewaySslCertificatePropertiesFormat": {
        "description": "Properties of SSL certificates of an application gateway.",
        "properties": {
          "data": {
            "description": "Base-64 encoded pfx certificate. Only applicable in PUT Request.",
            "type": "string"
          },
          "keyVaultSecretId": {
            "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.",
            "type": "string"
          },
          "password": {
            "description": "Password for the pfx file specified in data. Only applicable in PUT request.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "publicCertData": {
            "description": "Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.",
            "type": "string"
          }
        }
      },
      "ApplicationGatewaySslPolicy": {
        "description": "Application Gateway Ssl policy.",
        "properties": {
          "cipherSuites": {
            "description": "Ssl cipher suites to be enabled in the specified order to application gateway.",
            "items": { "$ref": "#/components/schemas/CipherSuitesEnum" },
            "type": "array"
          },
          "disabledSslProtocols": {
            "description": "Ssl protocols to be disabled on application gateway.",
            "items": { "$ref": "#/components/schemas/ProtocolsEnum" },
            "type": "array"
          },
          "minProtocolVersion": { "$ref": "#/components/schemas/ProtocolsEnum" },
          "policyName": { "$ref": "#/components/schemas/PolicyNameEnum" },
          "policyType": {
            "description": "Type of Ssl Policy",
            "enum": ["Predefined", "Custom"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewaySslPolicyType" }
          }
        }
      },
      "ApplicationGatewaySslPredefinedPolicy": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "An Ssl predefined policy",
        "properties": {
          "name": { "description": "Name of the Ssl predefined policy.", "type": "string" },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewaySslPredefinedPolicyPropertiesFormat" }
        }
      },
      "ApplicationGatewaySslPredefinedPolicyPropertiesFormat": {
        "description": "Properties of ApplicationGatewaySslPredefinedPolicy",
        "properties": {
          "cipherSuites": {
            "description": "Ssl cipher suites to be enabled in the specified order for application gateway.",
            "items": { "$ref": "#/components/schemas/CipherSuitesEnum" },
            "type": "array"
          },
          "minProtocolVersion": { "$ref": "#/components/schemas/ProtocolsEnum" }
        }
      },
      "ApplicationGatewayTrustedRootCertificate": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Trusted Root certificates of an application gateway.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the trusted root certificate that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayTrustedRootCertificatePropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayTrustedRootCertificatePropertiesFormat": {
        "description": "Trusted Root certificates properties of an application gateway.",
        "properties": {
          "data": { "description": "Certificate public data.", "type": "string" },
          "keyVaultSecretId": {
            "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          }
        }
      },
      "ApplicationGatewayUrlPathMap": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Name of the URL path map that is unique within an Application Gateway.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/ApplicationGatewayUrlPathMapPropertiesFormat" },
          "type": { "description": "Type of the resource.", "type": "string" }
        }
      },
      "ApplicationGatewayUrlPathMapPropertiesFormat": {
        "description": "Properties of UrlPathMap of the application gateway.",
        "properties": {
          "defaultBackendAddressPool": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "defaultBackendHttpSettings": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "defaultRedirectConfiguration": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "defaultRewriteRuleSet": {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          },
          "pathRules": {
            "description": "Path rule of URL path map resource.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayPathRule" },
            "type": "array"
          },
          "provisioningState": {
            "description": "Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          }
        }
      },
      "ApplicationGatewayWebApplicationFirewallConfiguration": {
        "description": "Application gateway web application firewall configuration.",
        "properties": {
          "disabledRuleGroups": {
            "description": "The disabled rule groups.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayFirewallDisabledRuleGroup" },
            "type": "array"
          },
          "enabled": { "description": "Whether the web application firewall is enabled or not.", "type": "boolean" },
          "exclusions": {
            "description": "The exclusion list.",
            "items": { "$ref": "#/components/schemas/ApplicationGatewayFirewallExclusion" },
            "type": "array"
          },
          "fileUploadLimitInMb": {
            "description": "Maximum file upload size in Mb for WAF.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "format": "int32",
            "maximum": 500,
            "minimum": 0,
            "type": "integer"
          },
          "firewallMode": {
            "description": "Web application firewall mode.",
            "enum": ["Detection", "Prevention"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayFirewallMode" }
          },
          "maxRequestBodySize": {
            "description": "Maximum request body size for WAF.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "format": "int32",
            "maximum": 128,
            "minimum": 8,
            "type": "integer"
          },
          "maxRequestBodySizeInKb": {
            "description": "Maximum request body size in Kb for WAF.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "format": "int32",
            "maximum": 128,
            "minimum": 8,
            "type": "integer"
          },
          "requestBodyCheck": { "description": "Whether allow WAF to check request Body.", "type": "boolean" },
          "ruleSetType": {
            "description": "The type of the web application firewall rule set. Possible values are: 'OWASP'.",
            "type": "string"
          },
          "ruleSetVersion": { "description": "The version of the rule set type.", "type": "string" }
        },
        "required": ["enabled", "firewallMode", "ruleSetType", "ruleSetVersion"]
      },
      "CipherSuitesEnum": {
        "description": "Ssl cipher suites enums.",
        "enum": [
          "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
          "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
          "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
          "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
          "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
          "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
          "TLS_RSA_WITH_AES_256_GCM_SHA384",
          "TLS_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_RSA_WITH_AES_256_CBC_SHA256",
          "TLS_RSA_WITH_AES_128_CBC_SHA256",
          "TLS_RSA_WITH_AES_256_CBC_SHA",
          "TLS_RSA_WITH_AES_128_CBC_SHA",
          "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
          "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
          "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
          "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
          "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",
          "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256",
          "TLS_DHE_DSS_WITH_AES_256_CBC_SHA",
          "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",
          "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
          "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA",
          "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        ],
        "type": "string",
        "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewaySslCipherSuite" }
      },
      "NetworkInterfaceIPConfigurationPropertiesFormat": {},
      "PolicyNameEnum": {
        "description": "Ssl predefined policy name enums.",
        "enum": ["AppGwSslPolicy20150501", "AppGwSslPolicy20170401", "AppGwSslPolicy20170401S"],
        "type": "string",
        "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewaySslPolicyName" }
      },
      "ProtocolsEnum": {
        "description": "Ssl protocol enums.",
        "enum": ["TLSv1_0", "TLSv1_1", "TLSv1_2"],
        "type": "string",
        "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewaySslProtocol" }
      },
      "RedirectTypeEnum": {
        "enum": ["Permanent", "Found", "SeeOther", "Temporary"],
        "type": "string",
        "x-ms-enum": { "modelAsString": true, "name": "ApplicationGatewayRedirectType" }
      }
    }
  }
}
