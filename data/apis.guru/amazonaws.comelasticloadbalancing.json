{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>Elastic Load Balancing</fullname> <p>A load balancer can distribute incoming traffic across your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered instances and ensures that it routes traffic only to healthy instances. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer and a protocol and port number for connections from the load balancer to the instances.</p> <p>Elastic Load Balancing supports three types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers. You can select a load balancer based on your application needs. For more information, see the <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2012-06-01 API, which supports Classic Load Balancers. The 2015-12-01 API supports Application Load Balancers and Network Load Balancers.</p> <p>To get started, create a load balancer with one or more listeners using <a>CreateLoadBalancer</a>. Register your instances with the load balancer using <a>RegisterInstancesWithLoadBalancer</a>.</p> <p>All Elastic Load Balancing operations are <i>idempotent</i>, which means that they complete at most one time. If you repeat an operation, it succeeds with a 200 OK response code.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Elastic Load Balancing",
    "version": "2012-06-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticloadbalancing-2012-06-01.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "elasticloadbalancing"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/elasticloadbalancing/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#Action=AddTags": {
      "get": {
        "description": "<p>Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.</p> <p>Each tag consists of a key and an optional value. If a tag with the same key is already associated with the load balancer, <code>AddTags</code> updates its value.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html\">Tag Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET AddTags",
        "parameters": [
          {
            "description": "The name of the load balancer. You can specify one load balancer only.",
            "in": "query",
            "name": "LoadBalancerNames",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The tags.",
            "in": "query",
            "name": "Tags",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["AddTags"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AddTagsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "482": {
            "description": "DuplicateTagKeysException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateTagKeysException" } } }
          }
        },
        "x-aws-operation-name": "AddTags"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.</p> <p>Each tag consists of a key and an optional value. If a tag with the same key is already associated with the load balancer, <code>AddTags</code> updates its value.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html\">Tag Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST AddTags",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["AddTags"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerNames": {
                    "description": "The name of the load balancer. You can specify one load balancer only.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Tags": { "description": "The tags.", "type": "array", "items": { "type": "string" } }
                },
                "required": ["LoadBalancerNames", "Tags"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AddTagsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "482": {
            "description": "DuplicateTagKeysException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateTagKeysException" } } }
          }
        },
        "x-aws-operation-name": "AddTags"
      }
    },
    "/#Action=ApplySecurityGroupsToLoadBalancer": {
      "get": {
        "description": "<p>Associates one or more security groups with your load balancer in a virtual private cloud (VPC). The specified security groups override the previously associated security groups.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-groups.html#elb-vpc-security-groups\">Security Groups for Load Balancers in a VPC</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET ApplySecurityGroupsToLoadBalancer",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The IDs of the security groups to associate with the load balancer. Note that you cannot specify the name of the security group.",
            "in": "query",
            "name": "SecurityGroups",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ApplySecurityGroupsToLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ApplySecurityGroupsToLoadBalancerOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "482": {
            "description": "InvalidSecurityGroupException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSecurityGroupException" } } }
          }
        },
        "x-aws-operation-name": "ApplySecurityGroupsToLoadBalancer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Associates one or more security groups with your load balancer in a virtual private cloud (VPC). The specified security groups override the previously associated security groups.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-groups.html#elb-vpc-security-groups\">Security Groups for Load Balancers in a VPC</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST ApplySecurityGroupsToLoadBalancer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ApplySecurityGroupsToLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "SecurityGroups": {
                    "description": "The IDs of the security groups to associate with the load balancer. Note that you cannot specify the name of the security group.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName", "SecurityGroups"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ApplySecurityGroupsToLoadBalancerOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "482": {
            "description": "InvalidSecurityGroupException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSecurityGroupException" } } }
          }
        },
        "x-aws-operation-name": "ApplySecurityGroupsToLoadBalancer"
      }
    },
    "/#Action=AttachLoadBalancerToSubnets": {
      "get": {
        "description": "<p>Adds one or more subnets to the set of configured subnets for the specified load balancer.</p> <p>The load balancer evenly distributes requests across all registered subnets. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-manage-subnets.html\">Add or Remove Subnets for Your Load Balancer in a VPC</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET AttachLoadBalancerToSubnets",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The IDs of the subnets to add. You can add only one subnet per Availability Zone.",
            "in": "query",
            "name": "Subnets",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AttachLoadBalancerToSubnets"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/AttachLoadBalancerToSubnetsOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "482": {
            "description": "SubnetNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SubnetNotFoundException" } } }
          },
          "483": {
            "description": "InvalidSubnetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSubnetException" } } }
          }
        },
        "x-aws-operation-name": "AttachLoadBalancerToSubnets"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds one or more subnets to the set of configured subnets for the specified load balancer.</p> <p>The load balancer evenly distributes requests across all registered subnets. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-manage-subnets.html\">Add or Remove Subnets for Your Load Balancer in a VPC</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST AttachLoadBalancerToSubnets",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AttachLoadBalancerToSubnets"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "Subnets": {
                    "description": "The IDs of the subnets to add. You can add only one subnet per Availability Zone.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName", "Subnets"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/AttachLoadBalancerToSubnetsOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "482": {
            "description": "SubnetNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SubnetNotFoundException" } } }
          },
          "483": {
            "description": "InvalidSubnetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSubnetException" } } }
          }
        },
        "x-aws-operation-name": "AttachLoadBalancerToSubnets"
      }
    },
    "/#Action=ConfigureHealthCheck": {
      "get": {
        "description": "<p>Specifies the health check settings to use when evaluating the health state of your EC2 instances.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-healthchecks.html\">Configure Health Checks for Your Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET ConfigureHealthCheck",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Information about a health check.\n<p>The instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535.</p> <p>TCP is the default, specified as a TCP: port pair, for example \"TCP:5000\". In this case, a health check simply attempts to open a TCP connection to the instance on the specified port. Failure to connect within the configured timeout is considered unhealthy.</p> <p>SSL is also specified as SSL: port pair, for example, SSL:5000.</p> <p>For HTTP/HTTPS, you must include a ping path in the string. HTTP is specified as a HTTP:port;/;PathToPing; grouping, for example \"HTTP:80/weather/us/wa/seattle\". In this case, a HTTP GET request is issued to the instance on the given port and path. Any answer other than \"200 OK\" within the timeout period is considered unhealthy.</p> <p>The total length of the HTTP ping target must be 1024 16-bit Unicode characters or less.</p>",
            "in": "query",
            "name": "HealthCheck.Target",
            "schema": { "type": "string" }
          },
          {
            "description": "Information about a health check.\nThe approximate interval, in seconds, between health checks of an individual instance.",
            "in": "query",
            "name": "HealthCheck.Interval",
            "schema": { "type": "string" }
          },
          {
            "description": "Information about a health check.\n<p>The amount of time, in seconds, during which no response means a failed health check.</p> <p>This value must be less than the <code>Interval</code> value.</p>",
            "in": "query",
            "name": "HealthCheck.Timeout",
            "schema": { "type": "string" }
          },
          {
            "description": "Information about a health check.\nThe number of consecutive health check failures required before moving the instance to the <code>Unhealthy</code> state.",
            "in": "query",
            "name": "HealthCheck.UnhealthyThreshold",
            "schema": { "type": "string" }
          },
          {
            "description": "Information about a health check.\nThe number of consecutive health checks successes required before moving the instance to the <code>Healthy</code> state.",
            "in": "query",
            "name": "HealthCheck.HealthyThreshold",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ConfigureHealthCheck"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigureHealthCheckOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "ConfigureHealthCheck"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Specifies the health check settings to use when evaluating the health state of your EC2 instances.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-healthchecks.html\">Configure Health Checks for Your Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST ConfigureHealthCheck",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ConfigureHealthCheck"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "HealthCheck.Target": {
                    "description": "Information about a health check.\n<p>The instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535.</p> <p>TCP is the default, specified as a TCP: port pair, for example \"TCP:5000\". In this case, a health check simply attempts to open a TCP connection to the instance on the specified port. Failure to connect within the configured timeout is considered unhealthy.</p> <p>SSL is also specified as SSL: port pair, for example, SSL:5000.</p> <p>For HTTP/HTTPS, you must include a ping path in the string. HTTP is specified as a HTTP:port;/;PathToPing; grouping, for example \"HTTP:80/weather/us/wa/seattle\". In this case, a HTTP GET request is issued to the instance on the given port and path. Any answer other than \"200 OK\" within the timeout period is considered unhealthy.</p> <p>The total length of the HTTP ping target must be 1024 16-bit Unicode characters or less.</p>",
                    "type": "string"
                  },
                  "HealthCheck.Interval": {
                    "description": "Information about a health check.\nThe approximate interval, in seconds, between health checks of an individual instance.",
                    "type": "string"
                  },
                  "HealthCheck.Timeout": {
                    "description": "Information about a health check.\n<p>The amount of time, in seconds, during which no response means a failed health check.</p> <p>This value must be less than the <code>Interval</code> value.</p>",
                    "type": "string"
                  },
                  "HealthCheck.UnhealthyThreshold": {
                    "description": "Information about a health check.\nThe number of consecutive health check failures required before moving the instance to the <code>Unhealthy</code> state.",
                    "type": "string"
                  },
                  "HealthCheck.HealthyThreshold": {
                    "description": "Information about a health check.\nThe number of consecutive health checks successes required before moving the instance to the <code>Healthy</code> state.",
                    "type": "string"
                  }
                },
                "required": ["LoadBalancerName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigureHealthCheckOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "ConfigureHealthCheck"
      }
    },
    "/#Action=CreateAppCookieStickinessPolicy": {
      "get": {
        "description": "<p>Generates a stickiness policy with sticky session lifetimes that follow that of an application-generated cookie. This policy can be associated only with HTTP/HTTPS listeners.</p> <p>This policy is similar to the policy created by <a>CreateLBCookieStickinessPolicy</a>, except that the lifetime of the special Elastic Load Balancing cookie, <code>AWSELB</code>, follows the lifetime of the application-generated cookie specified in the policy configuration. The load balancer only inserts a new stickiness cookie when the application response includes a new application cookie.</p> <p>If the application cookie is explicitly removed or expires, the session stops being sticky until a new application cookie is issued.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application\">Application-Controlled Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET CreateAppCookieStickinessPolicy",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The name of the application cookie used for stickiness.",
            "in": "query",
            "name": "CookieName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateAppCookieStickinessPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CreateAppCookieStickinessPolicyOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "DuplicatePolicyNameException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicatePolicyNameException" } } }
          },
          "482": {
            "description": "TooManyPoliciesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyPoliciesException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateAppCookieStickinessPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Generates a stickiness policy with sticky session lifetimes that follow that of an application-generated cookie. This policy can be associated only with HTTP/HTTPS listeners.</p> <p>This policy is similar to the policy created by <a>CreateLBCookieStickinessPolicy</a>, except that the lifetime of the special Elastic Load Balancing cookie, <code>AWSELB</code>, follows the lifetime of the application-generated cookie specified in the policy configuration. The load balancer only inserts a new stickiness cookie when the application response includes a new application cookie.</p> <p>If the application cookie is explicitly removed or expires, the session stops being sticky until a new application cookie is issued.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application\">Application-Controlled Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST CreateAppCookieStickinessPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateAppCookieStickinessPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "PolicyName": {
                    "description": "The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.",
                    "type": "string"
                  },
                  "CookieName": {
                    "description": "The name of the application cookie used for stickiness.",
                    "type": "string"
                  }
                },
                "required": ["LoadBalancerName", "PolicyName", "CookieName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CreateAppCookieStickinessPolicyOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "DuplicatePolicyNameException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicatePolicyNameException" } } }
          },
          "482": {
            "description": "TooManyPoliciesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyPoliciesException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateAppCookieStickinessPolicy"
      }
    },
    "/#Action=CreateLBCookieStickinessPolicy": {
      "get": {
        "description": "<p>Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent) or a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.</p> <p>When a load balancer implements this policy, the load balancer uses a special cookie to track the instance for each request. When the load balancer receives a request, it first checks to see if this cookie is present in the request. If so, the load balancer sends the request to the application server specified in the cookie. If not, the load balancer sends the request to a server that is chosen based on the existing load-balancing algorithm.</p> <p>A cookie is inserted into the response for binding subsequent requests from the same user to that server. The validity of the cookie is based on the cookie expiration time, which is specified in the policy configuration.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration\">Duration-Based Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET CreateLBCookieStickinessPolicy",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.",
            "in": "query",
            "name": "CookieExpirationPeriod",
            "required": false,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLBCookieStickinessPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CreateLBCookieStickinessPolicyOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "DuplicatePolicyNameException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicatePolicyNameException" } } }
          },
          "482": {
            "description": "TooManyPoliciesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyPoliciesException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateLBCookieStickinessPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent) or a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.</p> <p>When a load balancer implements this policy, the load balancer uses a special cookie to track the instance for each request. When the load balancer receives a request, it first checks to see if this cookie is present in the request. If so, the load balancer sends the request to the application server specified in the cookie. If not, the load balancer sends the request to a server that is chosen based on the existing load-balancing algorithm.</p> <p>A cookie is inserted into the response for binding subsequent requests from the same user to that server. The validity of the cookie is based on the cookie expiration time, which is specified in the policy configuration.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration\">Duration-Based Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST CreateLBCookieStickinessPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLBCookieStickinessPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "PolicyName": {
                    "description": "The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.",
                    "type": "string"
                  },
                  "CookieExpirationPeriod": {
                    "description": "The time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.",
                    "type": "integer"
                  }
                },
                "required": ["LoadBalancerName", "PolicyName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CreateLBCookieStickinessPolicyOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "DuplicatePolicyNameException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicatePolicyNameException" } } }
          },
          "482": {
            "description": "TooManyPoliciesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyPoliciesException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateLBCookieStickinessPolicy"
      }
    },
    "/#Action=CreateLoadBalancer": {
      "get": {
        "description": "<p>Creates a Classic Load Balancer.</p> <p>You can add listeners, security groups, subnets, and tags when you create your load balancer, or you can add them later using <a>CreateLoadBalancerListeners</a>, <a>ApplySecurityGroupsToLoadBalancer</a>, <a>AttachLoadBalancerToSubnets</a>, and <a>AddTags</a>.</p> <p>To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>You can create up to 20 load balancers per region per account. You can request an increase for the number of load balancers for your account. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html\">Limits for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET CreateLoadBalancer",
        "parameters": [
          {
            "description": "<p>The name of the load balancer.</p> <p>This name must be unique within your set of load balancers for the region, must have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen.</p>",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The listeners.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html\">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
            "in": "query",
            "name": "Listeners",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>One or more Availability Zones from the same region as the load balancer.</p> <p>You must specify at least one Availability Zone.</p> <p>You can add more Availability Zones after you create the load balancer using <a>EnableAvailabilityZonesForLoadBalancer</a>.</p>",
            "in": "query",
            "name": "AvailabilityZones",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The IDs of the subnets in your VPC to attach to the load balancer. Specify one subnet per Availability Zone specified in <code>AvailabilityZones</code>.",
            "in": "query",
            "name": "Subnets",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The IDs of the security groups to assign to the load balancer.",
            "in": "query",
            "name": "SecurityGroups",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>The type of a load balancer. Valid only for load balancers in a VPC.</p> <p>By default, Elastic Load Balancing creates an Internet-facing load balancer with a DNS name that resolves to public IP addresses. For more information about Internet-facing and Internal load balancers, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#load-balancer-scheme\">Load Balancer Scheme</a> in the <i>Elastic Load Balancing User Guide</i>.</p> <p>Specify <code>internal</code> to create a load balancer with a DNS name that resolves to private IP addresses.</p>",
            "in": "query",
            "name": "Scheme",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>A list of tags to assign to the load balancer.</p> <p>For more information about tagging your load balancer, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html\">Tag Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
            "in": "query",
            "name": "Tags",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateAccessPointOutput" } } }
          },
          "480": {
            "description": "DuplicateAccessPointNameException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateAccessPointNameException" } }
            }
          },
          "481": {
            "description": "TooManyAccessPointsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyAccessPointsException" } } }
          },
          "482": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "484": {
            "description": "SubnetNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SubnetNotFoundException" } } }
          },
          "485": {
            "description": "InvalidSubnetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSubnetException" } } }
          },
          "486": {
            "description": "InvalidSecurityGroupException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSecurityGroupException" } } }
          },
          "487": {
            "description": "InvalidSchemeException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSchemeException" } } }
          },
          "488": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "489": {
            "description": "DuplicateTagKeysException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateTagKeysException" } } }
          },
          "490": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          },
          "491": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          }
        },
        "x-aws-operation-name": "CreateLoadBalancer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a Classic Load Balancer.</p> <p>You can add listeners, security groups, subnets, and tags when you create your load balancer, or you can add them later using <a>CreateLoadBalancerListeners</a>, <a>ApplySecurityGroupsToLoadBalancer</a>, <a>AttachLoadBalancerToSubnets</a>, and <a>AddTags</a>.</p> <p>To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>You can create up to 20 load balancers per region per account. You can request an increase for the number of load balancers for your account. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html\">Limits for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST CreateLoadBalancer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": {
                    "description": "<p>The name of the load balancer.</p> <p>This name must be unique within your set of load balancers for the region, must have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen.</p>",
                    "type": "string"
                  },
                  "Listeners": {
                    "description": "<p>The listeners.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html\">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "AvailabilityZones": {
                    "description": "<p>One or more Availability Zones from the same region as the load balancer.</p> <p>You must specify at least one Availability Zone.</p> <p>You can add more Availability Zones after you create the load balancer using <a>EnableAvailabilityZonesForLoadBalancer</a>.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Subnets": {
                    "description": "The IDs of the subnets in your VPC to attach to the load balancer. Specify one subnet per Availability Zone specified in <code>AvailabilityZones</code>.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "SecurityGroups": {
                    "description": "The IDs of the security groups to assign to the load balancer.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Scheme": {
                    "description": "<p>The type of a load balancer. Valid only for load balancers in a VPC.</p> <p>By default, Elastic Load Balancing creates an Internet-facing load balancer with a DNS name that resolves to public IP addresses. For more information about Internet-facing and Internal load balancers, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#load-balancer-scheme\">Load Balancer Scheme</a> in the <i>Elastic Load Balancing User Guide</i>.</p> <p>Specify <code>internal</code> to create a load balancer with a DNS name that resolves to private IP addresses.</p>",
                    "type": "string"
                  },
                  "Tags": {
                    "description": "<p>A list of tags to assign to the load balancer.</p> <p>For more information about tagging your load balancer, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html\">Tag Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName", "Listeners"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateAccessPointOutput" } } }
          },
          "480": {
            "description": "DuplicateAccessPointNameException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateAccessPointNameException" } }
            }
          },
          "481": {
            "description": "TooManyAccessPointsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyAccessPointsException" } } }
          },
          "482": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "484": {
            "description": "SubnetNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SubnetNotFoundException" } } }
          },
          "485": {
            "description": "InvalidSubnetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSubnetException" } } }
          },
          "486": {
            "description": "InvalidSecurityGroupException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSecurityGroupException" } } }
          },
          "487": {
            "description": "InvalidSchemeException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSchemeException" } } }
          },
          "488": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "489": {
            "description": "DuplicateTagKeysException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateTagKeysException" } } }
          },
          "490": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          },
          "491": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          }
        },
        "x-aws-operation-name": "CreateLoadBalancer"
      }
    },
    "/#Action=CreateLoadBalancerListeners": {
      "get": {
        "description": "<p>Creates one or more listeners for the specified load balancer. If a listener with the specified port does not already exist, it is created; otherwise, the properties of the new listener must match the properties of the existing listener.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html\">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET CreateLoadBalancerListeners",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The listeners.",
            "in": "query",
            "name": "Listeners",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLoadBalancerListeners"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateLoadBalancerListenerOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "DuplicateListenerException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateListenerException" } } }
          },
          "482": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "484": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          }
        },
        "x-aws-operation-name": "CreateLoadBalancerListeners"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates one or more listeners for the specified load balancer. If a listener with the specified port does not already exist, it is created; otherwise, the properties of the new listener must match the properties of the existing listener.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html\">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST CreateLoadBalancerListeners",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLoadBalancerListeners"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "Listeners": { "description": "The listeners.", "type": "array", "items": { "type": "string" } }
                },
                "required": ["LoadBalancerName", "Listeners"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateLoadBalancerListenerOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "DuplicateListenerException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateListenerException" } } }
          },
          "482": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "484": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          }
        },
        "x-aws-operation-name": "CreateLoadBalancerListeners"
      }
    },
    "/#Action=CreateLoadBalancerPolicy": {
      "get": {
        "description": "<p>Creates a policy with the specified attributes for the specified load balancer.</p> <p>Policies are settings that are saved for your load balancer and that can be applied to the listener or the application server, depending on the policy type.</p>",
        "operationId": "GET CreateLoadBalancerPolicy",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The name of the load balancer policy to be created. This name must be unique within the set of policies for this load balancer.",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The name of the base policy type. To get the list of policy types, use <a>DescribeLoadBalancerPolicyTypes</a>.",
            "in": "query",
            "name": "PolicyTypeName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The policy attributes.",
            "in": "query",
            "name": "PolicyAttributes",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLoadBalancerPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateLoadBalancerPolicyOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "PolicyTypeNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyTypeNotFoundException" } } }
          },
          "482": {
            "description": "DuplicatePolicyNameException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicatePolicyNameException" } } }
          },
          "483": {
            "description": "TooManyPoliciesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyPoliciesException" } } }
          },
          "484": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateLoadBalancerPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a policy with the specified attributes for the specified load balancer.</p> <p>Policies are settings that are saved for your load balancer and that can be applied to the listener or the application server, depending on the policy type.</p>",
        "operationId": "POST CreateLoadBalancerPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLoadBalancerPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "PolicyName": {
                    "description": "The name of the load balancer policy to be created. This name must be unique within the set of policies for this load balancer.",
                    "type": "string"
                  },
                  "PolicyTypeName": {
                    "description": "The name of the base policy type. To get the list of policy types, use <a>DescribeLoadBalancerPolicyTypes</a>.",
                    "type": "string"
                  },
                  "PolicyAttributes": {
                    "description": "The policy attributes.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName", "PolicyName", "PolicyTypeName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateLoadBalancerPolicyOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "PolicyTypeNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyTypeNotFoundException" } } }
          },
          "482": {
            "description": "DuplicatePolicyNameException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicatePolicyNameException" } } }
          },
          "483": {
            "description": "TooManyPoliciesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyPoliciesException" } } }
          },
          "484": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateLoadBalancerPolicy"
      }
    },
    "/#Action=DeleteLoadBalancer": {
      "get": {
        "description": "<p>Deletes the specified load balancer.</p> <p>If you are attempting to recreate a load balancer, you must reconfigure all settings. The DNS name associated with a deleted load balancer are no longer usable. The name and associated DNS record of the deleted load balancer no longer exist and traffic sent to any of its IP addresses is no longer delivered to your instances.</p> <p>If the load balancer does not exist or has already been deleted, the call to <code>DeleteLoadBalancer</code> still succeeds.</p>",
        "operationId": "GET DeleteLoadBalancer",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteAccessPointOutput" } } }
          }
        },
        "x-aws-operation-name": "DeleteLoadBalancer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified load balancer.</p> <p>If you are attempting to recreate a load balancer, you must reconfigure all settings. The DNS name associated with a deleted load balancer are no longer usable. The name and associated DNS record of the deleted load balancer no longer exist and traffic sent to any of its IP addresses is no longer delivered to your instances.</p> <p>If the load balancer does not exist or has already been deleted, the call to <code>DeleteLoadBalancer</code> still succeeds.</p>",
        "operationId": "POST DeleteLoadBalancer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeleteLoadBalancer" },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteAccessPointOutput" } } }
          }
        },
        "x-aws-operation-name": "DeleteLoadBalancer"
      }
    },
    "/#Action=DeleteLoadBalancerListeners": {
      "get": {
        "description": "Deletes the specified listeners from the specified load balancer.",
        "operationId": "GET DeleteLoadBalancerListeners",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The client port numbers of the listeners.",
            "in": "query",
            "name": "LoadBalancerPorts",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteLoadBalancerListeners"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteLoadBalancerListenerOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DeleteLoadBalancerListeners"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified listeners from the specified load balancer.",
        "operationId": "POST DeleteLoadBalancerListeners",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteLoadBalancerListeners"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "LoadBalancerPorts": {
                    "description": "The client port numbers of the listeners.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName", "LoadBalancerPorts"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteLoadBalancerListenerOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DeleteLoadBalancerListeners"
      }
    },
    "/#Action=DeleteLoadBalancerPolicy": {
      "get": {
        "description": "Deletes the specified policy from the specified load balancer. This policy must not be enabled for any listeners.",
        "operationId": "GET DeleteLoadBalancerPolicy",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The name of the policy.",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteLoadBalancerPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteLoadBalancerPolicyOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "DeleteLoadBalancerPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified policy from the specified load balancer. This policy must not be enabled for any listeners.",
        "operationId": "POST DeleteLoadBalancerPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteLoadBalancerPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "PolicyName": { "description": "The name of the policy.", "type": "string" }
                },
                "required": ["LoadBalancerName", "PolicyName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteLoadBalancerPolicyOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "DeleteLoadBalancerPolicy"
      }
    },
    "/#Action=DeregisterInstancesFromLoadBalancer": {
      "get": {
        "description": "<p>Deregisters the specified instances from the specified load balancer. After the instance is deregistered, it no longer receives traffic from the load balancer.</p> <p>You can use <a>DescribeLoadBalancers</a> to verify that the instance is deregistered from the load balancer.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html\">Register or De-Register EC2 Instances</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET DeregisterInstancesFromLoadBalancer",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The IDs of the instances.",
            "in": "query",
            "name": "Instances",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeregisterInstancesFromLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeregisterEndPointsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidEndPointException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidEndPointException" } } }
          }
        },
        "x-aws-operation-name": "DeregisterInstancesFromLoadBalancer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deregisters the specified instances from the specified load balancer. After the instance is deregistered, it no longer receives traffic from the load balancer.</p> <p>You can use <a>DescribeLoadBalancers</a> to verify that the instance is deregistered from the load balancer.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html\">Register or De-Register EC2 Instances</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST DeregisterInstancesFromLoadBalancer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeregisterInstancesFromLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeregisterInstancesFromLoadBalancer" },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeregisterEndPointsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidEndPointException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidEndPointException" } } }
          }
        },
        "x-aws-operation-name": "DeregisterInstancesFromLoadBalancer"
      }
    },
    "/#Action=DescribeAccountLimits": {
      "get": {
        "description": "<p>Describes the current Elastic Load Balancing resource limits for your AWS account.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html\">Limits for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET DescribeAccountLimits",
        "parameters": [
          {
            "description": "The marker for the next set of results. (You received this marker from a previous call.)",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to return with this call.",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 400 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeAccountLimits"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeAccountLimitsOutput" } } }
          }
        },
        "x-aws-operation-name": "DescribeAccountLimits"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the current Elastic Load Balancing resource limits for your AWS account.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html\">Limits for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST DescribeAccountLimits",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeAccountLimits"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Marker": {
                    "description": "The marker for the next set of results. (You received this marker from a previous call.)",
                    "type": "string"
                  },
                  "PageSize": {
                    "description": "The maximum number of results to return with this call.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 400
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeAccountLimitsOutput" } } }
          }
        },
        "x-aws-operation-name": "DescribeAccountLimits"
      }
    },
    "/#Action=DescribeInstanceHealth": {
      "get": {
        "description": "Describes the state of the specified instances with respect to the specified load balancer. If no instances are specified, the call describes the state of all instances that are currently registered with the load balancer. If instances are specified, their state is returned even if they are no longer registered with the load balancer. The state of terminated instances is not returned.",
        "operationId": "GET DescribeInstanceHealth",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The IDs of the instances.",
            "in": "query",
            "name": "Instances",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeInstanceHealth"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeEndPointStateOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidEndPointException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidEndPointException" } } }
          }
        },
        "x-aws-operation-name": "DescribeInstanceHealth"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the state of the specified instances with respect to the specified load balancer. If no instances are specified, the call describes the state of all instances that are currently registered with the load balancer. If instances are specified, their state is returned even if they are no longer registered with the load balancer. The state of terminated instances is not returned.",
        "operationId": "POST DescribeInstanceHealth",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeInstanceHealth"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "Instances": {
                    "description": "The IDs of the instances.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeEndPointStateOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidEndPointException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidEndPointException" } } }
          }
        },
        "x-aws-operation-name": "DescribeInstanceHealth"
      }
    },
    "/#Action=DescribeLoadBalancerAttributes": {
      "get": {
        "description": "Describes the attributes for the specified load balancer.",
        "operationId": "GET DescribeLoadBalancerAttributes",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancerAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeLoadBalancerAttributesOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "LoadBalancerAttributeNotFoundException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerAttributeNotFoundException" } }
            }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancerAttributes"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the attributes for the specified load balancer.",
        "operationId": "POST DescribeLoadBalancerAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancerAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeleteLoadBalancer" },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeLoadBalancerAttributesOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "LoadBalancerAttributeNotFoundException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerAttributeNotFoundException" } }
            }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancerAttributes"
      }
    },
    "/#Action=DescribeLoadBalancerPolicies": {
      "get": {
        "description": "<p>Describes the specified policies.</p> <p>If you specify a load balancer name, the action returns the descriptions of all policies created for the load balancer. If you specify a policy name associated with your load balancer, the action returns the description of that policy. If you don't specify a load balancer name, the action returns descriptions of the specified sample policies, or descriptions of all sample policies. The names of the sample policies have the <code>ELBSample-</code> prefix.</p>",
        "operationId": "GET DescribeLoadBalancerPolicies",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The names of the policies.",
            "in": "query",
            "name": "PolicyNames",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancerPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeLoadBalancerPoliciesOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "PolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancerPolicies"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the specified policies.</p> <p>If you specify a load balancer name, the action returns the descriptions of all policies created for the load balancer. If you specify a policy name associated with your load balancer, the action returns the description of that policy. If you don't specify a load balancer name, the action returns descriptions of the specified sample policies, or descriptions of all sample policies. The names of the sample policies have the <code>ELBSample-</code> prefix.</p>",
        "operationId": "POST DescribeLoadBalancerPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancerPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "PolicyNames": {
                    "description": "The names of the policies.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeLoadBalancerPoliciesOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "PolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancerPolicies"
      }
    },
    "/#Action=DescribeLoadBalancerPolicyTypes": {
      "get": {
        "description": "<p>Describes the specified load balancer policy types or all load balancer policy types.</p> <p>The description of each type indicates how it can be used. For example, some policies can be used only with layer 7 listeners, some policies can be used only with layer 4 listeners, and some policies can be used only with your EC2 instances.</p> <p>You can use <a>CreateLoadBalancerPolicy</a> to create a policy configuration for any of these policy types. Then, depending on the policy type, use either <a>SetLoadBalancerPoliciesOfListener</a> or <a>SetLoadBalancerPoliciesForBackendServer</a> to set the policy.</p>",
        "operationId": "GET DescribeLoadBalancerPolicyTypes",
        "parameters": [
          {
            "description": "The names of the policy types. If no names are specified, describes all policy types defined by Elastic Load Balancing.",
            "in": "query",
            "name": "PolicyTypeNames",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancerPolicyTypes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeLoadBalancerPolicyTypesOutput" } }
            }
          },
          "480": {
            "description": "PolicyTypeNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyTypeNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancerPolicyTypes"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the specified load balancer policy types or all load balancer policy types.</p> <p>The description of each type indicates how it can be used. For example, some policies can be used only with layer 7 listeners, some policies can be used only with layer 4 listeners, and some policies can be used only with your EC2 instances.</p> <p>You can use <a>CreateLoadBalancerPolicy</a> to create a policy configuration for any of these policy types. Then, depending on the policy type, use either <a>SetLoadBalancerPoliciesOfListener</a> or <a>SetLoadBalancerPoliciesForBackendServer</a> to set the policy.</p>",
        "operationId": "POST DescribeLoadBalancerPolicyTypes",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancerPolicyTypes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicyTypeNames": {
                    "description": "The names of the policy types. If no names are specified, describes all policy types defined by Elastic Load Balancing.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeLoadBalancerPolicyTypesOutput" } }
            }
          },
          "480": {
            "description": "PolicyTypeNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyTypeNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancerPolicyTypes"
      }
    },
    "/#Action=DescribeLoadBalancers": {
      "get": {
        "description": "Describes the specified the load balancers. If no load balancers are specified, the call describes all of your load balancers.",
        "operationId": "GET DescribeLoadBalancers",
        "parameters": [
          {
            "description": "The names of the load balancers.",
            "in": "query",
            "name": "LoadBalancerNames",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The marker for the next set of results. (You received this marker from a previous call.)",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to return with this call (a number from 1 to 400). The default is 400.",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 400 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancers"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeAccessPointsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "DependencyThrottleException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DependencyThrottleException" } } }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancers"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the specified the load balancers. If no load balancers are specified, the call describes all of your load balancers.",
        "operationId": "POST DescribeLoadBalancers",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancers"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerNames": {
                    "description": "The names of the load balancers.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Marker": {
                    "description": "The marker for the next set of results. (You received this marker from a previous call.)",
                    "type": "string"
                  },
                  "PageSize": {
                    "description": "The maximum number of results to return with this call (a number from 1 to 400). The default is 400.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 400
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeAccessPointsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "DependencyThrottleException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DependencyThrottleException" } } }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancers"
      }
    },
    "/#Action=DescribeTags": {
      "get": {
        "description": "Describes the tags associated with the specified load balancers.",
        "operationId": "GET DescribeTags",
        "parameters": [
          {
            "description": "The names of the load balancers.",
            "in": "query",
            "name": "LoadBalancerNames",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeTags"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeTagsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeTags"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the tags associated with the specified load balancers.",
        "operationId": "POST DescribeTags",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeTags"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerNames": {
                    "description": "The names of the load balancers.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerNames"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeTagsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeTags"
      }
    },
    "/#Action=DetachLoadBalancerFromSubnets": {
      "get": {
        "description": "<p>Removes the specified subnets from the set of configured subnets for the load balancer.</p> <p>After a subnet is removed, all EC2 instances registered with the load balancer in the removed subnet go into the <code>OutOfService</code> state. Then, the load balancer balances the traffic among the remaining routable subnets.</p>",
        "operationId": "GET DetachLoadBalancerFromSubnets",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The IDs of the subnets.",
            "in": "query",
            "name": "Subnets",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DetachLoadBalancerFromSubnets"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DetachLoadBalancerFromSubnetsOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "DetachLoadBalancerFromSubnets"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Removes the specified subnets from the set of configured subnets for the load balancer.</p> <p>After a subnet is removed, all EC2 instances registered with the load balancer in the removed subnet go into the <code>OutOfService</code> state. Then, the load balancer balances the traffic among the remaining routable subnets.</p>",
        "operationId": "POST DetachLoadBalancerFromSubnets",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DetachLoadBalancerFromSubnets"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "Subnets": {
                    "description": "The IDs of the subnets.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName", "Subnets"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DetachLoadBalancerFromSubnetsOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "DetachLoadBalancerFromSubnets"
      }
    },
    "/#Action=DisableAvailabilityZonesForLoadBalancer": {
      "get": {
        "description": "<p>Removes the specified Availability Zones from the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC.</p> <p>For load balancers in a non-default VPC, use <a>DetachLoadBalancerFromSubnets</a>.</p> <p>There must be at least one Availability Zone registered with a load balancer at all times. After an Availability Zone is removed, all instances registered with the load balancer that are in the removed Availability Zone go into the <code>OutOfService</code> state. Then, the load balancer attempts to equally balance the traffic among its remaining Availability Zones.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html\">Add or Remove Availability Zones</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET DisableAvailabilityZonesForLoadBalancer",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The Availability Zones.",
            "in": "query",
            "name": "AvailabilityZones",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DisableAvailabilityZonesForLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RemoveAvailabilityZonesOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "DisableAvailabilityZonesForLoadBalancer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Removes the specified Availability Zones from the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC.</p> <p>For load balancers in a non-default VPC, use <a>DetachLoadBalancerFromSubnets</a>.</p> <p>There must be at least one Availability Zone registered with a load balancer at all times. After an Availability Zone is removed, all instances registered with the load balancer that are in the removed Availability Zone go into the <code>OutOfService</code> state. Then, the load balancer attempts to equally balance the traffic among its remaining Availability Zones.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html\">Add or Remove Availability Zones</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST DisableAvailabilityZonesForLoadBalancer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DisableAvailabilityZonesForLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "AvailabilityZones": {
                    "description": "The Availability Zones.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName", "AvailabilityZones"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RemoveAvailabilityZonesOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "DisableAvailabilityZonesForLoadBalancer"
      }
    },
    "/#Action=EnableAvailabilityZonesForLoadBalancer": {
      "get": {
        "description": "<p>Adds the specified Availability Zones to the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC.</p> <p>For load balancers in a non-default VPC, use <a>AttachLoadBalancerToSubnets</a>.</p> <p>The load balancer evenly distributes requests across all its registered Availability Zones that contain instances. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html\">Add or Remove Availability Zones</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET EnableAvailabilityZonesForLoadBalancer",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The Availability Zones. These must be in the same region as the load balancer.",
            "in": "query",
            "name": "AvailabilityZones",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["EnableAvailabilityZonesForLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AddAvailabilityZonesOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "EnableAvailabilityZonesForLoadBalancer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds the specified Availability Zones to the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC.</p> <p>For load balancers in a non-default VPC, use <a>AttachLoadBalancerToSubnets</a>.</p> <p>The load balancer evenly distributes requests across all its registered Availability Zones that contain instances. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html\">Add or Remove Availability Zones</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST EnableAvailabilityZonesForLoadBalancer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["EnableAvailabilityZonesForLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "AvailabilityZones": {
                    "description": "The Availability Zones. These must be in the same region as the load balancer.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName", "AvailabilityZones"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AddAvailabilityZonesOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "EnableAvailabilityZonesForLoadBalancer"
      }
    },
    "/#Action=ModifyLoadBalancerAttributes": {
      "get": {
        "description": "<p>Modifies the attributes of the specified load balancer.</p> <p>You can modify the load balancer attributes, such as <code>AccessLogs</code>, <code>ConnectionDraining</code>, and <code>CrossZoneLoadBalancing</code> by either enabling or disabling them. Or, you can modify the load balancer attribute <code>ConnectionSettings</code> by specifying an idle connection timeout value for your load balancer.</p> <p>For more information, see the following in the <i>Classic Load Balancers Guide</i>:</p> <ul> <li> <p> <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html\">Cross-Zone Load Balancing</a> </p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html\">Connection Draining</a> </p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/access-log-collection.html\">Access Logs</a> </p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html\">Idle Connection Timeout</a> </p> </li> </ul>",
        "operationId": "GET ModifyLoadBalancerAttributes",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The attributes for a load balancer.\n<p>If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html\">Configure Cross-Zone Load Balancing</a> in the <i>Classic Load Balancers Guide</i>.</p>",
            "in": "query",
            "name": "LoadBalancerAttributes.CrossZoneLoadBalancing",
            "schema": { "type": "string" }
          },
          {
            "description": "The attributes for a load balancer.\n<p>If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html\">Enable Access Logs</a> in the <i>Classic Load Balancers Guide</i>.</p>",
            "in": "query",
            "name": "LoadBalancerAttributes.AccessLog",
            "schema": { "type": "string" }
          },
          {
            "description": "The attributes for a load balancer.\n<p>If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html\">Configure Connection Draining</a> in the <i>Classic Load Balancers Guide</i>.</p>",
            "in": "query",
            "name": "LoadBalancerAttributes.ConnectionDraining",
            "schema": { "type": "string" }
          },
          {
            "description": "The attributes for a load balancer.\n<p>If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.</p> <p>By default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html\">Configure Idle Connection Timeout</a> in the <i>Classic Load Balancers Guide</i>.</p>",
            "in": "query",
            "name": "LoadBalancerAttributes.ConnectionSettings",
            "schema": { "type": "string" }
          },
          {
            "description": "The attributes for a load balancer.\nThis parameter is reserved.",
            "in": "query",
            "name": "LoadBalancerAttributes.AdditionalAttributes",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ModifyLoadBalancerAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyLoadBalancerAttributesOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "LoadBalancerAttributeNotFoundException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerAttributeNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyLoadBalancerAttributes"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Modifies the attributes of the specified load balancer.</p> <p>You can modify the load balancer attributes, such as <code>AccessLogs</code>, <code>ConnectionDraining</code>, and <code>CrossZoneLoadBalancing</code> by either enabling or disabling them. Or, you can modify the load balancer attribute <code>ConnectionSettings</code> by specifying an idle connection timeout value for your load balancer.</p> <p>For more information, see the following in the <i>Classic Load Balancers Guide</i>:</p> <ul> <li> <p> <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html\">Cross-Zone Load Balancing</a> </p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html\">Connection Draining</a> </p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/access-log-collection.html\">Access Logs</a> </p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html\">Idle Connection Timeout</a> </p> </li> </ul>",
        "operationId": "POST ModifyLoadBalancerAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ModifyLoadBalancerAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "LoadBalancerAttributes.CrossZoneLoadBalancing": {
                    "description": "The attributes for a load balancer.\n<p>If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html\">Configure Cross-Zone Load Balancing</a> in the <i>Classic Load Balancers Guide</i>.</p>",
                    "type": "string"
                  },
                  "LoadBalancerAttributes.AccessLog": {
                    "description": "The attributes for a load balancer.\n<p>If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html\">Enable Access Logs</a> in the <i>Classic Load Balancers Guide</i>.</p>",
                    "type": "string"
                  },
                  "LoadBalancerAttributes.ConnectionDraining": {
                    "description": "The attributes for a load balancer.\n<p>If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html\">Configure Connection Draining</a> in the <i>Classic Load Balancers Guide</i>.</p>",
                    "type": "string"
                  },
                  "LoadBalancerAttributes.ConnectionSettings": {
                    "description": "The attributes for a load balancer.\n<p>If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.</p> <p>By default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html\">Configure Idle Connection Timeout</a> in the <i>Classic Load Balancers Guide</i>.</p>",
                    "type": "string"
                  },
                  "LoadBalancerAttributes.AdditionalAttributes": {
                    "description": "The attributes for a load balancer.\nThis parameter is reserved.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyLoadBalancerAttributesOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "LoadBalancerAttributeNotFoundException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerAttributeNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyLoadBalancerAttributes"
      }
    },
    "/#Action=RegisterInstancesWithLoadBalancer": {
      "get": {
        "description": "<p>Adds the specified instances to the specified load balancer.</p> <p>The instance must be a running instance in the same network as the load balancer (EC2-Classic or the same VPC). If you have EC2-Classic instances and a load balancer in a VPC with ClassicLink enabled, you can link the EC2-Classic instances to that VPC and then register the linked EC2-Classic instances with the load balancer in the VPC.</p> <p>Note that <code>RegisterInstanceWithLoadBalancer</code> completes when the request has been registered. Instance registration takes a little time to complete. To check the state of the registered instances, use <a>DescribeLoadBalancers</a> or <a>DescribeInstanceHealth</a>.</p> <p>After the instance is registered, it starts receiving traffic and requests from the load balancer. Any instance that is not in one of the Availability Zones registered for the load balancer is moved to the <code>OutOfService</code> state. If an Availability Zone is added to the load balancer later, any instances registered with the load balancer move to the <code>InService</code> state.</p> <p>To deregister instances from a load balancer, use <a>DeregisterInstancesFromLoadBalancer</a>.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html\">Register or De-Register EC2 Instances</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET RegisterInstancesWithLoadBalancer",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The IDs of the instances.",
            "in": "query",
            "name": "Instances",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RegisterInstancesWithLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RegisterEndPointsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidEndPointException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidEndPointException" } } }
          }
        },
        "x-aws-operation-name": "RegisterInstancesWithLoadBalancer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds the specified instances to the specified load balancer.</p> <p>The instance must be a running instance in the same network as the load balancer (EC2-Classic or the same VPC). If you have EC2-Classic instances and a load balancer in a VPC with ClassicLink enabled, you can link the EC2-Classic instances to that VPC and then register the linked EC2-Classic instances with the load balancer in the VPC.</p> <p>Note that <code>RegisterInstanceWithLoadBalancer</code> completes when the request has been registered. Instance registration takes a little time to complete. To check the state of the registered instances, use <a>DescribeLoadBalancers</a> or <a>DescribeInstanceHealth</a>.</p> <p>After the instance is registered, it starts receiving traffic and requests from the load balancer. Any instance that is not in one of the Availability Zones registered for the load balancer is moved to the <code>OutOfService</code> state. If an Availability Zone is added to the load balancer later, any instances registered with the load balancer move to the <code>InService</code> state.</p> <p>To deregister instances from a load balancer, use <a>DeregisterInstancesFromLoadBalancer</a>.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html\">Register or De-Register EC2 Instances</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST RegisterInstancesWithLoadBalancer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RegisterInstancesWithLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeregisterInstancesFromLoadBalancer" },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RegisterEndPointsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "InvalidEndPointException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidEndPointException" } } }
          }
        },
        "x-aws-operation-name": "RegisterInstancesWithLoadBalancer"
      }
    },
    "/#Action=RemoveTags": {
      "get": {
        "description": "Removes one or more tags from the specified load balancer.",
        "operationId": "GET RemoveTags",
        "parameters": [
          {
            "description": "The name of the load balancer. You can specify a maximum of one load balancer name.",
            "in": "query",
            "name": "LoadBalancerNames",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The list of tag keys to remove.",
            "in": "query",
            "name": "Tags",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["RemoveTags"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RemoveTagsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "RemoveTags"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes one or more tags from the specified load balancer.",
        "operationId": "POST RemoveTags",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["RemoveTags"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerNames": {
                    "description": "The name of the load balancer. You can specify a maximum of one load balancer name.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Tags": {
                    "description": "The list of tag keys to remove.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerNames", "Tags"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RemoveTagsOutput" } } }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "RemoveTags"
      }
    },
    "/#Action=SetLoadBalancerListenerSSLCertificate": {
      "get": {
        "description": "<p>Sets the certificate that terminates the specified listener's SSL connections. The specified certificate replaces any prior certificate that was used on the same load balancer and port.</p> <p>For more information about updating your SSL certificate, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-update-ssl-cert.html\">Replace the SSL Certificate for Your Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET SetLoadBalancerListenerSSLCertificate",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The port that uses the specified SSL certificate.",
            "in": "query",
            "name": "LoadBalancerPort",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "description": "The Amazon Resource Name (ARN) of the SSL certificate.",
            "in": "query",
            "name": "SSLCertificateId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetLoadBalancerListenerSSLCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/SetLoadBalancerListenerSSLCertificateOutput" } }
            }
          },
          "480": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          },
          "481": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "482": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "484": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          }
        },
        "x-aws-operation-name": "SetLoadBalancerListenerSSLCertificate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Sets the certificate that terminates the specified listener's SSL connections. The specified certificate replaces any prior certificate that was used on the same load balancer and port.</p> <p>For more information about updating your SSL certificate, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-update-ssl-cert.html\">Replace the SSL Certificate for Your Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST SetLoadBalancerListenerSSLCertificate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetLoadBalancerListenerSSLCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "LoadBalancerPort": {
                    "description": "The port that uses the specified SSL certificate.",
                    "type": "integer"
                  },
                  "SSLCertificateId": {
                    "description": "The Amazon Resource Name (ARN) of the SSL certificate.",
                    "type": "string"
                  }
                },
                "required": ["LoadBalancerName", "LoadBalancerPort", "SSLCertificateId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/SetLoadBalancerListenerSSLCertificateOutput" } }
            }
          },
          "480": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          },
          "481": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "482": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "484": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          }
        },
        "x-aws-operation-name": "SetLoadBalancerListenerSSLCertificate"
      }
    },
    "/#Action=SetLoadBalancerPoliciesForBackendServer": {
      "get": {
        "description": "<p>Replaces the set of policies associated with the specified port on which the EC2 instance is listening with a new set of policies. At this time, only the back-end server authentication policy type can be applied to the instance ports; this policy type is composed of multiple public key policies.</p> <p>Each time you use <code>SetLoadBalancerPoliciesForBackendServer</code> to enable the policies, use the <code>PolicyNames</code> parameter to list the policies that you want to enable.</p> <p>You can use <a>DescribeLoadBalancers</a> or <a>DescribeLoadBalancerPolicies</a> to verify that the policy is associated with the EC2 instance.</p> <p>For more information about enabling back-end instance authentication, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-create-https-ssl-load-balancer.html#configure_backendauth_clt\">Configure Back-end Instance Authentication</a> in the <i>Classic Load Balancers Guide</i>. For more information about Proxy Protocol, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-proxy-protocol.html\">Configure Proxy Protocol Support</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET SetLoadBalancerPoliciesForBackendServer",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The port number associated with the EC2 instance.",
            "in": "query",
            "name": "InstancePort",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "description": "The names of the policies. If the list is empty, then all current polices are removed from the EC2 instance.",
            "in": "query",
            "name": "PolicyNames",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetLoadBalancerPoliciesForBackendServer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/SetLoadBalancerPoliciesForBackendServerOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "PolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotFoundException" } } }
          },
          "482": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "SetLoadBalancerPoliciesForBackendServer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Replaces the set of policies associated with the specified port on which the EC2 instance is listening with a new set of policies. At this time, only the back-end server authentication policy type can be applied to the instance ports; this policy type is composed of multiple public key policies.</p> <p>Each time you use <code>SetLoadBalancerPoliciesForBackendServer</code> to enable the policies, use the <code>PolicyNames</code> parameter to list the policies that you want to enable.</p> <p>You can use <a>DescribeLoadBalancers</a> or <a>DescribeLoadBalancerPolicies</a> to verify that the policy is associated with the EC2 instance.</p> <p>For more information about enabling back-end instance authentication, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-create-https-ssl-load-balancer.html#configure_backendauth_clt\">Configure Back-end Instance Authentication</a> in the <i>Classic Load Balancers Guide</i>. For more information about Proxy Protocol, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-proxy-protocol.html\">Configure Proxy Protocol Support</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST SetLoadBalancerPoliciesForBackendServer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetLoadBalancerPoliciesForBackendServer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "InstancePort": {
                    "description": "The port number associated with the EC2 instance.",
                    "type": "integer"
                  },
                  "PolicyNames": {
                    "description": "The names of the policies. If the list is empty, then all current polices are removed from the EC2 instance.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName", "InstancePort", "PolicyNames"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/SetLoadBalancerPoliciesForBackendServerOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "PolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotFoundException" } } }
          },
          "482": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "SetLoadBalancerPoliciesForBackendServer"
      }
    },
    "/#Action=SetLoadBalancerPoliciesOfListener": {
      "get": {
        "description": "<p>Replaces the current set of policies for the specified load balancer port with the specified set of policies.</p> <p>To enable back-end server authentication, use <a>SetLoadBalancerPoliciesForBackendServer</a>.</p> <p>For more information about setting policies, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/ssl-config-update.html\">Update the SSL Negotiation Configuration</a>, <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration\">Duration-Based Session Stickiness</a>, and <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application\">Application-Controlled Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "GET SetLoadBalancerPoliciesOfListener",
        "parameters": [
          {
            "description": "The name of the load balancer.",
            "in": "query",
            "name": "LoadBalancerName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The external port of the load balancer.",
            "in": "query",
            "name": "LoadBalancerPort",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "description": "The names of the policies. This list must include all policies to be enabled. If you omit a policy that is currently enabled, it is disabled. If the list is empty, all current policies are disabled.",
            "in": "query",
            "name": "PolicyNames",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetLoadBalancerPoliciesOfListener"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/SetLoadBalancerPoliciesOfListenerOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "PolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotFoundException" } } }
          },
          "482": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "SetLoadBalancerPoliciesOfListener"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Replaces the current set of policies for the specified load balancer port with the specified set of policies.</p> <p>To enable back-end server authentication, use <a>SetLoadBalancerPoliciesForBackendServer</a>.</p> <p>For more information about setting policies, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/ssl-config-update.html\">Update the SSL Negotiation Configuration</a>, <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration\">Duration-Based Session Stickiness</a>, and <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application\">Application-Controlled Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "operationId": "POST SetLoadBalancerPoliciesOfListener",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetLoadBalancerPoliciesOfListener"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2012-06-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                  "LoadBalancerPort": { "description": "The external port of the load balancer.", "type": "integer" },
                  "PolicyNames": {
                    "description": "The names of the policies. This list must include all policies to be enabled. If you omit a policy that is currently enabled, it is disabled. If the list is empty, all current policies are disabled.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerName", "LoadBalancerPort", "PolicyNames"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/SetLoadBalancerPoliciesOfListenerOutput" } }
            }
          },
          "480": {
            "description": "AccessPointNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AccessPointNotFoundException" } } }
          },
          "481": {
            "description": "PolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotFoundException" } } }
          },
          "482": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "483": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "SetLoadBalancerPoliciesOfListener"
      }
    }
  },
  "servers": [
    {
      "description": "The Elastic Load Balancing multi-region endpoint",
      "url": "http://elasticloadbalancing.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Elastic Load Balancing multi-region endpoint",
      "url": "https://elasticloadbalancing.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The general Elastic Load Balancing endpoint for US East (N. Virginia)",
      "url": "http://elasticloadbalancing.amazonaws.com",
      "variables": {}
    },
    {
      "description": "The general Elastic Load Balancing endpoint for US East (N. Virginia)",
      "url": "https://elasticloadbalancing.amazonaws.com",
      "variables": {}
    },
    {
      "description": "The Elastic Load Balancing endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://elasticloadbalancing.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Elastic Load Balancing endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://elasticloadbalancing.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "requestBodies": {
      "POST_DeregisterInstancesFromLoadBalancer": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" },
                "Instances": {
                  "description": "The IDs of the instances.",
                  "type": "array",
                  "items": { "type": "string" }
                }
              },
              "required": ["LoadBalancerName", "Instances"]
            }
          }
        }
      },
      "POST_DeleteLoadBalancer": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "LoadBalancerName": { "description": "The name of the load balancer.", "type": "string" }
              },
              "required": ["LoadBalancerName"]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AccessLog": {
        "description": "Information about the <code>AccessLog</code> attribute.",
        "properties": {
          "EmitInterval": { "$ref": "#/components/schemas/AccessLogInterval" },
          "Enabled": { "$ref": "#/components/schemas/AccessLogEnabled" },
          "S3BucketName": { "$ref": "#/components/schemas/S3BucketName" },
          "S3BucketPrefix": { "$ref": "#/components/schemas/AccessLogPrefix" }
        },
        "required": ["Enabled"],
        "type": "object"
      },
      "AccessLogEnabled": { "type": "boolean" },
      "AccessLogInterval": { "type": "integer" },
      "AccessLogPrefix": { "type": "string" },
      "AccessPointName": { "type": "string" },
      "AccessPointNotFoundException": {},
      "AccessPointPort": { "type": "integer" },
      "AddAvailabilityZonesInput": {
        "description": "Contains the parameters for EnableAvailabilityZonesForLoadBalancer.",
        "properties": {
          "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZones" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" }
        },
        "required": ["LoadBalancerName", "AvailabilityZones"],
        "type": "object"
      },
      "AddAvailabilityZonesOutput": {
        "description": "Contains the output of EnableAvailabilityZonesForLoadBalancer.",
        "example": { "AvailabilityZones": ["us-west-2a", "us-west-2b"] },
        "properties": { "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZones" } },
        "type": "object"
      },
      "AddTagsInput": {
        "description": "Contains the parameters for AddTags.",
        "properties": {
          "LoadBalancerNames": { "$ref": "#/components/schemas/LoadBalancerNames" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["LoadBalancerNames", "Tags"],
        "type": "object"
      },
      "AddTagsOutput": { "description": "Contains the output of AddTags.", "properties": {}, "type": "object" },
      "AdditionalAttribute": {
        "description": "This data type is reserved.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/AdditionalAttributeKey" },
          "Value": { "$ref": "#/components/schemas/AdditionalAttributeValue" }
        },
        "type": "object"
      },
      "AdditionalAttributeKey": { "maxLength": 256, "pattern": "^[a-zA-Z0-9.]+$", "type": "string" },
      "AdditionalAttributeValue": { "maxLength": 256, "pattern": "^[a-zA-Z0-9.]+$", "type": "string" },
      "AdditionalAttributes": {
        "items": { "$ref": "#/components/schemas/AdditionalAttribute" },
        "maxItems": 10,
        "type": "array"
      },
      "AppCookieStickinessPolicies": {
        "items": { "$ref": "#/components/schemas/AppCookieStickinessPolicy" },
        "type": "array"
      },
      "AppCookieStickinessPolicy": {
        "description": "Information about a policy for application-controlled session stickiness.",
        "properties": {
          "CookieName": { "$ref": "#/components/schemas/CookieName" },
          "PolicyName": { "$ref": "#/components/schemas/PolicyName" }
        },
        "type": "object"
      },
      "ApplySecurityGroupsToLoadBalancerInput": {
        "description": "Contains the parameters for ApplySecurityGroupsToLoadBalancer.",
        "properties": {
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "SecurityGroups": { "$ref": "#/components/schemas/SecurityGroups" }
        },
        "required": ["LoadBalancerName", "SecurityGroups"],
        "type": "object"
      },
      "ApplySecurityGroupsToLoadBalancerOutput": {
        "description": "Contains the output of ApplySecurityGroupsToLoadBalancer.",
        "example": { "SecurityGroups": ["sg-fc448899"] },
        "properties": { "SecurityGroups": { "$ref": "#/components/schemas/SecurityGroups" } },
        "type": "object"
      },
      "AttachLoadBalancerToSubnetsInput": {
        "description": "Contains the parameters for AttachLoaBalancerToSubnets.",
        "properties": {
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "Subnets": { "$ref": "#/components/schemas/Subnets" }
        },
        "required": ["LoadBalancerName", "Subnets"],
        "type": "object"
      },
      "AttachLoadBalancerToSubnetsOutput": {
        "description": "Contains the output of AttachLoadBalancerToSubnets.",
        "example": { "Subnets": ["subnet-15aaab61", "subnet-0ecac448"] },
        "properties": { "Subnets": { "$ref": "#/components/schemas/Subnets" } },
        "type": "object"
      },
      "AttributeName": { "type": "string" },
      "AttributeType": { "type": "string" },
      "AttributeValue": { "type": "string" },
      "AvailabilityZone": { "type": "string" },
      "AvailabilityZones": { "items": { "$ref": "#/components/schemas/AvailabilityZone" }, "type": "array" },
      "BackendServerDescription": {
        "description": "Information about the configuration of an EC2 instance.",
        "properties": {
          "InstancePort": { "$ref": "#/components/schemas/InstancePort" },
          "PolicyNames": { "$ref": "#/components/schemas/PolicyNames" }
        },
        "type": "object"
      },
      "BackendServerDescriptions": {
        "items": { "$ref": "#/components/schemas/BackendServerDescription" },
        "type": "array"
      },
      "Cardinality": { "type": "string" },
      "CertificateNotFoundException": {},
      "ConfigureHealthCheckInput": {
        "description": "Contains the parameters for ConfigureHealthCheck.",
        "properties": {
          "HealthCheck": { "$ref": "#/components/schemas/HealthCheck" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" }
        },
        "required": ["LoadBalancerName", "HealthCheck"],
        "type": "object"
      },
      "ConfigureHealthCheckOutput": {
        "description": "Contains the output of ConfigureHealthCheck.",
        "example": {
          "HealthCheck": {
            "HealthyThreshold": 2,
            "Interval": 30,
            "Target": "HTTP:80/png",
            "Timeout": 3,
            "UnhealthyThreshold": 2
          }
        },
        "properties": { "HealthCheck": { "$ref": "#/components/schemas/HealthCheck" } },
        "type": "object"
      },
      "ConnectionDraining": {
        "description": "Information about the <code>ConnectionDraining</code> attribute.",
        "properties": {
          "Enabled": { "$ref": "#/components/schemas/ConnectionDrainingEnabled" },
          "Timeout": { "$ref": "#/components/schemas/ConnectionDrainingTimeout" }
        },
        "required": ["Enabled"],
        "type": "object"
      },
      "ConnectionDrainingEnabled": { "type": "boolean" },
      "ConnectionDrainingTimeout": { "type": "integer" },
      "ConnectionSettings": {
        "description": "Information about the <code>ConnectionSettings</code> attribute.",
        "properties": { "IdleTimeout": { "$ref": "#/components/schemas/IdleTimeout" } },
        "required": ["IdleTimeout"],
        "type": "object"
      },
      "CookieExpirationPeriod": { "type": "integer" },
      "CookieName": { "type": "string" },
      "CreateAccessPointInput": {
        "description": "Contains the parameters for CreateLoadBalancer.",
        "properties": {
          "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZones" },
          "Listeners": { "$ref": "#/components/schemas/Listeners" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "Scheme": { "$ref": "#/components/schemas/LoadBalancerScheme" },
          "SecurityGroups": { "$ref": "#/components/schemas/SecurityGroups" },
          "Subnets": { "$ref": "#/components/schemas/Subnets" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["LoadBalancerName", "Listeners"],
        "type": "object"
      },
      "CreateAccessPointOutput": {
        "description": "Contains the output for CreateLoadBalancer.",
        "example": { "DNSName": "internal-my-load-balancer-123456789.us-west-2.elb.amazonaws.com" },
        "properties": { "DNSName": { "$ref": "#/components/schemas/DNSName" } },
        "type": "object"
      },
      "CreateAppCookieStickinessPolicyInput": {
        "description": "Contains the parameters for CreateAppCookieStickinessPolicy.",
        "properties": {
          "CookieName": { "$ref": "#/components/schemas/CookieName" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "PolicyName": { "$ref": "#/components/schemas/PolicyName" }
        },
        "required": ["LoadBalancerName", "PolicyName", "CookieName"],
        "type": "object"
      },
      "CreateAppCookieStickinessPolicyOutput": {
        "description": "Contains the output for CreateAppCookieStickinessPolicy.",
        "properties": {},
        "type": "object"
      },
      "CreateLBCookieStickinessPolicyInput": {
        "description": "Contains the parameters for CreateLBCookieStickinessPolicy.",
        "properties": {
          "CookieExpirationPeriod": { "$ref": "#/components/schemas/CookieExpirationPeriod" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "PolicyName": { "$ref": "#/components/schemas/PolicyName" }
        },
        "required": ["LoadBalancerName", "PolicyName"],
        "type": "object"
      },
      "CreateLBCookieStickinessPolicyOutput": {
        "description": "Contains the output for CreateLBCookieStickinessPolicy.",
        "properties": {},
        "type": "object"
      },
      "CreateLoadBalancerListenerInput": {
        "description": "Contains the parameters for CreateLoadBalancerListeners.",
        "properties": {
          "Listeners": { "$ref": "#/components/schemas/Listeners" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" }
        },
        "required": ["LoadBalancerName", "Listeners"],
        "type": "object"
      },
      "CreateLoadBalancerListenerOutput": {
        "description": "Contains the parameters for CreateLoadBalancerListener.",
        "properties": {},
        "type": "object"
      },
      "CreateLoadBalancerPolicyInput": {
        "description": "Contains the parameters for CreateLoadBalancerPolicy.",
        "properties": {
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "PolicyAttributes": { "$ref": "#/components/schemas/PolicyAttributes" },
          "PolicyName": { "$ref": "#/components/schemas/PolicyName" },
          "PolicyTypeName": { "$ref": "#/components/schemas/PolicyTypeName" }
        },
        "required": ["LoadBalancerName", "PolicyName", "PolicyTypeName"],
        "type": "object"
      },
      "CreateLoadBalancerPolicyOutput": {
        "description": "Contains the output of CreateLoadBalancerPolicy.",
        "properties": {},
        "type": "object"
      },
      "CreatedTime": { "format": "date-time", "type": "string" },
      "CrossZoneLoadBalancing": {
        "description": "Information about the <code>CrossZoneLoadBalancing</code> attribute.",
        "properties": { "Enabled": { "$ref": "#/components/schemas/CrossZoneLoadBalancingEnabled" } },
        "required": ["Enabled"],
        "type": "object"
      },
      "CrossZoneLoadBalancingEnabled": { "type": "boolean" },
      "DNSName": { "type": "string" },
      "DefaultValue": { "type": "string" },
      "DeleteAccessPointInput": {
        "description": "Contains the parameters for DeleteLoadBalancer.",
        "properties": { "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" } },
        "required": ["LoadBalancerName"],
        "type": "object"
      },
      "DeleteAccessPointOutput": {
        "description": "Contains the output of DeleteLoadBalancer.",
        "properties": {},
        "type": "object"
      },
      "DeleteLoadBalancerListenerInput": {
        "description": "Contains the parameters for DeleteLoadBalancerListeners.",
        "properties": {
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "LoadBalancerPorts": { "$ref": "#/components/schemas/Ports" }
        },
        "required": ["LoadBalancerName", "LoadBalancerPorts"],
        "type": "object"
      },
      "DeleteLoadBalancerListenerOutput": {
        "description": "Contains the output of DeleteLoadBalancerListeners.",
        "properties": {},
        "type": "object"
      },
      "DeleteLoadBalancerPolicyInput": {
        "description": "Contains the parameters for DeleteLoadBalancerPolicy.",
        "properties": {
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "PolicyName": { "$ref": "#/components/schemas/PolicyName" }
        },
        "required": ["LoadBalancerName", "PolicyName"],
        "type": "object"
      },
      "DeleteLoadBalancerPolicyOutput": {
        "description": "Contains the output of DeleteLoadBalancerPolicy.",
        "properties": {},
        "type": "object"
      },
      "DependencyThrottleException": {},
      "DeregisterEndPointsInput": {
        "description": "Contains the parameters for DeregisterInstancesFromLoadBalancer.",
        "properties": {
          "Instances": { "$ref": "#/components/schemas/Instances" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" }
        },
        "required": ["LoadBalancerName", "Instances"],
        "type": "object"
      },
      "DeregisterEndPointsOutput": {
        "description": "Contains the output of DeregisterInstancesFromLoadBalancer.",
        "example": { "Instances": [{ "InstanceId": "i-207d9717" }, { "InstanceId": "i-afefb49b" }] },
        "properties": { "Instances": { "$ref": "#/components/schemas/Instances" } },
        "type": "object"
      },
      "DescribeAccessPointsInput": {
        "description": "Contains the parameters for DescribeLoadBalancers.",
        "properties": {
          "LoadBalancerNames": { "$ref": "#/components/schemas/LoadBalancerNames" },
          "Marker": { "$ref": "#/components/schemas/Marker" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" }
        },
        "type": "object"
      },
      "DescribeAccessPointsOutput": {
        "description": "Contains the parameters for DescribeLoadBalancers.",
        "example": {
          "LoadBalancerDescriptions": [
            {
              "AvailabilityZones": ["us-west-2a"],
              "BackendServerDescriptions": [{ "InstancePort": 80, "PolicyNames": ["my-ProxyProtocol-policy"] }],
              "CanonicalHostedZoneName": "my-load-balancer-1234567890.us-west-2.elb.amazonaws.com",
              "CanonicalHostedZoneNameID": "Z3DZXE0EXAMPLE",
              "CreatedTime": "2015-03-19T03:24:02.650Z",
              "DNSName": "my-load-balancer-1234567890.us-west-2.elb.amazonaws.com",
              "HealthCheck": {
                "HealthyThreshold": 2,
                "Interval": 30,
                "Target": "HTTP:80/png",
                "Timeout": 3,
                "UnhealthyThreshold": 2
              },
              "Instances": [{ "InstanceId": "i-207d9717" }, { "InstanceId": "i-afefb49b" }],
              "ListenerDescriptions": [
                {
                  "Listener": {
                    "InstancePort": 80,
                    "InstanceProtocol": "HTTP",
                    "LoadBalancerPort": 80,
                    "Protocol": "HTTP"
                  },
                  "PolicyNames": []
                },
                {
                  "Listener": {
                    "InstancePort": 443,
                    "InstanceProtocol": "HTTPS",
                    "LoadBalancerPort": 443,
                    "Protocol": "HTTPS",
                    "SSLCertificateId": "arn:aws:iam::123456789012:server-certificate/my-server-cert"
                  },
                  "PolicyNames": ["ELBSecurityPolicy-2015-03"]
                }
              ],
              "LoadBalancerName": "my-load-balancer",
              "Policies": {
                "AppCookieStickinessPolicies": [],
                "LBCookieStickinessPolicies": [
                  { "CookieExpirationPeriod": 60, "PolicyName": "my-duration-cookie-policy" }
                ],
                "OtherPolicies": [
                  "my-PublicKey-policy",
                  "my-authentication-policy",
                  "my-SSLNegotiation-policy",
                  "my-ProxyProtocol-policy",
                  "ELBSecurityPolicy-2015-03"
                ]
              },
              "Scheme": "internet-facing",
              "SecurityGroups": ["sg-a61988c3"],
              "SourceSecurityGroup": { "GroupName": "my-elb-sg", "OwnerAlias": "123456789012" },
              "Subnets": ["subnet-15aaab61"],
              "VPCId": "vpc-a01106c2"
            }
          ]
        },
        "properties": {
          "LoadBalancerDescriptions": { "$ref": "#/components/schemas/LoadBalancerDescriptions" },
          "NextMarker": { "$ref": "#/components/schemas/Marker" }
        },
        "type": "object"
      },
      "DescribeAccountLimitsInput": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/Marker" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" }
        },
        "type": "object"
      },
      "DescribeAccountLimitsOutput": {
        "properties": {
          "Limits": { "$ref": "#/components/schemas/Limits" },
          "NextMarker": { "$ref": "#/components/schemas/Marker" }
        },
        "type": "object"
      },
      "DescribeEndPointStateInput": {
        "description": "Contains the parameters for DescribeInstanceHealth.",
        "properties": {
          "Instances": { "$ref": "#/components/schemas/Instances" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" }
        },
        "required": ["LoadBalancerName"],
        "type": "object"
      },
      "DescribeEndPointStateOutput": {
        "description": "Contains the output for DescribeInstanceHealth.",
        "example": {
          "InstanceStates": [
            { "Description": "N/A", "InstanceId": "i-207d9717", "ReasonCode": "N/A", "State": "InService" },
            { "Description": "N/A", "InstanceId": "i-afefb49b", "ReasonCode": "N/A", "State": "InService" }
          ]
        },
        "properties": { "InstanceStates": { "$ref": "#/components/schemas/InstanceStates" } },
        "type": "object"
      },
      "DescribeLoadBalancerAttributesInput": {
        "description": "Contains the parameters for DescribeLoadBalancerAttributes.",
        "properties": { "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" } },
        "required": ["LoadBalancerName"],
        "type": "object"
      },
      "DescribeLoadBalancerAttributesOutput": {
        "description": "Contains the output of DescribeLoadBalancerAttributes.",
        "example": {
          "LoadBalancerAttributes": {
            "AccessLog": { "Enabled": false },
            "ConnectionDraining": { "Enabled": false, "Timeout": 300 },
            "ConnectionSettings": { "IdleTimeout": 60 },
            "CrossZoneLoadBalancing": { "Enabled": false }
          }
        },
        "properties": { "LoadBalancerAttributes": { "$ref": "#/components/schemas/LoadBalancerAttributes" } },
        "type": "object"
      },
      "DescribeLoadBalancerPoliciesInput": {
        "description": "Contains the parameters for DescribeLoadBalancerPolicies.",
        "properties": {
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "PolicyNames": { "$ref": "#/components/schemas/PolicyNames" }
        },
        "type": "object"
      },
      "DescribeLoadBalancerPoliciesOutput": {
        "description": "Contains the output of DescribeLoadBalancerPolicies.",
        "example": {
          "PolicyDescriptions": [
            {
              "PolicyAttributeDescriptions": [
                { "AttributeName": "PublicKeyPolicyName", "AttributeValue": "my-PublicKey-policy" }
              ],
              "PolicyName": "my-authentication-policy",
              "PolicyTypeName": "BackendServerAuthenticationPolicyType"
            }
          ]
        },
        "properties": { "PolicyDescriptions": { "$ref": "#/components/schemas/PolicyDescriptions" } },
        "type": "object"
      },
      "DescribeLoadBalancerPolicyTypesInput": {
        "description": "Contains the parameters for DescribeLoadBalancerPolicyTypes.",
        "properties": { "PolicyTypeNames": { "$ref": "#/components/schemas/PolicyTypeNames" } },
        "type": "object"
      },
      "DescribeLoadBalancerPolicyTypesOutput": {
        "description": "Contains the output of DescribeLoadBalancerPolicyTypes.",
        "example": {
          "PolicyTypeDescriptions": [
            {
              "Description": "Policy that controls whether to include the IP address and port of the originating request for TCP messages. This policy operates on TCP listeners only.",
              "PolicyAttributeTypeDescriptions": [
                { "AttributeName": "ProxyProtocol", "AttributeType": "Boolean", "Cardinality": "ONE" }
              ],
              "PolicyTypeName": "ProxyProtocolPolicyType"
            }
          ]
        },
        "properties": { "PolicyTypeDescriptions": { "$ref": "#/components/schemas/PolicyTypeDescriptions" } },
        "type": "object"
      },
      "DescribeTagsInput": {
        "description": "Contains the parameters for DescribeTags.",
        "properties": { "LoadBalancerNames": { "$ref": "#/components/schemas/LoadBalancerNamesMax20" } },
        "required": ["LoadBalancerNames"],
        "type": "object"
      },
      "DescribeTagsOutput": {
        "description": "Contains the output for DescribeTags.",
        "example": {
          "TagDescriptions": [
            {
              "LoadBalancerName": "my-load-balancer",
              "Tags": [{ "Key": "project", "Value": "lima" }, { "Key": "department", "Value": "digital-media" }]
            }
          ]
        },
        "properties": { "TagDescriptions": { "$ref": "#/components/schemas/TagDescriptions" } },
        "type": "object"
      },
      "Description": { "type": "string" },
      "DetachLoadBalancerFromSubnetsInput": {
        "description": "Contains the parameters for DetachLoadBalancerFromSubnets.",
        "properties": {
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "Subnets": { "$ref": "#/components/schemas/Subnets" }
        },
        "required": ["LoadBalancerName", "Subnets"],
        "type": "object"
      },
      "DetachLoadBalancerFromSubnetsOutput": {
        "description": "Contains the output of DetachLoadBalancerFromSubnets.",
        "example": { "Subnets": ["subnet-15aaab61"] },
        "properties": { "Subnets": { "$ref": "#/components/schemas/Subnets" } },
        "type": "object"
      },
      "DuplicateAccessPointNameException": {},
      "DuplicateListenerException": {},
      "DuplicatePolicyNameException": {},
      "DuplicateTagKeysException": {},
      "EndPointPort": { "type": "integer" },
      "HealthCheck": {
        "description": "Information about a health check.",
        "properties": {
          "HealthyThreshold": { "$ref": "#/components/schemas/HealthyThreshold" },
          "Interval": { "$ref": "#/components/schemas/HealthCheckInterval" },
          "Target": { "$ref": "#/components/schemas/HealthCheckTarget" },
          "Timeout": { "$ref": "#/components/schemas/HealthCheckTimeout" },
          "UnhealthyThreshold": { "$ref": "#/components/schemas/UnhealthyThreshold" }
        },
        "required": ["Target", "Interval", "Timeout", "UnhealthyThreshold", "HealthyThreshold"],
        "type": "object"
      },
      "HealthCheckInterval": { "maximum": 300, "minimum": 5, "type": "integer" },
      "HealthCheckTarget": { "type": "string" },
      "HealthCheckTimeout": { "maximum": 60, "minimum": 2, "type": "integer" },
      "HealthyThreshold": { "maximum": 10, "minimum": 2, "type": "integer" },
      "IdleTimeout": { "maximum": 3600, "minimum": 1, "type": "integer" },
      "Instance": {
        "description": "The ID of an EC2 instance.",
        "properties": { "InstanceId": { "$ref": "#/components/schemas/InstanceId" } },
        "type": "object"
      },
      "InstanceId": { "type": "string" },
      "InstancePort": { "maximum": 65535, "minimum": 1, "type": "integer" },
      "InstanceState": {
        "description": "Information about the state of an EC2 instance.",
        "properties": {
          "Description": { "$ref": "#/components/schemas/Description" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "ReasonCode": { "$ref": "#/components/schemas/ReasonCode" },
          "State": { "$ref": "#/components/schemas/State" }
        },
        "type": "object"
      },
      "InstanceStates": { "items": { "$ref": "#/components/schemas/InstanceState" }, "type": "array" },
      "Instances": { "items": { "$ref": "#/components/schemas/Instance" }, "type": "array" },
      "InvalidConfigurationRequestException": {},
      "InvalidEndPointException": {},
      "InvalidSchemeException": {},
      "InvalidSecurityGroupException": {},
      "InvalidSubnetException": {},
      "LBCookieStickinessPolicies": {
        "items": { "$ref": "#/components/schemas/LBCookieStickinessPolicy" },
        "type": "array"
      },
      "LBCookieStickinessPolicy": {
        "description": "Information about a policy for duration-based session stickiness.",
        "properties": {
          "CookieExpirationPeriod": { "$ref": "#/components/schemas/CookieExpirationPeriod" },
          "PolicyName": { "$ref": "#/components/schemas/PolicyName" }
        },
        "type": "object"
      },
      "Limit": {
        "description": "Information about an Elastic Load Balancing resource limit for your AWS account.",
        "properties": {
          "Max": { "$ref": "#/components/schemas/Max" },
          "Name": { "$ref": "#/components/schemas/Name" }
        },
        "type": "object"
      },
      "Limits": { "items": { "$ref": "#/components/schemas/Limit" }, "type": "array" },
      "Listener": {
        "description": "<p>Information about a listener.</p> <p>For information about the protocols and the ports supported by Elastic Load Balancing, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html\">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
        "properties": {
          "InstancePort": { "$ref": "#/components/schemas/InstancePort" },
          "InstanceProtocol": { "$ref": "#/components/schemas/Protocol" },
          "LoadBalancerPort": { "$ref": "#/components/schemas/AccessPointPort" },
          "Protocol": { "$ref": "#/components/schemas/Protocol" },
          "SSLCertificateId": { "$ref": "#/components/schemas/SSLCertificateId" }
        },
        "required": ["Protocol", "LoadBalancerPort", "InstancePort"],
        "type": "object"
      },
      "ListenerDescription": {
        "description": "The policies enabled for a listener.",
        "properties": {
          "Listener": { "$ref": "#/components/schemas/Listener" },
          "PolicyNames": { "$ref": "#/components/schemas/PolicyNames" }
        },
        "type": "object"
      },
      "ListenerDescriptions": { "items": { "$ref": "#/components/schemas/ListenerDescription" }, "type": "array" },
      "ListenerNotFoundException": {},
      "Listeners": { "items": { "$ref": "#/components/schemas/Listener" }, "type": "array" },
      "LoadBalancerAttributeNotFoundException": {},
      "LoadBalancerAttributes": {
        "description": "The attributes for a load balancer.",
        "properties": {
          "AccessLog": { "$ref": "#/components/schemas/AccessLog" },
          "AdditionalAttributes": { "$ref": "#/components/schemas/AdditionalAttributes" },
          "ConnectionDraining": { "$ref": "#/components/schemas/ConnectionDraining" },
          "ConnectionSettings": { "$ref": "#/components/schemas/ConnectionSettings" },
          "CrossZoneLoadBalancing": { "$ref": "#/components/schemas/CrossZoneLoadBalancing" }
        },
        "type": "object"
      },
      "LoadBalancerDescription": {
        "description": "Information about a load balancer.",
        "properties": {
          "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZones" },
          "BackendServerDescriptions": { "$ref": "#/components/schemas/BackendServerDescriptions" },
          "CanonicalHostedZoneName": { "$ref": "#/components/schemas/DNSName" },
          "CanonicalHostedZoneNameID": { "$ref": "#/components/schemas/DNSName" },
          "CreatedTime": { "$ref": "#/components/schemas/CreatedTime" },
          "DNSName": { "$ref": "#/components/schemas/DNSName" },
          "HealthCheck": { "$ref": "#/components/schemas/HealthCheck" },
          "Instances": { "$ref": "#/components/schemas/Instances" },
          "ListenerDescriptions": { "$ref": "#/components/schemas/ListenerDescriptions" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "Policies": { "$ref": "#/components/schemas/Policies" },
          "Scheme": { "$ref": "#/components/schemas/LoadBalancerScheme" },
          "SecurityGroups": { "$ref": "#/components/schemas/SecurityGroups" },
          "SourceSecurityGroup": { "$ref": "#/components/schemas/SourceSecurityGroup" },
          "Subnets": { "$ref": "#/components/schemas/Subnets" },
          "VPCId": { "$ref": "#/components/schemas/VPCId" }
        },
        "type": "object"
      },
      "LoadBalancerDescriptions": {
        "items": { "$ref": "#/components/schemas/LoadBalancerDescription" },
        "type": "array"
      },
      "LoadBalancerNames": { "items": { "$ref": "#/components/schemas/AccessPointName" }, "type": "array" },
      "LoadBalancerNamesMax20": {
        "items": { "$ref": "#/components/schemas/AccessPointName" },
        "maxItems": 20,
        "minItems": 1,
        "type": "array"
      },
      "LoadBalancerScheme": { "type": "string" },
      "Marker": { "type": "string" },
      "Max": { "type": "string" },
      "ModifyLoadBalancerAttributesInput": {
        "description": "Contains the parameters for ModifyLoadBalancerAttributes.",
        "properties": {
          "LoadBalancerAttributes": { "$ref": "#/components/schemas/LoadBalancerAttributes" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" }
        },
        "required": ["LoadBalancerName", "LoadBalancerAttributes"],
        "type": "object"
      },
      "ModifyLoadBalancerAttributesOutput": {
        "description": "Contains the output of ModifyLoadBalancerAttributes.",
        "example": {
          "LoadBalancerAttributes": { "ConnectionDraining": { "Enabled": true, "Timeout": 300 } },
          "LoadBalancerName": "my-load-balancer"
        },
        "properties": {
          "LoadBalancerAttributes": { "$ref": "#/components/schemas/LoadBalancerAttributes" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" }
        },
        "type": "object"
      },
      "Name": { "type": "string" },
      "OperationNotPermittedException": {},
      "PageSize": { "maximum": 400, "minimum": 1, "type": "integer" },
      "Policies": {
        "description": "The policies for a load balancer.",
        "properties": {
          "AppCookieStickinessPolicies": { "$ref": "#/components/schemas/AppCookieStickinessPolicies" },
          "LBCookieStickinessPolicies": { "$ref": "#/components/schemas/LBCookieStickinessPolicies" },
          "OtherPolicies": { "$ref": "#/components/schemas/PolicyNames" }
        },
        "type": "object"
      },
      "PolicyAttribute": {
        "description": "Information about a policy attribute.",
        "properties": {
          "AttributeName": { "$ref": "#/components/schemas/AttributeName" },
          "AttributeValue": { "$ref": "#/components/schemas/AttributeValue" }
        },
        "type": "object"
      },
      "PolicyAttributeDescription": {
        "description": "Information about a policy attribute.",
        "properties": {
          "AttributeName": { "$ref": "#/components/schemas/AttributeName" },
          "AttributeValue": { "$ref": "#/components/schemas/AttributeValue" }
        },
        "type": "object"
      },
      "PolicyAttributeDescriptions": {
        "items": { "$ref": "#/components/schemas/PolicyAttributeDescription" },
        "type": "array"
      },
      "PolicyAttributeTypeDescription": {
        "description": "Information about a policy attribute type.",
        "properties": {
          "AttributeName": { "$ref": "#/components/schemas/AttributeName" },
          "AttributeType": { "$ref": "#/components/schemas/AttributeType" },
          "Cardinality": { "$ref": "#/components/schemas/Cardinality" },
          "DefaultValue": { "$ref": "#/components/schemas/DefaultValue" },
          "Description": { "$ref": "#/components/schemas/Description" }
        },
        "type": "object"
      },
      "PolicyAttributeTypeDescriptions": {
        "items": { "$ref": "#/components/schemas/PolicyAttributeTypeDescription" },
        "type": "array"
      },
      "PolicyAttributes": { "items": { "$ref": "#/components/schemas/PolicyAttribute" }, "type": "array" },
      "PolicyDescription": {
        "description": "Information about a policy.",
        "properties": {
          "PolicyAttributeDescriptions": { "$ref": "#/components/schemas/PolicyAttributeDescriptions" },
          "PolicyName": { "$ref": "#/components/schemas/PolicyName" },
          "PolicyTypeName": { "$ref": "#/components/schemas/PolicyTypeName" }
        },
        "type": "object"
      },
      "PolicyDescriptions": { "items": { "$ref": "#/components/schemas/PolicyDescription" }, "type": "array" },
      "PolicyName": { "type": "string" },
      "PolicyNames": { "items": { "$ref": "#/components/schemas/PolicyName" }, "type": "array" },
      "PolicyNotFoundException": {},
      "PolicyTypeDescription": {
        "description": "Information about a policy type.",
        "properties": {
          "Description": { "$ref": "#/components/schemas/Description" },
          "PolicyAttributeTypeDescriptions": { "$ref": "#/components/schemas/PolicyAttributeTypeDescriptions" },
          "PolicyTypeName": { "$ref": "#/components/schemas/PolicyTypeName" }
        },
        "type": "object"
      },
      "PolicyTypeDescriptions": { "items": { "$ref": "#/components/schemas/PolicyTypeDescription" }, "type": "array" },
      "PolicyTypeName": { "type": "string" },
      "PolicyTypeNames": { "items": { "$ref": "#/components/schemas/PolicyTypeName" }, "type": "array" },
      "PolicyTypeNotFoundException": {},
      "Ports": { "items": { "$ref": "#/components/schemas/AccessPointPort" }, "type": "array" },
      "Protocol": { "type": "string" },
      "ReasonCode": { "type": "string" },
      "RegisterEndPointsInput": {
        "description": "Contains the parameters for RegisterInstancesWithLoadBalancer.",
        "properties": {
          "Instances": { "$ref": "#/components/schemas/Instances" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" }
        },
        "required": ["LoadBalancerName", "Instances"],
        "type": "object"
      },
      "RegisterEndPointsOutput": {
        "description": "Contains the output of RegisterInstancesWithLoadBalancer.",
        "example": {
          "Instances": [{ "InstanceId": "i-d6f6fae3" }, { "InstanceId": "i-207d9717" }, { "InstanceId": "i-afefb49b" }]
        },
        "properties": { "Instances": { "$ref": "#/components/schemas/Instances" } },
        "type": "object"
      },
      "RemoveAvailabilityZonesInput": {
        "description": "Contains the parameters for DisableAvailabilityZonesForLoadBalancer.",
        "properties": {
          "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZones" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" }
        },
        "required": ["LoadBalancerName", "AvailabilityZones"],
        "type": "object"
      },
      "RemoveAvailabilityZonesOutput": {
        "description": "Contains the output for DisableAvailabilityZonesForLoadBalancer.",
        "example": { "AvailabilityZones": ["us-west-2b"] },
        "properties": { "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZones" } },
        "type": "object"
      },
      "RemoveTagsInput": {
        "description": "Contains the parameters for RemoveTags.",
        "properties": {
          "LoadBalancerNames": { "$ref": "#/components/schemas/LoadBalancerNames" },
          "Tags": { "$ref": "#/components/schemas/TagKeyList" }
        },
        "required": ["LoadBalancerNames", "Tags"],
        "type": "object"
      },
      "RemoveTagsOutput": { "description": "Contains the output of RemoveTags.", "properties": {}, "type": "object" },
      "S3BucketName": { "type": "string" },
      "SSLCertificateId": { "type": "string" },
      "SecurityGroupId": { "type": "string" },
      "SecurityGroupName": { "type": "string" },
      "SecurityGroupOwnerAlias": { "type": "string" },
      "SecurityGroups": { "items": { "$ref": "#/components/schemas/SecurityGroupId" }, "type": "array" },
      "SetLoadBalancerListenerSSLCertificateInput": {
        "description": "Contains the parameters for SetLoadBalancerListenerSSLCertificate.",
        "properties": {
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "LoadBalancerPort": { "$ref": "#/components/schemas/AccessPointPort" },
          "SSLCertificateId": { "$ref": "#/components/schemas/SSLCertificateId" }
        },
        "required": ["LoadBalancerName", "LoadBalancerPort", "SSLCertificateId"],
        "type": "object"
      },
      "SetLoadBalancerListenerSSLCertificateOutput": {
        "description": "Contains the output of SetLoadBalancerListenerSSLCertificate.",
        "properties": {},
        "type": "object"
      },
      "SetLoadBalancerPoliciesForBackendServerInput": {
        "description": "Contains the parameters for SetLoadBalancerPoliciesForBackendServer.",
        "properties": {
          "InstancePort": { "$ref": "#/components/schemas/EndPointPort" },
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "PolicyNames": { "$ref": "#/components/schemas/PolicyNames" }
        },
        "required": ["LoadBalancerName", "InstancePort", "PolicyNames"],
        "type": "object"
      },
      "SetLoadBalancerPoliciesForBackendServerOutput": {
        "description": "Contains the output of SetLoadBalancerPoliciesForBackendServer.",
        "properties": {},
        "type": "object"
      },
      "SetLoadBalancerPoliciesOfListenerInput": {
        "description": "Contains the parameters for SetLoadBalancePoliciesOfListener.",
        "properties": {
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "LoadBalancerPort": { "$ref": "#/components/schemas/AccessPointPort" },
          "PolicyNames": { "$ref": "#/components/schemas/PolicyNames" }
        },
        "required": ["LoadBalancerName", "LoadBalancerPort", "PolicyNames"],
        "type": "object"
      },
      "SetLoadBalancerPoliciesOfListenerOutput": {
        "description": "Contains the output of SetLoadBalancePoliciesOfListener.",
        "properties": {},
        "type": "object"
      },
      "SourceSecurityGroup": {
        "description": "Information about a source security group.",
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/SecurityGroupName" },
          "OwnerAlias": { "$ref": "#/components/schemas/SecurityGroupOwnerAlias" }
        },
        "type": "object"
      },
      "State": { "type": "string" },
      "SubnetId": { "type": "string" },
      "SubnetNotFoundException": {},
      "Subnets": { "items": { "$ref": "#/components/schemas/SubnetId" }, "type": "array" },
      "Tag": {
        "description": "Information about a tag.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TagKey" },
          "Value": { "$ref": "#/components/schemas/TagValue" }
        },
        "required": ["Key"],
        "type": "object"
      },
      "TagDescription": {
        "description": "The tags associated with a load balancer.",
        "properties": {
          "LoadBalancerName": { "$ref": "#/components/schemas/AccessPointName" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "TagDescriptions": { "items": { "$ref": "#/components/schemas/TagDescription" }, "type": "array" },
      "TagKey": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "TagKeyList": { "items": { "$ref": "#/components/schemas/TagKeyOnly" }, "minItems": 1, "type": "array" },
      "TagKeyOnly": {
        "description": "The key of a tag.",
        "properties": { "Key": { "$ref": "#/components/schemas/TagKey" } },
        "type": "object"
      },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "minItems": 1, "type": "array" },
      "TagValue": {
        "maxLength": 256,
        "minLength": 0,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "TooManyAccessPointsException": {},
      "TooManyPoliciesException": {},
      "TooManyTagsException": {},
      "UnhealthyThreshold": { "maximum": 10, "minimum": 2, "type": "integer" },
      "UnsupportedProtocolException": {},
      "VPCId": { "type": "string" }
    }
  }
}
