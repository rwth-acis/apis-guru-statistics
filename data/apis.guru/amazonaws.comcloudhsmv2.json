{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "For more information about AWS CloudHSM, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a> and the <a href=\"http://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>.",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS CloudHSM V2",
    "version": "2017-04-28",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cloudhsmv2-2017-04-28.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "cloudhsmv2"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/cloudhsmv2/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=BaldrApiService.CopyBackupToRegion": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Copy an AWS CloudHSM cluster backup to a different region.",
        "operationId": "CopyBackupToRegion",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.CopyBackupToRegion"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CopyBackupToRegionRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CopyBackupToRegionResponse" } }
            }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.CreateCluster": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a new AWS CloudHSM cluster.",
        "operationId": "CreateCluster",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.CreateCluster"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateClusterRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateClusterResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.CreateHsm": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a new hardware security module (HSM) in the specified AWS CloudHSM cluster.",
        "operationId": "CreateHsm",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.CreateHsm"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateHsmRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateHsmResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.DeleteBackup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes a specified AWS CloudHSM backup. A backup can be restored up to 7 days after the DeleteBackup request. For more information on restoring a backup, see <a>RestoreBackup</a> ",
        "operationId": "DeleteBackup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.DeleteBackup"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteBackupRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteBackupResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.DeleteCluster": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified AWS CloudHSM cluster. Before you can delete a cluster, you must delete all HSMs in the cluster. To see if the cluster contains any HSMs, use <a>DescribeClusters</a>. To delete an HSM, use <a>DeleteHsm</a>.",
        "operationId": "DeleteCluster",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.DeleteCluster"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteClusterRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteClusterResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.DeleteHsm": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified HSM. To specify an HSM, you can use its identifier (ID), the IP address of the HSM's elastic network interface (ENI), or the ID of the HSM's ENI. You need to specify only one of these values. To find these values, use <a>DescribeClusters</a>.",
        "operationId": "DeleteHsm",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.DeleteHsm"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteHsmRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteHsmResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.DescribeBackups": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Gets information about backups of AWS CloudHSM clusters.</p> <p>This is a paginated operation, which means that each response might contain only a subset of all the backups. When the response contains only a subset of backups, it includes a <code>NextToken</code> value. Use this value in a subsequent <code>DescribeBackups</code> request to get more backups. When you receive a response with no <code>NextToken</code> (or an empty or null value), that means there are no more backups to get.</p>",
        "operationId": "DescribeBackups",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.DescribeBackups"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeBackupsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeBackupsResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.DescribeClusters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Gets information about AWS CloudHSM clusters.</p> <p>This is a paginated operation, which means that each response might contain only a subset of all the clusters. When the response contains only a subset of clusters, it includes a <code>NextToken</code> value. Use this value in a subsequent <code>DescribeClusters</code> request to get more clusters. When you receive a response with no <code>NextToken</code> (or an empty or null value), that means there are no more clusters to get.</p>",
        "operationId": "DescribeClusters",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.DescribeClusters"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeClustersRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeClustersResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "483": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.InitializeCluster": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Claims an AWS CloudHSM cluster by submitting the cluster certificate issued by your issuing certificate authority (CA) and the CA's root certificate. Before you can claim a cluster, you must sign the cluster's certificate signing request (CSR) with your issuing CA. To get the cluster's CSR, use <a>DescribeClusters</a>.",
        "operationId": "InitializeCluster",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.InitializeCluster"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InitializeClusterRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InitializeClusterResponse" } }
            }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.ListTags": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Gets a list of tags for the specified AWS CloudHSM cluster.</p> <p>This is a paginated operation, which means that each response might contain only a subset of all the tags. When the response contains only a subset of tags, it includes a <code>NextToken</code> value. Use this value in a subsequent <code>ListTags</code> request to get more tags. When you receive a response with no <code>NextToken</code> (or an empty or null value), that means there are no more tags to get.</p>",
        "operationId": "ListTags",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.ListTags"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.RestoreBackup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Restores a specified AWS CloudHSM backup that is in the <code>PENDING_DELETION</code> state. For more information on deleting a backup, see <a>DeleteBackup</a>.",
        "operationId": "RestoreBackup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.RestoreBackup"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RestoreBackupRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RestoreBackupResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.TagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Adds or overwrites one or more tags for the specified AWS CloudHSM cluster.",
        "operationId": "TagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.TagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=BaldrApiService.UntagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes the specified tag or tags from the specified AWS CloudHSM cluster.",
        "operationId": "UntagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["BaldrApiService.UntagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceResponse" } } }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInternalFailureException" } }
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmServiceException" } } }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmInvalidRequestException" } }
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloudHsmAccessDeniedException" } }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The CloudHSM V2 multi-region endpoint",
      "url": "http://cloudhsmv2.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The CloudHSM V2 multi-region endpoint",
      "url": "https://cloudhsmv2.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The CloudHSM V2 endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://cloudhsmv2.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The CloudHSM V2 endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://cloudhsmv2.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "Backup": {
        "description": "Contains information about a backup of an AWS CloudHSM cluster.",
        "properties": {
          "BackupId": { "$ref": "#/components/schemas/BackupId" },
          "BackupState": { "$ref": "#/components/schemas/BackupState" },
          "ClusterId": { "$ref": "#/components/schemas/ClusterId" },
          "CopyTimestamp": { "$ref": "#/components/schemas/Timestamp" },
          "CreateTimestamp": { "$ref": "#/components/schemas/Timestamp" },
          "DeleteTimestamp": { "$ref": "#/components/schemas/Timestamp" },
          "SourceBackup": { "$ref": "#/components/schemas/BackupId" },
          "SourceCluster": { "$ref": "#/components/schemas/ClusterId" },
          "SourceRegion": { "$ref": "#/components/schemas/Region" }
        },
        "required": ["BackupId"],
        "type": "object"
      },
      "BackupId": { "pattern": "backup-[2-7a-zA-Z]{11,16}", "type": "string" },
      "BackupPolicy": { "enum": ["DEFAULT"], "type": "string" },
      "BackupState": { "enum": ["CREATE_IN_PROGRESS", "READY", "DELETED", "PENDING_DELETION"], "type": "string" },
      "Backups": { "items": { "$ref": "#/components/schemas/Backup" }, "type": "array" },
      "Boolean": { "type": "boolean" },
      "Cert": { "maxLength": 5000, "pattern": "[a-zA-Z0-9+-/=\\s]*", "type": "string" },
      "Certificates": {
        "description": "Contains one or more certificates or a certificate signing request (CSR).",
        "properties": {
          "AwsHardwareCertificate": { "$ref": "#/components/schemas/Cert" },
          "ClusterCertificate": { "$ref": "#/components/schemas/Cert" },
          "ClusterCsr": { "$ref": "#/components/schemas/Cert" },
          "HsmCertificate": { "$ref": "#/components/schemas/Cert" },
          "ManufacturerHardwareCertificate": { "$ref": "#/components/schemas/Cert" }
        },
        "type": "object"
      },
      "CloudHsmAccessDeniedException": {},
      "CloudHsmInternalFailureException": {},
      "CloudHsmInvalidRequestException": {},
      "CloudHsmResourceNotFoundException": {},
      "CloudHsmServiceException": {},
      "Cluster": {
        "description": "Contains information about an AWS CloudHSM cluster.",
        "properties": {
          "BackupPolicy": { "$ref": "#/components/schemas/BackupPolicy" },
          "Certificates": { "$ref": "#/components/schemas/Certificates" },
          "ClusterId": { "$ref": "#/components/schemas/ClusterId" },
          "CreateTimestamp": { "$ref": "#/components/schemas/Timestamp" },
          "HsmType": { "$ref": "#/components/schemas/HsmType" },
          "Hsms": { "$ref": "#/components/schemas/Hsms" },
          "PreCoPassword": { "$ref": "#/components/schemas/PreCoPassword" },
          "SecurityGroup": { "$ref": "#/components/schemas/SecurityGroup" },
          "SourceBackupId": { "$ref": "#/components/schemas/BackupId" },
          "State": { "$ref": "#/components/schemas/ClusterState" },
          "StateMessage": { "$ref": "#/components/schemas/StateMessage" },
          "SubnetMapping": { "$ref": "#/components/schemas/ExternalSubnetMapping" },
          "VpcId": { "$ref": "#/components/schemas/VpcId" }
        },
        "type": "object"
      },
      "ClusterId": { "pattern": "cluster-[2-7a-zA-Z]{11,16}", "type": "string" },
      "ClusterState": {
        "enum": [
          "CREATE_IN_PROGRESS",
          "UNINITIALIZED",
          "INITIALIZE_IN_PROGRESS",
          "INITIALIZED",
          "ACTIVE",
          "UPDATE_IN_PROGRESS",
          "DELETE_IN_PROGRESS",
          "DELETED",
          "DEGRADED"
        ],
        "type": "string"
      },
      "Clusters": { "items": { "$ref": "#/components/schemas/Cluster" }, "type": "array" },
      "CopyBackupToRegionRequest": {
        "properties": {
          "BackupId": { "$ref": "#/components/schemas/BackupId" },
          "DestinationRegion": { "$ref": "#/components/schemas/Region" }
        },
        "required": ["DestinationRegion", "BackupId"],
        "type": "object"
      },
      "CopyBackupToRegionResponse": {
        "properties": { "DestinationBackup": { "$ref": "#/components/schemas/DestinationBackup" } },
        "type": "object"
      },
      "CreateClusterRequest": {
        "properties": {
          "HsmType": { "$ref": "#/components/schemas/HsmType" },
          "SourceBackupId": { "$ref": "#/components/schemas/BackupId" },
          "SubnetIds": { "$ref": "#/components/schemas/SubnetIds" }
        },
        "required": ["SubnetIds", "HsmType"],
        "type": "object"
      },
      "CreateClusterResponse": {
        "properties": { "Cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "CreateHsmRequest": {
        "properties": {
          "AvailabilityZone": { "$ref": "#/components/schemas/ExternalAz" },
          "ClusterId": { "$ref": "#/components/schemas/ClusterId" },
          "IpAddress": { "$ref": "#/components/schemas/IpAddress" }
        },
        "required": ["ClusterId", "AvailabilityZone"],
        "type": "object"
      },
      "CreateHsmResponse": { "properties": { "Hsm": { "$ref": "#/components/schemas/Hsm" } }, "type": "object" },
      "DeleteBackupRequest": {
        "properties": { "BackupId": { "$ref": "#/components/schemas/BackupId" } },
        "required": ["BackupId"],
        "type": "object"
      },
      "DeleteBackupResponse": {
        "properties": { "Backup": { "$ref": "#/components/schemas/Backup" } },
        "type": "object"
      },
      "DeleteClusterRequest": {
        "properties": { "ClusterId": { "$ref": "#/components/schemas/ClusterId" } },
        "required": ["ClusterId"],
        "type": "object"
      },
      "DeleteClusterResponse": {
        "properties": { "Cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "DeleteHsmRequest": {
        "properties": {
          "ClusterId": { "$ref": "#/components/schemas/ClusterId" },
          "EniId": { "$ref": "#/components/schemas/EniId" },
          "EniIp": { "$ref": "#/components/schemas/IpAddress" },
          "HsmId": { "$ref": "#/components/schemas/HsmId" }
        },
        "required": ["ClusterId"],
        "type": "object"
      },
      "DeleteHsmResponse": { "properties": { "HsmId": { "$ref": "#/components/schemas/HsmId" } }, "type": "object" },
      "DescribeBackupsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/Filters" },
          "MaxResults": { "$ref": "#/components/schemas/MaxSize" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "SortAscending": { "$ref": "#/components/schemas/Boolean" }
        },
        "type": "object"
      },
      "DescribeBackupsResponse": {
        "properties": {
          "Backups": { "$ref": "#/components/schemas/Backups" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeClustersRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/Filters" },
          "MaxResults": { "$ref": "#/components/schemas/MaxSize" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeClustersResponse": {
        "properties": {
          "Clusters": { "$ref": "#/components/schemas/Clusters" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DestinationBackup": {
        "properties": {
          "CreateTimestamp": { "$ref": "#/components/schemas/Timestamp" },
          "SourceBackup": { "$ref": "#/components/schemas/BackupId" },
          "SourceCluster": { "$ref": "#/components/schemas/ClusterId" },
          "SourceRegion": { "$ref": "#/components/schemas/Region" }
        },
        "type": "object"
      },
      "EniId": { "pattern": "eni-[0-9a-fA-F]{8,17}", "type": "string" },
      "ExternalAz": { "pattern": "[a-z]{2}(-(gov))?-(east|west|north|south|central){1,2}-\\d[a-z]", "type": "string" },
      "ExternalSubnetMapping": {
        "additionalProperties": { "$ref": "#/components/schemas/SubnetId" },
        "type": "object"
      },
      "Field": { "pattern": "[a-zA-Z0-9_-]+", "type": "string" },
      "Filters": { "additionalProperties": { "$ref": "#/components/schemas/Strings" }, "type": "object" },
      "Hsm": {
        "description": "Contains information about a hardware security module (HSM) in an AWS CloudHSM cluster.",
        "properties": {
          "AvailabilityZone": { "$ref": "#/components/schemas/ExternalAz" },
          "ClusterId": { "$ref": "#/components/schemas/ClusterId" },
          "EniId": { "$ref": "#/components/schemas/EniId" },
          "EniIp": { "$ref": "#/components/schemas/IpAddress" },
          "HsmId": { "$ref": "#/components/schemas/HsmId" },
          "State": { "$ref": "#/components/schemas/HsmState" },
          "StateMessage": { "$ref": "#/components/schemas/String" },
          "SubnetId": { "$ref": "#/components/schemas/SubnetId" }
        },
        "required": ["HsmId"],
        "type": "object"
      },
      "HsmId": { "pattern": "hsm-[2-7a-zA-Z]{11,16}", "type": "string" },
      "HsmState": {
        "enum": ["CREATE_IN_PROGRESS", "ACTIVE", "DEGRADED", "DELETE_IN_PROGRESS", "DELETED"],
        "type": "string"
      },
      "HsmType": { "pattern": "(hsm1\\.medium)", "type": "string" },
      "Hsms": { "items": { "$ref": "#/components/schemas/Hsm" }, "type": "array" },
      "InitializeClusterRequest": {
        "properties": {
          "ClusterId": { "$ref": "#/components/schemas/ClusterId" },
          "SignedCert": { "$ref": "#/components/schemas/Cert" },
          "TrustAnchor": { "$ref": "#/components/schemas/Cert" }
        },
        "required": ["ClusterId", "SignedCert", "TrustAnchor"],
        "type": "object"
      },
      "InitializeClusterResponse": {
        "properties": {
          "State": { "$ref": "#/components/schemas/ClusterState" },
          "StateMessage": { "$ref": "#/components/schemas/StateMessage" }
        },
        "type": "object"
      },
      "IpAddress": { "pattern": "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}", "type": "string" },
      "ListTagsRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/MaxSize" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResourceId": { "$ref": "#/components/schemas/ClusterId" }
        },
        "required": ["ResourceId"],
        "type": "object"
      },
      "ListTagsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "TagList": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["TagList"],
        "type": "object"
      },
      "MaxSize": { "maximum": 100, "minimum": 1, "type": "integer" },
      "NextToken": { "maxLength": 256, "pattern": ".*", "type": "string" },
      "PreCoPassword": { "maxLength": 32, "minLength": 7, "type": "string" },
      "Region": { "pattern": "[a-z]{2}(-(gov))?-(east|west|north|south|central){1,2}-\\d", "type": "string" },
      "RestoreBackupRequest": {
        "properties": { "BackupId": { "$ref": "#/components/schemas/BackupId" } },
        "required": ["BackupId"],
        "type": "object"
      },
      "RestoreBackupResponse": {
        "properties": { "Backup": { "$ref": "#/components/schemas/Backup" } },
        "type": "object"
      },
      "SecurityGroup": { "pattern": "sg-[0-9a-fA-F]", "type": "string" },
      "StateMessage": { "maxLength": 300, "pattern": ".*", "type": "string" },
      "String": { "type": "string" },
      "Strings": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "SubnetId": { "pattern": "subnet-[0-9a-fA-F]{8,17}", "type": "string" },
      "SubnetIds": {
        "items": { "$ref": "#/components/schemas/SubnetId" },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "Tag": {
        "description": "Contains a tag. A tag is a key-value pair.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TagKey" },
          "Value": { "$ref": "#/components/schemas/TagValue" }
        },
        "required": ["Key", "Value"],
        "type": "object"
      },
      "TagKey": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "TagKeyList": {
        "items": { "$ref": "#/components/schemas/TagKey" },
        "maxItems": 50,
        "minItems": 1,
        "type": "array"
      },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "maxItems": 50, "minItems": 1, "type": "array" },
      "TagResourceRequest": {
        "properties": {
          "ResourceId": { "$ref": "#/components/schemas/ClusterId" },
          "TagList": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["ResourceId", "TagList"],
        "type": "object"
      },
      "TagResourceResponse": { "properties": {}, "type": "object" },
      "TagValue": {
        "maxLength": 256,
        "minLength": 0,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "Timestamp": { "format": "date-time", "type": "string" },
      "UntagResourceRequest": {
        "properties": {
          "ResourceId": { "$ref": "#/components/schemas/ClusterId" },
          "TagKeyList": { "$ref": "#/components/schemas/TagKeyList" }
        },
        "required": ["ResourceId", "TagKeyList"],
        "type": "object"
      },
      "UntagResourceResponse": { "properties": {}, "type": "object" },
      "VpcId": { "pattern": "vpc-[0-9a-fA-F]", "type": "string" }
    }
  }
}
