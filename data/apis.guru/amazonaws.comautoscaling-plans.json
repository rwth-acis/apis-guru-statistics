{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Auto Scaling</fullname> <p>Use AWS Auto Scaling to quickly discover all the scalable AWS resources for your application and configure dynamic scaling and predictive scaling for your resources using scaling plans. Use this service in conjunction with the Amazon EC2 Auto Scaling, Application Auto Scaling, Amazon CloudWatch, and AWS CloudFormation services. </p> <p>Currently, predictive scaling is only available for Amazon EC2 Auto Scaling groups.</p> <p>For more information about AWS Auto Scaling, including information about granting IAM users required permissions for AWS Auto Scaling actions, see the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html\">AWS Auto Scaling User Guide</a>.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Auto Scaling Plans",
    "version": "2018-01-06",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/autoscaling-plans-2018-01-06.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "autoscaling-plans"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/autoscaling/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=AnyScaleScalingPlannerFrontendService.CreateScalingPlan": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a scaling plan.",
        "operationId": "CreateScalingPlan",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AnyScaleScalingPlannerFrontendService.CreateScalingPlan"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateScalingPlanRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateScalingPlanResponse" } }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ConcurrentUpdateException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ConcurrentUpdateException" } }
            }
          },
          "483": {
            "description": "InternalServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AnyScaleScalingPlannerFrontendService.DeleteScalingPlan": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified scaling plan.</p> <p>Deleting a scaling plan deletes the underlying <a>ScalingInstruction</a> for all of the scalable resources that are covered by the plan.</p> <p>If the plan has launched resources or has scaling activities in progress, you must delete those resources separately.</p>",
        "operationId": "DeleteScalingPlan",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AnyScaleScalingPlannerFrontendService.DeleteScalingPlan"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteScalingPlanRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteScalingPlanResponse" } }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "ObjectNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ObjectNotFoundException" } } }
          },
          "482": {
            "description": "ConcurrentUpdateException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ConcurrentUpdateException" } }
            }
          },
          "483": {
            "description": "InternalServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AnyScaleScalingPlannerFrontendService.DescribeScalingPlanResources": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the scalable resources in the specified scaling plan.",
        "operationId": "DescribeScalingPlanResources",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AnyScaleScalingPlannerFrontendService.DescribeScalingPlanResources"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeScalingPlanResourcesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeScalingPlanResourcesResponse" } }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "482": {
            "description": "ConcurrentUpdateException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ConcurrentUpdateException" } }
            }
          },
          "483": {
            "description": "InternalServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AnyScaleScalingPlannerFrontendService.DescribeScalingPlans": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes one or more of your scaling plans.",
        "operationId": "DescribeScalingPlans",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AnyScaleScalingPlannerFrontendService.DescribeScalingPlans"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeScalingPlansRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeScalingPlansResponse" } }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "482": {
            "description": "ConcurrentUpdateException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ConcurrentUpdateException" } }
            }
          },
          "483": {
            "description": "InternalServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AnyScaleScalingPlannerFrontendService.GetScalingPlanResourceForecastData": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves the forecast data for a scalable resource.</p> <p>Capacity forecasts are represented as predicted values, or data points, that are calculated using historical data points from a specified CloudWatch load metric. Data points are available for up to 56 days. </p>",
        "operationId": "GetScalingPlanResourceForecastData",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AnyScaleScalingPlannerFrontendService.GetScalingPlanResourceForecastData"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetScalingPlanResourceForecastDataRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetScalingPlanResourceForecastDataResponse" }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InternalServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AnyScaleScalingPlannerFrontendService.UpdateScalingPlan": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the specified scaling plan.</p> <p>You cannot update a scaling plan if it is in the process of being created, updated, or deleted.</p>",
        "operationId": "UpdateScalingPlan",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AnyScaleScalingPlannerFrontendService.UpdateScalingPlan"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateScalingPlanRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateScalingPlanResponse" } }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "ConcurrentUpdateException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ConcurrentUpdateException" } }
            }
          },
          "482": {
            "description": "InternalServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceException" } } }
          },
          "483": {
            "description": "ObjectNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ObjectNotFoundException" } } }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The AWS Auto Scaling Plans multi-region endpoint",
      "url": "http://autoscaling.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS Auto Scaling Plans multi-region endpoint",
      "url": "https://autoscaling.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The general AWS Auto Scaling Plans endpoint for US East (N. Virginia)",
      "url": "http://autoscaling.amazonaws.com",
      "variables": {}
    },
    {
      "description": "The general AWS Auto Scaling Plans endpoint for US East (N. Virginia)",
      "url": "https://autoscaling.amazonaws.com",
      "variables": {}
    },
    {
      "description": "The AWS Auto Scaling Plans endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://autoscaling.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The AWS Auto Scaling Plans endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://autoscaling.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "ApplicationSource": {
        "description": "Represents an application source.",
        "properties": {
          "CloudFormationStackARN": { "$ref": "#/components/schemas/XmlString" },
          "TagFilters": { "$ref": "#/components/schemas/TagFilters" }
        },
        "type": "object"
      },
      "ApplicationSources": { "items": { "$ref": "#/components/schemas/ApplicationSource" }, "type": "array" },
      "ConcurrentUpdateException": {},
      "Cooldown": { "type": "integer" },
      "CreateScalingPlanRequest": {
        "properties": {
          "ApplicationSource": { "$ref": "#/components/schemas/ApplicationSource" },
          "ScalingInstructions": { "$ref": "#/components/schemas/ScalingInstructions" },
          "ScalingPlanName": { "$ref": "#/components/schemas/ScalingPlanName" }
        },
        "required": ["ScalingPlanName", "ApplicationSource", "ScalingInstructions"],
        "type": "object"
      },
      "CreateScalingPlanResponse": {
        "properties": { "ScalingPlanVersion": { "$ref": "#/components/schemas/ScalingPlanVersion" } },
        "required": ["ScalingPlanVersion"],
        "type": "object"
      },
      "CustomizedLoadMetricSpecification": {
        "description": "<p>Represents a CloudWatch metric of your choosing that can be used for predictive scaling. </p> <p>For predictive scaling to work with a customized load metric specification, AWS Auto Scaling needs access to the <code>Sum</code> and <code>Average</code> statistics that CloudWatch computes from metric data. Statistics are calculations used to aggregate data over specified time periods.</p> <p>When you choose a load metric, make sure that the required <code>Sum</code> and <code>Average</code> statistics for your metric are available in CloudWatch and that they provide relevant data for predictive scaling. The <code>Sum</code> statistic must represent the total load on the resource, and the <code>Average</code> statistic must represent the average load per capacity unit of the resource. For example, there is a metric that counts the number of requests processed by your Auto Scaling group. If the <code>Sum</code> statistic represents the total request count processed by the group, then the <code>Average</code> statistic for the specified metric must represent the average request count processed by each instance of the group.</p> <p>For information about terminology, available metrics, or how to publish new metrics, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html\">Amazon CloudWatch Concepts</a> in the <i>Amazon CloudWatch User Guide</i>. </p>",
        "properties": {
          "Dimensions": { "$ref": "#/components/schemas/MetricDimensions" },
          "MetricName": { "$ref": "#/components/schemas/MetricName" },
          "Namespace": { "$ref": "#/components/schemas/MetricNamespace" },
          "Statistic": { "$ref": "#/components/schemas/MetricStatistic" },
          "Unit": { "$ref": "#/components/schemas/MetricUnit" }
        },
        "required": ["MetricName", "Namespace", "Statistic"],
        "type": "object"
      },
      "CustomizedScalingMetricSpecification": {
        "description": "<p>Represents a CloudWatch metric of your choosing that can be used for dynamic scaling as part of a target tracking scaling policy. </p> <p>To create your customized scaling metric specification:</p> <ul> <li> <p>Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html\">Publish Custom Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </li> <li> <p>Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases. </p> </li> </ul> <p>For more information about CloudWatch, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html\">Amazon CloudWatch Concepts</a>. </p>",
        "properties": {
          "Dimensions": { "$ref": "#/components/schemas/MetricDimensions" },
          "MetricName": { "$ref": "#/components/schemas/MetricName" },
          "Namespace": { "$ref": "#/components/schemas/MetricNamespace" },
          "Statistic": { "$ref": "#/components/schemas/MetricStatistic" },
          "Unit": { "$ref": "#/components/schemas/MetricUnit" }
        },
        "required": ["MetricName", "Namespace", "Statistic"],
        "type": "object"
      },
      "Datapoint": {
        "description": "Represents a single value in the forecast data used for predictive scaling.",
        "properties": {
          "Timestamp": { "$ref": "#/components/schemas/TimestampType" },
          "Value": { "$ref": "#/components/schemas/MetricScale" }
        },
        "type": "object"
      },
      "Datapoints": { "items": { "$ref": "#/components/schemas/Datapoint" }, "type": "array" },
      "DeleteScalingPlanRequest": {
        "properties": {
          "ScalingPlanName": { "$ref": "#/components/schemas/ScalingPlanName" },
          "ScalingPlanVersion": { "$ref": "#/components/schemas/ScalingPlanVersion" }
        },
        "required": ["ScalingPlanName", "ScalingPlanVersion"],
        "type": "object"
      },
      "DeleteScalingPlanResponse": { "properties": {}, "type": "object" },
      "DescribeScalingPlanResourcesRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ScalingPlanName": { "$ref": "#/components/schemas/ScalingPlanName" },
          "ScalingPlanVersion": { "$ref": "#/components/schemas/ScalingPlanVersion" }
        },
        "required": ["ScalingPlanName", "ScalingPlanVersion"],
        "type": "object"
      },
      "DescribeScalingPlanResourcesResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ScalingPlanResources": { "$ref": "#/components/schemas/ScalingPlanResources" }
        },
        "type": "object"
      },
      "DescribeScalingPlansRequest": {
        "properties": {
          "ApplicationSources": { "$ref": "#/components/schemas/ApplicationSources" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ScalingPlanNames": { "$ref": "#/components/schemas/ScalingPlanNames" },
          "ScalingPlanVersion": { "$ref": "#/components/schemas/ScalingPlanVersion" }
        },
        "type": "object"
      },
      "DescribeScalingPlansResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ScalingPlans": { "$ref": "#/components/schemas/ScalingPlans" }
        },
        "type": "object"
      },
      "DisableDynamicScaling": { "type": "boolean" },
      "DisableScaleIn": { "type": "boolean" },
      "ForecastDataType": {
        "enum": ["CapacityForecast", "LoadForecast", "ScheduledActionMinCapacity", "ScheduledActionMaxCapacity"],
        "type": "string"
      },
      "GetScalingPlanResourceForecastDataRequest": {
        "properties": {
          "EndTime": { "$ref": "#/components/schemas/TimestampType" },
          "ForecastDataType": { "$ref": "#/components/schemas/ForecastDataType" },
          "ResourceId": { "$ref": "#/components/schemas/XmlString" },
          "ScalableDimension": { "$ref": "#/components/schemas/ScalableDimension" },
          "ScalingPlanName": { "$ref": "#/components/schemas/ScalingPlanName" },
          "ScalingPlanVersion": { "$ref": "#/components/schemas/ScalingPlanVersion" },
          "ServiceNamespace": { "$ref": "#/components/schemas/ServiceNamespace" },
          "StartTime": { "$ref": "#/components/schemas/TimestampType" }
        },
        "required": [
          "ScalingPlanName",
          "ScalingPlanVersion",
          "ServiceNamespace",
          "ResourceId",
          "ScalableDimension",
          "ForecastDataType",
          "StartTime",
          "EndTime"
        ],
        "type": "object"
      },
      "GetScalingPlanResourceForecastDataResponse": {
        "properties": { "Datapoints": { "$ref": "#/components/schemas/Datapoints" } },
        "required": ["Datapoints"],
        "type": "object"
      },
      "InternalServiceException": {},
      "InvalidNextTokenException": {},
      "LimitExceededException": {},
      "LoadMetricType": {
        "enum": ["ASGTotalCPUUtilization", "ASGTotalNetworkIn", "ASGTotalNetworkOut", "ALBTargetGroupRequestCount"],
        "type": "string"
      },
      "MaxResults": { "type": "integer" },
      "MetricDimension": {
        "description": "Represents a dimension for a customized metric.",
        "properties": {
          "Name": { "$ref": "#/components/schemas/MetricDimensionName" },
          "Value": { "$ref": "#/components/schemas/MetricDimensionValue" }
        },
        "required": ["Name", "Value"],
        "type": "object"
      },
      "MetricDimensionName": { "type": "string" },
      "MetricDimensionValue": { "type": "string" },
      "MetricDimensions": { "items": { "$ref": "#/components/schemas/MetricDimension" }, "type": "array" },
      "MetricName": { "type": "string" },
      "MetricNamespace": { "type": "string" },
      "MetricScale": { "format": "double", "type": "number" },
      "MetricStatistic": { "enum": ["Average", "Minimum", "Maximum", "SampleCount", "Sum"], "type": "string" },
      "MetricUnit": { "type": "string" },
      "NextToken": { "type": "string" },
      "ObjectNotFoundException": {},
      "PolicyName": { "maxLength": 256, "minLength": 1, "pattern": "\\p{Print}+", "type": "string" },
      "PolicyType": { "enum": ["TargetTrackingScaling"], "type": "string" },
      "PredefinedLoadMetricSpecification": {
        "description": "Represents a predefined metric that can be used for predictive scaling. ",
        "properties": {
          "PredefinedLoadMetricType": { "$ref": "#/components/schemas/LoadMetricType" },
          "ResourceLabel": { "$ref": "#/components/schemas/ResourceLabel" }
        },
        "required": ["PredefinedLoadMetricType"],
        "type": "object"
      },
      "PredefinedScalingMetricSpecification": {
        "description": "Represents a predefined metric that can be used for dynamic scaling as part of a target tracking scaling policy.",
        "properties": {
          "PredefinedScalingMetricType": { "$ref": "#/components/schemas/ScalingMetricType" },
          "ResourceLabel": { "$ref": "#/components/schemas/ResourceLabel" }
        },
        "required": ["PredefinedScalingMetricType"],
        "type": "object"
      },
      "PredictiveScalingMaxCapacityBehavior": {
        "enum": [
          "SetForecastCapacityToMaxCapacity",
          "SetMaxCapacityToForecastCapacity",
          "SetMaxCapacityAboveForecastCapacity"
        ],
        "type": "string"
      },
      "PredictiveScalingMode": { "enum": ["ForecastAndScale", "ForecastOnly"], "type": "string" },
      "ResourceCapacity": { "type": "integer" },
      "ResourceIdMaxLen1600": {
        "maxLength": 1600,
        "minLength": 1,
        "type": "string",
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "ResourceLabel": { "maxLength": 1023, "minLength": 1, "type": "string" },
      "ScalableDimension": {
        "enum": [
          "autoscaling:autoScalingGroup:DesiredCapacity",
          "ecs:service:DesiredCount",
          "ec2:spot-fleet-request:TargetCapacity",
          "rds:cluster:ReadReplicaCount",
          "dynamodb:table:ReadCapacityUnits",
          "dynamodb:table:WriteCapacityUnits",
          "dynamodb:index:ReadCapacityUnits",
          "dynamodb:index:WriteCapacityUnits"
        ],
        "type": "string"
      },
      "ScalingInstruction": {
        "description": "<p>Describes a scaling instruction for a scalable resource.</p> <p>The scaling instruction is used in combination with a scaling plan, which is a set of instructions for configuring dynamic scaling and predictive scaling for the scalable resources in your application. Each scaling instruction applies to one resource.</p> <p>AWS Auto Scaling creates target tracking scaling policies based on the scaling instructions. Target tracking scaling policies adjust the capacity of your scalable resource as required to maintain resource utilization at the target value that you specified. </p> <p>AWS Auto Scaling also configures predictive scaling for your Amazon EC2 Auto Scaling groups using a subset of parameters, including the load metric, the scaling metric, the target value for the scaling metric, the predictive scaling mode (forecast and scale or forecast only), and the desired behavior when the forecast capacity exceeds the maximum capacity of the resource. With predictive scaling, AWS Auto Scaling generates forecasts with traffic predictions for the two days ahead and schedules scaling actions that proactively add and remove resource capacity to match the forecast. </p> <p>We recommend waiting a minimum of 24 hours after creating an Auto Scaling group to configure predictive scaling. At minimum, there must be 24 hours of historical data to generate a forecast.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/plans/userguide/auto-scaling-getting-started.html\">Getting Started with AWS Auto Scaling</a>.</p>",
        "properties": {
          "CustomizedLoadMetricSpecification": { "$ref": "#/components/schemas/CustomizedLoadMetricSpecification" },
          "DisableDynamicScaling": { "$ref": "#/components/schemas/DisableDynamicScaling" },
          "MaxCapacity": { "$ref": "#/components/schemas/ResourceCapacity" },
          "MinCapacity": { "$ref": "#/components/schemas/ResourceCapacity" },
          "PredefinedLoadMetricSpecification": { "$ref": "#/components/schemas/PredefinedLoadMetricSpecification" },
          "PredictiveScalingMaxCapacityBehavior": {
            "$ref": "#/components/schemas/PredictiveScalingMaxCapacityBehavior"
          },
          "PredictiveScalingMaxCapacityBuffer": { "$ref": "#/components/schemas/ResourceCapacity" },
          "PredictiveScalingMode": { "$ref": "#/components/schemas/PredictiveScalingMode" },
          "ResourceId": { "$ref": "#/components/schemas/ResourceIdMaxLen1600" },
          "ScalableDimension": { "$ref": "#/components/schemas/ScalableDimension" },
          "ScalingPolicyUpdateBehavior": { "$ref": "#/components/schemas/ScalingPolicyUpdateBehavior" },
          "ScheduledActionBufferTime": { "$ref": "#/components/schemas/ScheduledActionBufferTime" },
          "ServiceNamespace": { "$ref": "#/components/schemas/ServiceNamespace" },
          "TargetTrackingConfigurations": { "$ref": "#/components/schemas/TargetTrackingConfigurations" }
        },
        "required": [
          "ServiceNamespace",
          "ResourceId",
          "ScalableDimension",
          "MinCapacity",
          "MaxCapacity",
          "TargetTrackingConfigurations"
        ],
        "type": "object"
      },
      "ScalingInstructions": { "items": { "$ref": "#/components/schemas/ScalingInstruction" }, "type": "array" },
      "ScalingMetricType": {
        "enum": [
          "ASGAverageCPUUtilization",
          "ASGAverageNetworkIn",
          "ASGAverageNetworkOut",
          "DynamoDBReadCapacityUtilization",
          "DynamoDBWriteCapacityUtilization",
          "ECSServiceAverageCPUUtilization",
          "ECSServiceAverageMemoryUtilization",
          "ALBRequestCountPerTarget",
          "RDSReaderAverageCPUUtilization",
          "RDSReaderAverageDatabaseConnections",
          "EC2SpotFleetRequestAverageCPUUtilization",
          "EC2SpotFleetRequestAverageNetworkIn",
          "EC2SpotFleetRequestAverageNetworkOut"
        ],
        "type": "string"
      },
      "ScalingPlan": {
        "description": "Represents a scaling plan.",
        "properties": {
          "ApplicationSource": { "$ref": "#/components/schemas/ApplicationSource" },
          "CreationTime": { "$ref": "#/components/schemas/TimestampType" },
          "ScalingInstructions": { "$ref": "#/components/schemas/ScalingInstructions" },
          "ScalingPlanName": { "$ref": "#/components/schemas/ScalingPlanName" },
          "ScalingPlanVersion": { "$ref": "#/components/schemas/ScalingPlanVersion" },
          "StatusCode": { "$ref": "#/components/schemas/ScalingPlanStatusCode" },
          "StatusMessage": { "$ref": "#/components/schemas/XmlString" },
          "StatusStartTime": { "$ref": "#/components/schemas/TimestampType" }
        },
        "required": ["ScalingPlanName", "ScalingPlanVersion", "ApplicationSource", "ScalingInstructions", "StatusCode"],
        "type": "object"
      },
      "ScalingPlanName": { "maxLength": 128, "minLength": 1, "pattern": "[\\p{Print}&&[^|:/]]+", "type": "string" },
      "ScalingPlanNames": { "items": { "$ref": "#/components/schemas/ScalingPlanName" }, "type": "array" },
      "ScalingPlanResource": {
        "description": "Represents a scalable resource.",
        "properties": {
          "ResourceId": { "$ref": "#/components/schemas/ResourceIdMaxLen1600" },
          "ScalableDimension": { "$ref": "#/components/schemas/ScalableDimension" },
          "ScalingPlanName": { "$ref": "#/components/schemas/ScalingPlanName" },
          "ScalingPlanVersion": { "$ref": "#/components/schemas/ScalingPlanVersion" },
          "ScalingPolicies": { "$ref": "#/components/schemas/ScalingPolicies" },
          "ScalingStatusCode": { "$ref": "#/components/schemas/ScalingStatusCode" },
          "ScalingStatusMessage": { "$ref": "#/components/schemas/XmlString" },
          "ServiceNamespace": { "$ref": "#/components/schemas/ServiceNamespace" }
        },
        "required": [
          "ScalingPlanName",
          "ScalingPlanVersion",
          "ServiceNamespace",
          "ResourceId",
          "ScalableDimension",
          "ScalingStatusCode"
        ],
        "type": "object"
      },
      "ScalingPlanResources": { "items": { "$ref": "#/components/schemas/ScalingPlanResource" }, "type": "array" },
      "ScalingPlanStatusCode": {
        "enum": [
          "Active",
          "ActiveWithProblems",
          "CreationInProgress",
          "CreationFailed",
          "DeletionInProgress",
          "DeletionFailed",
          "UpdateInProgress",
          "UpdateFailed"
        ],
        "type": "string"
      },
      "ScalingPlanVersion": { "type": "integer" },
      "ScalingPlans": { "items": { "$ref": "#/components/schemas/ScalingPlan" }, "type": "array" },
      "ScalingPolicies": { "items": { "$ref": "#/components/schemas/ScalingPolicy" }, "type": "array" },
      "ScalingPolicy": {
        "description": "Represents a scaling policy.",
        "properties": {
          "PolicyName": { "$ref": "#/components/schemas/PolicyName" },
          "PolicyType": { "$ref": "#/components/schemas/PolicyType" },
          "TargetTrackingConfiguration": { "$ref": "#/components/schemas/TargetTrackingConfiguration" }
        },
        "required": ["PolicyName", "PolicyType"],
        "type": "object"
      },
      "ScalingPolicyUpdateBehavior": { "enum": ["KeepExternalPolicies", "ReplaceExternalPolicies"], "type": "string" },
      "ScalingStatusCode": { "enum": ["Inactive", "PartiallyActive", "Active"], "type": "string" },
      "ScheduledActionBufferTime": { "minimum": 0, "type": "integer" },
      "ServiceNamespace": { "enum": ["autoscaling", "ecs", "ec2", "rds", "dynamodb"], "type": "string" },
      "TagFilter": {
        "description": "Represents a tag.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/XmlStringMaxLen128" },
          "Values": { "$ref": "#/components/schemas/TagValues" }
        },
        "type": "object"
      },
      "TagFilters": { "items": { "$ref": "#/components/schemas/TagFilter" }, "type": "array" },
      "TagValues": { "items": { "$ref": "#/components/schemas/XmlStringMaxLen256" }, "type": "array" },
      "TargetTrackingConfiguration": {
        "description": "Describes a target tracking configuration to use with AWS Auto Scaling. Used with <a>ScalingInstruction</a> and <a>ScalingPolicy</a>.",
        "properties": {
          "CustomizedScalingMetricSpecification": {
            "$ref": "#/components/schemas/CustomizedScalingMetricSpecification"
          },
          "DisableScaleIn": { "$ref": "#/components/schemas/DisableScaleIn" },
          "EstimatedInstanceWarmup": { "$ref": "#/components/schemas/Cooldown" },
          "PredefinedScalingMetricSpecification": {
            "$ref": "#/components/schemas/PredefinedScalingMetricSpecification"
          },
          "ScaleInCooldown": { "$ref": "#/components/schemas/Cooldown" },
          "ScaleOutCooldown": { "$ref": "#/components/schemas/Cooldown" },
          "TargetValue": { "$ref": "#/components/schemas/MetricScale" }
        },
        "required": ["TargetValue"],
        "type": "object"
      },
      "TargetTrackingConfigurations": {
        "items": { "$ref": "#/components/schemas/TargetTrackingConfiguration" },
        "type": "array"
      },
      "TimestampType": { "format": "date-time", "type": "string" },
      "UpdateScalingPlanRequest": {
        "properties": {
          "ApplicationSource": { "$ref": "#/components/schemas/ApplicationSource" },
          "ScalingInstructions": { "$ref": "#/components/schemas/ScalingInstructions" },
          "ScalingPlanName": { "$ref": "#/components/schemas/ScalingPlanName" },
          "ScalingPlanVersion": { "$ref": "#/components/schemas/ScalingPlanVersion" }
        },
        "required": ["ScalingPlanName", "ScalingPlanVersion"],
        "type": "object"
      },
      "UpdateScalingPlanResponse": { "properties": {}, "type": "object" },
      "ValidationException": {},
      "XmlString": {
        "type": "string",
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "XmlStringMaxLen128": {
        "maxLength": 128,
        "minLength": 1,
        "type": "string",
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "XmlStringMaxLen256": {
        "maxLength": 256,
        "minLength": 1,
        "type": "string",
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      }
    }
  }
}
