{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>Amazon Cognito Sync</fullname> <p>Amazon Cognito Sync provides an AWS service and client library that enable cross-device syncing of application-related user data. High-level client libraries are available for both iOS and Android. You can use these libraries to persist data locally so that it's available even if the device is offline. Developer credentials don't need to be stored on the mobile device to access the service. You can use Amazon Cognito to obtain a normalized user ID and credentials. User data is persisted in a dataset that can store up to 1 MB of key-value pairs, and you can have up to 20 datasets per user identity.</p> <p>With Amazon Cognito Sync, the data stored for each identity is accessible only to credentials assigned to that identity. In order to use the Cognito Sync service, you need to make API calls using credentials retrieved with <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/Welcome.html\">Amazon Cognito Identity service</a>.</p> <p>If you want to use Cognito Sync in an Android or iOS application, you will probably want to make API calls via the AWS Mobile SDK. To learn more, see the <a href=\"http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-sync.html\">Developer Guide for Android</a> and the <a href=\"http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-sync.html\">Developer Guide for iOS</a>.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Cognito Sync",
    "version": "2014-06-30",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cognito-sync-2014-06-30.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "cognito-sync"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/cognito-sync/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/identitypools": {
      "get": {
        "description": "<p>Gets a list of identity pools registered with Cognito.</p> <p>ListIdentityPoolUsage can only be called with developer credentials. You cannot make this API call with the temporary user credentials provided by Cognito Identity.</p>",
        "operationId": "ListIdentityPoolUsage",
        "parameters": [
          {
            "description": "A pagination token for obtaining the next page of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListIdentityPoolUsageResponse" } }
            }
          },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/identitypools/{IdentityPoolId}": {
      "get": {
        "description": "<p>Gets usage details (for example, data storage) about a particular identity pool.</p> <p>This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.</p>",
        "operationId": "DescribeIdentityPoolUsage",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeIdentityPoolUsageResponse" } }
            }
          },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/identitypools/{IdentityPoolId}/bulkpublish": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Initiates a bulk publish of all existing datasets for an Identity Pool to the configured stream. Customers are limited to one successful bulk publish per 24 hours. Bulk publish is an asynchronous request, customers can see the status of the request via the GetBulkPublishDetails operation.</p> <p>This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.</p>",
        "operationId": "BulkPublish",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BulkPublishResponse" } } }
          },
          "400": {
            "description": "AlreadyStreamedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AlreadyStreamedException" } } }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      }
    },
    "/identitypools/{IdentityPoolId}/configuration": {
      "get": {
        "description": "<p>Gets the configuration settings of an identity pool.</p> <p>This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.</p>",
        "operationId": "GetIdentityPoolConfiguration",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. This is the ID of the pool for which to return a configuration.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetIdentityPoolConfigurationResponse" } }
            }
          },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Sets the necessary configuration for push sync.</p> <p>This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.</p>",
        "operationId": "SetIdentityPoolConfiguration",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. This is the ID of the pool to modify.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "CognitoStreams": {
                    "description": "Configuration options for configure Cognito streams.",
                    "properties": {
                      "RoleArn": { "$ref": "#/components/schemas/AssumeRoleArn" },
                      "StreamName": { "$ref": "#/components/schemas/StreamName" },
                      "StreamingStatus": { "$ref": "#/components/schemas/StreamingStatus" }
                    },
                    "type": "object"
                  },
                  "PushSync": {
                    "description": "Configuration options to be applied to the identity pool.",
                    "properties": {
                      "ApplicationArns": { "$ref": "#/components/schemas/ApplicationArnList" },
                      "RoleArn": { "$ref": "#/components/schemas/AssumeRoleArn" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SetIdentityPoolConfigurationResponse" } }
            }
          },
          "400": {
            "description": "ConcurrentModificationException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      }
    },
    "/identitypools/{IdentityPoolId}/events": {
      "get": {
        "description": "<p>Gets the events and the corresponding Lambda functions associated with an identity pool.</p> <p>This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.</p>",
        "operationId": "GetCognitoEvents",
        "parameters": [
          {
            "description": "The Cognito Identity Pool ID for the request",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetCognitoEventsResponse" } } }
          },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Sets the AWS Lambda function for a given event type for an identity pool. This request only updates the key/value pair specified. Other key/values pairs are not updated. To remove a key value pair, pass a empty value for the particular key.</p> <p>This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.</p>",
        "operationId": "SetCognitoEvents",
        "parameters": [
          {
            "description": "The Cognito Identity Pool to use when configuring Cognito Events",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "Events": {
                    "additionalProperties": { "$ref": "#/components/schemas/LambdaFunctionArn" },
                    "description": "The events to configure",
                    "maxProperties": 1,
                    "type": "object"
                  }
                },
                "required": ["Events"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      }
    },
    "/identitypools/{IdentityPoolId}/getBulkPublishDetails": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Get the status of the last BulkPublish operation for an identity pool.</p> <p>This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.</p>",
        "operationId": "GetBulkPublishDetails",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetBulkPublishDetailsResponse" } }
            }
          },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      }
    },
    "/identitypools/{IdentityPoolId}/identities/{IdentityId}": {
      "get": {
        "description": "<p>Gets usage information for an identity, including number of datasets and data usage.</p> <p>This API can be called with temporary user credentials provided by Cognito Identity or with developer credentials.</p>",
        "operationId": "DescribeIdentityUsage",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeIdentityUsageResponse" } }
            }
          },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets": {
      "get": {
        "description": "<p>Lists datasets for an identity. With Amazon Cognito Sync, each identity has access only to its own data. Thus, the credentials used to make this API call need to have access to the identity data.</p> <p>ListDatasets can be called with temporary user credentials provided by Cognito Identity or with developer credentials. You should use the Cognito Identity credentials to make this API call.</p>",
        "operationId": "ListDatasets",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A pagination token for obtaining the next page of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListDatasetsResponse" } } }
          },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}": {
      "delete": {
        "description": "<p>Deletes the specific dataset. The dataset will be deleted permanently, and the action can't be undone. Datasets that this dataset was merged with will no longer report the merge. Any subsequent operation on this dataset will result in a ResourceNotFoundException.</p> <p>This API can be called with temporary user credentials provided by Cognito Identity or with developer credentials.</p>",
        "operationId": "DeleteDataset",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A string of up to 128 characters. Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).",
            "in": "path",
            "name": "DatasetName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[a-zA-Z0-9_.:-]+" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDatasetResponse" } } }
          },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "409": {
            "description": "ResourceConflictException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceConflictException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      },
      "get": {
        "description": "<p>Gets meta data about a dataset by identity and dataset name. With Amazon Cognito Sync, each identity has access only to its own data. Thus, the credentials used to make this API call need to have access to the identity data.</p> <p>This API can be called with temporary user credentials provided by Cognito Identity or with developer credentials. You should use Cognito Identity credentials to make this API call.</p>",
        "operationId": "DescribeDataset",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A string of up to 128 characters. Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).",
            "in": "path",
            "name": "DatasetName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[a-zA-Z0-9_.:-]+" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDatasetResponse" } } }
          },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Posts updates to records and adds and deletes records for a dataset and user.</p> <p>The sync count in the record patch is your last known sync count for that record. The server will reject an UpdateRecords request with a ResourceConflictException if you try to patch a record with a new value but a stale sync count.</p> <p>For example, if the sync count on the server is 5 for a key called highScore and you try and submit a new highScore with sync count of 4, the request will be rejected. To obtain the current sync count for a record, call ListRecords. On a successful update of the record, the response returns the new sync count for that record. You should present that sync count the next time you try to update that same record. When the record does not exist, specify the sync count as 0.</p> <p>This API can be called with temporary user credentials provided by Cognito Identity or with developer credentials.</p>",
        "operationId": "UpdateRecords",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A string of up to 128 characters. Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).",
            "in": "path",
            "name": "DatasetName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[a-zA-Z0-9_.:-]+" }
          },
          {
            "description": "Intended to supply a device ID that will populate the lastModifiedBy field referenced in other methods. The ClientContext field is not yet implemented.",
            "in": "header",
            "name": "x-amz-Client-Context",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "DeviceId": {
                    "description": "The unique ID generated for this device by Cognito.",
                    "maxLength": 256,
                    "minLength": 1,
                    "type": "string"
                  },
                  "RecordPatches": {
                    "description": "A list of patch operations.",
                    "items": { "$ref": "#/components/schemas/RecordPatch" },
                    "type": "array"
                  },
                  "SyncSessionToken": {
                    "description": "The SyncSessionToken returned by a previous call to ListRecords for this dataset and identity.",
                    "type": "string"
                  }
                },
                "required": ["SyncSessionToken"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateRecordsResponse" } } }
          },
          "400": {
            "description": "InvalidLambdaFunctionOutputException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLambdaFunctionOutputException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "409": {
            "description": "ResourceConflictException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceConflictException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      }
    },
    "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/records": {
      "get": {
        "description": "<p>Gets paginated records, optionally changed after a particular sync count for a dataset and identity. With Amazon Cognito Sync, each identity has access only to its own data. Thus, the credentials used to make this API call need to have access to the identity data.</p> <p>ListRecords can be called with temporary user credentials provided by Cognito Identity or with developer credentials. You should use Cognito Identity credentials to make this API call.</p>",
        "operationId": "ListRecords",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.",
            "in": "path",
            "name": "IdentityId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "A string of up to 128 characters. Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).",
            "in": "path",
            "name": "DatasetName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[a-zA-Z0-9_.:-]+" }
          },
          {
            "description": "The last server sync count for this record.",
            "in": "query",
            "name": "lastSyncCount",
            "required": false,
            "schema": { "type": "integer" }
          },
          {
            "description": "A pagination token for obtaining the next page of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "integer" }
          },
          {
            "description": "A token containing a session ID, identity ID, and expiration.",
            "in": "query",
            "name": "syncSessionToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListRecordsResponse" } } }
          },
          "400": {
            "description": "InvalidParameterException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}": {
      "delete": {
        "description": "<p>Unsubscribes from receiving notifications when a dataset is modified by another device.</p> <p>This API can only be called with temporary credentials provided by Cognito Identity. You cannot call this API with developer credentials.</p>",
        "operationId": "UnsubscribeFromDataset",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. The ID of the pool to which this identity belongs.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "Unique ID for this identity.",
            "in": "path",
            "name": "IdentityId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "The name of the dataset from which to unsubcribe.",
            "in": "path",
            "name": "DatasetName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[a-zA-Z0-9_.:-]+" }
          },
          {
            "description": "The unique ID generated for this device by Cognito.",
            "in": "path",
            "name": "DeviceId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 256 }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsubscribeFromDatasetResponse" } }
            }
          },
          "400": {
            "description": "InvalidConfigurationException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Subscribes to receive notifications when a dataset is modified by another device.</p> <p>This API can only be called with temporary credentials provided by Cognito Identity. You cannot call this API with developer credentials.</p>",
        "operationId": "SubscribeToDataset",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. The ID of the pool to which the identity belongs.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "Unique ID for this identity.",
            "in": "path",
            "name": "IdentityId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "The name of the dataset to subcribe to.",
            "in": "path",
            "name": "DatasetName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[a-zA-Z0-9_.:-]+" }
          },
          {
            "description": "The unique ID generated for this device by Cognito.",
            "in": "path",
            "name": "DeviceId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 256 }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SubscribeToDatasetResponse" } }
            }
          },
          "400": {
            "description": "InvalidConfigurationException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      }
    },
    "/identitypools/{IdentityPoolId}/identity/{IdentityId}/device": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Registers a device to receive push sync notifications.</p> <p>This API can only be called with temporary credentials provided by Cognito Identity. You cannot call this API with developer credentials.</p>",
        "operationId": "RegisterDevice",
        "parameters": [
          {
            "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. Here, the ID of the pool that the identity belongs to.",
            "in": "path",
            "name": "IdentityPoolId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          },
          {
            "description": "The unique ID for this identity.",
            "in": "path",
            "name": "IdentityId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 55, "pattern": "[\\w-]+:[0-9a-f-]+" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "Platform": {
                    "description": "The SNS platform type (e.g. GCM, SDM, APNS, APNS_SANDBOX).",
                    "enum": ["APNS", "APNS_SANDBOX", "GCM", "ADM"],
                    "type": "string"
                  },
                  "Token": { "description": "The push token.", "type": "string" }
                },
                "required": ["Platform", "Token"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RegisterDeviceResponse" } } }
          },
          "400": {
            "description": "InvalidConfigurationException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationException" } }
            }
          },
          "403": {
            "description": "NotAuthorizedException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "404": {
            "description": "ResourceNotFoundException",
            "x-aws-exception": true,
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "429": {
            "description": "TooManyRequestsException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "500": {
            "description": "InternalErrorException",
            "x-aws-exception": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalErrorException" } } }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The Amazon Cognito Sync multi-region endpoint",
      "url": "http://cognito-sync.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon Cognito Sync multi-region endpoint",
      "url": "https://cognito-sync.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon Cognito Sync endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://cognito-sync.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Amazon Cognito Sync endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://cognito-sync.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AlreadyStreamedException": {
        "description": "An exception thrown when a bulk publish operation is requested less than 24 hours after a previous bulk publish operation completed successfully.",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "ApplicationArn": { "pattern": "arn:aws:sns:[-0-9a-z]+:\\d+:app/[A-Z_]+/[a-zA-Z0-9_.-]+", "type": "string" },
      "ApplicationArnList": { "items": { "$ref": "#/components/schemas/ApplicationArn" }, "type": "array" },
      "AssumeRoleArn": { "maxLength": 2048, "minLength": 20, "pattern": "arn:aws:iam::\\d+:role/.*", "type": "string" },
      "Boolean": { "type": "boolean" },
      "BulkPublishRequest": {
        "description": "The input for the BulkPublish operation.",
        "properties": {},
        "type": "object"
      },
      "BulkPublishResponse": {
        "description": "The output for the BulkPublish operation.",
        "properties": { "IdentityPoolId": { "$ref": "#/components/schemas/IdentityPoolId" } },
        "type": "object"
      },
      "BulkPublishStatus": { "enum": ["NOT_STARTED", "IN_PROGRESS", "FAILED", "SUCCEEDED"], "type": "string" },
      "ClientContext": { "type": "string" },
      "CognitoEventType": { "type": "string" },
      "CognitoStreams": {
        "description": "Configuration options for configure Cognito streams.",
        "properties": {
          "RoleArn": { "$ref": "#/components/schemas/AssumeRoleArn" },
          "StreamName": { "$ref": "#/components/schemas/StreamName" },
          "StreamingStatus": { "$ref": "#/components/schemas/StreamingStatus" }
        },
        "type": "object"
      },
      "ConcurrentModificationException": {
        "description": "Thrown if there are parallel requests to modify a resource.",
        "properties": { "message": { "$ref": "#/components/schemas/String" } },
        "required": ["message"],
        "type": "object"
      },
      "Dataset": {
        "description": "A collection of data for an identity pool. An identity pool can have multiple datasets. A dataset is per identity and can be general or associated with a particular entity in an application (like a saved game). Datasets are automatically created if they don't exist. Data is synced by dataset, and a dataset can hold up to 1MB of key-value pairs.",
        "properties": {
          "CreationDate": { "$ref": "#/components/schemas/Date" },
          "DataStorage": { "$ref": "#/components/schemas/Long" },
          "DatasetName": { "$ref": "#/components/schemas/DatasetName" },
          "IdentityId": { "$ref": "#/components/schemas/IdentityId" },
          "LastModifiedBy": { "$ref": "#/components/schemas/String" },
          "LastModifiedDate": { "$ref": "#/components/schemas/Date" },
          "NumRecords": { "$ref": "#/components/schemas/Long" }
        },
        "type": "object"
      },
      "DatasetList": { "items": { "$ref": "#/components/schemas/Dataset" }, "type": "array" },
      "DatasetName": { "maxLength": 128, "minLength": 1, "pattern": "[a-zA-Z0-9_.:-]+", "type": "string" },
      "Date": { "format": "date-time", "type": "string" },
      "DeleteDatasetRequest": {
        "description": "A request to delete the specific dataset.",
        "properties": {},
        "type": "object"
      },
      "DeleteDatasetResponse": {
        "description": "Response to a successful DeleteDataset request.",
        "properties": { "Dataset": { "$ref": "#/components/schemas/Dataset" } },
        "type": "object"
      },
      "DescribeDatasetRequest": {
        "description": "A request for meta data about a dataset (creation date, number of records, size) by owner and dataset name.",
        "properties": {},
        "type": "object"
      },
      "DescribeDatasetResponse": {
        "description": "Response to a successful DescribeDataset request.",
        "properties": { "Dataset": { "$ref": "#/components/schemas/Dataset" } },
        "type": "object"
      },
      "DescribeIdentityPoolUsageRequest": {
        "description": "A request for usage information about the identity pool.",
        "properties": {},
        "type": "object"
      },
      "DescribeIdentityPoolUsageResponse": {
        "description": "Response to a successful DescribeIdentityPoolUsage request.",
        "properties": { "IdentityPoolUsage": { "$ref": "#/components/schemas/IdentityPoolUsage" } },
        "type": "object"
      },
      "DescribeIdentityUsageRequest": {
        "description": "A request for information about the usage of an identity pool.",
        "properties": {},
        "type": "object"
      },
      "DescribeIdentityUsageResponse": {
        "description": "The response to a successful DescribeIdentityUsage request.",
        "properties": { "IdentityUsage": { "$ref": "#/components/schemas/IdentityUsage" } },
        "type": "object"
      },
      "DeviceId": { "maxLength": 256, "minLength": 1, "type": "string" },
      "DuplicateRequestException": {
        "description": "An exception thrown when there is an IN_PROGRESS bulk publish operation for the given identity pool.",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "Events": {
        "additionalProperties": { "$ref": "#/components/schemas/LambdaFunctionArn" },
        "maxProperties": 1,
        "type": "object"
      },
      "ExceptionMessage": { "type": "string" },
      "GetBulkPublishDetailsRequest": {
        "description": "The input for the GetBulkPublishDetails operation.",
        "properties": {},
        "type": "object"
      },
      "GetBulkPublishDetailsResponse": {
        "description": "The output for the GetBulkPublishDetails operation.",
        "properties": {
          "BulkPublishCompleteTime": { "$ref": "#/components/schemas/Date" },
          "BulkPublishStartTime": { "$ref": "#/components/schemas/Date" },
          "BulkPublishStatus": { "$ref": "#/components/schemas/BulkPublishStatus" },
          "FailureMessage": { "$ref": "#/components/schemas/String" },
          "IdentityPoolId": { "$ref": "#/components/schemas/IdentityPoolId" }
        },
        "type": "object"
      },
      "GetCognitoEventsRequest": {
        "description": "A request for a list of the configured Cognito Events",
        "properties": {},
        "type": "object"
      },
      "GetCognitoEventsResponse": {
        "description": "The response from the GetCognitoEvents request",
        "properties": { "Events": { "$ref": "#/components/schemas/Events" } },
        "type": "object"
      },
      "GetIdentityPoolConfigurationRequest": {
        "description": "The input for the GetIdentityPoolConfiguration operation.",
        "properties": {},
        "type": "object"
      },
      "GetIdentityPoolConfigurationResponse": {
        "description": "The output for the GetIdentityPoolConfiguration operation.",
        "properties": {
          "CognitoStreams": { "$ref": "#/components/schemas/CognitoStreams" },
          "IdentityPoolId": { "$ref": "#/components/schemas/IdentityPoolId" },
          "PushSync": { "$ref": "#/components/schemas/PushSync" }
        },
        "type": "object"
      },
      "IdentityId": { "maxLength": 55, "minLength": 1, "pattern": "[\\w-]+:[0-9a-f-]+", "type": "string" },
      "IdentityPoolId": { "maxLength": 55, "minLength": 1, "pattern": "[\\w-]+:[0-9a-f-]+", "type": "string" },
      "IdentityPoolUsage": {
        "description": "Usage information for the identity pool.",
        "properties": {
          "DataStorage": { "$ref": "#/components/schemas/Long" },
          "IdentityPoolId": { "$ref": "#/components/schemas/IdentityPoolId" },
          "LastModifiedDate": { "$ref": "#/components/schemas/Date" },
          "SyncSessionsCount": { "$ref": "#/components/schemas/Long" }
        },
        "type": "object"
      },
      "IdentityPoolUsageList": { "items": { "$ref": "#/components/schemas/IdentityPoolUsage" }, "type": "array" },
      "IdentityUsage": {
        "description": "Usage information for the identity.",
        "properties": {
          "DataStorage": { "$ref": "#/components/schemas/Long" },
          "DatasetCount": { "$ref": "#/components/schemas/Integer" },
          "IdentityId": { "$ref": "#/components/schemas/IdentityId" },
          "IdentityPoolId": { "$ref": "#/components/schemas/IdentityPoolId" },
          "LastModifiedDate": { "$ref": "#/components/schemas/Date" }
        },
        "type": "object"
      },
      "Integer": { "type": "integer" },
      "IntegerString": { "type": "integer" },
      "InternalErrorException": {
        "description": "Indicates an internal service error.",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "InvalidConfigurationException": {
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "InvalidLambdaFunctionOutputException": {
        "description": "The AWS Lambda function returned invalid output or an exception.",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "InvalidParameterException": {
        "description": "Thrown when a request parameter does not comply with the associated constraints.",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "LambdaFunctionArn": { "type": "string" },
      "LambdaThrottledException": {
        "description": "AWS Lambda throttled your account, please contact AWS Support",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "LimitExceededException": {
        "description": "Thrown when the limit on the number of objects or operations has been exceeded.",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "ListDatasetsRequest": {
        "description": "Request for a list of datasets for an identity.",
        "properties": {},
        "type": "object"
      },
      "ListDatasetsResponse": {
        "description": "Returned for a successful ListDatasets request.",
        "properties": {
          "Count": { "$ref": "#/components/schemas/Integer" },
          "Datasets": { "$ref": "#/components/schemas/DatasetList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListIdentityPoolUsageRequest": {
        "description": "A request for usage information on an identity pool.",
        "properties": {},
        "type": "object"
      },
      "ListIdentityPoolUsageResponse": {
        "description": "Returned for a successful ListIdentityPoolUsage request.",
        "properties": {
          "Count": { "$ref": "#/components/schemas/Integer" },
          "IdentityPoolUsages": { "$ref": "#/components/schemas/IdentityPoolUsageList" },
          "MaxResults": { "$ref": "#/components/schemas/Integer" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListRecordsRequest": { "description": "A request for a list of records.", "properties": {}, "type": "object" },
      "ListRecordsResponse": {
        "description": "Returned for a successful ListRecordsRequest.",
        "properties": {
          "Count": { "$ref": "#/components/schemas/Integer" },
          "DatasetDeletedAfterRequestedSyncCount": { "$ref": "#/components/schemas/Boolean" },
          "DatasetExists": { "$ref": "#/components/schemas/Boolean" },
          "DatasetSyncCount": { "$ref": "#/components/schemas/Long" },
          "LastModifiedBy": { "$ref": "#/components/schemas/String" },
          "MergedDatasetNames": { "$ref": "#/components/schemas/MergedDatasetNameList" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "Records": { "$ref": "#/components/schemas/RecordList" },
          "SyncSessionToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "Long": { "type": "integer" },
      "MergedDatasetNameList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "NotAuthorizedException": {
        "description": "Thrown when a user is not authorized to access the requested resource.",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "Operation": { "enum": ["replace", "remove"], "type": "string" },
      "Platform": { "enum": ["APNS", "APNS_SANDBOX", "GCM", "ADM"], "type": "string" },
      "PushSync": {
        "description": "Configuration options to be applied to the identity pool.",
        "properties": {
          "ApplicationArns": { "$ref": "#/components/schemas/ApplicationArnList" },
          "RoleArn": { "$ref": "#/components/schemas/AssumeRoleArn" }
        },
        "type": "object"
      },
      "PushToken": { "type": "string" },
      "Record": {
        "description": "The basic data structure of a dataset.",
        "properties": {
          "DeviceLastModifiedDate": { "$ref": "#/components/schemas/Date" },
          "Key": { "$ref": "#/components/schemas/RecordKey" },
          "LastModifiedBy": { "$ref": "#/components/schemas/String" },
          "LastModifiedDate": { "$ref": "#/components/schemas/Date" },
          "SyncCount": { "$ref": "#/components/schemas/Long" },
          "Value": { "$ref": "#/components/schemas/RecordValue" }
        },
        "type": "object"
      },
      "RecordKey": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "RecordList": { "items": { "$ref": "#/components/schemas/Record" }, "type": "array" },
      "RecordPatch": {
        "description": "An update operation for a record.",
        "properties": {
          "DeviceLastModifiedDate": { "$ref": "#/components/schemas/Date" },
          "Key": { "$ref": "#/components/schemas/RecordKey" },
          "Op": { "$ref": "#/components/schemas/Operation" },
          "SyncCount": { "$ref": "#/components/schemas/Long" },
          "Value": { "$ref": "#/components/schemas/RecordValue" }
        },
        "required": ["Op", "Key", "SyncCount"],
        "type": "object"
      },
      "RecordPatchList": { "items": { "$ref": "#/components/schemas/RecordPatch" }, "type": "array" },
      "RecordValue": { "maxLength": 1048575, "type": "string" },
      "RegisterDeviceRequest": {
        "description": "A request to RegisterDevice.",
        "properties": {
          "Platform": { "$ref": "#/components/schemas/Platform" },
          "Token": { "$ref": "#/components/schemas/PushToken" }
        },
        "required": ["Platform", "Token"],
        "type": "object"
      },
      "RegisterDeviceResponse": {
        "description": "Response to a RegisterDevice request.",
        "properties": { "DeviceId": { "$ref": "#/components/schemas/DeviceId" } },
        "type": "object"
      },
      "ResourceConflictException": {
        "description": "Thrown if an update can't be applied because the resource was changed by another call and this would result in a conflict.",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "ResourceNotFoundException": {
        "description": "Thrown if the resource doesn't exist.",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "SetCognitoEventsRequest": {
        "description": "<p>A request to configure Cognito Events\"</p>\"",
        "properties": { "Events": { "$ref": "#/components/schemas/Events" } },
        "required": ["Events"],
        "type": "object"
      },
      "SetIdentityPoolConfigurationRequest": {
        "description": "The input for the SetIdentityPoolConfiguration operation.",
        "properties": {
          "CognitoStreams": { "$ref": "#/components/schemas/CognitoStreams" },
          "PushSync": { "$ref": "#/components/schemas/PushSync" }
        },
        "type": "object"
      },
      "SetIdentityPoolConfigurationResponse": {
        "description": "The output for the SetIdentityPoolConfiguration operation",
        "properties": {
          "CognitoStreams": { "$ref": "#/components/schemas/CognitoStreams" },
          "IdentityPoolId": { "$ref": "#/components/schemas/IdentityPoolId" },
          "PushSync": { "$ref": "#/components/schemas/PushSync" }
        },
        "type": "object"
      },
      "StreamName": { "maxLength": 128, "minLength": 1, "type": "string" },
      "StreamingStatus": { "enum": ["ENABLED", "DISABLED"], "type": "string" },
      "String": { "type": "string" },
      "SubscribeToDatasetRequest": {
        "description": "A request to SubscribeToDatasetRequest.",
        "properties": {},
        "type": "object"
      },
      "SubscribeToDatasetResponse": {
        "description": "Response to a SubscribeToDataset request.",
        "properties": {},
        "type": "object"
      },
      "SyncSessionToken": { "type": "string" },
      "TooManyRequestsException": {
        "description": "Thrown if the request is throttled.",
        "properties": { "message": { "$ref": "#/components/schemas/ExceptionMessage" } },
        "required": ["message"],
        "type": "object"
      },
      "UnsubscribeFromDatasetRequest": {
        "description": "A request to UnsubscribeFromDataset.",
        "properties": {},
        "type": "object"
      },
      "UnsubscribeFromDatasetResponse": {
        "description": "Response to an UnsubscribeFromDataset request.",
        "properties": {},
        "type": "object"
      },
      "UpdateRecordsRequest": {
        "description": "A request to post updates to records or add and delete records for a dataset and user.",
        "properties": {
          "DeviceId": { "$ref": "#/components/schemas/DeviceId" },
          "RecordPatches": { "$ref": "#/components/schemas/RecordPatchList" },
          "SyncSessionToken": { "$ref": "#/components/schemas/SyncSessionToken" }
        },
        "required": ["SyncSessionToken"],
        "type": "object"
      },
      "UpdateRecordsResponse": {
        "description": "Returned for a successful UpdateRecordsRequest.",
        "properties": { "Records": { "$ref": "#/components/schemas/RecordList" } },
        "type": "object"
      }
    }
  }
}
