{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS CodeBuild</fullname> <p>AWS CodeBuild is a fully managed build service in the cloud. AWS CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. AWS CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in AWS CodeBuild to use your own build tools. AWS CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about AWS CodeBuild, see the <i>AWS CodeBuild User Guide</i>.</p> <p>AWS CodeBuild supports these operations:</p> <ul> <li> <p> <code>BatchDeleteBuilds</code>: Deletes one or more builds.</p> </li> <li> <p> <code>BatchGetProjects</code>: Gets information about one or more build projects. A <i>build project</i> defines how AWS CodeBuild runs a build. This includes information such as where to get the source code to build, the build environment to use, the build commands to run, and where to store the build output. A <i>build environment</i> is a representation of operating system, programming language runtime, and tools that AWS CodeBuild uses to run a build. You can add tags to build projects to help manage your resources and costs.</p> </li> <li> <p> <code>CreateProject</code>: Creates a build project.</p> </li> <li> <p> <code>CreateWebhook</code>: For an existing AWS CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, enables AWS CodeBuild to start rebuilding the source code every time a code change is pushed to the repository.</p> </li> <li> <p> <code>UpdateWebhook</code>: Changes the settings of an existing webhook.</p> </li> <li> <p> <code>DeleteProject</code>: Deletes a build project.</p> </li> <li> <p> <code>DeleteWebhook</code>: For an existing AWS CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, stops AWS CodeBuild from rebuilding the source code every time a code change is pushed to the repository.</p> </li> <li> <p> <code>ListProjects</code>: Gets a list of build project names, with each build project name representing a single build project.</p> </li> <li> <p> <code>UpdateProject</code>: Changes the settings of an existing build project.</p> </li> <li> <p> <code>BatchGetBuilds</code>: Gets information about one or more builds.</p> </li> <li> <p> <code>ListBuilds</code>: Gets a list of build IDs, with each build ID representing a single build.</p> </li> <li> <p> <code>ListBuildsForProject</code>: Gets a list of build IDs for the specified build project, with each build ID representing a single build.</p> </li> <li> <p> <code>StartBuild</code>: Starts running a build.</p> </li> <li> <p> <code>StopBuild</code>: Attempts to stop running a build.</p> </li> <li> <p> <code>ListCuratedEnvironmentImages</code>: Gets information about Docker images that are managed by AWS CodeBuild.</p> </li> <li> <p> <code>DeleteSourceCredentials</code>: Deletes a set of GitHub, GitHub Enterprise, or Bitbucket source credentials.</p> </li> <li> <p> <code>ImportSourceCredentials</code>: Imports the source repository credentials for an AWS CodeBuild project that has its source code stored in a GitHub, GitHub Enterprise, or Bitbucket repository.</p> </li> <li> <p> <code>ListSourceCredentials</code>: Returns a list of <code>SourceCredentialsInfo</code> objects. Each <code>SourceCredentialsInfo</code> object includes the authentication type, token ARN, and type of source provider for one set of credentials.</p> </li> </ul>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS CodeBuild",
    "version": "2016-10-06",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codebuild-2016-10-06.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "codebuild"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/codebuild/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=CodeBuild_20161006.BatchDeleteBuilds": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes one or more builds.",
        "operationId": "BatchDeleteBuilds",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.BatchDeleteBuilds"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BatchDeleteBuildsInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BatchDeleteBuildsOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.BatchGetBuilds": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about builds.",
        "operationId": "BatchGetBuilds",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.BatchGetBuilds"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BatchGetBuildsInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BatchGetBuildsOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.BatchGetProjects": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about build projects.",
        "operationId": "BatchGetProjects",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.BatchGetProjects"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BatchGetProjectsInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BatchGetProjectsOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.CreateProject": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a build project.",
        "operationId": "CreateProject",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.CreateProject"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateProjectInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateProjectOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "ResourceAlreadyExistsException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceAlreadyExistsException" } }
            }
          },
          "482": {
            "description": "AccountLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.CreateWebhook": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>For an existing AWS CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, enables AWS CodeBuild to start rebuilding the source code every time a code change is pushed to the repository.</p> <important> <p>If you enable webhooks for an AWS CodeBuild project, and the project is used as a build step in AWS CodePipeline, then two identical builds are created for each commit. One build is triggered through webhooks, and one through AWS CodePipeline. Because billing is on a per-build basis, you are billed for both builds. Therefore, if you are using AWS CodePipeline, we recommend that you disable webhooks in AWS CodeBuild. In the AWS CodeBuild console, clear the Webhook box. For more information, see step 5 in <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/change-project.html#change-project-console\">Change a Build Project's Settings</a>.</p> </important>",
        "operationId": "CreateWebhook",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.CreateWebhook"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateWebhookInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateWebhookOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "OAuthProviderException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OAuthProviderException" } } }
          },
          "482": {
            "description": "ResourceAlreadyExistsException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceAlreadyExistsException" } }
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.DeleteProject": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes a build project.",
        "operationId": "DeleteProject",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.DeleteProject"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteProjectInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteProjectOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.DeleteSourceCredentials": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": " Deletes a set of GitHub, GitHub Enterprise, or Bitbucket source credentials. ",
        "operationId": "DeleteSourceCredentials",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.DeleteSourceCredentials"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteSourceCredentialsInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteSourceCredentialsOutput" } }
            }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.DeleteWebhook": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "For an existing AWS CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, stops AWS CodeBuild from rebuilding the source code every time a code change is pushed to the repository.",
        "operationId": "DeleteWebhook",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.DeleteWebhook"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteWebhookInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteWebhookOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "OAuthProviderException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OAuthProviderException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.ImportSourceCredentials": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": " Imports the source repository credentials for an AWS CodeBuild project that has its source code stored in a GitHub, GitHub Enterprise, or Bitbucket repository. ",
        "operationId": "ImportSourceCredentials",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.ImportSourceCredentials"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ImportSourceCredentialsInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ImportSourceCredentialsOutput" } }
            }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "AccountLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountLimitExceededException" } }
            }
          },
          "482": {
            "description": "ResourceAlreadyExistsException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceAlreadyExistsException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.InvalidateProjectCache": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Resets the cache for a project.",
        "operationId": "InvalidateProjectCache",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.InvalidateProjectCache"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/InvalidateProjectCacheInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidateProjectCacheOutput" } }
            }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.ListBuilds": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets a list of build IDs, with each build ID representing a single build.",
        "operationId": "ListBuilds",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.ListBuilds"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListBuildsInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListBuildsOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.ListBuildsForProject": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets a list of build IDs for the specified build project, with each build ID representing a single build.",
        "operationId": "ListBuildsForProject",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.ListBuildsForProject"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListBuildsForProjectInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListBuildsForProjectOutput" } }
            }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.ListCuratedEnvironmentImages": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about Docker images that are managed by AWS CodeBuild.",
        "operationId": "ListCuratedEnvironmentImages",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.ListCuratedEnvironmentImages"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListCuratedEnvironmentImagesInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListCuratedEnvironmentImagesOutput" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.ListProjects": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets a list of build project names, with each build project name representing a single build project.",
        "operationId": "ListProjects",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.ListProjects"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListProjectsInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListProjectsOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.ListSourceCredentials": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": " Returns a list of <code>SourceCredentialsInfo</code> objects. ",
        "operationId": "ListSourceCredentials",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.ListSourceCredentials"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListSourceCredentialsInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListSourceCredentialsOutput" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.StartBuild": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Starts running a build.",
        "operationId": "StartBuild",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.StartBuild"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartBuildInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartBuildOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "AccountLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.StopBuild": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Attempts to stop running a build.",
        "operationId": "StopBuild",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.StopBuild"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopBuildInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopBuildOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.UpdateProject": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Changes the settings of a build project.",
        "operationId": "UpdateProject",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.UpdateProject"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProjectInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProjectOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=CodeBuild_20161006.UpdateWebhook": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p> Updates the webhook associated with an AWS CodeBuild build project. </p> <note> <p> If you use Bitbucket for your repository, <code>rotateSecret</code> is ignored. </p> </note>",
        "operationId": "UpdateWebhook",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["CodeBuild_20161006.UpdateWebhook"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateWebhookInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateWebhookOutput" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "OAuthProviderException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OAuthProviderException" } } }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The AWS CodeBuild multi-region endpoint",
      "url": "http://codebuild.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS CodeBuild multi-region endpoint",
      "url": "https://codebuild.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS CodeBuild endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://codebuild.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The AWS CodeBuild endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://codebuild.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AccountLimitExceededException": {},
      "ArtifactNamespace": { "enum": ["NONE", "BUILD_ID"], "type": "string" },
      "ArtifactPackaging": { "enum": ["NONE", "ZIP"], "type": "string" },
      "ArtifactsType": { "enum": ["CODEPIPELINE", "S3", "NO_ARTIFACTS"], "type": "string" },
      "AuthType": { "enum": ["OAUTH", "BASIC_AUTH", "PERSONAL_ACCESS_TOKEN"], "type": "string" },
      "BatchDeleteBuildsInput": {
        "properties": { "ids": { "$ref": "#/components/schemas/BuildIds" } },
        "required": ["ids"],
        "type": "object"
      },
      "BatchDeleteBuildsOutput": {
        "properties": {
          "buildsDeleted": { "$ref": "#/components/schemas/BuildIds" },
          "buildsNotDeleted": { "$ref": "#/components/schemas/BuildsNotDeleted" }
        },
        "type": "object"
      },
      "BatchGetBuildsInput": {
        "properties": { "ids": { "$ref": "#/components/schemas/BuildIds" } },
        "required": ["ids"],
        "type": "object"
      },
      "BatchGetBuildsOutput": {
        "example": {
          "builds": [
            {
              "arn": "arn:aws:codebuild:us-east-1:123456789012:build/codebuild-demo-project:9b0ac37f-d19e-4254-9079-f47e9a389eEX",
              "artifacts": { "location": "arn:aws:s3:::codebuild-123456789012-output-bucket/codebuild-demo-project" },
              "buildComplete": true,
              "buildStatus": "SUCCEEDED",
              "currentPhase": "COMPLETED",
              "endTime": 1479832474.764,
              "environment": {
                "computeType": "BUILD_GENERAL1_SMALL",
                "environmentVariables": [],
                "image": "aws/codebuild/java:openjdk-8",
                "privilegedMode": false,
                "type": "LINUX_CONTAINER"
              },
              "id": "codebuild-demo-project:9b0ac37f-d19e-4254-9079-f47e9a389eEX",
              "initiator": "MyDemoUser",
              "logs": {
                "deepLink": "https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#logEvent:group=/aws/codebuild/codebuild-demo-project;stream=9b0ac37f-d19e-4254-9079-f47e9a389eEX",
                "groupName": "/aws/codebuild/codebuild-demo-project",
                "streamName": "9b0ac37f-d19e-4254-9079-f47e9a389eEX"
              },
              "phases": [
                {
                  "durationInSeconds": 0,
                  "endTime": 1479832342.23,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "SUBMITTED",
                  "startTime": 1479832341.854
                },
                {
                  "contexts": [],
                  "durationInSeconds": 72,
                  "endTime": 1479832415.064,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "PROVISIONING",
                  "startTime": 1479832342.23
                },
                {
                  "contexts": [],
                  "durationInSeconds": 46,
                  "endTime": 1479832461.261,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "DOWNLOAD_SOURCE",
                  "startTime": 1479832415.064
                },
                {
                  "contexts": [],
                  "durationInSeconds": 0,
                  "endTime": 1479832461.354,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "INSTALL",
                  "startTime": 1479832461.261
                },
                {
                  "contexts": [],
                  "durationInSeconds": 0,
                  "endTime": 1479832461.448,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "PRE_BUILD",
                  "startTime": 1479832461.354
                },
                {
                  "contexts": [],
                  "durationInSeconds": 9,
                  "endTime": 1479832471.115,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "BUILD",
                  "startTime": 1479832461.448
                },
                {
                  "contexts": [],
                  "durationInSeconds": 0,
                  "endTime": 1479832471.224,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "POST_BUILD",
                  "startTime": 1479832471.115
                },
                {
                  "contexts": [],
                  "durationInSeconds": 0,
                  "endTime": 1479832471.791,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "UPLOAD_ARTIFACTS",
                  "startTime": 1479832471.224
                },
                {
                  "contexts": [],
                  "durationInSeconds": 2,
                  "endTime": 1479832474.764,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "FINALIZING",
                  "startTime": 1479832471.791
                },
                { "phaseType": "COMPLETED", "startTime": 1479832474.764 }
              ],
              "projectName": "codebuild-demo-project",
              "source": {
                "buildspec": "",
                "location": "arn:aws:s3:::codebuild-123456789012-input-bucket/MessageUtil.zip",
                "type": "S3"
              },
              "startTime": 1479832341.854,
              "timeoutInMinutes": 60
            },
            {
              "arn": "arn:aws:codebuild:us-east-1:123456789012:build/codebuild-demo-project:b79a46f7-1473-4636-a23f-da9c45c208EX",
              "artifacts": { "location": "arn:aws:s3:::codebuild-123456789012-output-bucket/codebuild-demo-project" },
              "buildComplete": true,
              "buildStatus": "SUCCEEDED",
              "currentPhase": "COMPLETED",
              "endTime": 1479401214.239,
              "environment": {
                "computeType": "BUILD_GENERAL1_SMALL",
                "environmentVariables": [],
                "image": "aws/codebuild/java:openjdk-8",
                "privilegedMode": false,
                "type": "LINUX_CONTAINER"
              },
              "id": "codebuild-demo-project:b79a46f7-1473-4636-a23f-da9c45c208EX",
              "initiator": "MyDemoUser",
              "logs": {
                "deepLink": "https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#logEvent:group=/aws/codebuild/codebuild-demo-project;stream=b79a46f7-1473-4636-a23f-da9c45c208EX",
                "groupName": "/aws/codebuild/codebuild-demo-project",
                "streamName": "b79a46f7-1473-4636-a23f-da9c45c208EX"
              },
              "phases": [
                {
                  "durationInSeconds": 0,
                  "endTime": 1479401082.342,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "SUBMITTED",
                  "startTime": 1479401081.869
                },
                {
                  "contexts": [],
                  "durationInSeconds": 71,
                  "endTime": 1479401154.129,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "PROVISIONING",
                  "startTime": 1479401082.342
                },
                {
                  "contexts": [],
                  "durationInSeconds": 45,
                  "endTime": 1479401199.136,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "DOWNLOAD_SOURCE",
                  "startTime": 1479401154.129
                },
                {
                  "contexts": [],
                  "durationInSeconds": 0,
                  "endTime": 1479401199.236,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "INSTALL",
                  "startTime": 1479401199.136
                },
                {
                  "contexts": [],
                  "durationInSeconds": 0,
                  "endTime": 1479401199.345,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "PRE_BUILD",
                  "startTime": 1479401199.236
                },
                {
                  "contexts": [],
                  "durationInSeconds": 9,
                  "endTime": 1479401208.68,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "BUILD",
                  "startTime": 1479401199.345
                },
                {
                  "contexts": [],
                  "durationInSeconds": 0,
                  "endTime": 1479401208.783,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "POST_BUILD",
                  "startTime": 1479401208.68
                },
                {
                  "contexts": [],
                  "durationInSeconds": 0,
                  "endTime": 1479401209.463,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "UPLOAD_ARTIFACTS",
                  "startTime": 1479401208.783
                },
                {
                  "contexts": [],
                  "durationInSeconds": 4,
                  "endTime": 1479401214.239,
                  "phaseStatus": "SUCCEEDED",
                  "phaseType": "FINALIZING",
                  "startTime": 1479401209.463
                },
                { "phaseType": "COMPLETED", "startTime": 1479401214.239 }
              ],
              "projectName": "codebuild-demo-project",
              "source": {
                "location": "arn:aws:s3:::codebuild-123456789012-input-bucket/MessageUtil.zip",
                "type": "S3"
              },
              "startTime": 1479401081.869,
              "timeoutInMinutes": 60
            }
          ]
        },
        "properties": {
          "builds": { "$ref": "#/components/schemas/Builds" },
          "buildsNotFound": { "$ref": "#/components/schemas/BuildIds" }
        },
        "type": "object"
      },
      "BatchGetProjectsInput": {
        "properties": { "names": { "$ref": "#/components/schemas/ProjectNames" } },
        "required": ["names"],
        "type": "object"
      },
      "BatchGetProjectsOutput": {
        "properties": {
          "projects": { "$ref": "#/components/schemas/Projects" },
          "projectsNotFound": { "$ref": "#/components/schemas/ProjectNames" }
        },
        "type": "object"
      },
      "Boolean": { "type": "boolean" },
      "Build": {
        "description": "Information about a build.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "artifacts": { "$ref": "#/components/schemas/BuildArtifacts" },
          "buildComplete": { "$ref": "#/components/schemas/Boolean" },
          "buildStatus": { "$ref": "#/components/schemas/StatusType" },
          "cache": { "$ref": "#/components/schemas/ProjectCache" },
          "currentPhase": { "$ref": "#/components/schemas/String" },
          "encryptionKey": { "$ref": "#/components/schemas/NonEmptyString" },
          "endTime": { "$ref": "#/components/schemas/Timestamp" },
          "environment": { "$ref": "#/components/schemas/ProjectEnvironment" },
          "id": { "$ref": "#/components/schemas/NonEmptyString" },
          "initiator": { "$ref": "#/components/schemas/String" },
          "logs": { "$ref": "#/components/schemas/LogsLocation" },
          "networkInterface": { "$ref": "#/components/schemas/NetworkInterface" },
          "phases": { "$ref": "#/components/schemas/BuildPhases" },
          "projectName": { "$ref": "#/components/schemas/NonEmptyString" },
          "queuedTimeoutInMinutes": { "$ref": "#/components/schemas/WrapperInt" },
          "resolvedSourceVersion": { "$ref": "#/components/schemas/NonEmptyString" },
          "secondaryArtifacts": { "$ref": "#/components/schemas/BuildArtifactsList" },
          "secondarySourceVersions": { "$ref": "#/components/schemas/ProjectSecondarySourceVersions" },
          "secondarySources": { "$ref": "#/components/schemas/ProjectSources" },
          "serviceRole": { "$ref": "#/components/schemas/NonEmptyString" },
          "source": { "$ref": "#/components/schemas/ProjectSource" },
          "sourceVersion": { "$ref": "#/components/schemas/NonEmptyString" },
          "startTime": { "$ref": "#/components/schemas/Timestamp" },
          "timeoutInMinutes": { "$ref": "#/components/schemas/WrapperInt" },
          "vpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "type": "object"
      },
      "BuildArtifacts": {
        "description": "Information about build output artifacts.",
        "properties": {
          "artifactIdentifier": { "$ref": "#/components/schemas/String" },
          "encryptionDisabled": { "$ref": "#/components/schemas/WrapperBoolean" },
          "location": { "$ref": "#/components/schemas/String" },
          "md5sum": { "$ref": "#/components/schemas/String" },
          "overrideArtifactName": { "$ref": "#/components/schemas/WrapperBoolean" },
          "sha256sum": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "BuildArtifactsList": {
        "items": { "$ref": "#/components/schemas/BuildArtifacts" },
        "maxItems": 12,
        "minItems": 0,
        "type": "array"
      },
      "BuildIds": {
        "items": { "$ref": "#/components/schemas/NonEmptyString" },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "BuildNotDeleted": {
        "description": "Information about a build that could not be successfully deleted.",
        "properties": {
          "id": { "$ref": "#/components/schemas/NonEmptyString" },
          "statusCode": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "BuildPhase": {
        "description": "Information about a stage for a build.",
        "properties": {
          "contexts": { "$ref": "#/components/schemas/PhaseContexts" },
          "durationInSeconds": { "$ref": "#/components/schemas/WrapperLong" },
          "endTime": { "$ref": "#/components/schemas/Timestamp" },
          "phaseStatus": { "$ref": "#/components/schemas/StatusType" },
          "phaseType": { "$ref": "#/components/schemas/BuildPhaseType" },
          "startTime": { "$ref": "#/components/schemas/Timestamp" }
        },
        "type": "object"
      },
      "BuildPhaseType": {
        "enum": [
          "SUBMITTED",
          "QUEUED",
          "PROVISIONING",
          "DOWNLOAD_SOURCE",
          "INSTALL",
          "PRE_BUILD",
          "BUILD",
          "POST_BUILD",
          "UPLOAD_ARTIFACTS",
          "FINALIZING",
          "COMPLETED"
        ],
        "type": "string"
      },
      "BuildPhases": { "items": { "$ref": "#/components/schemas/BuildPhase" }, "type": "array" },
      "Builds": { "items": { "$ref": "#/components/schemas/Build" }, "type": "array" },
      "BuildsNotDeleted": { "items": { "$ref": "#/components/schemas/BuildNotDeleted" }, "type": "array" },
      "CacheMode": {
        "enum": ["LOCAL_DOCKER_LAYER_CACHE", "LOCAL_SOURCE_CACHE", "LOCAL_CUSTOM_CACHE"],
        "type": "string"
      },
      "CacheType": { "enum": ["NO_CACHE", "S3", "LOCAL"], "type": "string" },
      "CloudWatchLogsConfig": {
        "description": " Information about Amazon CloudWatch Logs for a build project. ",
        "properties": {
          "groupName": { "$ref": "#/components/schemas/String" },
          "status": { "$ref": "#/components/schemas/LogsConfigStatusType" },
          "streamName": { "$ref": "#/components/schemas/String" }
        },
        "required": ["status"],
        "type": "object"
      },
      "ComputeType": {
        "enum": ["BUILD_GENERAL1_SMALL", "BUILD_GENERAL1_MEDIUM", "BUILD_GENERAL1_LARGE"],
        "type": "string"
      },
      "CreateProjectInput": {
        "properties": {
          "artifacts": { "$ref": "#/components/schemas/ProjectArtifacts" },
          "badgeEnabled": { "$ref": "#/components/schemas/WrapperBoolean" },
          "cache": { "$ref": "#/components/schemas/ProjectCache" },
          "description": { "$ref": "#/components/schemas/ProjectDescription" },
          "encryptionKey": { "$ref": "#/components/schemas/NonEmptyString" },
          "environment": { "$ref": "#/components/schemas/ProjectEnvironment" },
          "logsConfig": { "$ref": "#/components/schemas/LogsConfig" },
          "name": { "$ref": "#/components/schemas/ProjectName" },
          "queuedTimeoutInMinutes": { "$ref": "#/components/schemas/TimeOut" },
          "secondaryArtifacts": { "$ref": "#/components/schemas/ProjectArtifactsList" },
          "secondarySourceVersions": { "$ref": "#/components/schemas/ProjectSecondarySourceVersions" },
          "secondarySources": { "$ref": "#/components/schemas/ProjectSources" },
          "serviceRole": { "$ref": "#/components/schemas/NonEmptyString" },
          "source": { "$ref": "#/components/schemas/ProjectSource" },
          "sourceVersion": { "$ref": "#/components/schemas/String" },
          "tags": { "$ref": "#/components/schemas/TagList" },
          "timeoutInMinutes": { "$ref": "#/components/schemas/TimeOut" },
          "vpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "required": ["name", "source", "artifacts", "environment", "serviceRole"],
        "type": "object"
      },
      "CreateProjectOutput": {
        "properties": { "project": { "$ref": "#/components/schemas/Project" } },
        "type": "object"
      },
      "CreateWebhookInput": {
        "properties": {
          "branchFilter": { "$ref": "#/components/schemas/String" },
          "filterGroups": { "$ref": "#/components/schemas/FilterGroups" },
          "projectName": { "$ref": "#/components/schemas/ProjectName" }
        },
        "required": ["projectName"],
        "type": "object"
      },
      "CreateWebhookOutput": {
        "properties": { "webhook": { "$ref": "#/components/schemas/Webhook" } },
        "type": "object"
      },
      "CredentialProviderType": { "enum": ["SECRETS_MANAGER"], "type": "string" },
      "DeleteProjectInput": {
        "properties": { "name": { "$ref": "#/components/schemas/NonEmptyString" } },
        "required": ["name"],
        "type": "object"
      },
      "DeleteProjectOutput": { "properties": {}, "type": "object" },
      "DeleteSourceCredentialsInput": {
        "properties": { "arn": { "$ref": "#/components/schemas/NonEmptyString" } },
        "required": ["arn"],
        "type": "object"
      },
      "DeleteSourceCredentialsOutput": {
        "properties": { "arn": { "$ref": "#/components/schemas/NonEmptyString" } },
        "type": "object"
      },
      "DeleteWebhookInput": {
        "properties": { "projectName": { "$ref": "#/components/schemas/ProjectName" } },
        "required": ["projectName"],
        "type": "object"
      },
      "DeleteWebhookOutput": { "properties": {}, "type": "object" },
      "EnvironmentImage": {
        "description": "Information about a Docker image that is managed by AWS CodeBuild.",
        "properties": {
          "description": { "$ref": "#/components/schemas/String" },
          "name": { "$ref": "#/components/schemas/String" },
          "versions": { "$ref": "#/components/schemas/ImageVersions" }
        },
        "type": "object"
      },
      "EnvironmentImages": { "items": { "$ref": "#/components/schemas/EnvironmentImage" }, "type": "array" },
      "EnvironmentLanguage": {
        "description": "A set of Docker images that are related by programming language and are managed by AWS CodeBuild.",
        "properties": {
          "images": { "$ref": "#/components/schemas/EnvironmentImages" },
          "language": { "$ref": "#/components/schemas/LanguageType" }
        },
        "type": "object"
      },
      "EnvironmentLanguages": { "items": { "$ref": "#/components/schemas/EnvironmentLanguage" }, "type": "array" },
      "EnvironmentPlatform": {
        "description": "A set of Docker images that are related by platform and are managed by AWS CodeBuild.",
        "properties": {
          "languages": { "$ref": "#/components/schemas/EnvironmentLanguages" },
          "platform": { "$ref": "#/components/schemas/PlatformType" }
        },
        "type": "object"
      },
      "EnvironmentPlatforms": { "items": { "$ref": "#/components/schemas/EnvironmentPlatform" }, "type": "array" },
      "EnvironmentType": { "enum": ["WINDOWS_CONTAINER", "LINUX_CONTAINER"], "type": "string" },
      "EnvironmentVariable": {
        "description": "Information about an environment variable for a build project or a build.",
        "properties": {
          "name": { "$ref": "#/components/schemas/NonEmptyString" },
          "type": { "$ref": "#/components/schemas/EnvironmentVariableType" },
          "value": { "$ref": "#/components/schemas/String" }
        },
        "required": ["name", "value"],
        "type": "object"
      },
      "EnvironmentVariableType": { "enum": ["PLAINTEXT", "PARAMETER_STORE"], "type": "string" },
      "EnvironmentVariables": { "items": { "$ref": "#/components/schemas/EnvironmentVariable" }, "type": "array" },
      "FilterGroup": { "items": { "$ref": "#/components/schemas/WebhookFilter" }, "type": "array" },
      "FilterGroups": { "items": { "$ref": "#/components/schemas/FilterGroup" }, "type": "array" },
      "GitCloneDepth": { "minimum": 0, "type": "integer" },
      "GitSubmodulesConfig": {
        "description": " Information about the Git submodules configuration for an AWS CodeBuild build project. ",
        "properties": { "fetchSubmodules": { "$ref": "#/components/schemas/WrapperBoolean" } },
        "required": ["fetchSubmodules"],
        "type": "object"
      },
      "ImagePullCredentialsType": { "enum": ["CODEBUILD", "SERVICE_ROLE"], "type": "string" },
      "ImageVersions": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "ImportSourceCredentialsInput": {
        "properties": {
          "authType": { "$ref": "#/components/schemas/AuthType" },
          "serverType": { "$ref": "#/components/schemas/ServerType" },
          "shouldOverwrite": { "$ref": "#/components/schemas/WrapperBoolean" },
          "token": { "$ref": "#/components/schemas/SensitiveNonEmptyString" },
          "username": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "required": ["token", "serverType", "authType"],
        "type": "object"
      },
      "ImportSourceCredentialsOutput": {
        "properties": { "arn": { "$ref": "#/components/schemas/NonEmptyString" } },
        "type": "object"
      },
      "InvalidInputException": {},
      "InvalidateProjectCacheInput": {
        "properties": { "projectName": { "$ref": "#/components/schemas/NonEmptyString" } },
        "required": ["projectName"],
        "type": "object"
      },
      "InvalidateProjectCacheOutput": { "properties": {}, "type": "object" },
      "KeyInput": {
        "maxLength": 127,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=@+\\-]*)$",
        "type": "string"
      },
      "LanguageType": {
        "enum": ["JAVA", "PYTHON", "NODE_JS", "RUBY", "GOLANG", "DOCKER", "ANDROID", "DOTNET", "BASE", "PHP"],
        "type": "string"
      },
      "ListBuildsForProjectInput": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/String" },
          "projectName": { "$ref": "#/components/schemas/NonEmptyString" },
          "sortOrder": { "$ref": "#/components/schemas/SortOrderType" }
        },
        "required": ["projectName"],
        "type": "object"
      },
      "ListBuildsForProjectOutput": {
        "properties": {
          "ids": { "$ref": "#/components/schemas/BuildIds" },
          "nextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListBuildsInput": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/String" },
          "sortOrder": { "$ref": "#/components/schemas/SortOrderType" }
        },
        "type": "object"
      },
      "ListBuildsOutput": {
        "properties": {
          "ids": { "$ref": "#/components/schemas/BuildIds" },
          "nextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListCuratedEnvironmentImagesInput": { "properties": {}, "type": "object" },
      "ListCuratedEnvironmentImagesOutput": {
        "properties": { "platforms": { "$ref": "#/components/schemas/EnvironmentPlatforms" } },
        "type": "object"
      },
      "ListProjectsInput": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/NonEmptyString" },
          "sortBy": { "$ref": "#/components/schemas/ProjectSortByType" },
          "sortOrder": { "$ref": "#/components/schemas/SortOrderType" }
        },
        "type": "object"
      },
      "ListProjectsOutput": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/String" },
          "projects": { "$ref": "#/components/schemas/ProjectNames" }
        },
        "type": "object"
      },
      "ListSourceCredentialsInput": { "properties": {}, "type": "object" },
      "ListSourceCredentialsOutput": {
        "properties": { "sourceCredentialsInfos": { "$ref": "#/components/schemas/SourceCredentialsInfos" } },
        "type": "object"
      },
      "LogsConfig": {
        "description": " Information about logs for a build project. These can be logs in Amazon CloudWatch Logs, built in a specified S3 bucket, or both. ",
        "properties": {
          "cloudWatchLogs": { "$ref": "#/components/schemas/CloudWatchLogsConfig" },
          "s3Logs": { "$ref": "#/components/schemas/S3LogsConfig" }
        },
        "type": "object"
      },
      "LogsConfigStatusType": { "enum": ["ENABLED", "DISABLED"], "type": "string" },
      "LogsLocation": {
        "description": "Information about build logs in Amazon CloudWatch Logs.",
        "properties": {
          "cloudWatchLogs": { "$ref": "#/components/schemas/CloudWatchLogsConfig" },
          "deepLink": { "$ref": "#/components/schemas/String" },
          "groupName": { "$ref": "#/components/schemas/String" },
          "s3DeepLink": { "$ref": "#/components/schemas/String" },
          "s3Logs": { "$ref": "#/components/schemas/S3LogsConfig" },
          "streamName": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "NetworkInterface": {
        "description": "Describes a network interface.",
        "properties": {
          "networkInterfaceId": { "$ref": "#/components/schemas/NonEmptyString" },
          "subnetId": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "NonEmptyString": { "minLength": 1, "type": "string" },
      "OAuthProviderException": {},
      "PhaseContext": {
        "description": "Additional information about a build phase that has an error. You can use this information for troubleshooting.",
        "properties": {
          "message": { "$ref": "#/components/schemas/String" },
          "statusCode": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "PhaseContexts": { "items": { "$ref": "#/components/schemas/PhaseContext" }, "type": "array" },
      "PlatformType": { "enum": ["DEBIAN", "AMAZON_LINUX", "UBUNTU", "WINDOWS_SERVER"], "type": "string" },
      "Project": {
        "description": "Information about a build project.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/String" },
          "artifacts": { "$ref": "#/components/schemas/ProjectArtifacts" },
          "badge": { "$ref": "#/components/schemas/ProjectBadge" },
          "cache": { "$ref": "#/components/schemas/ProjectCache" },
          "created": { "$ref": "#/components/schemas/Timestamp" },
          "description": { "$ref": "#/components/schemas/ProjectDescription" },
          "encryptionKey": { "$ref": "#/components/schemas/NonEmptyString" },
          "environment": { "$ref": "#/components/schemas/ProjectEnvironment" },
          "lastModified": { "$ref": "#/components/schemas/Timestamp" },
          "logsConfig": { "$ref": "#/components/schemas/LogsConfig" },
          "name": { "$ref": "#/components/schemas/ProjectName" },
          "queuedTimeoutInMinutes": { "$ref": "#/components/schemas/TimeOut" },
          "secondaryArtifacts": { "$ref": "#/components/schemas/ProjectArtifactsList" },
          "secondarySourceVersions": { "$ref": "#/components/schemas/ProjectSecondarySourceVersions" },
          "secondarySources": { "$ref": "#/components/schemas/ProjectSources" },
          "serviceRole": { "$ref": "#/components/schemas/NonEmptyString" },
          "source": { "$ref": "#/components/schemas/ProjectSource" },
          "sourceVersion": { "$ref": "#/components/schemas/String" },
          "tags": { "$ref": "#/components/schemas/TagList" },
          "timeoutInMinutes": { "$ref": "#/components/schemas/TimeOut" },
          "vpcConfig": { "$ref": "#/components/schemas/VpcConfig" },
          "webhook": { "$ref": "#/components/schemas/Webhook" }
        },
        "type": "object"
      },
      "ProjectArtifacts": {
        "description": "Information about the build output artifacts for the build project.",
        "properties": {
          "artifactIdentifier": { "$ref": "#/components/schemas/String" },
          "encryptionDisabled": { "$ref": "#/components/schemas/WrapperBoolean" },
          "location": { "$ref": "#/components/schemas/String" },
          "name": { "$ref": "#/components/schemas/String" },
          "namespaceType": { "$ref": "#/components/schemas/ArtifactNamespace" },
          "overrideArtifactName": { "$ref": "#/components/schemas/WrapperBoolean" },
          "packaging": { "$ref": "#/components/schemas/ArtifactPackaging" },
          "path": { "$ref": "#/components/schemas/String" },
          "type": { "$ref": "#/components/schemas/ArtifactsType" }
        },
        "required": ["type"],
        "type": "object"
      },
      "ProjectArtifactsList": {
        "items": { "$ref": "#/components/schemas/ProjectArtifacts" },
        "maxItems": 12,
        "minItems": 0,
        "type": "array"
      },
      "ProjectBadge": {
        "description": "Information about the build badge for the build project.",
        "properties": {
          "badgeEnabled": { "$ref": "#/components/schemas/Boolean" },
          "badgeRequestUrl": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ProjectCache": {
        "description": "Information about the cache for the build project.",
        "properties": {
          "location": { "$ref": "#/components/schemas/String" },
          "modes": { "$ref": "#/components/schemas/ProjectCacheModes" },
          "type": { "$ref": "#/components/schemas/CacheType" }
        },
        "required": ["type"],
        "type": "object"
      },
      "ProjectCacheModes": { "items": { "$ref": "#/components/schemas/CacheMode" }, "type": "array" },
      "ProjectDescription": { "maxLength": 255, "minLength": 0, "type": "string" },
      "ProjectEnvironment": {
        "description": "Information about the build environment of the build project.",
        "properties": {
          "certificate": { "$ref": "#/components/schemas/String" },
          "computeType": { "$ref": "#/components/schemas/ComputeType" },
          "environmentVariables": { "$ref": "#/components/schemas/EnvironmentVariables" },
          "image": { "$ref": "#/components/schemas/NonEmptyString" },
          "imagePullCredentialsType": { "$ref": "#/components/schemas/ImagePullCredentialsType" },
          "privilegedMode": { "$ref": "#/components/schemas/WrapperBoolean" },
          "registryCredential": { "$ref": "#/components/schemas/RegistryCredential" },
          "type": { "$ref": "#/components/schemas/EnvironmentType" }
        },
        "required": ["type", "image", "computeType"],
        "type": "object"
      },
      "ProjectName": {
        "maxLength": 255,
        "minLength": 2,
        "pattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
        "type": "string"
      },
      "ProjectNames": {
        "items": { "$ref": "#/components/schemas/NonEmptyString" },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "ProjectSecondarySourceVersions": {
        "items": { "$ref": "#/components/schemas/ProjectSourceVersion" },
        "maxItems": 12,
        "minItems": 0,
        "type": "array"
      },
      "ProjectSortByType": { "enum": ["NAME", "CREATED_TIME", "LAST_MODIFIED_TIME"], "type": "string" },
      "ProjectSource": {
        "description": "Information about the build input source code for the build project.",
        "properties": {
          "auth": { "$ref": "#/components/schemas/SourceAuth" },
          "buildspec": { "$ref": "#/components/schemas/String" },
          "gitCloneDepth": { "$ref": "#/components/schemas/GitCloneDepth" },
          "gitSubmodulesConfig": { "$ref": "#/components/schemas/GitSubmodulesConfig" },
          "insecureSsl": { "$ref": "#/components/schemas/WrapperBoolean" },
          "location": { "$ref": "#/components/schemas/String" },
          "reportBuildStatus": { "$ref": "#/components/schemas/WrapperBoolean" },
          "sourceIdentifier": { "$ref": "#/components/schemas/String" },
          "type": { "$ref": "#/components/schemas/SourceType" }
        },
        "required": ["type"],
        "type": "object"
      },
      "ProjectSourceVersion": {
        "description": " A source identifier and its corresponding version. ",
        "properties": {
          "sourceIdentifier": { "$ref": "#/components/schemas/String" },
          "sourceVersion": { "$ref": "#/components/schemas/String" }
        },
        "required": ["sourceIdentifier", "sourceVersion"],
        "type": "object"
      },
      "ProjectSources": {
        "items": { "$ref": "#/components/schemas/ProjectSource" },
        "maxItems": 12,
        "minItems": 0,
        "type": "array"
      },
      "Projects": { "items": { "$ref": "#/components/schemas/Project" }, "type": "array" },
      "RegistryCredential": {
        "description": "<p> Information about credentials that provide access to a private Docker registry. When this is set: </p> <ul> <li> <p> <code>imagePullCredentialsType</code> must be set to <code>SERVICE_ROLE</code>. </p> </li> <li> <p> images cannot be curated or an Amazon ECR image.</p> </li> </ul> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/sample-private-registry.html\">Private Registry with AWS Secrets Manager Sample for AWS CodeBuild</a>. </p>",
        "properties": {
          "credential": { "$ref": "#/components/schemas/NonEmptyString" },
          "credentialProvider": { "$ref": "#/components/schemas/CredentialProviderType" }
        },
        "required": ["credential", "credentialProvider"],
        "type": "object"
      },
      "ResourceAlreadyExistsException": {},
      "ResourceNotFoundException": {},
      "S3LogsConfig": {
        "description": " Information about S3 logs for a build project. ",
        "properties": {
          "encryptionDisabled": { "$ref": "#/components/schemas/WrapperBoolean" },
          "location": { "$ref": "#/components/schemas/String" },
          "status": { "$ref": "#/components/schemas/LogsConfigStatusType" }
        },
        "required": ["status"],
        "type": "object"
      },
      "SecurityGroupIds": {
        "items": { "$ref": "#/components/schemas/NonEmptyString" },
        "maxItems": 5,
        "type": "array"
      },
      "SensitiveNonEmptyString": { "format": "password", "minLength": 1, "type": "string" },
      "ServerType": { "enum": ["GITHUB", "BITBUCKET", "GITHUB_ENTERPRISE"], "type": "string" },
      "SortOrderType": { "enum": ["ASCENDING", "DESCENDING"], "type": "string" },
      "SourceAuth": {
        "description": "<p>Information about the authorization settings for AWS CodeBuild to access the source code to be built.</p> <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set this information directly.</p>",
        "properties": {
          "resource": { "$ref": "#/components/schemas/String" },
          "type": { "$ref": "#/components/schemas/SourceAuthType" }
        },
        "required": ["type"],
        "type": "object"
      },
      "SourceAuthType": { "enum": ["OAUTH"], "type": "string" },
      "SourceCredentialsInfo": {
        "description": " Information about the credentials for a GitHub, GitHub Enterprise, or Bitbucket repository. ",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "authType": { "$ref": "#/components/schemas/AuthType" },
          "serverType": { "$ref": "#/components/schemas/ServerType" }
        },
        "type": "object"
      },
      "SourceCredentialsInfos": { "items": { "$ref": "#/components/schemas/SourceCredentialsInfo" }, "type": "array" },
      "SourceType": {
        "enum": ["CODECOMMIT", "CODEPIPELINE", "GITHUB", "S3", "BITBUCKET", "GITHUB_ENTERPRISE", "NO_SOURCE"],
        "type": "string"
      },
      "StartBuildInput": {
        "properties": {
          "artifactsOverride": { "$ref": "#/components/schemas/ProjectArtifacts" },
          "buildspecOverride": { "$ref": "#/components/schemas/String" },
          "cacheOverride": { "$ref": "#/components/schemas/ProjectCache" },
          "certificateOverride": { "$ref": "#/components/schemas/String" },
          "computeTypeOverride": { "$ref": "#/components/schemas/ComputeType" },
          "environmentTypeOverride": { "$ref": "#/components/schemas/EnvironmentType" },
          "environmentVariablesOverride": { "$ref": "#/components/schemas/EnvironmentVariables" },
          "gitCloneDepthOverride": { "$ref": "#/components/schemas/GitCloneDepth" },
          "gitSubmodulesConfigOverride": { "$ref": "#/components/schemas/GitSubmodulesConfig" },
          "imageOverride": { "$ref": "#/components/schemas/NonEmptyString" },
          "imagePullCredentialsTypeOverride": { "$ref": "#/components/schemas/ImagePullCredentialsType" },
          "insecureSslOverride": { "$ref": "#/components/schemas/WrapperBoolean" },
          "logsConfigOverride": { "$ref": "#/components/schemas/LogsConfig" },
          "privilegedModeOverride": { "$ref": "#/components/schemas/WrapperBoolean" },
          "projectName": { "$ref": "#/components/schemas/NonEmptyString" },
          "queuedTimeoutInMinutesOverride": { "$ref": "#/components/schemas/TimeOut" },
          "registryCredentialOverride": { "$ref": "#/components/schemas/RegistryCredential" },
          "reportBuildStatusOverride": { "$ref": "#/components/schemas/WrapperBoolean" },
          "secondaryArtifactsOverride": { "$ref": "#/components/schemas/ProjectArtifactsList" },
          "secondarySourcesOverride": { "$ref": "#/components/schemas/ProjectSources" },
          "secondarySourcesVersionOverride": { "$ref": "#/components/schemas/ProjectSecondarySourceVersions" },
          "serviceRoleOverride": { "$ref": "#/components/schemas/NonEmptyString" },
          "sourceAuthOverride": { "$ref": "#/components/schemas/SourceAuth" },
          "sourceLocationOverride": { "$ref": "#/components/schemas/String" },
          "sourceTypeOverride": { "$ref": "#/components/schemas/SourceType" },
          "sourceVersion": { "$ref": "#/components/schemas/String" },
          "timeoutInMinutesOverride": { "$ref": "#/components/schemas/TimeOut" }
        },
        "required": ["projectName"],
        "type": "object"
      },
      "StartBuildOutput": { "properties": { "build": { "$ref": "#/components/schemas/Build" } }, "type": "object" },
      "StatusType": {
        "enum": ["SUCCEEDED", "FAILED", "FAULT", "TIMED_OUT", "IN_PROGRESS", "STOPPED"],
        "type": "string"
      },
      "StopBuildInput": {
        "properties": { "id": { "$ref": "#/components/schemas/NonEmptyString" } },
        "required": ["id"],
        "type": "object"
      },
      "StopBuildOutput": { "properties": { "build": { "$ref": "#/components/schemas/Build" } }, "type": "object" },
      "String": { "type": "string" },
      "Subnets": { "items": { "$ref": "#/components/schemas/NonEmptyString" }, "maxItems": 16, "type": "array" },
      "Tag": {
        "description": "<p>A tag, consisting of a key and a value.</p> <p>This tag is available for use by AWS services that support tags in AWS CodeBuild.</p>",
        "properties": {
          "key": { "$ref": "#/components/schemas/KeyInput" },
          "value": { "$ref": "#/components/schemas/ValueInput" }
        },
        "type": "object"
      },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "maxItems": 50, "minItems": 0, "type": "array" },
      "TimeOut": { "maximum": 480, "minimum": 5, "type": "integer" },
      "Timestamp": { "format": "date-time", "type": "string" },
      "UpdateProjectInput": {
        "properties": {
          "artifacts": { "$ref": "#/components/schemas/ProjectArtifacts" },
          "badgeEnabled": { "$ref": "#/components/schemas/WrapperBoolean" },
          "cache": { "$ref": "#/components/schemas/ProjectCache" },
          "description": { "$ref": "#/components/schemas/ProjectDescription" },
          "encryptionKey": { "$ref": "#/components/schemas/NonEmptyString" },
          "environment": { "$ref": "#/components/schemas/ProjectEnvironment" },
          "logsConfig": { "$ref": "#/components/schemas/LogsConfig" },
          "name": { "$ref": "#/components/schemas/NonEmptyString" },
          "queuedTimeoutInMinutes": { "$ref": "#/components/schemas/TimeOut" },
          "secondaryArtifacts": { "$ref": "#/components/schemas/ProjectArtifactsList" },
          "secondarySourceVersions": { "$ref": "#/components/schemas/ProjectSecondarySourceVersions" },
          "secondarySources": { "$ref": "#/components/schemas/ProjectSources" },
          "serviceRole": { "$ref": "#/components/schemas/NonEmptyString" },
          "source": { "$ref": "#/components/schemas/ProjectSource" },
          "sourceVersion": { "$ref": "#/components/schemas/String" },
          "tags": { "$ref": "#/components/schemas/TagList" },
          "timeoutInMinutes": { "$ref": "#/components/schemas/TimeOut" },
          "vpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "required": ["name"],
        "type": "object"
      },
      "UpdateProjectOutput": {
        "properties": { "project": { "$ref": "#/components/schemas/Project" } },
        "type": "object"
      },
      "UpdateWebhookInput": {
        "properties": {
          "branchFilter": { "$ref": "#/components/schemas/String" },
          "filterGroups": { "$ref": "#/components/schemas/FilterGroups" },
          "projectName": { "$ref": "#/components/schemas/ProjectName" },
          "rotateSecret": { "$ref": "#/components/schemas/Boolean" }
        },
        "required": ["projectName"],
        "type": "object"
      },
      "UpdateWebhookOutput": {
        "properties": { "webhook": { "$ref": "#/components/schemas/Webhook" } },
        "type": "object"
      },
      "ValueInput": {
        "maxLength": 255,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=@+\\-]*)$",
        "type": "string"
      },
      "VpcConfig": {
        "description": "Information about the VPC configuration that AWS CodeBuild accesses.",
        "properties": {
          "securityGroupIds": { "$ref": "#/components/schemas/SecurityGroupIds" },
          "subnets": { "$ref": "#/components/schemas/Subnets" },
          "vpcId": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "Webhook": {
        "description": "Information about a webhook that connects repository events to a build project in AWS CodeBuild.",
        "properties": {
          "branchFilter": { "$ref": "#/components/schemas/String" },
          "filterGroups": { "$ref": "#/components/schemas/FilterGroups" },
          "lastModifiedSecret": { "$ref": "#/components/schemas/Timestamp" },
          "payloadUrl": { "$ref": "#/components/schemas/NonEmptyString" },
          "secret": { "$ref": "#/components/schemas/NonEmptyString" },
          "url": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "WebhookFilter": {
        "description": " A filter used to determine which webhooks trigger a build. ",
        "properties": {
          "excludeMatchedPattern": { "$ref": "#/components/schemas/WrapperBoolean" },
          "pattern": { "$ref": "#/components/schemas/String" },
          "type": { "$ref": "#/components/schemas/WebhookFilterType" }
        },
        "required": ["type", "pattern"],
        "type": "object"
      },
      "WebhookFilterType": {
        "enum": ["EVENT", "BASE_REF", "HEAD_REF", "ACTOR_ACCOUNT_ID", "FILE_PATH"],
        "type": "string"
      },
      "WrapperBoolean": { "type": "boolean" },
      "WrapperInt": { "type": "integer" },
      "WrapperLong": { "type": "integer" }
    }
  }
}
