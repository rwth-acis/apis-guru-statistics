{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes incoming traffic across targets, such as your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer. You configure a target group with a protocol and port number for connections from the load balancer to the targets, and with health check settings to be used when checking the health status of the targets.</p> <p>Elastic Load Balancing supports the following types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers.</p> <p>An Application Load Balancer makes routing and load balancing decisions at the application layer (HTTP/HTTPS). A Network Load Balancer makes routing and load balancing decisions at the transport layer (TCP/TLS). Both Application Load Balancers and Network Load Balancers can route requests to one or more ports on each EC2 instance or container instance in your virtual private cloud (VPC).</p> <p>A Classic Load Balancer makes routing and load balancing decisions either at the transport layer (TCP/SSL) or the application layer (HTTP/HTTPS), and supports either EC2-Classic or a VPC. For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2015-12-01 API, which supports Application Load Balancers and Network Load Balancers. The 2012-06-01 API supports Classic Load Balancers.</p> <p>To get started, complete the following tasks:</p> <ol> <li> <p>Create a load balancer using <a>CreateLoadBalancer</a>.</p> </li> <li> <p>Create a target group using <a>CreateTargetGroup</a>.</p> </li> <li> <p>Register targets for the target group using <a>RegisterTargets</a>.</p> </li> <li> <p>Create one or more listeners for your load balancer using <a>CreateListener</a>.</p> </li> </ol> <p>To delete a load balancer and its related resources, complete the following tasks:</p> <ol> <li> <p>Delete the load balancer using <a>DeleteLoadBalancer</a>.</p> </li> <li> <p>Delete the target group using <a>DeleteTargetGroup</a>.</p> </li> </ol> <p>All Elastic Load Balancing operations are idempotent, which means that they complete at most one time. If you repeat an operation, it succeeds.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Elastic Load Balancing",
    "version": "2015-12-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticloadbalancingv2-2015-12-01.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "elasticloadbalancingv2"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/elasticloadbalancing/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#Action=AddListenerCertificates": {
      "get": {
        "description": "<p>Adds the specified SSL server certificate to the certificate list for the specified HTTPS listener.</p> <p>If the certificate in already in the certificate list, the call is successful but the certificate is not added again.</p> <p>To get the certificate list for a listener, use <a>DescribeListenerCertificates</a>. To remove certificates from the certificate list for a listener, use <a>RemoveListenerCertificates</a>. To replace the default certificate for a listener, use <a>ModifyListener</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates\">SSL Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>",
        "operationId": "GET AddListenerCertificates",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the listener.",
            "in": "query",
            "name": "ListenerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The certificate to add. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.",
            "in": "query",
            "name": "Certificates",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AddListenerCertificates"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AddListenerCertificatesOutput" } } }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "481": {
            "description": "TooManyCertificatesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyCertificatesException" } } }
          },
          "482": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "AddListenerCertificates"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds the specified SSL server certificate to the certificate list for the specified HTTPS listener.</p> <p>If the certificate in already in the certificate list, the call is successful but the certificate is not added again.</p> <p>To get the certificate list for a listener, use <a>DescribeListenerCertificates</a>. To remove certificates from the certificate list for a listener, use <a>RemoveListenerCertificates</a>. To replace the default certificate for a listener, use <a>ModifyListener</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates\">SSL Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>",
        "operationId": "POST AddListenerCertificates",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AddListenerCertificates"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ListenerArn": { "description": "The Amazon Resource Name (ARN) of the listener.", "type": "string" },
                  "Certificates": {
                    "description": "The certificate to add. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ListenerArn", "Certificates"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AddListenerCertificatesOutput" } } }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "481": {
            "description": "TooManyCertificatesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyCertificatesException" } } }
          },
          "482": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "AddListenerCertificates"
      }
    },
    "/#Action=AddTags": {
      "get": {
        "description": "<p>Adds the specified tags to the specified Elastic Load Balancing resource. You can tag your Application Load Balancers, Network Load Balancers, and your target groups.</p> <p>Each tag consists of a key and an optional value. If a resource already has a tag with the same key, <code>AddTags</code> updates its value.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>. To remove tags from your resources, use <a>RemoveTags</a>.</p>",
        "operationId": "GET AddTags",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the resource.",
            "in": "query",
            "name": "ResourceArns",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The tags. Each resource can have a maximum of 10 tags.",
            "in": "query",
            "name": "Tags",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["AddTags"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AddTagsOutput" } } }
          },
          "480": {
            "description": "DuplicateTagKeysException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateTagKeysException" } } }
          },
          "481": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "482": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "483": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "AddTags"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds the specified tags to the specified Elastic Load Balancing resource. You can tag your Application Load Balancers, Network Load Balancers, and your target groups.</p> <p>Each tag consists of a key and an optional value. If a resource already has a tag with the same key, <code>AddTags</code> updates its value.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>. To remove tags from your resources, use <a>RemoveTags</a>.</p>",
        "operationId": "POST AddTags",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["AddTags"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ResourceArns": {
                    "description": "The Amazon Resource Name (ARN) of the resource.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Tags": {
                    "description": "The tags. Each resource can have a maximum of 10 tags.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ResourceArns", "Tags"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AddTagsOutput" } } }
          },
          "480": {
            "description": "DuplicateTagKeysException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateTagKeysException" } } }
          },
          "481": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "482": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "483": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "AddTags"
      }
    },
    "/#Action=CreateListener": {
      "get": {
        "description": "<p>Creates a listener for the specified Application Load Balancer or Network Load Balancer.</p> <p>To update a listener, use <a>ModifyListener</a>. When you are finished with a listener, you can delete it using <a>DeleteListener</a>. If you are finished with both the listener and the load balancer, you can delete them both using <a>DeleteLoadBalancer</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple listeners with the same settings, each call succeeds.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html\">Listeners for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-listeners.html\">Listeners for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "GET CreateListener",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "in": "query",
            "name": "LoadBalancerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP.",
            "in": "query",
            "name": "Protocol",
            "required": true,
            "schema": { "type": "string", "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"] }
          },
          {
            "description": "The port on which the load balancer is listening.",
            "in": "query",
            "name": "Port",
            "required": true,
            "schema": { "type": "integer", "minimum": 1, "maximum": 65535 }
          },
          {
            "description": "[HTTPS and TLS listeners] The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.",
            "in": "query",
            "name": "SslPolicy",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list for the listener, use <a>AddListenerCertificates</a>.</p>",
            "in": "query",
            "name": "Certificates",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
            "in": "query",
            "name": "DefaultActions",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateListener"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateListenerOutput" } } }
          },
          "480": {
            "description": "DuplicateListenerException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateListenerException" } } }
          },
          "481": {
            "description": "TooManyListenersException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyListenersException" } } }
          },
          "482": {
            "description": "TooManyCertificatesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyCertificatesException" } } }
          },
          "483": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "484": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "485": {
            "description": "TargetGroupAssociationLimitException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupAssociationLimitException" } }
            }
          },
          "486": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "487": {
            "description": "IncompatibleProtocolsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/IncompatibleProtocolsException" } } }
          },
          "488": {
            "description": "SSLPolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SSLPolicyNotFoundException" } } }
          },
          "489": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          },
          "490": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          },
          "491": {
            "description": "TooManyRegistrationsForTargetIdException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRegistrationsForTargetIdException" } }
            }
          },
          "492": {
            "description": "TooManyTargetsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetsException" } } }
          },
          "493": {
            "description": "TooManyActionsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyActionsException" } } }
          },
          "494": {
            "description": "InvalidLoadBalancerActionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidLoadBalancerActionException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateListener"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a listener for the specified Application Load Balancer or Network Load Balancer.</p> <p>To update a listener, use <a>ModifyListener</a>. When you are finished with a listener, you can delete it using <a>DeleteListener</a>. If you are finished with both the listener and the load balancer, you can delete them both using <a>DeleteLoadBalancer</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple listeners with the same settings, each call succeeds.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html\">Listeners for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-listeners.html\">Listeners for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "POST CreateListener",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateListener"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerArn": {
                    "description": "The Amazon Resource Name (ARN) of the load balancer.",
                    "type": "string"
                  },
                  "Protocol": {
                    "description": "The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP.",
                    "type": "string",
                    "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"]
                  },
                  "Port": {
                    "description": "The port on which the load balancer is listening.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "SslPolicy": {
                    "description": "[HTTPS and TLS listeners] The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.",
                    "type": "string"
                  },
                  "Certificates": {
                    "description": "<p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list for the listener, use <a>AddListenerCertificates</a>.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "DefaultActions": {
                    "description": "<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerArn", "Protocol", "Port", "DefaultActions"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateListenerOutput" } } }
          },
          "480": {
            "description": "DuplicateListenerException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateListenerException" } } }
          },
          "481": {
            "description": "TooManyListenersException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyListenersException" } } }
          },
          "482": {
            "description": "TooManyCertificatesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyCertificatesException" } } }
          },
          "483": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "484": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "485": {
            "description": "TargetGroupAssociationLimitException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupAssociationLimitException" } }
            }
          },
          "486": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "487": {
            "description": "IncompatibleProtocolsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/IncompatibleProtocolsException" } } }
          },
          "488": {
            "description": "SSLPolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SSLPolicyNotFoundException" } } }
          },
          "489": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          },
          "490": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          },
          "491": {
            "description": "TooManyRegistrationsForTargetIdException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRegistrationsForTargetIdException" } }
            }
          },
          "492": {
            "description": "TooManyTargetsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetsException" } } }
          },
          "493": {
            "description": "TooManyActionsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyActionsException" } } }
          },
          "494": {
            "description": "InvalidLoadBalancerActionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidLoadBalancerActionException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateListener"
      }
    },
    "/#Action=CreateLoadBalancer": {
      "get": {
        "description": "<p>Creates an Application Load Balancer or a Network Load Balancer.</p> <p>When you create a load balancer, you can specify security groups, public subnets, IP address type, and tags. Otherwise, you could do so later using <a>SetSecurityGroups</a>, <a>SetSubnets</a>, <a>SetIpAddressType</a>, and <a>AddTags</a>.</p> <p>To create listeners for your load balancer, use <a>CreateListener</a>. To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>For limit information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html\">Limits for Your Application Load Balancer</a> in the <i>Application Load Balancers Guide</i> and <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html\">Limits for Your Network Load Balancer</a> in the <i>Network Load Balancers Guide</i>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple load balancers with the same settings, each call succeeds.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html\">Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html\">Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "GET CreateLoadBalancer",
        "parameters": [
          {
            "description": "<p>The name of the load balancer.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with \"internal-\".</p>",
            "in": "query",
            "name": "Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones.</p>",
            "in": "query",
            "name": "Subnets",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet.</p>",
            "in": "query",
            "name": "SubnetMappings",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "[Application Load Balancers] The IDs of the security groups for the load balancer.",
            "in": "query",
            "name": "SecurityGroups",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p> <p>The default is an Internet-facing load balancer.</p>",
            "in": "query",
            "name": "Scheme",
            "required": false,
            "schema": { "type": "string", "enum": ["internet-facing", "internal"] }
          },
          {
            "description": "One or more tags to assign to the load balancer.",
            "in": "query",
            "name": "Tags",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The type of load balancer. The default is <code>application</code>.",
            "in": "query",
            "name": "Type",
            "required": false,
            "schema": { "type": "string", "enum": ["application", "network"] }
          },
          {
            "description": "[Application Load Balancers] The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.",
            "in": "query",
            "name": "IpAddressType",
            "required": false,
            "schema": { "type": "string", "enum": ["ipv4", "dualstack"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateLoadBalancerOutput" } } }
          },
          "480": {
            "description": "DuplicateLoadBalancerNameException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateLoadBalancerNameException" } }
            }
          },
          "481": {
            "description": "TooManyLoadBalancersException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyLoadBalancersException" } } }
          },
          "482": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "483": {
            "description": "SubnetNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SubnetNotFoundException" } } }
          },
          "484": {
            "description": "InvalidSubnetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSubnetException" } } }
          },
          "485": {
            "description": "InvalidSecurityGroupException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSecurityGroupException" } } }
          },
          "486": {
            "description": "InvalidSchemeException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSchemeException" } } }
          },
          "487": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "488": {
            "description": "DuplicateTagKeysException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateTagKeysException" } } }
          },
          "489": {
            "description": "ResourceInUseException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "490": {
            "description": "AllocationIdNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AllocationIdNotFoundException" } } }
          },
          "491": {
            "description": "AvailabilityZoneNotSupportedException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/AvailabilityZoneNotSupportedException" } }
            }
          },
          "492": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          }
        },
        "x-aws-operation-name": "CreateLoadBalancer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates an Application Load Balancer or a Network Load Balancer.</p> <p>When you create a load balancer, you can specify security groups, public subnets, IP address type, and tags. Otherwise, you could do so later using <a>SetSecurityGroups</a>, <a>SetSubnets</a>, <a>SetIpAddressType</a>, and <a>AddTags</a>.</p> <p>To create listeners for your load balancer, use <a>CreateListener</a>. To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>For limit information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html\">Limits for Your Application Load Balancer</a> in the <i>Application Load Balancers Guide</i> and <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html\">Limits for Your Network Load Balancer</a> in the <i>Network Load Balancers Guide</i>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple load balancers with the same settings, each call succeeds.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html\">Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html\">Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "POST CreateLoadBalancer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "description": "<p>The name of the load balancer.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with \"internal-\".</p>",
                    "type": "string"
                  },
                  "Subnets": {
                    "description": "<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "SubnetMappings": {
                    "description": "<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "SecurityGroups": {
                    "description": "[Application Load Balancers] The IDs of the security groups for the load balancer.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Scheme": {
                    "description": "<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p> <p>The default is an Internet-facing load balancer.</p>",
                    "type": "string",
                    "enum": ["internet-facing", "internal"]
                  },
                  "Tags": {
                    "description": "One or more tags to assign to the load balancer.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Type": {
                    "description": "The type of load balancer. The default is <code>application</code>.",
                    "type": "string",
                    "enum": ["application", "network"]
                  },
                  "IpAddressType": {
                    "description": "[Application Load Balancers] The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.",
                    "type": "string",
                    "enum": ["ipv4", "dualstack"]
                  }
                },
                "required": ["Name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateLoadBalancerOutput" } } }
          },
          "480": {
            "description": "DuplicateLoadBalancerNameException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateLoadBalancerNameException" } }
            }
          },
          "481": {
            "description": "TooManyLoadBalancersException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyLoadBalancersException" } } }
          },
          "482": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "483": {
            "description": "SubnetNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SubnetNotFoundException" } } }
          },
          "484": {
            "description": "InvalidSubnetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSubnetException" } } }
          },
          "485": {
            "description": "InvalidSecurityGroupException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSecurityGroupException" } } }
          },
          "486": {
            "description": "InvalidSchemeException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSchemeException" } } }
          },
          "487": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "488": {
            "description": "DuplicateTagKeysException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateTagKeysException" } } }
          },
          "489": {
            "description": "ResourceInUseException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "490": {
            "description": "AllocationIdNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AllocationIdNotFoundException" } } }
          },
          "491": {
            "description": "AvailabilityZoneNotSupportedException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/AvailabilityZoneNotSupportedException" } }
            }
          },
          "492": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          }
        },
        "x-aws-operation-name": "CreateLoadBalancer"
      }
    },
    "/#Action=CreateRule": {
      "get": {
        "description": "<p>Creates a rule for the specified listener. The listener must be associated with an Application Load Balancer.</p> <p>Rules are evaluated in priority order, from the lowest value to the highest value. When the conditions for a rule are met, its actions are performed. If the conditions for no rules are met, the actions for the default rule are performed. For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#listener-rules\">Listener Rules</a> in the <i>Application Load Balancers Guide</i>.</p> <p>To view your current rules, use <a>DescribeRules</a>. To update a rule, use <a>ModifyRule</a>. To set the priorities of your rules, use <a>SetRulePriorities</a>. To delete a rule, use <a>DeleteRule</a>.</p>",
        "operationId": "GET CreateRule",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the listener.",
            "in": "query",
            "name": "ListenerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.",
            "in": "query",
            "name": "Conditions",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The rule priority. A listener can't have multiple rules with the same priority.",
            "in": "query",
            "name": "Priority",
            "required": true,
            "schema": { "type": "integer", "minimum": 1, "maximum": 50000 }
          },
          {
            "description": "<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
            "in": "query",
            "name": "Actions",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["CreateRule"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateRuleOutput" } } }
          },
          "480": {
            "description": "PriorityInUseException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PriorityInUseException" } } }
          },
          "481": {
            "description": "TooManyTargetGroupsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetGroupsException" } } }
          },
          "482": {
            "description": "TooManyRulesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRulesException" } } }
          },
          "483": {
            "description": "TargetGroupAssociationLimitException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupAssociationLimitException" } }
            }
          },
          "484": {
            "description": "IncompatibleProtocolsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/IncompatibleProtocolsException" } } }
          },
          "485": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "486": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "487": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "488": {
            "description": "TooManyRegistrationsForTargetIdException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRegistrationsForTargetIdException" } }
            }
          },
          "489": {
            "description": "TooManyTargetsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetsException" } } }
          },
          "490": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          },
          "491": {
            "description": "TooManyActionsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyActionsException" } } }
          },
          "492": {
            "description": "InvalidLoadBalancerActionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidLoadBalancerActionException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateRule"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a rule for the specified listener. The listener must be associated with an Application Load Balancer.</p> <p>Rules are evaluated in priority order, from the lowest value to the highest value. When the conditions for a rule are met, its actions are performed. If the conditions for no rules are met, the actions for the default rule are performed. For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#listener-rules\">Listener Rules</a> in the <i>Application Load Balancers Guide</i>.</p> <p>To view your current rules, use <a>DescribeRules</a>. To update a rule, use <a>ModifyRule</a>. To set the priorities of your rules, use <a>SetRulePriorities</a>. To delete a rule, use <a>DeleteRule</a>.</p>",
        "operationId": "POST CreateRule",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["CreateRule"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ListenerArn": { "description": "The Amazon Resource Name (ARN) of the listener.", "type": "string" },
                  "Conditions": {
                    "description": "The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Priority": {
                    "description": "The rule priority. A listener can't have multiple rules with the same priority.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 50000
                  },
                  "Actions": {
                    "description": "<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ListenerArn", "Conditions", "Priority", "Actions"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateRuleOutput" } } }
          },
          "480": {
            "description": "PriorityInUseException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PriorityInUseException" } } }
          },
          "481": {
            "description": "TooManyTargetGroupsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetGroupsException" } } }
          },
          "482": {
            "description": "TooManyRulesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRulesException" } } }
          },
          "483": {
            "description": "TargetGroupAssociationLimitException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupAssociationLimitException" } }
            }
          },
          "484": {
            "description": "IncompatibleProtocolsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/IncompatibleProtocolsException" } } }
          },
          "485": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "486": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "487": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "488": {
            "description": "TooManyRegistrationsForTargetIdException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRegistrationsForTargetIdException" } }
            }
          },
          "489": {
            "description": "TooManyTargetsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetsException" } } }
          },
          "490": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          },
          "491": {
            "description": "TooManyActionsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyActionsException" } } }
          },
          "492": {
            "description": "InvalidLoadBalancerActionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidLoadBalancerActionException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateRule"
      }
    },
    "/#Action=CreateTargetGroup": {
      "get": {
        "description": "<p>Creates a target group.</p> <p>To register targets with the target group, use <a>RegisterTargets</a>. To update the health check settings for the target group, use <a>ModifyTargetGroup</a>. To monitor the health of targets in the target group, use <a>DescribeTargetHealth</a>.</p> <p>To route traffic to the targets in a target group, specify the target group in an action using <a>CreateListener</a> or <a>CreateRule</a>.</p> <p>To delete a target group, use <a>DeleteTargetGroup</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple target groups with the same settings, each call succeeds.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html\">Target Groups for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html\">Target Groups for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "GET CreateTargetGroup",
        "parameters": [
          {
            "description": "<p>The name of the target group.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</p>",
            "in": "query",
            "name": "Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The protocol to use for routing traffic to the targets. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, or TCP_UDP. A TCP_UDP listener must be associated with a TCP_UDP target group. If the target is a Lambda function, this parameter does not apply.",
            "in": "query",
            "name": "Protocol",
            "required": false,
            "schema": { "type": "string", "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"] }
          },
          {
            "description": "The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply.",
            "in": "query",
            "name": "Port",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 65535 }
          },
          {
            "description": "The identifier of the virtual private cloud (VPC). If the target is a Lambda function, this parameter does not apply.",
            "in": "query",
            "name": "VpcId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The protocol the load balancer uses when performing health checks on targets. For Application Load Balancers, the default is HTTP. For Network Load Balancers, the default is TCP. The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not supported for health checks.",
            "in": "query",
            "name": "HealthCheckProtocol",
            "required": false,
            "schema": { "type": "string", "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"] }
          },
          {
            "description": "The port the load balancer uses when performing health checks on targets. The default is <code>traffic-port</code>, which is the port on which each target receives traffic from the load balancer.",
            "in": "query",
            "name": "HealthCheckPort",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Indicates whether health checks are enabled. If the target type is <code>lambda</code>, health checks are disabled by default but can be enabled. If the target type is <code>instance</code> or <code>ip</code>, health checks are always enabled and cannot be disabled.",
            "in": "query",
            "name": "HealthCheckEnabled",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "[HTTP/HTTPS health checks] The ping path that is the destination on the targets for health checks. The default is /.",
            "in": "query",
            "name": "HealthCheckPath",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 1024 }
          },
          {
            "description": "The approximate amount of time, in seconds, between health checks of an individual target. For HTTP and HTTPS health checks, the range is 5–300 seconds. For TCP health checks, the supported values are 10 and 30 seconds. If the target type is <code>instance</code> or <code>ip</code>, the default is 30 seconds. If the target type is <code>lambda</code>, the default is 35 seconds.",
            "in": "query",
            "name": "HealthCheckIntervalSeconds",
            "required": false,
            "schema": { "type": "integer", "minimum": 5, "maximum": 300 }
          },
          {
            "description": "The amount of time, in seconds, during which no response from a target means a failed health check. For target groups with a protocol of HTTP or HTTPS, the default is 5 seconds. For target groups with a protocol of TCP or TLS, this value must be 6 seconds for HTTP health checks and 10 seconds for TCP and HTTPS health checks. If the target type is <code>lambda</code>, the default is 30 seconds.",
            "in": "query",
            "name": "HealthCheckTimeoutSeconds",
            "required": false,
            "schema": { "type": "integer", "minimum": 2, "maximum": 120 }
          },
          {
            "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy. For target groups with a protocol of HTTP or HTTPS, the default is 5. For target groups with a protocol of TCP or TLS, the default is 3. If the target type is <code>lambda</code>, the default is 5.",
            "in": "query",
            "name": "HealthyThresholdCount",
            "required": false,
            "schema": { "type": "integer", "minimum": 2, "maximum": 10 }
          },
          {
            "description": "The number of consecutive health check failures required before considering a target unhealthy. For target groups with a protocol of HTTP or HTTPS, the default is 2. For target groups with a protocol of TCP or TLS, this value must be the same as the healthy threshold count. If the target type is <code>lambda</code>, the default is 2.",
            "in": "query",
            "name": "UnhealthyThresholdCount",
            "required": false,
            "schema": { "type": "integer", "minimum": 2, "maximum": 10 }
          },
          {
            "description": "Information to use when checking for a successful response from a target.\n<p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\").</p> <p>For Network Load Balancers, this is 200–399.</p>",
            "in": "query",
            "name": "Matcher.HttpCode",
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The type of target that you must specify when registering targets with this target group. You can't specify targets for a target group using more than one target type.</p> <ul> <li> <p> <code>instance</code> - Targets are specified by instance ID. This is the default value. If the target group protocol is UDP or TCP_UDP, the target type must be <code>instance</code>.</p> </li> <li> <p> <code>ip</code> - Targets are specified by IP address. You can specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.</p> </li> <li> <p> <code>lambda</code> - The target groups contains a single Lambda function.</p> </li> </ul>",
            "in": "query",
            "name": "TargetType",
            "required": false,
            "schema": { "type": "string", "enum": ["instance", "ip", "lambda"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateTargetGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateTargetGroupOutput" } } }
          },
          "480": {
            "description": "DuplicateTargetGroupNameException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateTargetGroupNameException" } }
            }
          },
          "481": {
            "description": "TooManyTargetGroupsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetGroupsException" } } }
          },
          "482": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateTargetGroup"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a target group.</p> <p>To register targets with the target group, use <a>RegisterTargets</a>. To update the health check settings for the target group, use <a>ModifyTargetGroup</a>. To monitor the health of targets in the target group, use <a>DescribeTargetHealth</a>.</p> <p>To route traffic to the targets in a target group, specify the target group in an action using <a>CreateListener</a> or <a>CreateRule</a>.</p> <p>To delete a target group, use <a>DeleteTargetGroup</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple target groups with the same settings, each call succeeds.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html\">Target Groups for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html\">Target Groups for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "POST CreateTargetGroup",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateTargetGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "description": "<p>The name of the target group.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</p>",
                    "type": "string"
                  },
                  "Protocol": {
                    "description": "The protocol to use for routing traffic to the targets. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, or TCP_UDP. A TCP_UDP listener must be associated with a TCP_UDP target group. If the target is a Lambda function, this parameter does not apply.",
                    "type": "string",
                    "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"]
                  },
                  "Port": {
                    "description": "The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "VpcId": {
                    "description": "The identifier of the virtual private cloud (VPC). If the target is a Lambda function, this parameter does not apply.",
                    "type": "string"
                  },
                  "HealthCheckProtocol": {
                    "description": "The protocol the load balancer uses when performing health checks on targets. For Application Load Balancers, the default is HTTP. For Network Load Balancers, the default is TCP. The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not supported for health checks.",
                    "type": "string",
                    "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"]
                  },
                  "HealthCheckPort": {
                    "description": "The port the load balancer uses when performing health checks on targets. The default is <code>traffic-port</code>, which is the port on which each target receives traffic from the load balancer.",
                    "type": "string"
                  },
                  "HealthCheckEnabled": {
                    "description": "Indicates whether health checks are enabled. If the target type is <code>lambda</code>, health checks are disabled by default but can be enabled. If the target type is <code>instance</code> or <code>ip</code>, health checks are always enabled and cannot be disabled.",
                    "type": "boolean"
                  },
                  "HealthCheckPath": {
                    "description": "[HTTP/HTTPS health checks] The ping path that is the destination on the targets for health checks. The default is /.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "HealthCheckIntervalSeconds": {
                    "description": "The approximate amount of time, in seconds, between health checks of an individual target. For HTTP and HTTPS health checks, the range is 5–300 seconds. For TCP health checks, the supported values are 10 and 30 seconds. If the target type is <code>instance</code> or <code>ip</code>, the default is 30 seconds. If the target type is <code>lambda</code>, the default is 35 seconds.",
                    "type": "integer",
                    "minimum": 5,
                    "maximum": 300
                  },
                  "HealthCheckTimeoutSeconds": {
                    "description": "The amount of time, in seconds, during which no response from a target means a failed health check. For target groups with a protocol of HTTP or HTTPS, the default is 5 seconds. For target groups with a protocol of TCP or TLS, this value must be 6 seconds for HTTP health checks and 10 seconds for TCP and HTTPS health checks. If the target type is <code>lambda</code>, the default is 30 seconds.",
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 120
                  },
                  "HealthyThresholdCount": {
                    "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy. For target groups with a protocol of HTTP or HTTPS, the default is 5. For target groups with a protocol of TCP or TLS, the default is 3. If the target type is <code>lambda</code>, the default is 5.",
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 10
                  },
                  "UnhealthyThresholdCount": {
                    "description": "The number of consecutive health check failures required before considering a target unhealthy. For target groups with a protocol of HTTP or HTTPS, the default is 2. For target groups with a protocol of TCP or TLS, this value must be the same as the healthy threshold count. If the target type is <code>lambda</code>, the default is 2.",
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 10
                  },
                  "Matcher.HttpCode": {
                    "description": "Information to use when checking for a successful response from a target.\n<p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\").</p> <p>For Network Load Balancers, this is 200–399.</p>",
                    "type": "string"
                  },
                  "TargetType": {
                    "description": "<p>The type of target that you must specify when registering targets with this target group. You can't specify targets for a target group using more than one target type.</p> <ul> <li> <p> <code>instance</code> - Targets are specified by instance ID. This is the default value. If the target group protocol is UDP or TCP_UDP, the target type must be <code>instance</code>.</p> </li> <li> <p> <code>ip</code> - Targets are specified by IP address. You can specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.</p> </li> <li> <p> <code>lambda</code> - The target groups contains a single Lambda function.</p> </li> </ul>",
                    "type": "string",
                    "enum": ["instance", "ip", "lambda"]
                  }
                },
                "required": ["Name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateTargetGroupOutput" } } }
          },
          "480": {
            "description": "DuplicateTargetGroupNameException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateTargetGroupNameException" } }
            }
          },
          "481": {
            "description": "TooManyTargetGroupsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetGroupsException" } } }
          },
          "482": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateTargetGroup"
      }
    },
    "/#Action=DeleteListener": {
      "get": {
        "description": "<p>Deletes the specified listener.</p> <p>Alternatively, your listener is deleted when you delete the load balancer to which it is attached, using <a>DeleteLoadBalancer</a>.</p>",
        "operationId": "GET DeleteListener",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the listener.",
            "in": "query",
            "name": "ListenerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteListener"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteListenerOutput" } } }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DeleteListener"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified listener.</p> <p>Alternatively, your listener is deleted when you delete the load balancer to which it is attached, using <a>DeleteLoadBalancer</a>.</p>",
        "operationId": "POST DeleteListener",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteListener"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ListenerArn": { "description": "The Amazon Resource Name (ARN) of the listener.", "type": "string" }
                },
                "required": ["ListenerArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteListenerOutput" } } }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DeleteListener"
      }
    },
    "/#Action=DeleteLoadBalancer": {
      "get": {
        "description": "<p>Deletes the specified Application Load Balancer or Network Load Balancer and its attached listeners.</p> <p>You can't delete a load balancer if deletion protection is enabled. If the load balancer does not exist or has already been deleted, the call succeeds.</p> <p>Deleting a load balancer does not affect its registered targets. For example, your EC2 instances continue to run and are still registered to their target groups. If you no longer need these EC2 instances, you can stop or terminate them.</p>",
        "operationId": "GET DeleteLoadBalancer",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "in": "query",
            "name": "LoadBalancerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteLoadBalancerOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          },
          "482": {
            "description": "ResourceInUseException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          }
        },
        "x-aws-operation-name": "DeleteLoadBalancer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified Application Load Balancer or Network Load Balancer and its attached listeners.</p> <p>You can't delete a load balancer if deletion protection is enabled. If the load balancer does not exist or has already been deleted, the call succeeds.</p> <p>Deleting a load balancer does not affect its registered targets. For example, your EC2 instances continue to run and are still registered to their target groups. If you no longer need these EC2 instances, you can stop or terminate them.</p>",
        "operationId": "POST DeleteLoadBalancer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteLoadBalancer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeleteLoadBalancer" },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteLoadBalancerOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          },
          "482": {
            "description": "ResourceInUseException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          }
        },
        "x-aws-operation-name": "DeleteLoadBalancer"
      }
    },
    "/#Action=DeleteRule": {
      "get": {
        "description": "Deletes the specified rule.",
        "operationId": "GET DeleteRule",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the rule.",
            "in": "query",
            "name": "RuleArn",
            "required": true,
            "schema": { "type": "string" }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["DeleteRule"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteRuleOutput" } } }
          },
          "480": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          }
        },
        "x-aws-operation-name": "DeleteRule"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified rule.",
        "operationId": "POST DeleteRule",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["DeleteRule"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RuleArn": { "description": "The Amazon Resource Name (ARN) of the rule.", "type": "string" }
                },
                "required": ["RuleArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteRuleOutput" } } }
          },
          "480": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          }
        },
        "x-aws-operation-name": "DeleteRule"
      }
    },
    "/#Action=DeleteTargetGroup": {
      "get": {
        "description": "<p>Deletes the specified target group.</p> <p>You can delete a target group if it is not referenced by any actions. Deleting a target group also deletes any associated health checks.</p>",
        "operationId": "GET DeleteTargetGroup",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the target group.",
            "in": "query",
            "name": "TargetGroupArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteTargetGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteTargetGroupOutput" } } }
          },
          "480": {
            "description": "ResourceInUseException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          }
        },
        "x-aws-operation-name": "DeleteTargetGroup"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified target group.</p> <p>You can delete a target group if it is not referenced by any actions. Deleting a target group also deletes any associated health checks.</p>",
        "operationId": "POST DeleteTargetGroup",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteTargetGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeleteTargetGroup" },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteTargetGroupOutput" } } }
          },
          "480": {
            "description": "ResourceInUseException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          }
        },
        "x-aws-operation-name": "DeleteTargetGroup"
      }
    },
    "/#Action=DeregisterTargets": {
      "get": {
        "description": "Deregisters the specified targets from the specified target group. After the targets are deregistered, they no longer receive traffic from the load balancer.",
        "operationId": "GET DeregisterTargets",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the target group.",
            "in": "query",
            "name": "TargetGroupArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it.",
            "in": "query",
            "name": "Targets",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeregisterTargets"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeregisterTargetsOutput" } } }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "481": {
            "description": "InvalidTargetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidTargetException" } } }
          }
        },
        "x-aws-operation-name": "DeregisterTargets"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deregisters the specified targets from the specified target group. After the targets are deregistered, they no longer receive traffic from the load balancer.",
        "operationId": "POST DeregisterTargets",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeregisterTargets"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "TargetGroupArn": {
                    "description": "The Amazon Resource Name (ARN) of the target group.",
                    "type": "string"
                  },
                  "Targets": {
                    "description": "The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["TargetGroupArn", "Targets"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeregisterTargetsOutput" } } }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "481": {
            "description": "InvalidTargetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidTargetException" } } }
          }
        },
        "x-aws-operation-name": "DeregisterTargets"
      }
    },
    "/#Action=DescribeAccountLimits": {
      "get": {
        "description": "<p>Describes the current Elastic Load Balancing resource limits for your AWS account.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html\">Limits for Your Application Load Balancers</a> in the <i>Application Load Balancer Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html\">Limits for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "GET DescribeAccountLimits",
        "parameters": [
          {
            "description": "The marker for the next set of results. (You received this marker from a previous call.)",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to return with this call.",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 400 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeAccountLimits"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeAccountLimitsOutput" } } }
          }
        },
        "x-aws-operation-name": "DescribeAccountLimits"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the current Elastic Load Balancing resource limits for your AWS account.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html\">Limits for Your Application Load Balancers</a> in the <i>Application Load Balancer Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html\">Limits for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "POST DescribeAccountLimits",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeAccountLimits"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Marker": {
                    "description": "The marker for the next set of results. (You received this marker from a previous call.)",
                    "type": "string"
                  },
                  "PageSize": {
                    "description": "The maximum number of results to return with this call.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 400
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeAccountLimitsOutput" } } }
          }
        },
        "x-aws-operation-name": "DescribeAccountLimits"
      }
    },
    "/#Action=DescribeListenerCertificates": {
      "get": {
        "description": "<p>Describes the default certificate and the certificate list for the specified HTTPS listener.</p> <p>If the default certificate is also in the certificate list, it appears twice in the results (once with <code>IsDefault</code> set to true and once with <code>IsDefault</code> set to false).</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates\">SSL Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>",
        "operationId": "GET DescribeListenerCertificates",
        "parameters": [
          {
            "description": "The Amazon Resource Names (ARN) of the listener.",
            "in": "query",
            "name": "ListenerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The marker for the next set of results. (You received this marker from a previous call.)",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to return with this call.",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 400 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeListenerCertificates"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeListenerCertificatesOutput" } }
            }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeListenerCertificates"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the default certificate and the certificate list for the specified HTTPS listener.</p> <p>If the default certificate is also in the certificate list, it appears twice in the results (once with <code>IsDefault</code> set to true and once with <code>IsDefault</code> set to false).</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates\">SSL Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>",
        "operationId": "POST DescribeListenerCertificates",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeListenerCertificates"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ListenerArn": {
                    "description": "The Amazon Resource Names (ARN) of the listener.",
                    "type": "string"
                  },
                  "Marker": {
                    "description": "The marker for the next set of results. (You received this marker from a previous call.)",
                    "type": "string"
                  },
                  "PageSize": {
                    "description": "The maximum number of results to return with this call.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 400
                  }
                },
                "required": ["ListenerArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeListenerCertificatesOutput" } }
            }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeListenerCertificates"
      }
    },
    "/#Action=DescribeListeners": {
      "get": {
        "description": "<p>Describes the specified listeners or the listeners for the specified Application Load Balancer or Network Load Balancer. You must specify either a load balancer or one or more listeners.</p> <p>For an HTTPS or TLS listener, the output includes the default certificate for the listener. To describe the certificate list for the listener, use <a>DescribeListenerCertificates</a>.</p>",
        "operationId": "GET DescribeListeners",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "in": "query",
            "name": "LoadBalancerArn",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The Amazon Resource Names (ARN) of the listeners.",
            "in": "query",
            "name": "ListenerArns",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The marker for the next set of results. (You received this marker from a previous call.)",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to return with this call.",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 400 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeListeners"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeListenersOutput" } } }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "481": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "482": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          }
        },
        "x-aws-operation-name": "DescribeListeners"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the specified listeners or the listeners for the specified Application Load Balancer or Network Load Balancer. You must specify either a load balancer or one or more listeners.</p> <p>For an HTTPS or TLS listener, the output includes the default certificate for the listener. To describe the certificate list for the listener, use <a>DescribeListenerCertificates</a>.</p>",
        "operationId": "POST DescribeListeners",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeListeners"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerArn": {
                    "description": "The Amazon Resource Name (ARN) of the load balancer.",
                    "type": "string"
                  },
                  "ListenerArns": {
                    "description": "The Amazon Resource Names (ARN) of the listeners.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Marker": {
                    "description": "The marker for the next set of results. (You received this marker from a previous call.)",
                    "type": "string"
                  },
                  "PageSize": {
                    "description": "The maximum number of results to return with this call.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 400
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeListenersOutput" } } }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "481": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "482": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          }
        },
        "x-aws-operation-name": "DescribeListeners"
      }
    },
    "/#Action=DescribeLoadBalancerAttributes": {
      "get": {
        "description": "<p>Describes the attributes for the specified Application Load Balancer or Network Load Balancer.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes\">Load Balancer Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#load-balancer-attributes\">Load Balancer Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "GET DescribeLoadBalancerAttributes",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "in": "query",
            "name": "LoadBalancerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancerAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeLoadBalancerAttributesOutput" } }
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancerAttributes"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the attributes for the specified Application Load Balancer or Network Load Balancer.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes\">Load Balancer Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#load-balancer-attributes\">Load Balancer Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "POST DescribeLoadBalancerAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancerAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeleteLoadBalancer" },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeLoadBalancerAttributesOutput" } }
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancerAttributes"
      }
    },
    "/#Action=DescribeLoadBalancers": {
      "get": {
        "description": "<p>Describes the specified load balancers or all of your load balancers.</p> <p>To describe the listeners for a load balancer, use <a>DescribeListeners</a>. To describe the attributes for a load balancer, use <a>DescribeLoadBalancerAttributes</a>.</p>",
        "operationId": "GET DescribeLoadBalancers",
        "parameters": [
          {
            "description": "The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call.",
            "in": "query",
            "name": "LoadBalancerArns",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The names of the load balancers.",
            "in": "query",
            "name": "Names",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The marker for the next set of results. (You received this marker from a previous call.)",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to return with this call.",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 400 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancers"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeLoadBalancersOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancers"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the specified load balancers or all of your load balancers.</p> <p>To describe the listeners for a load balancer, use <a>DescribeListeners</a>. To describe the attributes for a load balancer, use <a>DescribeLoadBalancerAttributes</a>.</p>",
        "operationId": "POST DescribeLoadBalancers",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeLoadBalancers"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerArns": {
                    "description": "The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Names": {
                    "description": "The names of the load balancers.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Marker": {
                    "description": "The marker for the next set of results. (You received this marker from a previous call.)",
                    "type": "string"
                  },
                  "PageSize": {
                    "description": "The maximum number of results to return with this call.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 400
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeLoadBalancersOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeLoadBalancers"
      }
    },
    "/#Action=DescribeRules": {
      "get": {
        "description": "Describes the specified rules or the rules for the specified listener. You must specify either a listener or one or more rules.",
        "operationId": "GET DescribeRules",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the listener.",
            "in": "query",
            "name": "ListenerArn",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The Amazon Resource Names (ARN) of the rules.",
            "in": "query",
            "name": "RuleArns",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The marker for the next set of results. (You received this marker from a previous call.)",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to return with this call.",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 400 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeRules"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeRulesOutput" } } }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "481": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          },
          "482": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          }
        },
        "x-aws-operation-name": "DescribeRules"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the specified rules or the rules for the specified listener. You must specify either a listener or one or more rules.",
        "operationId": "POST DescribeRules",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeRules"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ListenerArn": { "description": "The Amazon Resource Name (ARN) of the listener.", "type": "string" },
                  "RuleArns": {
                    "description": "The Amazon Resource Names (ARN) of the rules.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Marker": {
                    "description": "The marker for the next set of results. (You received this marker from a previous call.)",
                    "type": "string"
                  },
                  "PageSize": {
                    "description": "The maximum number of results to return with this call.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 400
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeRulesOutput" } } }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "481": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          },
          "482": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          }
        },
        "x-aws-operation-name": "DescribeRules"
      }
    },
    "/#Action=DescribeSSLPolicies": {
      "get": {
        "description": "<p>Describes the specified policies or all policies used for SSL negotiation.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies\">Security Policies</a> in the <i>Application Load Balancers Guide</i>.</p>",
        "operationId": "GET DescribeSSLPolicies",
        "parameters": [
          {
            "description": "The names of the policies.",
            "in": "query",
            "name": "Names",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The marker for the next set of results. (You received this marker from a previous call.)",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to return with this call.",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 400 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeSSLPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeSSLPoliciesOutput" } } }
          },
          "480": {
            "description": "SSLPolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SSLPolicyNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeSSLPolicies"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the specified policies or all policies used for SSL negotiation.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies\">Security Policies</a> in the <i>Application Load Balancers Guide</i>.</p>",
        "operationId": "POST DescribeSSLPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeSSLPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Names": {
                    "description": "The names of the policies.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Marker": {
                    "description": "The marker for the next set of results. (You received this marker from a previous call.)",
                    "type": "string"
                  },
                  "PageSize": {
                    "description": "The maximum number of results to return with this call.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 400
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeSSLPoliciesOutput" } } }
          },
          "480": {
            "description": "SSLPolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SSLPolicyNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeSSLPolicies"
      }
    },
    "/#Action=DescribeTags": {
      "get": {
        "description": "Describes the tags for the specified resources. You can describe the tags for one or more Application Load Balancers, Network Load Balancers, and target groups.",
        "operationId": "GET DescribeTags",
        "parameters": [
          {
            "description": "The Amazon Resource Names (ARN) of the resources.",
            "in": "query",
            "name": "ResourceArns",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeTags"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeTagsOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "482": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "483": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeTags"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the tags for the specified resources. You can describe the tags for one or more Application Load Balancers, Network Load Balancers, and target groups.",
        "operationId": "POST DescribeTags",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeTags"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ResourceArns": {
                    "description": "The Amazon Resource Names (ARN) of the resources.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ResourceArns"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeTagsOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "482": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "483": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeTags"
      }
    },
    "/#Action=DescribeTargetGroupAttributes": {
      "get": {
        "description": "<p>Describes the attributes for the specified target group.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-group-attributes\">Target Group Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#target-group-attributes\">Target Group Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "GET DescribeTargetGroupAttributes",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the target group.",
            "in": "query",
            "name": "TargetGroupArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeTargetGroupAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeTargetGroupAttributesOutput" } }
            }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeTargetGroupAttributes"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the attributes for the specified target group.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-group-attributes\">Target Group Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#target-group-attributes\">Target Group Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "POST DescribeTargetGroupAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeTargetGroupAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeleteTargetGroup" },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeTargetGroupAttributesOutput" } }
            }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeTargetGroupAttributes"
      }
    },
    "/#Action=DescribeTargetGroups": {
      "get": {
        "description": "<p>Describes the specified target groups or all of your target groups. By default, all target groups are described. Alternatively, you can specify one of the following to filter the results: the ARN of the load balancer, the names of one or more target groups, or the ARNs of one or more target groups.</p> <p>To describe the targets for a target group, use <a>DescribeTargetHealth</a>. To describe the attributes of a target group, use <a>DescribeTargetGroupAttributes</a>.</p>",
        "operationId": "GET DescribeTargetGroups",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "in": "query",
            "name": "LoadBalancerArn",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The Amazon Resource Names (ARN) of the target groups.",
            "in": "query",
            "name": "TargetGroupArns",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The names of the target groups.",
            "in": "query",
            "name": "Names",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The marker for the next set of results. (You received this marker from a previous call.)",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of results to return with this call.",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 400 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeTargetGroups"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeTargetGroupsOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeTargetGroups"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes the specified target groups or all of your target groups. By default, all target groups are described. Alternatively, you can specify one of the following to filter the results: the ARN of the load balancer, the names of one or more target groups, or the ARNs of one or more target groups.</p> <p>To describe the targets for a target group, use <a>DescribeTargetHealth</a>. To describe the attributes of a target group, use <a>DescribeTargetGroupAttributes</a>.</p>",
        "operationId": "POST DescribeTargetGroups",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeTargetGroups"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerArn": {
                    "description": "The Amazon Resource Name (ARN) of the load balancer.",
                    "type": "string"
                  },
                  "TargetGroupArns": {
                    "description": "The Amazon Resource Names (ARN) of the target groups.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Names": {
                    "description": "The names of the target groups.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Marker": {
                    "description": "The marker for the next set of results. (You received this marker from a previous call.)",
                    "type": "string"
                  },
                  "PageSize": {
                    "description": "The maximum number of results to return with this call.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 400
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeTargetGroupsOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          }
        },
        "x-aws-operation-name": "DescribeTargetGroups"
      }
    },
    "/#Action=DescribeTargetHealth": {
      "get": {
        "description": "Describes the health of the specified targets or all of your targets.",
        "operationId": "GET DescribeTargetHealth",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the target group.",
            "in": "query",
            "name": "TargetGroupArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The targets.",
            "in": "query",
            "name": "Targets",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeTargetHealth"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeTargetHealthOutput" } } }
          },
          "480": {
            "description": "InvalidTargetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidTargetException" } } }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "482": {
            "description": "HealthUnavailableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/HealthUnavailableException" } } }
          }
        },
        "x-aws-operation-name": "DescribeTargetHealth"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the health of the specified targets or all of your targets.",
        "operationId": "POST DescribeTargetHealth",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeTargetHealth"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "TargetGroupArn": {
                    "description": "The Amazon Resource Name (ARN) of the target group.",
                    "type": "string"
                  },
                  "Targets": { "description": "The targets.", "type": "array", "items": { "type": "string" } }
                },
                "required": ["TargetGroupArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeTargetHealthOutput" } } }
          },
          "480": {
            "description": "InvalidTargetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidTargetException" } } }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "482": {
            "description": "HealthUnavailableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/HealthUnavailableException" } } }
          }
        },
        "x-aws-operation-name": "DescribeTargetHealth"
      }
    },
    "/#Action=ModifyListener": {
      "get": {
        "description": "<p>Modifies the specified properties of the specified listener.</p> <p>Any properties that you do not specify retain their current values. However, changing the protocol from HTTPS to HTTP, or from TLS to TCP, removes the security policy and default certificate properties. If you change the protocol from HTTP to HTTPS, or from TCP to TLS, you must add the security policy and default certificate properties.</p>",
        "operationId": "GET ModifyListener",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the listener.",
            "in": "query",
            "name": "ListenerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The port for connections from clients to the load balancer.",
            "in": "query",
            "name": "Port",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 65535 }
          },
          {
            "description": "The protocol for connections from clients to the load balancer. Application Load Balancers support the HTTP and HTTPS protocols. Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP protocols.",
            "in": "query",
            "name": "Protocol",
            "required": false,
            "schema": { "type": "string", "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"] }
          },
          {
            "description": "[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies\">Security Policies</a> in the <i>Application Load Balancers Guide</i>.",
            "in": "query",
            "name": "SslPolicy",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list, use <a>AddListenerCertificates</a>.</p>",
            "in": "query",
            "name": "Certificates",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
            "in": "query",
            "name": "DefaultActions",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ModifyListener"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyListenerOutput" } } }
          },
          "480": {
            "description": "DuplicateListenerException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateListenerException" } } }
          },
          "481": {
            "description": "TooManyListenersException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyListenersException" } } }
          },
          "482": {
            "description": "TooManyCertificatesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyCertificatesException" } } }
          },
          "483": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "484": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "485": {
            "description": "TargetGroupAssociationLimitException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupAssociationLimitException" } }
            }
          },
          "486": {
            "description": "IncompatibleProtocolsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/IncompatibleProtocolsException" } } }
          },
          "487": {
            "description": "SSLPolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SSLPolicyNotFoundException" } } }
          },
          "488": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          },
          "489": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "490": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          },
          "491": {
            "description": "TooManyRegistrationsForTargetIdException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRegistrationsForTargetIdException" } }
            }
          },
          "492": {
            "description": "TooManyTargetsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetsException" } } }
          },
          "493": {
            "description": "TooManyActionsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyActionsException" } } }
          },
          "494": {
            "description": "InvalidLoadBalancerActionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidLoadBalancerActionException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyListener"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Modifies the specified properties of the specified listener.</p> <p>Any properties that you do not specify retain their current values. However, changing the protocol from HTTPS to HTTP, or from TLS to TCP, removes the security policy and default certificate properties. If you change the protocol from HTTP to HTTPS, or from TCP to TLS, you must add the security policy and default certificate properties.</p>",
        "operationId": "POST ModifyListener",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ModifyListener"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ListenerArn": { "description": "The Amazon Resource Name (ARN) of the listener.", "type": "string" },
                  "Port": {
                    "description": "The port for connections from clients to the load balancer.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "Protocol": {
                    "description": "The protocol for connections from clients to the load balancer. Application Load Balancers support the HTTP and HTTPS protocols. Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP protocols.",
                    "type": "string",
                    "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"]
                  },
                  "SslPolicy": {
                    "description": "[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies\">Security Policies</a> in the <i>Application Load Balancers Guide</i>.",
                    "type": "string"
                  },
                  "Certificates": {
                    "description": "<p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list, use <a>AddListenerCertificates</a>.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "DefaultActions": {
                    "description": "<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ListenerArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyListenerOutput" } } }
          },
          "480": {
            "description": "DuplicateListenerException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateListenerException" } } }
          },
          "481": {
            "description": "TooManyListenersException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyListenersException" } } }
          },
          "482": {
            "description": "TooManyCertificatesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyCertificatesException" } } }
          },
          "483": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "484": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "485": {
            "description": "TargetGroupAssociationLimitException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupAssociationLimitException" } }
            }
          },
          "486": {
            "description": "IncompatibleProtocolsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/IncompatibleProtocolsException" } } }
          },
          "487": {
            "description": "SSLPolicyNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SSLPolicyNotFoundException" } } }
          },
          "488": {
            "description": "CertificateNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CertificateNotFoundException" } } }
          },
          "489": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "490": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          },
          "491": {
            "description": "TooManyRegistrationsForTargetIdException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRegistrationsForTargetIdException" } }
            }
          },
          "492": {
            "description": "TooManyTargetsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetsException" } } }
          },
          "493": {
            "description": "TooManyActionsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyActionsException" } } }
          },
          "494": {
            "description": "InvalidLoadBalancerActionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidLoadBalancerActionException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyListener"
      }
    },
    "/#Action=ModifyLoadBalancerAttributes": {
      "get": {
        "description": "<p>Modifies the specified attributes of the specified Application Load Balancer or Network Load Balancer.</p> <p>If any of the specified attributes can't be modified as requested, the call fails. Any existing attributes that you do not modify retain their current values.</p>",
        "operationId": "GET ModifyLoadBalancerAttributes",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "in": "query",
            "name": "LoadBalancerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The load balancer attributes.",
            "in": "query",
            "name": "Attributes",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ModifyLoadBalancerAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyLoadBalancerAttributesOutput" } }
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyLoadBalancerAttributes"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Modifies the specified attributes of the specified Application Load Balancer or Network Load Balancer.</p> <p>If any of the specified attributes can't be modified as requested, the call fails. Any existing attributes that you do not modify retain their current values.</p>",
        "operationId": "POST ModifyLoadBalancerAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ModifyLoadBalancerAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerArn": {
                    "description": "The Amazon Resource Name (ARN) of the load balancer.",
                    "type": "string"
                  },
                  "Attributes": {
                    "description": "The load balancer attributes.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerArn", "Attributes"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyLoadBalancerAttributesOutput" } }
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyLoadBalancerAttributes"
      }
    },
    "/#Action=ModifyRule": {
      "get": {
        "description": "<p>Modifies the specified rule.</p> <p>Any existing properties that you do not modify retain their current values.</p> <p>To modify the actions for the default rule, use <a>ModifyListener</a>.</p>",
        "operationId": "GET ModifyRule",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the rule.",
            "in": "query",
            "name": "RuleArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.",
            "in": "query",
            "name": "Conditions",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
            "in": "query",
            "name": "Actions",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["ModifyRule"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyRuleOutput" } } }
          },
          "480": {
            "description": "TargetGroupAssociationLimitException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupAssociationLimitException" } }
            }
          },
          "481": {
            "description": "IncompatibleProtocolsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/IncompatibleProtocolsException" } } }
          },
          "482": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          },
          "483": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          },
          "484": {
            "description": "TooManyRegistrationsForTargetIdException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRegistrationsForTargetIdException" } }
            }
          },
          "485": {
            "description": "TooManyTargetsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetsException" } } }
          },
          "486": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "487": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          },
          "488": {
            "description": "TooManyActionsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyActionsException" } } }
          },
          "489": {
            "description": "InvalidLoadBalancerActionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidLoadBalancerActionException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyRule"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Modifies the specified rule.</p> <p>Any existing properties that you do not modify retain their current values.</p> <p>To modify the actions for the default rule, use <a>ModifyListener</a>.</p>",
        "operationId": "POST ModifyRule",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["ModifyRule"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RuleArn": { "description": "The Amazon Resource Name (ARN) of the rule.", "type": "string" },
                  "Conditions": {
                    "description": "The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Actions": {
                    "description": "<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["RuleArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyRuleOutput" } } }
          },
          "480": {
            "description": "TargetGroupAssociationLimitException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupAssociationLimitException" } }
            }
          },
          "481": {
            "description": "IncompatibleProtocolsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/IncompatibleProtocolsException" } } }
          },
          "482": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          },
          "483": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          },
          "484": {
            "description": "TooManyRegistrationsForTargetIdException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRegistrationsForTargetIdException" } }
            }
          },
          "485": {
            "description": "TooManyTargetsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetsException" } } }
          },
          "486": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "487": {
            "description": "UnsupportedProtocolException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnsupportedProtocolException" } } }
          },
          "488": {
            "description": "TooManyActionsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyActionsException" } } }
          },
          "489": {
            "description": "InvalidLoadBalancerActionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidLoadBalancerActionException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyRule"
      }
    },
    "/#Action=ModifyTargetGroup": {
      "get": {
        "description": "<p>Modifies the health checks used when evaluating the health state of the targets in the specified target group.</p> <p>To monitor the health of the targets, use <a>DescribeTargetHealth</a>.</p>",
        "operationId": "GET ModifyTargetGroup",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the target group.",
            "in": "query",
            "name": "TargetGroupArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not supported for health checks.</p> <p>If the protocol of the target group is TCP, you can't modify this setting.</p>",
            "in": "query",
            "name": "HealthCheckProtocol",
            "required": false,
            "schema": { "type": "string", "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"] }
          },
          {
            "description": "The port the load balancer uses when performing health checks on targets.",
            "in": "query",
            "name": "HealthCheckPort",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "[HTTP/HTTPS health checks] The ping path that is the destination for the health check request.",
            "in": "query",
            "name": "HealthCheckPath",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 1024 }
          },
          {
            "description": "Indicates whether health checks are enabled.",
            "in": "query",
            "name": "HealthCheckEnabled",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "<p>The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5 to 300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds.</p> <p>If the protocol of the target group is TCP, you can't modify this setting.</p>",
            "in": "query",
            "name": "HealthCheckIntervalSeconds",
            "required": false,
            "schema": { "type": "integer", "minimum": 5, "maximum": 300 }
          },
          {
            "description": "<p>[HTTP/HTTPS health checks] The amount of time, in seconds, during which no response means a failed health check.</p> <p>If the protocol of the target group is TCP, you can't modify this setting.</p>",
            "in": "query",
            "name": "HealthCheckTimeoutSeconds",
            "required": false,
            "schema": { "type": "integer", "minimum": 2, "maximum": 120 }
          },
          {
            "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy.",
            "in": "query",
            "name": "HealthyThresholdCount",
            "required": false,
            "schema": { "type": "integer", "minimum": 2, "maximum": 10 }
          },
          {
            "description": "The number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the healthy threshold count.",
            "in": "query",
            "name": "UnhealthyThresholdCount",
            "required": false,
            "schema": { "type": "integer", "minimum": 2, "maximum": 10 }
          },
          {
            "description": "Information to use when checking for a successful response from a target.\n<p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\").</p> <p>For Network Load Balancers, this is 200–399.</p>",
            "in": "query",
            "name": "Matcher.HttpCode",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ModifyTargetGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyTargetGroupOutput" } } }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyTargetGroup"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Modifies the health checks used when evaluating the health state of the targets in the specified target group.</p> <p>To monitor the health of the targets, use <a>DescribeTargetHealth</a>.</p>",
        "operationId": "POST ModifyTargetGroup",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ModifyTargetGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "TargetGroupArn": {
                    "description": "The Amazon Resource Name (ARN) of the target group.",
                    "type": "string"
                  },
                  "HealthCheckProtocol": {
                    "description": "<p>The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not supported for health checks.</p> <p>If the protocol of the target group is TCP, you can't modify this setting.</p>",
                    "type": "string",
                    "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"]
                  },
                  "HealthCheckPort": {
                    "description": "The port the load balancer uses when performing health checks on targets.",
                    "type": "string"
                  },
                  "HealthCheckPath": {
                    "description": "[HTTP/HTTPS health checks] The ping path that is the destination for the health check request.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "HealthCheckEnabled": {
                    "description": "Indicates whether health checks are enabled.",
                    "type": "boolean"
                  },
                  "HealthCheckIntervalSeconds": {
                    "description": "<p>The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5 to 300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds.</p> <p>If the protocol of the target group is TCP, you can't modify this setting.</p>",
                    "type": "integer",
                    "minimum": 5,
                    "maximum": 300
                  },
                  "HealthCheckTimeoutSeconds": {
                    "description": "<p>[HTTP/HTTPS health checks] The amount of time, in seconds, during which no response means a failed health check.</p> <p>If the protocol of the target group is TCP, you can't modify this setting.</p>",
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 120
                  },
                  "HealthyThresholdCount": {
                    "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy.",
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 10
                  },
                  "UnhealthyThresholdCount": {
                    "description": "The number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the healthy threshold count.",
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 10
                  },
                  "Matcher.HttpCode": {
                    "description": "Information to use when checking for a successful response from a target.\n<p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\").</p> <p>For Network Load Balancers, this is 200–399.</p>",
                    "type": "string"
                  }
                },
                "required": ["TargetGroupArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyTargetGroupOutput" } } }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyTargetGroup"
      }
    },
    "/#Action=ModifyTargetGroupAttributes": {
      "get": {
        "description": "Modifies the specified attributes of the specified target group.",
        "operationId": "GET ModifyTargetGroupAttributes",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the target group.",
            "in": "query",
            "name": "TargetGroupArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The attributes.",
            "in": "query",
            "name": "Attributes",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ModifyTargetGroupAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyTargetGroupAttributesOutput" } }
            }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyTargetGroupAttributes"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Modifies the specified attributes of the specified target group.",
        "operationId": "POST ModifyTargetGroupAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ModifyTargetGroupAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "TargetGroupArn": {
                    "description": "The Amazon Resource Name (ARN) of the target group.",
                    "type": "string"
                  },
                  "Attributes": { "description": "The attributes.", "type": "array", "items": { "type": "string" } }
                },
                "required": ["TargetGroupArn", "Attributes"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ModifyTargetGroupAttributesOutput" } }
            }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          }
        },
        "x-aws-operation-name": "ModifyTargetGroupAttributes"
      }
    },
    "/#Action=RegisterTargets": {
      "get": {
        "description": "<p>Registers the specified targets with the specified target group.</p> <p>If the target is an EC2 instance, it must be in the <code>running</code> state when you register it.</p> <p>By default, the load balancer routes requests to registered targets using the protocol and port for the target group. Alternatively, you can override the port for a target when you register it. You can register each EC2 instance or IP address with the same target group multiple times using different ports.</p> <p>With a Network Load Balancer, you cannot register instances by instance ID if they have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1. You can register instances of these types by IP address.</p> <p>To remove a target from a target group, use <a>DeregisterTargets</a>.</p>",
        "operationId": "GET RegisterTargets",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the target group.",
            "in": "query",
            "name": "TargetGroupArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The targets.</p> <p>To register a target by instance ID, specify the instance ID. To register a target by IP address, specify the IP address. To register a Lambda function, specify the ARN of the Lambda function.</p>",
            "in": "query",
            "name": "Targets",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RegisterTargets"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RegisterTargetsOutput" } } }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "481": {
            "description": "TooManyTargetsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetsException" } } }
          },
          "482": {
            "description": "InvalidTargetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidTargetException" } } }
          },
          "483": {
            "description": "TooManyRegistrationsForTargetIdException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRegistrationsForTargetIdException" } }
            }
          }
        },
        "x-aws-operation-name": "RegisterTargets"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Registers the specified targets with the specified target group.</p> <p>If the target is an EC2 instance, it must be in the <code>running</code> state when you register it.</p> <p>By default, the load balancer routes requests to registered targets using the protocol and port for the target group. Alternatively, you can override the port for a target when you register it. You can register each EC2 instance or IP address with the same target group multiple times using different ports.</p> <p>With a Network Load Balancer, you cannot register instances by instance ID if they have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1. You can register instances of these types by IP address.</p> <p>To remove a target from a target group, use <a>DeregisterTargets</a>.</p>",
        "operationId": "POST RegisterTargets",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RegisterTargets"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "TargetGroupArn": {
                    "description": "The Amazon Resource Name (ARN) of the target group.",
                    "type": "string"
                  },
                  "Targets": {
                    "description": "<p>The targets.</p> <p>To register a target by instance ID, specify the instance ID. To register a target by IP address, specify the IP address. To register a Lambda function, specify the ARN of the Lambda function.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["TargetGroupArn", "Targets"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RegisterTargetsOutput" } } }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "481": {
            "description": "TooManyTargetsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTargetsException" } } }
          },
          "482": {
            "description": "InvalidTargetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidTargetException" } } }
          },
          "483": {
            "description": "TooManyRegistrationsForTargetIdException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyRegistrationsForTargetIdException" } }
            }
          }
        },
        "x-aws-operation-name": "RegisterTargets"
      }
    },
    "/#Action=RemoveListenerCertificates": {
      "get": {
        "description": "<p>Removes the specified certificate from the certificate list for the specified HTTPS listener.</p> <p>You can't remove the default certificate for a listener. To replace the default certificate, call <a>ModifyListener</a>.</p> <p>To list the certificates for your listener, use <a>DescribeListenerCertificates</a>.</p>",
        "operationId": "GET RemoveListenerCertificates",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the listener.",
            "in": "query",
            "name": "ListenerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The certificate to remove. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.",
            "in": "query",
            "name": "Certificates",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RemoveListenerCertificates"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RemoveListenerCertificatesOutput" } } }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          }
        },
        "x-aws-operation-name": "RemoveListenerCertificates"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Removes the specified certificate from the certificate list for the specified HTTPS listener.</p> <p>You can't remove the default certificate for a listener. To replace the default certificate, call <a>ModifyListener</a>.</p> <p>To list the certificates for your listener, use <a>DescribeListenerCertificates</a>.</p>",
        "operationId": "POST RemoveListenerCertificates",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RemoveListenerCertificates"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ListenerArn": { "description": "The Amazon Resource Name (ARN) of the listener.", "type": "string" },
                  "Certificates": {
                    "description": "The certificate to remove. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ListenerArn", "Certificates"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RemoveListenerCertificatesOutput" } } }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          }
        },
        "x-aws-operation-name": "RemoveListenerCertificates"
      }
    },
    "/#Action=RemoveTags": {
      "get": {
        "description": "<p>Removes the specified tags from the specified Elastic Load Balancing resource.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>.</p>",
        "operationId": "GET RemoveTags",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the resource.",
            "in": "query",
            "name": "ResourceArns",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The tag keys for the tags to remove.",
            "in": "query",
            "name": "TagKeys",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["RemoveTags"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RemoveTagsOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "482": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "483": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          },
          "484": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          }
        },
        "x-aws-operation-name": "RemoveTags"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Removes the specified tags from the specified Elastic Load Balancing resource.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>.</p>",
        "operationId": "POST RemoveTags",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["RemoveTags"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ResourceArns": {
                    "description": "The Amazon Resource Name (ARN) of the resource.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "TagKeys": {
                    "description": "The tag keys for the tags to remove.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ResourceArns", "TagKeys"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RemoveTagsOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TargetGroupNotFoundException" } } }
          },
          "482": {
            "description": "ListenerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListenerNotFoundException" } } }
          },
          "483": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          },
          "484": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          }
        },
        "x-aws-operation-name": "RemoveTags"
      }
    },
    "/#Action=SetIpAddressType": {
      "get": {
        "description": "Sets the type of IP addresses used by the subnets of the specified Application Load Balancer or Network Load Balancer.",
        "operationId": "GET SetIpAddressType",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "in": "query",
            "name": "LoadBalancerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The IP address type. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>. Network Load Balancers must use <code>ipv4</code>.",
            "in": "query",
            "name": "IpAddressType",
            "required": true,
            "schema": { "type": "string", "enum": ["ipv4", "dualstack"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetIpAddressType"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SetIpAddressTypeOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "482": {
            "description": "InvalidSubnetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSubnetException" } } }
          }
        },
        "x-aws-operation-name": "SetIpAddressType"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Sets the type of IP addresses used by the subnets of the specified Application Load Balancer or Network Load Balancer.",
        "operationId": "POST SetIpAddressType",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetIpAddressType"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerArn": {
                    "description": "The Amazon Resource Name (ARN) of the load balancer.",
                    "type": "string"
                  },
                  "IpAddressType": {
                    "description": "The IP address type. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>. Network Load Balancers must use <code>ipv4</code>.",
                    "type": "string",
                    "enum": ["ipv4", "dualstack"]
                  }
                },
                "required": ["LoadBalancerArn", "IpAddressType"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SetIpAddressTypeOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "482": {
            "description": "InvalidSubnetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSubnetException" } } }
          }
        },
        "x-aws-operation-name": "SetIpAddressType"
      }
    },
    "/#Action=SetRulePriorities": {
      "get": {
        "description": "<p>Sets the priorities of the specified rules.</p> <p>You can reorder the rules as long as there are no priority conflicts in the new order. Any existing rules that you do not specify retain their current priority.</p>",
        "operationId": "GET SetRulePriorities",
        "parameters": [
          {
            "description": "The rule priorities.",
            "in": "query",
            "name": "RulePriorities",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetRulePriorities"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SetRulePrioritiesOutput" } } }
          },
          "480": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          },
          "481": {
            "description": "PriorityInUseException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PriorityInUseException" } } }
          },
          "482": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          }
        },
        "x-aws-operation-name": "SetRulePriorities"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Sets the priorities of the specified rules.</p> <p>You can reorder the rules as long as there are no priority conflicts in the new order. Any existing rules that you do not specify retain their current priority.</p>",
        "operationId": "POST SetRulePriorities",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetRulePriorities"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RulePriorities": {
                    "description": "The rule priorities.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["RulePriorities"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SetRulePrioritiesOutput" } } }
          },
          "480": {
            "description": "RuleNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/RuleNotFoundException" } } }
          },
          "481": {
            "description": "PriorityInUseException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PriorityInUseException" } } }
          },
          "482": {
            "description": "OperationNotPermittedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } } }
          }
        },
        "x-aws-operation-name": "SetRulePriorities"
      }
    },
    "/#Action=SetSecurityGroups": {
      "get": {
        "description": "<p>Associates the specified security groups with the specified Application Load Balancer. The specified security groups override the previously associated security groups.</p> <p>You can't specify a security group for a Network Load Balancer.</p>",
        "operationId": "GET SetSecurityGroups",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "in": "query",
            "name": "LoadBalancerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The IDs of the security groups.",
            "in": "query",
            "name": "SecurityGroups",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetSecurityGroups"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SetSecurityGroupsOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "482": {
            "description": "InvalidSecurityGroupException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSecurityGroupException" } } }
          }
        },
        "x-aws-operation-name": "SetSecurityGroups"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Associates the specified security groups with the specified Application Load Balancer. The specified security groups override the previously associated security groups.</p> <p>You can't specify a security group for a Network Load Balancer.</p>",
        "operationId": "POST SetSecurityGroups",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetSecurityGroups"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerArn": {
                    "description": "The Amazon Resource Name (ARN) of the load balancer.",
                    "type": "string"
                  },
                  "SecurityGroups": {
                    "description": "The IDs of the security groups.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerArn", "SecurityGroups"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SetSecurityGroupsOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "482": {
            "description": "InvalidSecurityGroupException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSecurityGroupException" } } }
          }
        },
        "x-aws-operation-name": "SetSecurityGroups"
      }
    },
    "/#Action=SetSubnets": {
      "get": {
        "description": "<p>Enables the Availability Zone for the specified public subnets for the specified Application Load Balancer. The specified subnets replace the previously enabled subnets.</p> <p>You can't change the subnets for a Network Load Balancer.</p>",
        "operationId": "GET SetSubnets",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the load balancer.",
            "in": "query",
            "name": "LoadBalancerArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.",
            "in": "query",
            "name": "Subnets",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>You cannot specify Elastic IP addresses for your subnets.</p>",
            "in": "query",
            "name": "SubnetMappings",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["SetSubnets"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SetSubnetsOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "482": {
            "description": "SubnetNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SubnetNotFoundException" } } }
          },
          "483": {
            "description": "InvalidSubnetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSubnetException" } } }
          },
          "484": {
            "description": "AllocationIdNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AllocationIdNotFoundException" } } }
          },
          "485": {
            "description": "AvailabilityZoneNotSupportedException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/AvailabilityZoneNotSupportedException" } }
            }
          }
        },
        "x-aws-operation-name": "SetSubnets"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Enables the Availability Zone for the specified public subnets for the specified Application Load Balancer. The specified subnets replace the previously enabled subnets.</p> <p>You can't change the subnets for a Network Load Balancer.</p>",
        "operationId": "POST SetSubnets",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["SetSubnets"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2015-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "LoadBalancerArn": {
                    "description": "The Amazon Resource Name (ARN) of the load balancer.",
                    "type": "string"
                  },
                  "Subnets": {
                    "description": "The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "SubnetMappings": {
                    "description": "<p>The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>You cannot specify Elastic IP addresses for your subnets.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["LoadBalancerArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SetSubnetsOutput" } } }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LoadBalancerNotFoundException" } } }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidConfigurationRequestException" } }
            }
          },
          "482": {
            "description": "SubnetNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SubnetNotFoundException" } } }
          },
          "483": {
            "description": "InvalidSubnetException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidSubnetException" } } }
          },
          "484": {
            "description": "AllocationIdNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/AllocationIdNotFoundException" } } }
          },
          "485": {
            "description": "AvailabilityZoneNotSupportedException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/AvailabilityZoneNotSupportedException" } }
            }
          }
        },
        "x-aws-operation-name": "SetSubnets"
      }
    }
  },
  "servers": [
    {
      "description": "The Elastic Load Balancing v2 multi-region endpoint",
      "url": "http://elasticloadbalancing.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Elastic Load Balancing v2 multi-region endpoint",
      "url": "https://elasticloadbalancing.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The general Elastic Load Balancing v2 endpoint for US East (N. Virginia)",
      "url": "http://elasticloadbalancing.amazonaws.com",
      "variables": {}
    },
    {
      "description": "The general Elastic Load Balancing v2 endpoint for US East (N. Virginia)",
      "url": "https://elasticloadbalancing.amazonaws.com",
      "variables": {}
    },
    {
      "description": "The Elastic Load Balancing v2 endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://elasticloadbalancing.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Elastic Load Balancing v2 endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://elasticloadbalancing.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "requestBodies": {
      "POST_DeleteTargetGroup": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "TargetGroupArn": {
                  "description": "The Amazon Resource Name (ARN) of the target group.",
                  "type": "string"
                }
              },
              "required": ["TargetGroupArn"]
            }
          }
        }
      },
      "POST_DeleteLoadBalancer": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "LoadBalancerArn": {
                  "description": "The Amazon Resource Name (ARN) of the load balancer.",
                  "type": "string"
                }
              },
              "required": ["LoadBalancerArn"]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "Action": {
        "description": "Information about an action.",
        "properties": {
          "AuthenticateCognitoConfig": { "$ref": "#/components/schemas/AuthenticateCognitoActionConfig" },
          "AuthenticateOidcConfig": { "$ref": "#/components/schemas/AuthenticateOidcActionConfig" },
          "FixedResponseConfig": { "$ref": "#/components/schemas/FixedResponseActionConfig" },
          "Order": { "$ref": "#/components/schemas/ActionOrder" },
          "RedirectConfig": { "$ref": "#/components/schemas/RedirectActionConfig" },
          "TargetGroupArn": { "$ref": "#/components/schemas/TargetGroupArn" },
          "Type": { "$ref": "#/components/schemas/ActionTypeEnum" }
        },
        "required": ["Type"],
        "type": "object"
      },
      "ActionOrder": { "maximum": 50000, "minimum": 1, "type": "integer" },
      "ActionTypeEnum": {
        "enum": ["forward", "authenticate-oidc", "authenticate-cognito", "redirect", "fixed-response"],
        "type": "string"
      },
      "Actions": { "items": { "$ref": "#/components/schemas/Action" }, "type": "array" },
      "AddListenerCertificatesInput": {
        "properties": {
          "Certificates": { "$ref": "#/components/schemas/CertificateList" },
          "ListenerArn": { "$ref": "#/components/schemas/ListenerArn" }
        },
        "required": ["ListenerArn", "Certificates"],
        "type": "object"
      },
      "AddListenerCertificatesOutput": {
        "properties": { "Certificates": { "$ref": "#/components/schemas/CertificateList" } },
        "type": "object"
      },
      "AddTagsInput": {
        "properties": {
          "ResourceArns": { "$ref": "#/components/schemas/ResourceArns" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["ResourceArns", "Tags"],
        "type": "object"
      },
      "AddTagsOutput": { "properties": {}, "type": "object" },
      "AllocationId": { "type": "string" },
      "AllocationIdNotFoundException": {},
      "AuthenticateCognitoActionAuthenticationRequestExtraParams": {
        "additionalProperties": {
          "$ref": "#/components/schemas/AuthenticateCognitoActionAuthenticationRequestParamValue"
        },
        "type": "object"
      },
      "AuthenticateCognitoActionAuthenticationRequestParamName": { "type": "string" },
      "AuthenticateCognitoActionAuthenticationRequestParamValue": { "type": "string" },
      "AuthenticateCognitoActionConditionalBehaviorEnum": {
        "enum": ["deny", "allow", "authenticate"],
        "type": "string"
      },
      "AuthenticateCognitoActionConfig": {
        "description": "Request parameters to use when integrating with Amazon Cognito to authenticate users.",
        "properties": {
          "AuthenticationRequestExtraParams": {
            "$ref": "#/components/schemas/AuthenticateCognitoActionAuthenticationRequestExtraParams"
          },
          "OnUnauthenticatedRequest": {
            "$ref": "#/components/schemas/AuthenticateCognitoActionConditionalBehaviorEnum"
          },
          "Scope": { "$ref": "#/components/schemas/AuthenticateCognitoActionScope" },
          "SessionCookieName": { "$ref": "#/components/schemas/AuthenticateCognitoActionSessionCookieName" },
          "SessionTimeout": { "$ref": "#/components/schemas/AuthenticateCognitoActionSessionTimeout" },
          "UserPoolArn": { "$ref": "#/components/schemas/AuthenticateCognitoActionUserPoolArn" },
          "UserPoolClientId": { "$ref": "#/components/schemas/AuthenticateCognitoActionUserPoolClientId" },
          "UserPoolDomain": { "$ref": "#/components/schemas/AuthenticateCognitoActionUserPoolDomain" }
        },
        "required": ["UserPoolArn", "UserPoolClientId", "UserPoolDomain"],
        "type": "object"
      },
      "AuthenticateCognitoActionScope": { "type": "string" },
      "AuthenticateCognitoActionSessionCookieName": { "type": "string" },
      "AuthenticateCognitoActionSessionTimeout": { "type": "integer" },
      "AuthenticateCognitoActionUserPoolArn": { "type": "string" },
      "AuthenticateCognitoActionUserPoolClientId": { "type": "string" },
      "AuthenticateCognitoActionUserPoolDomain": { "type": "string" },
      "AuthenticateOidcActionAuthenticationRequestExtraParams": {
        "additionalProperties": {
          "$ref": "#/components/schemas/AuthenticateOidcActionAuthenticationRequestParamValue"
        },
        "type": "object"
      },
      "AuthenticateOidcActionAuthenticationRequestParamName": { "type": "string" },
      "AuthenticateOidcActionAuthenticationRequestParamValue": { "type": "string" },
      "AuthenticateOidcActionAuthorizationEndpoint": { "type": "string" },
      "AuthenticateOidcActionClientId": { "type": "string" },
      "AuthenticateOidcActionClientSecret": { "type": "string" },
      "AuthenticateOidcActionConditionalBehaviorEnum": { "enum": ["deny", "allow", "authenticate"], "type": "string" },
      "AuthenticateOidcActionConfig": {
        "description": "Request parameters when using an identity provider (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.",
        "properties": {
          "AuthenticationRequestExtraParams": {
            "$ref": "#/components/schemas/AuthenticateOidcActionAuthenticationRequestExtraParams"
          },
          "AuthorizationEndpoint": { "$ref": "#/components/schemas/AuthenticateOidcActionAuthorizationEndpoint" },
          "ClientId": { "$ref": "#/components/schemas/AuthenticateOidcActionClientId" },
          "ClientSecret": { "$ref": "#/components/schemas/AuthenticateOidcActionClientSecret" },
          "Issuer": { "$ref": "#/components/schemas/AuthenticateOidcActionIssuer" },
          "OnUnauthenticatedRequest": { "$ref": "#/components/schemas/AuthenticateOidcActionConditionalBehaviorEnum" },
          "Scope": { "$ref": "#/components/schemas/AuthenticateOidcActionScope" },
          "SessionCookieName": { "$ref": "#/components/schemas/AuthenticateOidcActionSessionCookieName" },
          "SessionTimeout": { "$ref": "#/components/schemas/AuthenticateOidcActionSessionTimeout" },
          "TokenEndpoint": { "$ref": "#/components/schemas/AuthenticateOidcActionTokenEndpoint" },
          "UseExistingClientSecret": { "$ref": "#/components/schemas/AuthenticateOidcActionUseExistingClientSecret" },
          "UserInfoEndpoint": { "$ref": "#/components/schemas/AuthenticateOidcActionUserInfoEndpoint" }
        },
        "required": ["Issuer", "AuthorizationEndpoint", "TokenEndpoint", "UserInfoEndpoint", "ClientId"],
        "type": "object"
      },
      "AuthenticateOidcActionIssuer": { "type": "string" },
      "AuthenticateOidcActionScope": { "type": "string" },
      "AuthenticateOidcActionSessionCookieName": { "type": "string" },
      "AuthenticateOidcActionSessionTimeout": { "type": "integer" },
      "AuthenticateOidcActionTokenEndpoint": { "type": "string" },
      "AuthenticateOidcActionUseExistingClientSecret": { "type": "boolean" },
      "AuthenticateOidcActionUserInfoEndpoint": { "type": "string" },
      "AvailabilityZone": {
        "description": "Information about an Availability Zone.",
        "properties": {
          "LoadBalancerAddresses": { "$ref": "#/components/schemas/LoadBalancerAddresses" },
          "SubnetId": { "$ref": "#/components/schemas/SubnetId" },
          "ZoneName": { "$ref": "#/components/schemas/ZoneName" }
        },
        "type": "object"
      },
      "AvailabilityZoneNotSupportedException": {},
      "AvailabilityZones": { "items": { "$ref": "#/components/schemas/AvailabilityZone" }, "type": "array" },
      "CanonicalHostedZoneId": { "type": "string" },
      "Certificate": {
        "description": "Information about an SSL server certificate.",
        "properties": {
          "CertificateArn": { "$ref": "#/components/schemas/CertificateArn" },
          "IsDefault": { "$ref": "#/components/schemas/Default" }
        },
        "type": "object"
      },
      "CertificateArn": { "type": "string" },
      "CertificateList": { "items": { "$ref": "#/components/schemas/Certificate" }, "type": "array" },
      "CertificateNotFoundException": {},
      "Cipher": {
        "description": "Information about a cipher used in a policy.",
        "properties": {
          "Name": { "$ref": "#/components/schemas/CipherName" },
          "Priority": { "$ref": "#/components/schemas/CipherPriority" }
        },
        "type": "object"
      },
      "CipherName": { "type": "string" },
      "CipherPriority": { "type": "integer" },
      "Ciphers": { "items": { "$ref": "#/components/schemas/Cipher" }, "type": "array" },
      "ConditionFieldName": { "maxLength": 64, "type": "string" },
      "CreateListenerInput": {
        "properties": {
          "Certificates": { "$ref": "#/components/schemas/CertificateList" },
          "DefaultActions": { "$ref": "#/components/schemas/Actions" },
          "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" },
          "Port": { "$ref": "#/components/schemas/Port" },
          "Protocol": { "$ref": "#/components/schemas/ProtocolEnum" },
          "SslPolicy": { "$ref": "#/components/schemas/SslPolicyName" }
        },
        "required": ["LoadBalancerArn", "Protocol", "Port", "DefaultActions"],
        "type": "object"
      },
      "CreateListenerOutput": {
        "example": {
          "Listeners": [
            {
              "Certificates": [{ "CertificateArn": "arn:aws:iam::123456789012:server-certificate/my-server-cert" }],
              "DefaultActions": [
                {
                  "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                  "Type": "forward"
                }
              ],
              "ListenerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2",
              "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
              "Port": 443,
              "Protocol": "HTTPS",
              "SslPolicy": "ELBSecurityPolicy-2015-05"
            }
          ]
        },
        "properties": { "Listeners": { "$ref": "#/components/schemas/Listeners" } },
        "type": "object"
      },
      "CreateLoadBalancerInput": {
        "properties": {
          "IpAddressType": { "$ref": "#/components/schemas/IpAddressType" },
          "Name": { "$ref": "#/components/schemas/LoadBalancerName" },
          "Scheme": { "$ref": "#/components/schemas/LoadBalancerSchemeEnum" },
          "SecurityGroups": { "$ref": "#/components/schemas/SecurityGroups" },
          "SubnetMappings": { "$ref": "#/components/schemas/SubnetMappings" },
          "Subnets": { "$ref": "#/components/schemas/Subnets" },
          "Tags": { "$ref": "#/components/schemas/TagList" },
          "Type": { "$ref": "#/components/schemas/LoadBalancerTypeEnum" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "CreateLoadBalancerOutput": {
        "example": {
          "LoadBalancers": [
            {
              "AvailabilityZones": [
                { "SubnetId": "subnet-8360a9e7", "ZoneName": "us-west-2a" },
                { "SubnetId": "subnet-b7d581c0", "ZoneName": "us-west-2b" }
              ],
              "CanonicalHostedZoneId": "Z2P70J7EXAMPLE",
              "CreatedTime": "2016-03-25T21:29:48.850Z",
              "DNSName": "internal-my-internal-load-balancer-1529930873.us-west-2.elb.amazonaws.com",
              "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-internal-load-balancer/5b49b8d4303115c2",
              "LoadBalancerName": "my-internal-load-balancer",
              "Scheme": "internal",
              "SecurityGroups": ["sg-5943793c"],
              "State": { "Code": "provisioning" },
              "Type": "application",
              "VpcId": "vpc-3ac0fb5f"
            }
          ]
        },
        "properties": { "LoadBalancers": { "$ref": "#/components/schemas/LoadBalancers" } },
        "type": "object"
      },
      "CreateRuleInput": {
        "properties": {
          "Actions": { "$ref": "#/components/schemas/Actions" },
          "Conditions": { "$ref": "#/components/schemas/RuleConditionList" },
          "ListenerArn": { "$ref": "#/components/schemas/ListenerArn" },
          "Priority": { "$ref": "#/components/schemas/RulePriority" }
        },
        "required": ["ListenerArn", "Conditions", "Priority", "Actions"],
        "type": "object"
      },
      "CreateRuleOutput": {
        "example": {
          "Rules": [
            {
              "Actions": [
                {
                  "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                  "Type": "forward"
                }
              ],
              "Conditions": [{ "Field": "path-pattern", "Values": ["/img/*"] }],
              "IsDefault": false,
              "Priority": "10",
              "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee"
            }
          ]
        },
        "properties": { "Rules": { "$ref": "#/components/schemas/Rules" } },
        "type": "object"
      },
      "CreateTargetGroupInput": {
        "properties": {
          "HealthCheckEnabled": { "$ref": "#/components/schemas/HealthCheckEnabled" },
          "HealthCheckIntervalSeconds": { "$ref": "#/components/schemas/HealthCheckIntervalSeconds" },
          "HealthCheckPath": { "$ref": "#/components/schemas/Path" },
          "HealthCheckPort": { "$ref": "#/components/schemas/HealthCheckPort" },
          "HealthCheckProtocol": { "$ref": "#/components/schemas/ProtocolEnum" },
          "HealthCheckTimeoutSeconds": { "$ref": "#/components/schemas/HealthCheckTimeoutSeconds" },
          "HealthyThresholdCount": { "$ref": "#/components/schemas/HealthCheckThresholdCount" },
          "Matcher": { "$ref": "#/components/schemas/Matcher" },
          "Name": { "$ref": "#/components/schemas/TargetGroupName" },
          "Port": { "$ref": "#/components/schemas/Port" },
          "Protocol": { "$ref": "#/components/schemas/ProtocolEnum" },
          "TargetType": { "$ref": "#/components/schemas/TargetTypeEnum" },
          "UnhealthyThresholdCount": { "$ref": "#/components/schemas/HealthCheckThresholdCount" },
          "VpcId": { "$ref": "#/components/schemas/VpcId" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "CreateTargetGroupOutput": {
        "example": {
          "TargetGroups": [
            {
              "HealthCheckIntervalSeconds": 30,
              "HealthCheckPath": "/",
              "HealthCheckPort": "traffic-port",
              "HealthCheckProtocol": "HTTP",
              "HealthCheckTimeoutSeconds": 5,
              "HealthyThresholdCount": 5,
              "Matcher": { "HttpCode": "200" },
              "Port": 80,
              "Protocol": "HTTP",
              "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
              "TargetGroupName": "my-targets",
              "UnhealthyThresholdCount": 2,
              "VpcId": "vpc-3ac0fb5f"
            }
          ]
        },
        "properties": { "TargetGroups": { "$ref": "#/components/schemas/TargetGroups" } },
        "type": "object"
      },
      "CreatedTime": { "format": "date-time", "type": "string" },
      "DNSName": { "type": "string" },
      "Default": { "type": "boolean" },
      "DeleteListenerInput": {
        "properties": { "ListenerArn": { "$ref": "#/components/schemas/ListenerArn" } },
        "required": ["ListenerArn"],
        "type": "object"
      },
      "DeleteListenerOutput": { "properties": {}, "type": "object" },
      "DeleteLoadBalancerInput": {
        "properties": { "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" } },
        "required": ["LoadBalancerArn"],
        "type": "object"
      },
      "DeleteLoadBalancerOutput": { "properties": {}, "type": "object" },
      "DeleteRuleInput": {
        "properties": { "RuleArn": { "$ref": "#/components/schemas/RuleArn" } },
        "required": ["RuleArn"],
        "type": "object"
      },
      "DeleteRuleOutput": { "properties": {}, "type": "object" },
      "DeleteTargetGroupInput": {
        "properties": { "TargetGroupArn": { "$ref": "#/components/schemas/TargetGroupArn" } },
        "required": ["TargetGroupArn"],
        "type": "object"
      },
      "DeleteTargetGroupOutput": { "properties": {}, "type": "object" },
      "DeregisterTargetsInput": {
        "properties": {
          "TargetGroupArn": { "$ref": "#/components/schemas/TargetGroupArn" },
          "Targets": { "$ref": "#/components/schemas/TargetDescriptions" }
        },
        "required": ["TargetGroupArn", "Targets"],
        "type": "object"
      },
      "DeregisterTargetsOutput": { "properties": {}, "type": "object" },
      "DescribeAccountLimitsInput": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/Marker" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" }
        },
        "type": "object"
      },
      "DescribeAccountLimitsOutput": {
        "properties": {
          "Limits": { "$ref": "#/components/schemas/Limits" },
          "NextMarker": { "$ref": "#/components/schemas/Marker" }
        },
        "type": "object"
      },
      "DescribeListenerCertificatesInput": {
        "properties": {
          "ListenerArn": { "$ref": "#/components/schemas/ListenerArn" },
          "Marker": { "$ref": "#/components/schemas/Marker" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" }
        },
        "required": ["ListenerArn"],
        "type": "object"
      },
      "DescribeListenerCertificatesOutput": {
        "properties": {
          "Certificates": { "$ref": "#/components/schemas/CertificateList" },
          "NextMarker": { "$ref": "#/components/schemas/Marker" }
        },
        "type": "object"
      },
      "DescribeListenersInput": {
        "properties": {
          "ListenerArns": { "$ref": "#/components/schemas/ListenerArns" },
          "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" },
          "Marker": { "$ref": "#/components/schemas/Marker" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" }
        },
        "type": "object"
      },
      "DescribeListenersOutput": {
        "example": {
          "Listeners": [
            {
              "DefaultActions": [
                {
                  "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                  "Type": "forward"
                }
              ],
              "ListenerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2",
              "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
              "Port": 80,
              "Protocol": "HTTP"
            }
          ]
        },
        "properties": {
          "Listeners": { "$ref": "#/components/schemas/Listeners" },
          "NextMarker": { "$ref": "#/components/schemas/Marker" }
        },
        "type": "object"
      },
      "DescribeLoadBalancerAttributesInput": {
        "properties": { "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" } },
        "required": ["LoadBalancerArn"],
        "type": "object"
      },
      "DescribeLoadBalancerAttributesOutput": {
        "example": {
          "Attributes": [
            { "Key": "access_logs.s3.enabled", "Value": "false" },
            { "Key": "idle_timeout.timeout_seconds", "Value": "60" },
            { "Key": "access_logs.s3.prefix", "Value": "" },
            { "Key": "deletion_protection.enabled", "Value": "false" },
            { "Key": "access_logs.s3.bucket", "Value": "" }
          ]
        },
        "properties": { "Attributes": { "$ref": "#/components/schemas/LoadBalancerAttributes" } },
        "type": "object"
      },
      "DescribeLoadBalancersInput": {
        "properties": {
          "LoadBalancerArns": { "$ref": "#/components/schemas/LoadBalancerArns" },
          "Marker": { "$ref": "#/components/schemas/Marker" },
          "Names": { "$ref": "#/components/schemas/LoadBalancerNames" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" }
        },
        "type": "object"
      },
      "DescribeLoadBalancersOutput": {
        "example": {
          "LoadBalancers": [
            {
              "AvailabilityZones": [
                { "SubnetId": "subnet-8360a9e7", "ZoneName": "us-west-2a" },
                { "SubnetId": "subnet-b7d581c0", "ZoneName": "us-west-2b" }
              ],
              "CanonicalHostedZoneId": "Z2P70J7EXAMPLE",
              "CreatedTime": "2016-03-25T21:26:12.920Z",
              "DNSName": "my-load-balancer-424835706.us-west-2.elb.amazonaws.com",
              "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
              "LoadBalancerName": "my-load-balancer",
              "Scheme": "internet-facing",
              "SecurityGroups": ["sg-5943793c"],
              "State": { "Code": "active" },
              "Type": "application",
              "VpcId": "vpc-3ac0fb5f"
            }
          ]
        },
        "properties": {
          "LoadBalancers": { "$ref": "#/components/schemas/LoadBalancers" },
          "NextMarker": { "$ref": "#/components/schemas/Marker" }
        },
        "type": "object"
      },
      "DescribeRulesInput": {
        "properties": {
          "ListenerArn": { "$ref": "#/components/schemas/ListenerArn" },
          "Marker": { "$ref": "#/components/schemas/Marker" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "RuleArns": { "$ref": "#/components/schemas/RuleArns" }
        },
        "type": "object"
      },
      "DescribeRulesOutput": {
        "example": {
          "Rules": [
            {
              "Actions": [
                {
                  "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                  "Type": "forward"
                }
              ],
              "Conditions": [{ "Field": "path-pattern", "Values": ["/img/*"] }],
              "IsDefault": false,
              "Priority": "10",
              "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee"
            }
          ]
        },
        "properties": {
          "NextMarker": { "$ref": "#/components/schemas/Marker" },
          "Rules": { "$ref": "#/components/schemas/Rules" }
        },
        "type": "object"
      },
      "DescribeSSLPoliciesInput": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/Marker" },
          "Names": { "$ref": "#/components/schemas/SslPolicyNames" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" }
        },
        "type": "object"
      },
      "DescribeSSLPoliciesOutput": {
        "example": {
          "SslPolicies": [
            {
              "Ciphers": [
                { "Name": "ECDHE-ECDSA-AES128-GCM-SHA256", "Priority": 1 },
                { "Name": "ECDHE-RSA-AES128-GCM-SHA256", "Priority": 2 },
                { "Name": "ECDHE-ECDSA-AES128-SHA256", "Priority": 3 },
                { "Name": "ECDHE-RSA-AES128-SHA256", "Priority": 4 },
                { "Name": "ECDHE-ECDSA-AES128-SHA", "Priority": 5 },
                { "Name": "ECDHE-RSA-AES128-SHA", "Priority": 6 },
                { "Name": "DHE-RSA-AES128-SHA", "Priority": 7 },
                { "Name": "ECDHE-ECDSA-AES256-GCM-SHA384", "Priority": 8 },
                { "Name": "ECDHE-RSA-AES256-GCM-SHA384", "Priority": 9 },
                { "Name": "ECDHE-ECDSA-AES256-SHA384", "Priority": 10 },
                { "Name": "ECDHE-RSA-AES256-SHA384", "Priority": 11 },
                { "Name": "ECDHE-RSA-AES256-SHA", "Priority": 12 },
                { "Name": "ECDHE-ECDSA-AES256-SHA", "Priority": 13 },
                { "Name": "AES128-GCM-SHA256", "Priority": 14 },
                { "Name": "AES128-SHA256", "Priority": 15 },
                { "Name": "AES128-SHA", "Priority": 16 },
                { "Name": "AES256-GCM-SHA384", "Priority": 17 },
                { "Name": "AES256-SHA256", "Priority": 18 },
                { "Name": "AES256-SHA", "Priority": 19 }
              ],
              "Name": "ELBSecurityPolicy-2015-05",
              "SslProtocols": ["TLSv1", "TLSv1.1", "TLSv1.2"]
            }
          ]
        },
        "properties": {
          "NextMarker": { "$ref": "#/components/schemas/Marker" },
          "SslPolicies": { "$ref": "#/components/schemas/SslPolicies" }
        },
        "type": "object"
      },
      "DescribeTagsInput": {
        "properties": { "ResourceArns": { "$ref": "#/components/schemas/ResourceArns" } },
        "required": ["ResourceArns"],
        "type": "object"
      },
      "DescribeTagsOutput": {
        "example": {
          "TagDescriptions": [
            {
              "ResourceArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
              "Tags": [{ "Key": "project", "Value": "lima" }, { "Key": "department", "Value": "digital-media" }]
            }
          ]
        },
        "properties": { "TagDescriptions": { "$ref": "#/components/schemas/TagDescriptions" } },
        "type": "object"
      },
      "DescribeTargetGroupAttributesInput": {
        "properties": { "TargetGroupArn": { "$ref": "#/components/schemas/TargetGroupArn" } },
        "required": ["TargetGroupArn"],
        "type": "object"
      },
      "DescribeTargetGroupAttributesOutput": {
        "example": {
          "Attributes": [
            { "Key": "stickiness.enabled", "Value": "false" },
            { "Key": "deregistration_delay.timeout_seconds", "Value": "300" },
            { "Key": "stickiness.type", "Value": "lb_cookie" },
            { "Key": "stickiness.lb_cookie.duration_seconds", "Value": "86400" }
          ]
        },
        "properties": { "Attributes": { "$ref": "#/components/schemas/TargetGroupAttributes" } },
        "type": "object"
      },
      "DescribeTargetGroupsInput": {
        "properties": {
          "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" },
          "Marker": { "$ref": "#/components/schemas/Marker" },
          "Names": { "$ref": "#/components/schemas/TargetGroupNames" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "TargetGroupArns": { "$ref": "#/components/schemas/TargetGroupArns" }
        },
        "type": "object"
      },
      "DescribeTargetGroupsOutput": {
        "example": {
          "TargetGroups": [
            {
              "HealthCheckIntervalSeconds": 30,
              "HealthCheckPath": "/",
              "HealthCheckPort": "traffic-port",
              "HealthCheckProtocol": "HTTP",
              "HealthCheckTimeoutSeconds": 5,
              "HealthyThresholdCount": 5,
              "LoadBalancerArns": [
                "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
              ],
              "Matcher": { "HttpCode": "200" },
              "Port": 80,
              "Protocol": "HTTP",
              "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
              "TargetGroupName": "my-targets",
              "UnhealthyThresholdCount": 2,
              "VpcId": "vpc-3ac0fb5f"
            }
          ]
        },
        "properties": {
          "NextMarker": { "$ref": "#/components/schemas/Marker" },
          "TargetGroups": { "$ref": "#/components/schemas/TargetGroups" }
        },
        "type": "object"
      },
      "DescribeTargetHealthInput": {
        "properties": {
          "TargetGroupArn": { "$ref": "#/components/schemas/TargetGroupArn" },
          "Targets": { "$ref": "#/components/schemas/TargetDescriptions" }
        },
        "required": ["TargetGroupArn"],
        "type": "object"
      },
      "DescribeTargetHealthOutput": {
        "example": {
          "TargetHealthDescriptions": [
            {
              "HealthCheckPort": "80",
              "Target": { "Id": "i-0f76fade", "Port": 80 },
              "TargetHealth": { "State": "healthy" }
            }
          ]
        },
        "properties": { "TargetHealthDescriptions": { "$ref": "#/components/schemas/TargetHealthDescriptions" } },
        "type": "object"
      },
      "Description": { "type": "string" },
      "DuplicateListenerException": {},
      "DuplicateLoadBalancerNameException": {},
      "DuplicateTagKeysException": {},
      "DuplicateTargetGroupNameException": {},
      "FixedResponseActionConfig": {
        "description": "Information about an action that returns a custom HTTP response.",
        "properties": {
          "ContentType": { "$ref": "#/components/schemas/FixedResponseActionContentType" },
          "MessageBody": { "$ref": "#/components/schemas/FixedResponseActionMessage" },
          "StatusCode": { "$ref": "#/components/schemas/FixedResponseActionStatusCode" }
        },
        "required": ["StatusCode"],
        "type": "object"
      },
      "FixedResponseActionContentType": { "maxLength": 32, "minLength": 0, "type": "string" },
      "FixedResponseActionMessage": { "maxLength": 1024, "minLength": 0, "type": "string" },
      "FixedResponseActionStatusCode": { "pattern": "^(2|4|5)\\d\\d$", "type": "string" },
      "HealthCheckEnabled": { "type": "boolean" },
      "HealthCheckIntervalSeconds": { "maximum": 300, "minimum": 5, "type": "integer" },
      "HealthCheckPort": { "type": "string" },
      "HealthCheckThresholdCount": { "maximum": 10, "minimum": 2, "type": "integer" },
      "HealthCheckTimeoutSeconds": { "maximum": 120, "minimum": 2, "type": "integer" },
      "HealthUnavailableException": {},
      "HostHeaderConditionConfig": {
        "description": "Information about a host header condition.",
        "properties": { "Values": { "$ref": "#/components/schemas/ListOfString" } },
        "type": "object"
      },
      "HttpCode": { "type": "string" },
      "HttpHeaderConditionConfig": {
        "description": "<p>Information about an HTTP header condition.</p> <p>There is a set of standard HTTP header fields. You can also define custom HTTP header fields.</p>",
        "properties": {
          "HttpHeaderName": { "$ref": "#/components/schemas/HttpHeaderConditionName" },
          "Values": { "$ref": "#/components/schemas/ListOfString" }
        },
        "type": "object"
      },
      "HttpHeaderConditionName": { "type": "string" },
      "HttpRequestMethodConditionConfig": {
        "description": "<p>Information about an HTTP method condition.</p> <p>HTTP defines a set of request methods, also referred to as HTTP verbs. For more information, see the <a href=\"https://www.iana.org/assignments/http-methods/http-methods.xhtml\">HTTP Method Registry</a>. You can also define custom HTTP methods.</p>",
        "properties": { "Values": { "$ref": "#/components/schemas/ListOfString" } },
        "type": "object"
      },
      "IncompatibleProtocolsException": {},
      "InvalidConfigurationRequestException": {},
      "InvalidLoadBalancerActionException": {},
      "InvalidSchemeException": {},
      "InvalidSecurityGroupException": {},
      "InvalidSubnetException": {},
      "InvalidTargetException": {},
      "IpAddress": { "type": "string" },
      "IpAddressType": { "enum": ["ipv4", "dualstack"], "type": "string" },
      "IsDefault": { "type": "boolean" },
      "Limit": {
        "description": "Information about an Elastic Load Balancing resource limit for your AWS account.",
        "properties": {
          "Max": { "$ref": "#/components/schemas/Max" },
          "Name": { "$ref": "#/components/schemas/Name" }
        },
        "type": "object"
      },
      "Limits": { "items": { "$ref": "#/components/schemas/Limit" }, "type": "array" },
      "ListOfString": { "items": { "$ref": "#/components/schemas/StringValue" }, "type": "array" },
      "Listener": {
        "description": "Information about a listener.",
        "properties": {
          "Certificates": { "$ref": "#/components/schemas/CertificateList" },
          "DefaultActions": { "$ref": "#/components/schemas/Actions" },
          "ListenerArn": { "$ref": "#/components/schemas/ListenerArn" },
          "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" },
          "Port": { "$ref": "#/components/schemas/Port" },
          "Protocol": { "$ref": "#/components/schemas/ProtocolEnum" },
          "SslPolicy": { "$ref": "#/components/schemas/SslPolicyName" }
        },
        "type": "object"
      },
      "ListenerArn": { "type": "string" },
      "ListenerArns": { "items": { "$ref": "#/components/schemas/ListenerArn" }, "type": "array" },
      "ListenerNotFoundException": {},
      "Listeners": { "items": { "$ref": "#/components/schemas/Listener" }, "type": "array" },
      "LoadBalancer": {
        "description": "Information about a load balancer.",
        "properties": {
          "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZones" },
          "CanonicalHostedZoneId": { "$ref": "#/components/schemas/CanonicalHostedZoneId" },
          "CreatedTime": { "$ref": "#/components/schemas/CreatedTime" },
          "DNSName": { "$ref": "#/components/schemas/DNSName" },
          "IpAddressType": { "$ref": "#/components/schemas/IpAddressType" },
          "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" },
          "LoadBalancerName": { "$ref": "#/components/schemas/LoadBalancerName" },
          "Scheme": { "$ref": "#/components/schemas/LoadBalancerSchemeEnum" },
          "SecurityGroups": { "$ref": "#/components/schemas/SecurityGroups" },
          "State": { "$ref": "#/components/schemas/LoadBalancerState" },
          "Type": { "$ref": "#/components/schemas/LoadBalancerTypeEnum" },
          "VpcId": { "$ref": "#/components/schemas/VpcId" }
        },
        "type": "object"
      },
      "LoadBalancerAddress": {
        "description": "Information about a static IP address for a load balancer.",
        "properties": {
          "AllocationId": { "$ref": "#/components/schemas/AllocationId" },
          "IpAddress": { "$ref": "#/components/schemas/IpAddress" }
        },
        "type": "object"
      },
      "LoadBalancerAddresses": { "items": { "$ref": "#/components/schemas/LoadBalancerAddress" }, "type": "array" },
      "LoadBalancerArn": { "type": "string" },
      "LoadBalancerArns": { "items": { "$ref": "#/components/schemas/LoadBalancerArn" }, "type": "array" },
      "LoadBalancerAttribute": {
        "description": "Information about a load balancer attribute.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/LoadBalancerAttributeKey" },
          "Value": { "$ref": "#/components/schemas/LoadBalancerAttributeValue" }
        },
        "type": "object"
      },
      "LoadBalancerAttributeKey": { "maxLength": 256, "pattern": "^[a-zA-Z0-9._]+$", "type": "string" },
      "LoadBalancerAttributeValue": { "maxLength": 1024, "type": "string" },
      "LoadBalancerAttributes": {
        "items": { "$ref": "#/components/schemas/LoadBalancerAttribute" },
        "maxItems": 20,
        "type": "array"
      },
      "LoadBalancerName": { "type": "string" },
      "LoadBalancerNames": { "items": { "$ref": "#/components/schemas/LoadBalancerName" }, "type": "array" },
      "LoadBalancerNotFoundException": {},
      "LoadBalancerSchemeEnum": { "enum": ["internet-facing", "internal"], "type": "string" },
      "LoadBalancerState": {
        "description": "Information about the state of the load balancer.",
        "properties": {
          "Code": { "$ref": "#/components/schemas/LoadBalancerStateEnum" },
          "Reason": { "$ref": "#/components/schemas/StateReason" }
        },
        "type": "object"
      },
      "LoadBalancerStateEnum": { "enum": ["active", "provisioning", "active_impaired", "failed"], "type": "string" },
      "LoadBalancerTypeEnum": { "enum": ["application", "network"], "type": "string" },
      "LoadBalancers": { "items": { "$ref": "#/components/schemas/LoadBalancer" }, "type": "array" },
      "Marker": { "type": "string" },
      "Matcher": {
        "description": "Information to use when checking for a successful response from a target.",
        "properties": { "HttpCode": { "$ref": "#/components/schemas/HttpCode" } },
        "required": ["HttpCode"],
        "type": "object"
      },
      "Max": { "type": "string" },
      "ModifyListenerInput": {
        "properties": {
          "Certificates": { "$ref": "#/components/schemas/CertificateList" },
          "DefaultActions": { "$ref": "#/components/schemas/Actions" },
          "ListenerArn": { "$ref": "#/components/schemas/ListenerArn" },
          "Port": { "$ref": "#/components/schemas/Port" },
          "Protocol": { "$ref": "#/components/schemas/ProtocolEnum" },
          "SslPolicy": { "$ref": "#/components/schemas/SslPolicyName" }
        },
        "required": ["ListenerArn"],
        "type": "object"
      },
      "ModifyListenerOutput": {
        "example": {
          "Listeners": [
            {
              "Certificates": [{ "CertificateArn": "arn:aws:iam::123456789012:server-certificate/my-new-server-cert" }],
              "DefaultActions": [
                {
                  "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                  "Type": "forward"
                }
              ],
              "ListenerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c8400ae65",
              "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
              "Port": 443,
              "Protocol": "HTTPS",
              "SslPolicy": "ELBSecurityPolicy-2015-05"
            }
          ]
        },
        "properties": { "Listeners": { "$ref": "#/components/schemas/Listeners" } },
        "type": "object"
      },
      "ModifyLoadBalancerAttributesInput": {
        "properties": {
          "Attributes": { "$ref": "#/components/schemas/LoadBalancerAttributes" },
          "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" }
        },
        "required": ["LoadBalancerArn", "Attributes"],
        "type": "object"
      },
      "ModifyLoadBalancerAttributesOutput": {
        "example": {
          "Attributes": [
            { "Key": "access_logs.s3.enabled", "Value": "true" },
            { "Key": "access_logs.s3.bucket", "Value": "my-load-balancer-logs" },
            { "Key": "access_logs.s3.prefix", "Value": "myapp" },
            { "Key": "idle_timeout.timeout_seconds", "Value": "60" },
            { "Key": "deletion_protection.enabled", "Value": "false" }
          ]
        },
        "properties": { "Attributes": { "$ref": "#/components/schemas/LoadBalancerAttributes" } },
        "type": "object"
      },
      "ModifyRuleInput": {
        "properties": {
          "Actions": { "$ref": "#/components/schemas/Actions" },
          "Conditions": { "$ref": "#/components/schemas/RuleConditionList" },
          "RuleArn": { "$ref": "#/components/schemas/RuleArn" }
        },
        "required": ["RuleArn"],
        "type": "object"
      },
      "ModifyRuleOutput": {
        "example": {
          "Rules": [
            {
              "Actions": [
                {
                  "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                  "Type": "forward"
                }
              ],
              "Conditions": [{ "Field": "path-pattern", "Values": ["/images/*"] }],
              "IsDefault": false,
              "Priority": "10",
              "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee"
            }
          ]
        },
        "properties": { "Rules": { "$ref": "#/components/schemas/Rules" } },
        "type": "object"
      },
      "ModifyTargetGroupAttributesInput": {
        "properties": {
          "Attributes": { "$ref": "#/components/schemas/TargetGroupAttributes" },
          "TargetGroupArn": { "$ref": "#/components/schemas/TargetGroupArn" }
        },
        "required": ["TargetGroupArn", "Attributes"],
        "type": "object"
      },
      "ModifyTargetGroupAttributesOutput": {
        "example": {
          "Attributes": [
            { "Key": "stickiness.enabled", "Value": "false" },
            { "Key": "deregistration_delay.timeout_seconds", "Value": "600" },
            { "Key": "stickiness.type", "Value": "lb_cookie" },
            { "Key": "stickiness.lb_cookie.duration_seconds", "Value": "86400" }
          ]
        },
        "properties": { "Attributes": { "$ref": "#/components/schemas/TargetGroupAttributes" } },
        "type": "object"
      },
      "ModifyTargetGroupInput": {
        "properties": {
          "HealthCheckEnabled": { "$ref": "#/components/schemas/HealthCheckEnabled" },
          "HealthCheckIntervalSeconds": { "$ref": "#/components/schemas/HealthCheckIntervalSeconds" },
          "HealthCheckPath": { "$ref": "#/components/schemas/Path" },
          "HealthCheckPort": { "$ref": "#/components/schemas/HealthCheckPort" },
          "HealthCheckProtocol": { "$ref": "#/components/schemas/ProtocolEnum" },
          "HealthCheckTimeoutSeconds": { "$ref": "#/components/schemas/HealthCheckTimeoutSeconds" },
          "HealthyThresholdCount": { "$ref": "#/components/schemas/HealthCheckThresholdCount" },
          "Matcher": { "$ref": "#/components/schemas/Matcher" },
          "TargetGroupArn": { "$ref": "#/components/schemas/TargetGroupArn" },
          "UnhealthyThresholdCount": { "$ref": "#/components/schemas/HealthCheckThresholdCount" }
        },
        "required": ["TargetGroupArn"],
        "type": "object"
      },
      "ModifyTargetGroupOutput": {
        "example": {
          "TargetGroups": [
            {
              "HealthCheckIntervalSeconds": 30,
              "HealthCheckPort": "443",
              "HealthCheckProtocol": "HTTPS",
              "HealthCheckTimeoutSeconds": 5,
              "HealthyThresholdCount": 5,
              "LoadBalancerArns": [
                "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
              ],
              "Matcher": { "HttpCode": "200" },
              "Port": 443,
              "Protocol": "HTTPS",
              "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-https-targets/2453ed029918f21f",
              "TargetGroupName": "my-https-targets",
              "UnhealthyThresholdCount": 2,
              "VpcId": "vpc-3ac0fb5f"
            }
          ]
        },
        "properties": { "TargetGroups": { "$ref": "#/components/schemas/TargetGroups" } },
        "type": "object"
      },
      "Name": { "type": "string" },
      "OperationNotPermittedException": {},
      "PageSize": { "maximum": 400, "minimum": 1, "type": "integer" },
      "Path": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "PathPatternConditionConfig": {
        "description": "Information about a path pattern condition.",
        "properties": { "Values": { "$ref": "#/components/schemas/ListOfString" } },
        "type": "object"
      },
      "Port": { "maximum": 65535, "minimum": 1, "type": "integer" },
      "PriorityInUseException": {},
      "ProtocolEnum": { "enum": ["HTTP", "HTTPS", "TCP", "TLS", "UDP", "TCP_UDP"], "type": "string" },
      "QueryStringConditionConfig": {
        "description": "<p>Information about a query string condition.</p> <p>The query string component of a URI starts after the first '?' character and is terminated by either a '#' character or the end of the URI. A typical query string contains key/value pairs separated by '&amp;' characters. The allowed characters are specified by RFC 3986. Any character can be percentage encoded.</p>",
        "properties": { "Values": { "$ref": "#/components/schemas/QueryStringKeyValuePairList" } },
        "type": "object"
      },
      "QueryStringKeyValuePair": {
        "description": "Information about a key/value pair.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/StringValue" },
          "Value": { "$ref": "#/components/schemas/StringValue" }
        },
        "type": "object"
      },
      "QueryStringKeyValuePairList": {
        "items": { "$ref": "#/components/schemas/QueryStringKeyValuePair" },
        "type": "array"
      },
      "RedirectActionConfig": {
        "description": "<p>Information about a redirect action.</p> <p>A URI consists of the following components: protocol://hostname:port/path?query. You must modify at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that you do not modify retain their original values.</p> <p>You can reuse URI components using the following reserved keywords:</p> <ul> <li> <p>#{protocol}</p> </li> <li> <p>#{host}</p> </li> <li> <p>#{port}</p> </li> <li> <p>#{path} (the leading \"/\" is removed)</p> </li> <li> <p>#{query}</p> </li> </ul> <p>For example, you can change the path to \"/new/#{path}\", the hostname to \"example.#{host}\", or the query to \"#{query}&amp;value=xyz\".</p>",
        "properties": {
          "Host": { "$ref": "#/components/schemas/RedirectActionHost" },
          "Path": { "$ref": "#/components/schemas/RedirectActionPath" },
          "Port": { "$ref": "#/components/schemas/RedirectActionPort" },
          "Protocol": { "$ref": "#/components/schemas/RedirectActionProtocol" },
          "Query": { "$ref": "#/components/schemas/RedirectActionQuery" },
          "StatusCode": { "$ref": "#/components/schemas/RedirectActionStatusCodeEnum" }
        },
        "required": ["StatusCode"],
        "type": "object"
      },
      "RedirectActionHost": { "maxLength": 128, "minLength": 1, "type": "string" },
      "RedirectActionPath": { "maxLength": 128, "minLength": 1, "type": "string" },
      "RedirectActionPort": { "type": "string" },
      "RedirectActionProtocol": { "pattern": "^(HTTPS?|#\\{protocol\\})$", "type": "string" },
      "RedirectActionQuery": { "maxLength": 128, "minLength": 0, "type": "string" },
      "RedirectActionStatusCodeEnum": { "enum": ["HTTP_301", "HTTP_302"], "type": "string" },
      "RegisterTargetsInput": {
        "properties": {
          "TargetGroupArn": { "$ref": "#/components/schemas/TargetGroupArn" },
          "Targets": { "$ref": "#/components/schemas/TargetDescriptions" }
        },
        "required": ["TargetGroupArn", "Targets"],
        "type": "object"
      },
      "RegisterTargetsOutput": { "properties": {}, "type": "object" },
      "RemoveListenerCertificatesInput": {
        "properties": {
          "Certificates": { "$ref": "#/components/schemas/CertificateList" },
          "ListenerArn": { "$ref": "#/components/schemas/ListenerArn" }
        },
        "required": ["ListenerArn", "Certificates"],
        "type": "object"
      },
      "RemoveListenerCertificatesOutput": { "properties": {}, "type": "object" },
      "RemoveTagsInput": {
        "properties": {
          "ResourceArns": { "$ref": "#/components/schemas/ResourceArns" },
          "TagKeys": { "$ref": "#/components/schemas/TagKeys" }
        },
        "required": ["ResourceArns", "TagKeys"],
        "type": "object"
      },
      "RemoveTagsOutput": { "properties": {}, "type": "object" },
      "ResourceArn": { "type": "string" },
      "ResourceArns": { "items": { "$ref": "#/components/schemas/ResourceArn" }, "type": "array" },
      "ResourceInUseException": {},
      "Rule": {
        "description": "Information about a rule.",
        "properties": {
          "Actions": { "$ref": "#/components/schemas/Actions" },
          "Conditions": { "$ref": "#/components/schemas/RuleConditionList" },
          "IsDefault": { "$ref": "#/components/schemas/IsDefault" },
          "Priority": { "$ref": "#/components/schemas/String" },
          "RuleArn": { "$ref": "#/components/schemas/RuleArn" }
        },
        "type": "object"
      },
      "RuleArn": { "type": "string" },
      "RuleArns": { "items": { "$ref": "#/components/schemas/RuleArn" }, "type": "array" },
      "RuleCondition": {
        "description": "Information about a condition for a rule.",
        "properties": {
          "Field": { "$ref": "#/components/schemas/ConditionFieldName" },
          "HostHeaderConfig": { "$ref": "#/components/schemas/HostHeaderConditionConfig" },
          "HttpHeaderConfig": { "$ref": "#/components/schemas/HttpHeaderConditionConfig" },
          "HttpRequestMethodConfig": { "$ref": "#/components/schemas/HttpRequestMethodConditionConfig" },
          "PathPatternConfig": { "$ref": "#/components/schemas/PathPatternConditionConfig" },
          "QueryStringConfig": { "$ref": "#/components/schemas/QueryStringConditionConfig" },
          "SourceIpConfig": { "$ref": "#/components/schemas/SourceIpConditionConfig" },
          "Values": { "$ref": "#/components/schemas/ListOfString" }
        },
        "type": "object"
      },
      "RuleConditionList": { "items": { "$ref": "#/components/schemas/RuleCondition" }, "type": "array" },
      "RuleNotFoundException": {},
      "RulePriority": { "maximum": 50000, "minimum": 1, "type": "integer" },
      "RulePriorityList": { "items": { "$ref": "#/components/schemas/RulePriorityPair" }, "type": "array" },
      "RulePriorityPair": {
        "description": "Information about the priorities for the rules for a listener.",
        "properties": {
          "Priority": { "$ref": "#/components/schemas/RulePriority" },
          "RuleArn": { "$ref": "#/components/schemas/RuleArn" }
        },
        "type": "object"
      },
      "Rules": { "items": { "$ref": "#/components/schemas/Rule" }, "type": "array" },
      "SSLPolicyNotFoundException": {},
      "SecurityGroupId": { "type": "string" },
      "SecurityGroups": { "items": { "$ref": "#/components/schemas/SecurityGroupId" }, "type": "array" },
      "SetIpAddressTypeInput": {
        "properties": {
          "IpAddressType": { "$ref": "#/components/schemas/IpAddressType" },
          "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" }
        },
        "required": ["LoadBalancerArn", "IpAddressType"],
        "type": "object"
      },
      "SetIpAddressTypeOutput": {
        "properties": { "IpAddressType": { "$ref": "#/components/schemas/IpAddressType" } },
        "type": "object"
      },
      "SetRulePrioritiesInput": {
        "properties": { "RulePriorities": { "$ref": "#/components/schemas/RulePriorityList" } },
        "required": ["RulePriorities"],
        "type": "object"
      },
      "SetRulePrioritiesOutput": {
        "example": {
          "Rules": [
            {
              "Actions": [
                {
                  "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                  "Type": "forward"
                }
              ],
              "Conditions": [{ "Field": "path-pattern", "Values": ["/img/*"] }],
              "IsDefault": false,
              "Priority": "5",
              "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3"
            }
          ]
        },
        "properties": { "Rules": { "$ref": "#/components/schemas/Rules" } },
        "type": "object"
      },
      "SetSecurityGroupsInput": {
        "properties": {
          "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" },
          "SecurityGroups": { "$ref": "#/components/schemas/SecurityGroups" }
        },
        "required": ["LoadBalancerArn", "SecurityGroups"],
        "type": "object"
      },
      "SetSecurityGroupsOutput": {
        "example": { "SecurityGroupIds": ["sg-5943793c"] },
        "properties": { "SecurityGroupIds": { "$ref": "#/components/schemas/SecurityGroups" } },
        "type": "object"
      },
      "SetSubnetsInput": {
        "properties": {
          "LoadBalancerArn": { "$ref": "#/components/schemas/LoadBalancerArn" },
          "SubnetMappings": { "$ref": "#/components/schemas/SubnetMappings" },
          "Subnets": { "$ref": "#/components/schemas/Subnets" }
        },
        "required": ["LoadBalancerArn"],
        "type": "object"
      },
      "SetSubnetsOutput": {
        "example": {
          "AvailabilityZones": [
            { "SubnetId": "subnet-8360a9e7", "ZoneName": "us-west-2a" },
            { "SubnetId": "subnet-b7d581c0", "ZoneName": "us-west-2b" }
          ]
        },
        "properties": { "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZones" } },
        "type": "object"
      },
      "SourceIpConditionConfig": {
        "description": "<p>Information about a source IP condition.</p> <p>You can use this condition to route based on the IP address of the source that connects to the load balancer. If a client is behind a proxy, this is the IP address of the proxy not the IP address of the client.</p>",
        "properties": { "Values": { "$ref": "#/components/schemas/ListOfString" } },
        "type": "object"
      },
      "SslPolicies": { "items": { "$ref": "#/components/schemas/SslPolicy" }, "type": "array" },
      "SslPolicy": {
        "description": "Information about a policy used for SSL negotiation.",
        "properties": {
          "Ciphers": { "$ref": "#/components/schemas/Ciphers" },
          "Name": { "$ref": "#/components/schemas/SslPolicyName" },
          "SslProtocols": { "$ref": "#/components/schemas/SslProtocols" }
        },
        "type": "object"
      },
      "SslPolicyName": { "type": "string" },
      "SslPolicyNames": { "items": { "$ref": "#/components/schemas/SslPolicyName" }, "type": "array" },
      "SslProtocol": { "type": "string" },
      "SslProtocols": { "items": { "$ref": "#/components/schemas/SslProtocol" }, "type": "array" },
      "StateReason": { "type": "string" },
      "String": { "type": "string" },
      "StringValue": { "type": "string" },
      "SubnetId": { "type": "string" },
      "SubnetMapping": {
        "description": "Information about a subnet mapping.",
        "properties": {
          "AllocationId": { "$ref": "#/components/schemas/AllocationId" },
          "SubnetId": { "$ref": "#/components/schemas/SubnetId" }
        },
        "type": "object"
      },
      "SubnetMappings": { "items": { "$ref": "#/components/schemas/SubnetMapping" }, "type": "array" },
      "SubnetNotFoundException": {},
      "Subnets": { "items": { "$ref": "#/components/schemas/SubnetId" }, "type": "array" },
      "Tag": {
        "description": "Information about a tag.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TagKey" },
          "Value": { "$ref": "#/components/schemas/TagValue" }
        },
        "required": ["Key"],
        "type": "object"
      },
      "TagDescription": {
        "description": "The tags associated with a resource.",
        "properties": {
          "ResourceArn": { "$ref": "#/components/schemas/ResourceArn" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "TagDescriptions": { "items": { "$ref": "#/components/schemas/TagDescription" }, "type": "array" },
      "TagKey": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "TagKeys": { "items": { "$ref": "#/components/schemas/TagKey" }, "type": "array" },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "minItems": 1, "type": "array" },
      "TagValue": {
        "maxLength": 256,
        "minLength": 0,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "TargetDescription": {
        "description": "Information about a target.",
        "properties": {
          "AvailabilityZone": { "$ref": "#/components/schemas/ZoneName" },
          "Id": { "$ref": "#/components/schemas/TargetId" },
          "Port": { "$ref": "#/components/schemas/Port" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "TargetDescriptions": { "items": { "$ref": "#/components/schemas/TargetDescription" }, "type": "array" },
      "TargetGroup": {
        "description": "Information about a target group.",
        "properties": {
          "HealthCheckEnabled": { "$ref": "#/components/schemas/HealthCheckEnabled" },
          "HealthCheckIntervalSeconds": { "$ref": "#/components/schemas/HealthCheckIntervalSeconds" },
          "HealthCheckPath": { "$ref": "#/components/schemas/Path" },
          "HealthCheckPort": { "$ref": "#/components/schemas/HealthCheckPort" },
          "HealthCheckProtocol": { "$ref": "#/components/schemas/ProtocolEnum" },
          "HealthCheckTimeoutSeconds": { "$ref": "#/components/schemas/HealthCheckTimeoutSeconds" },
          "HealthyThresholdCount": { "$ref": "#/components/schemas/HealthCheckThresholdCount" },
          "LoadBalancerArns": { "$ref": "#/components/schemas/LoadBalancerArns" },
          "Matcher": { "$ref": "#/components/schemas/Matcher" },
          "Port": { "$ref": "#/components/schemas/Port" },
          "Protocol": { "$ref": "#/components/schemas/ProtocolEnum" },
          "TargetGroupArn": { "$ref": "#/components/schemas/TargetGroupArn" },
          "TargetGroupName": { "$ref": "#/components/schemas/TargetGroupName" },
          "TargetType": { "$ref": "#/components/schemas/TargetTypeEnum" },
          "UnhealthyThresholdCount": { "$ref": "#/components/schemas/HealthCheckThresholdCount" },
          "VpcId": { "$ref": "#/components/schemas/VpcId" }
        },
        "type": "object"
      },
      "TargetGroupArn": { "type": "string" },
      "TargetGroupArns": { "items": { "$ref": "#/components/schemas/TargetGroupArn" }, "type": "array" },
      "TargetGroupAssociationLimitException": {},
      "TargetGroupAttribute": {
        "description": "Information about a target group attribute.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TargetGroupAttributeKey" },
          "Value": { "$ref": "#/components/schemas/TargetGroupAttributeValue" }
        },
        "type": "object"
      },
      "TargetGroupAttributeKey": { "maxLength": 256, "pattern": "^[a-zA-Z0-9._]+$", "type": "string" },
      "TargetGroupAttributeValue": { "type": "string" },
      "TargetGroupAttributes": { "items": { "$ref": "#/components/schemas/TargetGroupAttribute" }, "type": "array" },
      "TargetGroupName": { "type": "string" },
      "TargetGroupNames": { "items": { "$ref": "#/components/schemas/TargetGroupName" }, "type": "array" },
      "TargetGroupNotFoundException": {},
      "TargetGroups": { "items": { "$ref": "#/components/schemas/TargetGroup" }, "type": "array" },
      "TargetHealth": {
        "description": "Information about the current health of a target.",
        "properties": {
          "Description": { "$ref": "#/components/schemas/Description" },
          "Reason": { "$ref": "#/components/schemas/TargetHealthReasonEnum" },
          "State": { "$ref": "#/components/schemas/TargetHealthStateEnum" }
        },
        "type": "object"
      },
      "TargetHealthDescription": {
        "description": "Information about the health of a target.",
        "properties": {
          "HealthCheckPort": { "$ref": "#/components/schemas/HealthCheckPort" },
          "Target": { "$ref": "#/components/schemas/TargetDescription" },
          "TargetHealth": { "$ref": "#/components/schemas/TargetHealth" }
        },
        "type": "object"
      },
      "TargetHealthDescriptions": {
        "items": { "$ref": "#/components/schemas/TargetHealthDescription" },
        "type": "array"
      },
      "TargetHealthReasonEnum": {
        "enum": [
          "Elb.RegistrationInProgress",
          "Elb.InitialHealthChecking",
          "Target.ResponseCodeMismatch",
          "Target.Timeout",
          "Target.FailedHealthChecks",
          "Target.NotRegistered",
          "Target.NotInUse",
          "Target.DeregistrationInProgress",
          "Target.InvalidState",
          "Target.IpUnusable",
          "Target.HealthCheckDisabled",
          "Elb.InternalError"
        ],
        "type": "string"
      },
      "TargetHealthStateEnum": {
        "enum": ["initial", "healthy", "unhealthy", "unused", "draining", "unavailable"],
        "type": "string"
      },
      "TargetId": { "type": "string" },
      "TargetTypeEnum": { "enum": ["instance", "ip", "lambda"], "type": "string" },
      "TooManyActionsException": {},
      "TooManyCertificatesException": {},
      "TooManyListenersException": {},
      "TooManyLoadBalancersException": {},
      "TooManyRegistrationsForTargetIdException": {},
      "TooManyRulesException": {},
      "TooManyTagsException": {},
      "TooManyTargetGroupsException": {},
      "TooManyTargetsException": {},
      "UnsupportedProtocolException": {},
      "VpcId": { "type": "string" },
      "ZoneName": { "type": "string" }
    }
  }
}
