{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>The AWS Serverless Application Repository makes it easy for developers and enterprises to quickly find\n and deploy serverless applications in the AWS Cloud. For more information about serverless applications,\n see Serverless Computing and Applications on the AWS website.</p><p>The AWS Serverless Application Repository is deeply integrated with the AWS Lambda console, so that developers of \n all levels can get started with serverless computing without needing to learn anything new. You can use category \n keywords to browse for applications such as web and mobile backends, data processing applications, or chatbots. \n You can also search for applications by name, publisher, or event source. To use an application, you simply choose it, \n configure any required fields, and deploy it with a few clicks. </p><p>You can also easily publish applications, sharing them publicly with the community at large, or privately\n within your team or across your organization. To publish a serverless application (or app), you can use the\n AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDKs to upload the code. Along with the\n code, you upload a simple manifest file, also known as the AWS Serverless Application Model (AWS SAM) template.\n For more information about AWS SAM, see AWS Serverless Application Model (AWS SAM) on the AWS Labs\n GitHub repository.</p><p>The AWS Serverless Application Repository Developer Guide contains more information about the two developer\n experiences available:</p><ul>\n <li>\n <p>Consuming Applications – Browse for applications and view information about them, including\n source code and readme files. Also install, configure, and deploy applications of your choosing. </p>\n <p>Publishing Applications – Configure and upload applications to make them available to other\n developers, and publish new versions of applications. </p>\n </li>\n </ul>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWSServerlessApplicationRepository",
    "version": "2017-09-08",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/serverlessrepo-2017-09-08.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "serverlessrepo"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/serverlessrepo/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/applications": {
      "get": {
        "description": "Lists applications owned by the requester.",
        "operationId": "ListApplications",
        "parameters": [
          {
            "description": "The total number of items to return.",
            "in": "query",
            "name": "maxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 100 }
          },
          {
            "description": "A token to specify where to start paginating.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListApplicationsResponse" } } }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "482": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates an application, optionally including an AWS SAM file to create the first application version in the same call.",
        "operationId": "CreateApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "author": {
                    "description": "<p>The name of the author publishing the app.</p><p>Minimum length=1. Maximum length=127.</p><p>Pattern \"^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$\";</p>",
                    "type": "string"
                  },
                  "description": {
                    "description": "<p>The description of the application.</p><p>Minimum length=1. Maximum length=256</p>",
                    "type": "string"
                  },
                  "homePageUrl": {
                    "description": "A URL with more information about the application, for example the location of your GitHub repository for the application.",
                    "type": "string"
                  },
                  "labels": {
                    "description": "<p>Labels to improve discovery of apps in search results.</p><p>Minimum length=1. Maximum length=127. Maximum number of labels: 10</p><p>Pattern: \"^[a-zA-Z0-9+\\\\-_:\\\\/@]+$\";</p>",
                    "items": { "$ref": "#/components/schemas/__string" },
                    "type": "array"
                  },
                  "licenseBody": {
                    "description": "<p>A local text file that contains the license of the app that matches the spdxLicenseID value of your application.\n The file has the format file://&lt;path>/&lt;filename>.</p><p>Maximum size 5 MB</p><p>You can specify only one of licenseBody and licenseUrl; otherwise, an error results.</p>",
                    "type": "string"
                  },
                  "licenseUrl": {
                    "description": "<p>A link to the S3 object that contains the license of the app that matches the spdxLicenseID value of your application.</p><p>Maximum size 5 MB</p><p>You can specify only one of licenseBody and licenseUrl; otherwise, an error results.</p>",
                    "type": "string"
                  },
                  "name": {
                    "description": "<p>The name of the application that you want to publish.</p><p>Minimum length=1. Maximum length=140</p><p>Pattern: \"[a-zA-Z0-9\\\\-]+\";</p>",
                    "type": "string"
                  },
                  "readmeBody": {
                    "description": "<p>A local text readme file in Markdown language that contains a more detailed description of the application and how it works.\n The file has the format file://&lt;path>/&lt;filename>.</p><p>Maximum size 5 MB</p><p>You can specify only one of readmeBody and readmeUrl; otherwise, an error results.</p>",
                    "type": "string"
                  },
                  "readmeUrl": {
                    "description": "<p>A link to the S3 object in Markdown language that contains a more detailed description of the application and how it works.</p><p>Maximum size 5 MB</p><p>You can specify only one of readmeBody and readmeUrl; otherwise, an error results.</p>",
                    "type": "string"
                  },
                  "semanticVersion": {
                    "description": "<p>The semantic version of the application:</p><p>\n <a href=\"https://semver.org/\">https://semver.org/</a>\n </p>",
                    "type": "string"
                  },
                  "sourceCodeArchiveUrl": {
                    "description": "<p>A link to the S3 object that contains the ZIP archive of the source code for this version of your application.</p><p>Maximum size 50 MB</p>",
                    "type": "string"
                  },
                  "sourceCodeUrl": {
                    "description": "A link to a public repository for the source code of your application, for example the URL of a specific GitHub commit.",
                    "type": "string"
                  },
                  "spdxLicenseId": {
                    "description": "A valid identifier from <a href=\"https://spdx.org/licenses/\">https://spdx.org/licenses/</a>.",
                    "type": "string"
                  },
                  "templateBody": {
                    "description": "<p>The local raw packaged AWS SAM template file of your application.\n The file has the format file://&lt;path>/&lt;filename>.</p><p>You can specify only one of templateBody and templateUrl; otherwise an error results.</p>",
                    "type": "string"
                  },
                  "templateUrl": {
                    "description": "<p>A link to the S3 object containing the packaged AWS SAM template of your application.</p><p>You can specify only one of templateBody and templateUrl; otherwise an error results.</p>",
                    "type": "string"
                  }
                },
                "required": ["author", "description", "name"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateApplicationResponse" } }
            }
          },
          "480": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "481": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "482": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "483": {
            "description": "ConflictException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ConflictException" } } }
          },
          "484": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      }
    },
    "/applications/{applicationId}": {
      "delete": {
        "description": "Deletes the specified application.",
        "operationId": "DeleteApplication",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Success" },
          "480": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "481": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          },
          "483": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "484": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "485": {
            "description": "ConflictException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ConflictException" } } }
          }
        }
      },
      "get": {
        "description": "Gets the specified application.",
        "operationId": "GetApplication",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The semantic version of the application to get.",
            "in": "query",
            "name": "semanticVersion",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetApplicationResponse" } } }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "484": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "patch": {
        "description": "Updates the specified application.",
        "operationId": "UpdateApplication",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "author": {
                    "description": "<p>The name of the author publishing the app.</p><p>Minimum length=1. Maximum length=127.</p><p>Pattern \"^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$\";</p>",
                    "type": "string"
                  },
                  "description": {
                    "description": "<p>The description of the application.</p><p>Minimum length=1. Maximum length=256</p>",
                    "type": "string"
                  },
                  "homePageUrl": {
                    "description": "A URL with more information about the application, for example the location of your GitHub repository for the application.",
                    "type": "string"
                  },
                  "labels": {
                    "description": "<p>Labels to improve discovery of apps in search results.</p><p>Minimum length=1. Maximum length=127. Maximum number of labels: 10</p><p>Pattern: \"^[a-zA-Z0-9+\\\\-_:\\\\/@]+$\";</p>",
                    "items": { "$ref": "#/components/schemas/__string" },
                    "type": "array"
                  },
                  "readmeBody": {
                    "description": "<p>A text readme file in Markdown language that contains a more detailed description of the application and how it works.</p><p>Maximum size 5 MB</p>",
                    "type": "string"
                  },
                  "readmeUrl": {
                    "description": "<p>A link to the readme file in Markdown language that contains a more detailed description of the application and how it works.</p><p>Maximum size 5 MB</p>",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateApplicationResponse" } }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "481": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          },
          "483": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "484": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "485": {
            "description": "ConflictException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ConflictException" } } }
          }
        }
      }
    },
    "/applications/{applicationId}/changesets": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates an AWS CloudFormation change set for the given application.",
        "operationId": "CreateCloudFormationChangeSet",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "capabilities": {
                    "description": "<p>A list of values that you must specify before you can deploy certain applications.\n Some applications might include resources that can affect permissions in your AWS\n account, for example, by creating new AWS Identity and Access Management (IAM) users.\n For those applications, you must explicitly acknowledge their capabilities by\n specifying this parameter.</p><p>The only valid values are CAPABILITY_IAM, CAPABILITY_NAMED_IAM,\n CAPABILITY_RESOURCE_POLICY, and CAPABILITY_AUTO_EXPAND.</p><p>The following resources require you to specify CAPABILITY_IAM or\n CAPABILITY_NAMED_IAM:\n <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html\">AWS::IAM::Group</a>,\n <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html\">AWS::IAM::InstanceProfile</a>,\n <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html\">AWS::IAM::Policy</a>, and\n <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html\">AWS::IAM::Role</a>.\n If the application contains IAM resources, you can specify either CAPABILITY_IAM\n or CAPABILITY_NAMED_IAM. If the application contains IAM resources\n with custom names, you must specify CAPABILITY_NAMED_IAM.</p><p>The following resources require you to specify CAPABILITY_RESOURCE_POLICY:\n <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html\">AWS::Lambda::Permission</a>,\n <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html\">AWS::IAM:Policy</a>,\n <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html\">AWS::ApplicationAutoScaling::ScalingPolicy</a>,\n <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html\">AWS::S3::BucketPolicy</a>,\n <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html\">AWS::SQS::QueuePolicy</a>, and\n <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html\">AWS::SNS:TopicPolicy</a>.</p><p>Applications that contain one or more nested applications require you to specify\n CAPABILITY_AUTO_EXPAND.</p><p>If your application template contains any of the above resources, we recommend that you review\n all permissions associated with the application before deploying. If you don't specify\n this parameter for an application that requires capabilities, the call will fail.</p>",
                    "items": { "$ref": "#/components/schemas/__string" },
                    "type": "array"
                  },
                  "changeSetName": {
                    "description": "This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet\">CreateChangeSet</a>\n </i> API.",
                    "type": "string"
                  },
                  "clientToken": {
                    "description": "This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet\">CreateChangeSet</a>\n </i> API.",
                    "type": "string"
                  },
                  "description": {
                    "description": "This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet\">CreateChangeSet</a>\n </i> API.",
                    "type": "string"
                  },
                  "notificationArns": {
                    "description": "This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet\">CreateChangeSet</a>\n </i> API.",
                    "items": { "$ref": "#/components/schemas/__string" },
                    "type": "array"
                  },
                  "parameterOverrides": {
                    "description": "A list of parameter values for the parameters of the application.",
                    "items": { "$ref": "#/components/schemas/ParameterValue" },
                    "type": "array"
                  },
                  "resourceTypes": {
                    "description": "This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet\">CreateChangeSet</a>\n </i> API.",
                    "items": { "$ref": "#/components/schemas/__string" },
                    "type": "array"
                  },
                  "rollbackConfiguration": {
                    "description": "This property corresponds to the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RollbackConfiguration\">RollbackConfiguration</a>\n </i> Data Type.",
                    "properties": {
                      "MonitoringTimeInMinutes": { "$ref": "#/components/schemas/__integer" },
                      "RollbackTriggers": { "$ref": "#/components/schemas/__listOfRollbackTrigger" }
                    },
                    "type": "object"
                  },
                  "semanticVersion": {
                    "description": "<p>The semantic version of the application:</p><p>\n <a href=\"https://semver.org/\">https://semver.org/</a>\n </p>",
                    "type": "string"
                  },
                  "stackName": {
                    "description": "This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet\">CreateChangeSet</a>\n </i> API.",
                    "type": "string"
                  },
                  "tags": {
                    "description": "This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet\">CreateChangeSet</a>\n </i> API.",
                    "items": { "$ref": "#/components/schemas/Tag" },
                    "type": "array"
                  },
                  "templateId": {
                    "description": "<p>The UUID returned by CreateCloudFormationTemplate.</p><p>Pattern: [0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}</p>",
                    "type": "string"
                  }
                },
                "required": ["stackName"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateCloudFormationChangeSetResponse" } }
            }
          },
          "480": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "481": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "482": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      }
    },
    "/applications/{applicationId}/dependencies": {
      "get": {
        "description": "Retrieves the list of applications nested in the containing application.",
        "operationId": "ListApplicationDependencies",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The total number of items to return.",
            "in": "query",
            "name": "maxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 100 }
          },
          {
            "description": "A token to specify where to start paginating.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The semantic version of the application to get.",
            "in": "query",
            "name": "semanticVersion",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListApplicationDependenciesResponse" } }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "484": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/applications/{applicationId}/policy": {
      "get": {
        "description": "Retrieves the policy for the application.",
        "operationId": "GetApplicationPolicy",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetApplicationPolicyResponse" } }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "484": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "put": {
        "description": "Sets the permission policy for an application. For the list of actions supported for this operation, see\n <a href=\"https://docs.aws.amazon.com/serverlessrepo/latest/devguide/access-control-resource-based.html#application-permissions\">Application \n Permissions</a>\n .",
        "operationId": "PutApplicationPolicy",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "statements": {
                    "description": "An array of policy statements applied to the application.",
                    "items": { "$ref": "#/components/schemas/ApplicationPolicyStatement" },
                    "type": "array"
                  }
                },
                "required": ["statements"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PutApplicationPolicyResponse" } }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "484": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      }
    },
    "/applications/{applicationId}/templates": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates an AWS CloudFormation template.",
        "operationId": "CreateCloudFormationTemplate",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "semanticVersion": {
                    "description": "<p>The semantic version of the application:</p><p>\n <a href=\"https://semver.org/\">https://semver.org/</a>\n </p>",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateCloudFormationTemplateResponse" } }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "484": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      }
    },
    "/applications/{applicationId}/templates/{templateId}": {
      "get": {
        "description": "Gets the specified AWS CloudFormation template.",
        "operationId": "GetCloudFormationTemplate",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The UUID returned by CreateCloudFormationTemplate.</p><p>Pattern: [0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}</p>",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetCloudFormationTemplateResponse" } }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "484": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/applications/{applicationId}/versions": {
      "get": {
        "description": "Lists versions for the specified application.",
        "operationId": "ListApplicationVersions",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The total number of items to return.",
            "in": "query",
            "name": "maxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 100 }
          },
          {
            "description": "A token to specify where to start paginating.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListApplicationVersionsResponse" } }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "484": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/applications/{applicationId}/versions/{semanticVersion}": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "put": {
        "description": "Creates an application version.",
        "operationId": "CreateApplicationVersion",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the application.",
            "in": "path",
            "name": "applicationId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The semantic version of the new version.",
            "in": "path",
            "name": "semanticVersion",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "sourceCodeArchiveUrl": {
                    "description": "<p>A link to the S3 object that contains the ZIP archive of the source code for this version of your application.</p><p>Maximum size 50 MB</p>",
                    "type": "string"
                  },
                  "sourceCodeUrl": {
                    "description": "A link to a public repository for the source code of your application, for example the URL of a specific GitHub commit.",
                    "type": "string"
                  },
                  "templateBody": {
                    "description": "The raw packaged AWS SAM template of your application.",
                    "type": "string"
                  },
                  "templateUrl": {
                    "description": "A link to the packaged AWS SAM template of your application.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateApplicationVersionResponse" } }
            }
          },
          "480": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "481": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "482": {
            "description": "InternalServerErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerErrorException" } }
            }
          },
          "483": {
            "description": "ConflictException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ConflictException" } } }
          },
          "484": {
            "description": "ForbiddenException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForbiddenException" } } }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The AWSServerlessApplicationRepository multi-region endpoint",
      "url": "http://serverlessrepo.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWSServerlessApplicationRepository multi-region endpoint",
      "url": "https://serverlessrepo.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWSServerlessApplicationRepository endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://serverlessrepo.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The AWSServerlessApplicationRepository endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://serverlessrepo.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "ApplicationDependencySummary": {
        "description": "A nested application summary.",
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "SemanticVersion": { "$ref": "#/components/schemas/__string" }
        },
        "required": ["ApplicationId", "SemanticVersion"],
        "type": "object"
      },
      "ApplicationPolicyStatement": {
        "description": "Policy statement applied to the application.",
        "properties": {
          "Actions": { "$ref": "#/components/schemas/__listOf__string" },
          "Principals": { "$ref": "#/components/schemas/__listOf__string" },
          "StatementId": { "$ref": "#/components/schemas/__string" }
        },
        "required": ["Principals", "Actions"],
        "type": "object"
      },
      "ApplicationSummary": {
        "description": "Summary of details about the application.",
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "Author": { "$ref": "#/components/schemas/__string" },
          "CreationTime": { "$ref": "#/components/schemas/__string" },
          "Description": { "$ref": "#/components/schemas/__string" },
          "HomePageUrl": { "$ref": "#/components/schemas/__string" },
          "Labels": { "$ref": "#/components/schemas/__listOf__string" },
          "Name": { "$ref": "#/components/schemas/__string" },
          "SpdxLicenseId": { "$ref": "#/components/schemas/__string" }
        },
        "required": ["Description", "Author", "ApplicationId", "Name"],
        "type": "object"
      },
      "BadRequestException": {},
      "Capability": {
        "description": "Values that must be specified in order to deploy some applications.",
        "enum": ["CAPABILITY_IAM", "CAPABILITY_NAMED_IAM", "CAPABILITY_AUTO_EXPAND", "CAPABILITY_RESOURCE_POLICY"],
        "type": "string"
      },
      "ConflictException": {},
      "CreateApplicationRequest": {
        "properties": {
          "Author": { "$ref": "#/components/schemas/__string" },
          "Description": { "$ref": "#/components/schemas/__string" },
          "HomePageUrl": { "$ref": "#/components/schemas/__string" },
          "Labels": { "$ref": "#/components/schemas/__listOf__string" },
          "LicenseBody": { "$ref": "#/components/schemas/__string" },
          "LicenseUrl": { "$ref": "#/components/schemas/__string" },
          "Name": { "$ref": "#/components/schemas/__string" },
          "ReadmeBody": { "$ref": "#/components/schemas/__string" },
          "ReadmeUrl": { "$ref": "#/components/schemas/__string" },
          "SemanticVersion": { "$ref": "#/components/schemas/__string" },
          "SourceCodeArchiveUrl": { "$ref": "#/components/schemas/__string" },
          "SourceCodeUrl": { "$ref": "#/components/schemas/__string" },
          "SpdxLicenseId": { "$ref": "#/components/schemas/__string" },
          "TemplateBody": { "$ref": "#/components/schemas/__string" },
          "TemplateUrl": { "$ref": "#/components/schemas/__string" }
        },
        "required": ["Description", "Name", "Author"],
        "type": "object"
      },
      "CreateApplicationResponse": {
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "Author": { "$ref": "#/components/schemas/__string" },
          "CreationTime": { "$ref": "#/components/schemas/__string" },
          "Description": { "$ref": "#/components/schemas/__string" },
          "HomePageUrl": { "$ref": "#/components/schemas/__string" },
          "Labels": { "$ref": "#/components/schemas/__listOf__string" },
          "LicenseUrl": { "$ref": "#/components/schemas/__string" },
          "Name": { "$ref": "#/components/schemas/__string" },
          "ReadmeUrl": { "$ref": "#/components/schemas/__string" },
          "SpdxLicenseId": { "$ref": "#/components/schemas/__string" },
          "Version": { "$ref": "#/components/schemas/Version" }
        },
        "type": "object"
      },
      "CreateApplicationVersionRequest": {
        "properties": {
          "SourceCodeArchiveUrl": { "$ref": "#/components/schemas/__string" },
          "SourceCodeUrl": { "$ref": "#/components/schemas/__string" },
          "TemplateBody": { "$ref": "#/components/schemas/__string" },
          "TemplateUrl": { "$ref": "#/components/schemas/__string" }
        },
        "type": "object"
      },
      "CreateApplicationVersionResponse": {
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "CreationTime": { "$ref": "#/components/schemas/__string" },
          "ParameterDefinitions": { "$ref": "#/components/schemas/__listOfParameterDefinition" },
          "RequiredCapabilities": { "$ref": "#/components/schemas/__listOfCapability" },
          "ResourcesSupported": { "$ref": "#/components/schemas/__boolean" },
          "SemanticVersion": { "$ref": "#/components/schemas/__string" },
          "SourceCodeArchiveUrl": { "$ref": "#/components/schemas/__string" },
          "SourceCodeUrl": { "$ref": "#/components/schemas/__string" },
          "TemplateUrl": { "$ref": "#/components/schemas/__string" }
        },
        "type": "object"
      },
      "CreateCloudFormationChangeSetRequest": {
        "properties": {
          "Capabilities": { "$ref": "#/components/schemas/__listOf__string" },
          "ChangeSetName": { "$ref": "#/components/schemas/__string" },
          "ClientToken": { "$ref": "#/components/schemas/__string" },
          "Description": { "$ref": "#/components/schemas/__string" },
          "NotificationArns": { "$ref": "#/components/schemas/__listOf__string" },
          "ParameterOverrides": { "$ref": "#/components/schemas/__listOfParameterValue" },
          "ResourceTypes": { "$ref": "#/components/schemas/__listOf__string" },
          "RollbackConfiguration": { "$ref": "#/components/schemas/RollbackConfiguration" },
          "SemanticVersion": { "$ref": "#/components/schemas/__string" },
          "StackName": { "$ref": "#/components/schemas/__string" },
          "Tags": { "$ref": "#/components/schemas/__listOfTag" },
          "TemplateId": { "$ref": "#/components/schemas/__string" }
        },
        "required": ["StackName"],
        "type": "object"
      },
      "CreateCloudFormationChangeSetResponse": {
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "ChangeSetId": { "$ref": "#/components/schemas/__string" },
          "SemanticVersion": { "$ref": "#/components/schemas/__string" },
          "StackId": { "$ref": "#/components/schemas/__string" }
        },
        "type": "object"
      },
      "CreateCloudFormationTemplateRequest": {
        "properties": { "SemanticVersion": { "$ref": "#/components/schemas/__string" } },
        "type": "object"
      },
      "CreateCloudFormationTemplateResponse": {
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "CreationTime": { "$ref": "#/components/schemas/__string" },
          "ExpirationTime": { "$ref": "#/components/schemas/__string" },
          "SemanticVersion": { "$ref": "#/components/schemas/__string" },
          "Status": { "$ref": "#/components/schemas/Status" },
          "TemplateId": { "$ref": "#/components/schemas/__string" },
          "TemplateUrl": { "$ref": "#/components/schemas/__string" }
        },
        "type": "object"
      },
      "DeleteApplicationRequest": { "properties": {}, "type": "object" },
      "ForbiddenException": {},
      "GetApplicationPolicyRequest": { "properties": {}, "type": "object" },
      "GetApplicationPolicyResponse": {
        "properties": { "Statements": { "$ref": "#/components/schemas/__listOfApplicationPolicyStatement" } },
        "type": "object"
      },
      "GetApplicationRequest": { "properties": {}, "type": "object" },
      "GetApplicationResponse": {
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "Author": { "$ref": "#/components/schemas/__string" },
          "CreationTime": { "$ref": "#/components/schemas/__string" },
          "Description": { "$ref": "#/components/schemas/__string" },
          "HomePageUrl": { "$ref": "#/components/schemas/__string" },
          "Labels": { "$ref": "#/components/schemas/__listOf__string" },
          "LicenseUrl": { "$ref": "#/components/schemas/__string" },
          "Name": { "$ref": "#/components/schemas/__string" },
          "ReadmeUrl": { "$ref": "#/components/schemas/__string" },
          "SpdxLicenseId": { "$ref": "#/components/schemas/__string" },
          "Version": { "$ref": "#/components/schemas/Version" }
        },
        "type": "object"
      },
      "GetCloudFormationTemplateRequest": { "properties": {}, "type": "object" },
      "GetCloudFormationTemplateResponse": {
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "CreationTime": { "$ref": "#/components/schemas/__string" },
          "ExpirationTime": { "$ref": "#/components/schemas/__string" },
          "SemanticVersion": { "$ref": "#/components/schemas/__string" },
          "Status": { "$ref": "#/components/schemas/Status" },
          "TemplateId": { "$ref": "#/components/schemas/__string" },
          "TemplateUrl": { "$ref": "#/components/schemas/__string" }
        },
        "type": "object"
      },
      "InternalServerErrorException": {},
      "ListApplicationDependenciesRequest": { "properties": {}, "type": "object" },
      "ListApplicationDependenciesResponse": {
        "properties": {
          "Dependencies": { "$ref": "#/components/schemas/__listOfApplicationDependencySummary" },
          "NextToken": { "$ref": "#/components/schemas/__string" }
        },
        "type": "object"
      },
      "ListApplicationVersionsRequest": { "properties": {}, "type": "object" },
      "ListApplicationVersionsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/__string" },
          "Versions": { "$ref": "#/components/schemas/__listOfVersionSummary" }
        },
        "type": "object"
      },
      "ListApplicationsRequest": { "properties": {}, "type": "object" },
      "ListApplicationsResponse": {
        "properties": {
          "Applications": { "$ref": "#/components/schemas/__listOfApplicationSummary" },
          "NextToken": { "$ref": "#/components/schemas/__string" }
        },
        "type": "object"
      },
      "MaxItems": { "maximum": 100, "minimum": 1, "type": "integer" },
      "NotFoundException": {},
      "ParameterDefinition": {
        "description": "Parameters supported by the application.",
        "properties": {
          "AllowedPattern": { "$ref": "#/components/schemas/__string" },
          "AllowedValues": { "$ref": "#/components/schemas/__listOf__string" },
          "ConstraintDescription": { "$ref": "#/components/schemas/__string" },
          "DefaultValue": { "$ref": "#/components/schemas/__string" },
          "Description": { "$ref": "#/components/schemas/__string" },
          "MaxLength": { "$ref": "#/components/schemas/__integer" },
          "MaxValue": { "$ref": "#/components/schemas/__integer" },
          "MinLength": { "$ref": "#/components/schemas/__integer" },
          "MinValue": { "$ref": "#/components/schemas/__integer" },
          "Name": { "$ref": "#/components/schemas/__string" },
          "NoEcho": { "$ref": "#/components/schemas/__boolean" },
          "ReferencedByResources": { "$ref": "#/components/schemas/__listOf__string" },
          "Type": { "$ref": "#/components/schemas/__string" }
        },
        "required": ["ReferencedByResources", "Name"],
        "type": "object"
      },
      "ParameterValue": {
        "description": "Parameter value of the application.",
        "properties": {
          "Name": { "$ref": "#/components/schemas/__string" },
          "Value": { "$ref": "#/components/schemas/__string" }
        },
        "required": ["Value", "Name"],
        "type": "object"
      },
      "PutApplicationPolicyRequest": {
        "properties": { "Statements": { "$ref": "#/components/schemas/__listOfApplicationPolicyStatement" } },
        "required": ["Statements"],
        "type": "object"
      },
      "PutApplicationPolicyResponse": {
        "properties": { "Statements": { "$ref": "#/components/schemas/__listOfApplicationPolicyStatement" } },
        "type": "object"
      },
      "RollbackConfiguration": {
        "description": "This property corresponds to the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RollbackConfiguration\">RollbackConfiguration</a>\n </i> Data Type.",
        "properties": {
          "MonitoringTimeInMinutes": { "$ref": "#/components/schemas/__integer" },
          "RollbackTriggers": { "$ref": "#/components/schemas/__listOfRollbackTrigger" }
        },
        "type": "object"
      },
      "RollbackTrigger": {
        "description": "This property corresponds to the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RollbackTrigger\">RollbackTrigger</a>\n </i> Data Type.",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/__string" },
          "Type": { "$ref": "#/components/schemas/__string" }
        },
        "required": ["Type", "Arn"],
        "type": "object"
      },
      "Status": { "enum": ["PREPARING", "ACTIVE", "EXPIRED"], "type": "string" },
      "Tag": {
        "description": "This property corresponds to the <i>AWS CloudFormation <a href=\"https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/Tag\">Tag</a>\n </i> Data Type.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/__string" },
          "Value": { "$ref": "#/components/schemas/__string" }
        },
        "required": ["Value", "Key"],
        "type": "object"
      },
      "TooManyRequestsException": {},
      "UpdateApplicationRequest": {
        "properties": {
          "Author": { "$ref": "#/components/schemas/__string" },
          "Description": { "$ref": "#/components/schemas/__string" },
          "HomePageUrl": { "$ref": "#/components/schemas/__string" },
          "Labels": { "$ref": "#/components/schemas/__listOf__string" },
          "ReadmeBody": { "$ref": "#/components/schemas/__string" },
          "ReadmeUrl": { "$ref": "#/components/schemas/__string" }
        },
        "type": "object"
      },
      "UpdateApplicationResponse": {
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "Author": { "$ref": "#/components/schemas/__string" },
          "CreationTime": { "$ref": "#/components/schemas/__string" },
          "Description": { "$ref": "#/components/schemas/__string" },
          "HomePageUrl": { "$ref": "#/components/schemas/__string" },
          "Labels": { "$ref": "#/components/schemas/__listOf__string" },
          "LicenseUrl": { "$ref": "#/components/schemas/__string" },
          "Name": { "$ref": "#/components/schemas/__string" },
          "ReadmeUrl": { "$ref": "#/components/schemas/__string" },
          "SpdxLicenseId": { "$ref": "#/components/schemas/__string" },
          "Version": { "$ref": "#/components/schemas/Version" }
        },
        "type": "object"
      },
      "Version": {
        "description": "Application version details.",
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "CreationTime": { "$ref": "#/components/schemas/__string" },
          "ParameterDefinitions": { "$ref": "#/components/schemas/__listOfParameterDefinition" },
          "RequiredCapabilities": { "$ref": "#/components/schemas/__listOfCapability" },
          "ResourcesSupported": { "$ref": "#/components/schemas/__boolean" },
          "SemanticVersion": { "$ref": "#/components/schemas/__string" },
          "SourceCodeArchiveUrl": { "$ref": "#/components/schemas/__string" },
          "SourceCodeUrl": { "$ref": "#/components/schemas/__string" },
          "TemplateUrl": { "$ref": "#/components/schemas/__string" }
        },
        "required": [
          "TemplateUrl",
          "ParameterDefinitions",
          "ResourcesSupported",
          "CreationTime",
          "RequiredCapabilities",
          "ApplicationId",
          "SemanticVersion"
        ],
        "type": "object"
      },
      "VersionSummary": {
        "description": "An application version summary.",
        "properties": {
          "ApplicationId": { "$ref": "#/components/schemas/__string" },
          "CreationTime": { "$ref": "#/components/schemas/__string" },
          "SemanticVersion": { "$ref": "#/components/schemas/__string" },
          "SourceCodeUrl": { "$ref": "#/components/schemas/__string" }
        },
        "required": ["CreationTime", "ApplicationId", "SemanticVersion"],
        "type": "object"
      },
      "__boolean": { "type": "boolean" },
      "__integer": { "type": "integer" },
      "__listOfApplicationDependencySummary": {
        "items": { "$ref": "#/components/schemas/ApplicationDependencySummary" },
        "type": "array"
      },
      "__listOfApplicationPolicyStatement": {
        "items": { "$ref": "#/components/schemas/ApplicationPolicyStatement" },
        "type": "array"
      },
      "__listOfApplicationSummary": { "items": { "$ref": "#/components/schemas/ApplicationSummary" }, "type": "array" },
      "__listOfCapability": { "items": { "$ref": "#/components/schemas/Capability" }, "type": "array" },
      "__listOfParameterDefinition": {
        "items": { "$ref": "#/components/schemas/ParameterDefinition" },
        "type": "array"
      },
      "__listOfParameterValue": { "items": { "$ref": "#/components/schemas/ParameterValue" }, "type": "array" },
      "__listOfRollbackTrigger": { "items": { "$ref": "#/components/schemas/RollbackTrigger" }, "type": "array" },
      "__listOfTag": { "items": { "$ref": "#/components/schemas/Tag" }, "type": "array" },
      "__listOfVersionSummary": { "items": { "$ref": "#/components/schemas/VersionSummary" }, "type": "array" },
      "__listOf__string": { "items": { "$ref": "#/components/schemas/__string" }, "type": "array" },
      "__string": { "type": "string" }
    }
  }
}
