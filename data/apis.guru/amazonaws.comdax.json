{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "DAX is a managed caching service engineered for Amazon DynamoDB. DAX dramatically speeds up database reads by caching frequently-accessed data from DynamoDB, so applications can access that data with sub-millisecond latency. You can create a DAX cluster easily, using the AWS Management Console. With a few simple modifications to your code, your application can begin taking advantage of the DAX cluster and realize significant improvements in read performance.",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon DynamoDB Accelerator (DAX)",
    "version": "2017-04-19",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dax-2017-04-19.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "dax"
  },
  "externalDocs": { "description": "Amazon Web Services documentation", "url": "https://docs.aws.amazon.com/dax/" },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=AmazonDAXV3.CreateCluster": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a DAX cluster. All nodes in the cluster run the same DAX caching software.",
        "operationId": "CreateCluster",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.CreateCluster"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateClusterRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateClusterResponse" } } }
          },
          "480": {
            "description": "ClusterAlreadyExistsFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ClusterAlreadyExistsFault" } }
            }
          },
          "481": {
            "description": "InvalidClusterStateFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClusterStateFault" } } }
          },
          "482": {
            "description": "InsufficientClusterCapacityFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InsufficientClusterCapacityFault" } }
            }
          },
          "483": {
            "description": "SubnetGroupNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SubnetGroupNotFoundFault" } } }
          },
          "484": {
            "description": "InvalidParameterGroupStateFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterGroupStateFault" } }
            }
          },
          "485": {
            "description": "ParameterGroupNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterGroupNotFoundFault" } }
            }
          },
          "486": {
            "description": "ClusterQuotaForCustomerExceededFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ClusterQuotaForCustomerExceededFault" } }
            }
          },
          "487": {
            "description": "NodeQuotaForClusterExceededFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NodeQuotaForClusterExceededFault" } }
            }
          },
          "488": {
            "description": "NodeQuotaForCustomerExceededFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NodeQuotaForCustomerExceededFault" } }
            }
          },
          "489": {
            "description": "InvalidVPCNetworkStateFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidVPCNetworkStateFault" } }
            }
          },
          "490": {
            "description": "TagQuotaPerResourceExceeded",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagQuotaPerResourceExceeded" } }
            }
          },
          "491": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "492": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "493": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.CreateParameterGroup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a new parameter group. A parameter group is a collection of parameters that you apply to all of the nodes in a DAX cluster.",
        "operationId": "CreateParameterGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.CreateParameterGroup"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateParameterGroupRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateParameterGroupResponse" } }
            }
          },
          "480": {
            "description": "ParameterGroupQuotaExceededFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterGroupQuotaExceededFault" } }
            }
          },
          "481": {
            "description": "ParameterGroupAlreadyExistsFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterGroupAlreadyExistsFault" } }
            }
          },
          "482": {
            "description": "InvalidParameterGroupStateFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterGroupStateFault" } }
            }
          },
          "483": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "484": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "485": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.CreateSubnetGroup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a new subnet group.",
        "operationId": "CreateSubnetGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.CreateSubnetGroup"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateSubnetGroupRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateSubnetGroupResponse" } }
            }
          },
          "480": {
            "description": "SubnetGroupAlreadyExistsFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SubnetGroupAlreadyExistsFault" } }
            }
          },
          "481": {
            "description": "SubnetGroupQuotaExceededFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SubnetGroupQuotaExceededFault" } }
            }
          },
          "482": {
            "description": "SubnetQuotaExceededFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SubnetQuotaExceededFault" } } }
          },
          "483": {
            "description": "InvalidSubnet",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidSubnet" } } }
          },
          "484": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.DecreaseReplicationFactor": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Removes one or more nodes from a DAX cluster.</p> <note> <p>You cannot use <code>DecreaseReplicationFactor</code> to remove the last node in a DAX cluster. If you need to do this, use <code>DeleteCluster</code> instead.</p> </note>",
        "operationId": "DecreaseReplicationFactor",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.DecreaseReplicationFactor"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DecreaseReplicationFactorRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DecreaseReplicationFactorResponse" } }
            }
          },
          "480": {
            "description": "ClusterNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClusterNotFoundFault" } } }
          },
          "481": {
            "description": "NodeNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NodeNotFoundFault" } } }
          },
          "482": {
            "description": "InvalidClusterStateFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClusterStateFault" } } }
          },
          "483": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "484": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "485": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.DeleteCluster": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes a previously provisioned DAX cluster. <i>DeleteCluster</i> deletes all associated nodes, node endpoints and the DAX cluster itself. When you receive a successful response from this action, DAX immediately begins deleting the cluster; you cannot cancel or revert this action.",
        "operationId": "DeleteCluster",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.DeleteCluster"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteClusterRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteClusterResponse" } } }
          },
          "480": {
            "description": "ClusterNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClusterNotFoundFault" } } }
          },
          "481": {
            "description": "InvalidClusterStateFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClusterStateFault" } } }
          },
          "482": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "484": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.DeleteParameterGroup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified parameter group. You cannot delete a parameter group if it is associated with any DAX clusters.",
        "operationId": "DeleteParameterGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.DeleteParameterGroup"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteParameterGroupRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteParameterGroupResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterGroupStateFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterGroupStateFault" } }
            }
          },
          "481": {
            "description": "ParameterGroupNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterGroupNotFoundFault" } }
            }
          },
          "482": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "484": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.DeleteSubnetGroup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a subnet group.</p> <note> <p>You cannot delete a subnet group if it is associated with any DAX clusters.</p> </note>",
        "operationId": "DeleteSubnetGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.DeleteSubnetGroup"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteSubnetGroupRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteSubnetGroupResponse" } }
            }
          },
          "480": {
            "description": "SubnetGroupInUseFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SubnetGroupInUseFault" } } }
          },
          "481": {
            "description": "SubnetGroupNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SubnetGroupNotFoundFault" } } }
          },
          "482": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.DescribeClusters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns information about all provisioned DAX clusters if no cluster identifier is specified, or about a specific DAX cluster if a cluster identifier is supplied.</p> <p>If the cluster is in the CREATING state, only cluster level information will be displayed until all of the nodes are successfully provisioned.</p> <p>If the cluster is in the DELETING state, only cluster level information will be displayed.</p> <p>If nodes are currently being added to the DAX cluster, node endpoint information and creation time for the additional nodes will not be displayed until they are completely provisioned. When the DAX cluster state is <i>available</i>, the cluster is ready for use.</p> <p>If nodes are currently being removed from the DAX cluster, no endpoint information for the removed nodes is displayed.</p>",
        "operationId": "DescribeClusters",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.DescribeClusters"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeClustersRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeClustersResponse" } } }
          },
          "480": {
            "description": "ClusterNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClusterNotFoundFault" } } }
          },
          "481": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.DescribeDefaultParameters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the default system parameter information for the DAX caching software.",
        "operationId": "DescribeDefaultParameters",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.DescribeDefaultParameters"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDefaultParametersRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDefaultParametersResponse" } }
            }
          },
          "480": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "482": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.DescribeEvents": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns events related to DAX clusters and parameter groups. You can obtain events specific to a particular DAX cluster or parameter group by providing the name as a parameter.</p> <p>By default, only the events occurring within the last hour are returned; however, you can retrieve up to 14 days' worth of events if necessary.</p>",
        "operationId": "DescribeEvents",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.DescribeEvents"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeEventsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeEventsResponse" } } }
          },
          "480": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "482": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.DescribeParameterGroups": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of parameter group descriptions. If a parameter group name is specified, the list will contain only the descriptions for that group.",
        "operationId": "DescribeParameterGroups",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.DescribeParameterGroups"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeParameterGroupsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeParameterGroupsResponse" } }
            }
          },
          "480": {
            "description": "ParameterGroupNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterGroupNotFoundFault" } }
            }
          },
          "481": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.DescribeParameters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the detailed parameter list for a particular parameter group.",
        "operationId": "DescribeParameters",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.DescribeParameters"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeParametersRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeParametersResponse" } }
            }
          },
          "480": {
            "description": "ParameterGroupNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterGroupNotFoundFault" } }
            }
          },
          "481": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.DescribeSubnetGroups": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of subnet group descriptions. If a subnet group name is specified, the list will contain only the description of that group.",
        "operationId": "DescribeSubnetGroups",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.DescribeSubnetGroups"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeSubnetGroupsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeSubnetGroupsResponse" } }
            }
          },
          "480": {
            "description": "SubnetGroupNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SubnetGroupNotFoundFault" } } }
          },
          "481": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.IncreaseReplicationFactor": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Adds one or more nodes to a DAX cluster.",
        "operationId": "IncreaseReplicationFactor",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.IncreaseReplicationFactor"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/IncreaseReplicationFactorRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IncreaseReplicationFactorResponse" } }
            }
          },
          "480": {
            "description": "ClusterNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClusterNotFoundFault" } } }
          },
          "481": {
            "description": "InvalidClusterStateFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClusterStateFault" } } }
          },
          "482": {
            "description": "InsufficientClusterCapacityFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InsufficientClusterCapacityFault" } }
            }
          },
          "483": {
            "description": "InvalidVPCNetworkStateFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidVPCNetworkStateFault" } }
            }
          },
          "484": {
            "description": "NodeQuotaForClusterExceededFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NodeQuotaForClusterExceededFault" } }
            }
          },
          "485": {
            "description": "NodeQuotaForCustomerExceededFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NodeQuotaForCustomerExceededFault" } }
            }
          },
          "486": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "487": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "488": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.ListTags": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "List all of the tags for a DAX cluster. You can call <code>ListTags</code> up to 10 times per second, per account.",
        "operationId": "ListTags",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.ListTags"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsResponse" } } }
          },
          "480": {
            "description": "ClusterNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClusterNotFoundFault" } } }
          },
          "481": {
            "description": "InvalidARNFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidARNFault" } } }
          },
          "482": {
            "description": "InvalidClusterStateFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClusterStateFault" } } }
          },
          "483": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "484": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "485": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.RebootNode": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Reboots a single node of a DAX cluster. The reboot action takes place as soon as possible. During the reboot, the node status is set to REBOOTING.",
        "operationId": "RebootNode",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.RebootNode"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RebootNodeRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RebootNodeResponse" } } }
          },
          "480": {
            "description": "ClusterNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClusterNotFoundFault" } } }
          },
          "481": {
            "description": "NodeNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NodeNotFoundFault" } } }
          },
          "482": {
            "description": "InvalidClusterStateFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClusterStateFault" } } }
          },
          "483": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "484": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "485": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.TagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associates a set of tags with a DAX resource. You can call <code>TagResource</code> up to 5 times per second, per account. ",
        "operationId": "TagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.TagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceResponse" } } }
          },
          "480": {
            "description": "ClusterNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClusterNotFoundFault" } } }
          },
          "481": {
            "description": "TagQuotaPerResourceExceeded",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagQuotaPerResourceExceeded" } }
            }
          },
          "482": {
            "description": "InvalidARNFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidARNFault" } } }
          },
          "483": {
            "description": "InvalidClusterStateFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClusterStateFault" } } }
          },
          "484": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "485": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "486": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.UntagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes the association of tags from a DAX resource. You can call <code>UntagResource</code> up to 5 times per second, per account. ",
        "operationId": "UntagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.UntagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceResponse" } } }
          },
          "480": {
            "description": "ClusterNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClusterNotFoundFault" } } }
          },
          "481": {
            "description": "InvalidARNFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidARNFault" } } }
          },
          "482": {
            "description": "TagNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagNotFoundFault" } } }
          },
          "483": {
            "description": "InvalidClusterStateFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClusterStateFault" } } }
          },
          "484": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "485": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "486": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.UpdateCluster": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Modifies the settings for a DAX cluster. You can use this action to change one or more cluster configuration parameters by specifying the parameters and the new values.",
        "operationId": "UpdateCluster",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.UpdateCluster"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateClusterRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateClusterResponse" } } }
          },
          "480": {
            "description": "InvalidClusterStateFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClusterStateFault" } } }
          },
          "481": {
            "description": "ClusterNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ClusterNotFoundFault" } } }
          },
          "482": {
            "description": "InvalidParameterGroupStateFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterGroupStateFault" } }
            }
          },
          "483": {
            "description": "ParameterGroupNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterGroupNotFoundFault" } }
            }
          },
          "484": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "485": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "486": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.UpdateParameterGroup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Modifies the parameters of a parameter group. You can modify up to 20 parameters in a single request by submitting a list parameter name and value pairs.",
        "operationId": "UpdateParameterGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.UpdateParameterGroup"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateParameterGroupRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateParameterGroupResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterGroupStateFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterGroupStateFault" } }
            }
          },
          "481": {
            "description": "ParameterGroupNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterGroupNotFoundFault" } }
            }
          },
          "482": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "484": {
            "description": "InvalidParameterCombinationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterCombinationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonDAXV3.UpdateSubnetGroup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Modifies an existing subnet group.",
        "operationId": "UpdateSubnetGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonDAXV3.UpdateSubnetGroup"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateSubnetGroupRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateSubnetGroupResponse" } }
            }
          },
          "480": {
            "description": "SubnetGroupNotFoundFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SubnetGroupNotFoundFault" } } }
          },
          "481": {
            "description": "SubnetQuotaExceededFault",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SubnetQuotaExceededFault" } } }
          },
          "482": {
            "description": "SubnetInUse",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SubnetInUse" } } }
          },
          "483": {
            "description": "InvalidSubnet",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidSubnet" } } }
          },
          "484": {
            "description": "ServiceLinkedRoleNotFoundFault",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceLinkedRoleNotFoundFault" } }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The Amazon DAX multi-region endpoint",
      "url": "http://dax.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon DAX multi-region endpoint",
      "url": "https://dax.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon DAX endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://dax.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Amazon DAX endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://dax.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AvailabilityZoneList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "ChangeType": { "enum": ["IMMEDIATE", "REQUIRES_REBOOT"], "type": "string" },
      "Cluster": {
        "description": "Contains all of the attributes of a specific DAX cluster.",
        "properties": {
          "ActiveNodes": { "$ref": "#/components/schemas/IntegerOptional" },
          "ClusterArn": { "$ref": "#/components/schemas/String" },
          "ClusterDiscoveryEndpoint": { "$ref": "#/components/schemas/Endpoint" },
          "ClusterName": { "$ref": "#/components/schemas/String" },
          "Description": { "$ref": "#/components/schemas/String" },
          "IamRoleArn": { "$ref": "#/components/schemas/String" },
          "NodeIdsToRemove": { "$ref": "#/components/schemas/NodeIdentifierList" },
          "NodeType": { "$ref": "#/components/schemas/String" },
          "Nodes": { "$ref": "#/components/schemas/NodeList" },
          "NotificationConfiguration": { "$ref": "#/components/schemas/NotificationConfiguration" },
          "ParameterGroup": { "$ref": "#/components/schemas/ParameterGroupStatus" },
          "PreferredMaintenanceWindow": { "$ref": "#/components/schemas/String" },
          "SSEDescription": { "$ref": "#/components/schemas/SSEDescription" },
          "SecurityGroups": { "$ref": "#/components/schemas/SecurityGroupMembershipList" },
          "Status": { "$ref": "#/components/schemas/String" },
          "SubnetGroup": { "$ref": "#/components/schemas/String" },
          "TotalNodes": { "$ref": "#/components/schemas/IntegerOptional" }
        },
        "type": "object"
      },
      "ClusterAlreadyExistsFault": {},
      "ClusterList": { "items": { "$ref": "#/components/schemas/Cluster" }, "type": "array" },
      "ClusterNameList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "ClusterNotFoundFault": {},
      "ClusterQuotaForCustomerExceededFault": {},
      "CreateClusterRequest": {
        "properties": {
          "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZoneList" },
          "ClusterName": { "$ref": "#/components/schemas/String" },
          "Description": { "$ref": "#/components/schemas/String" },
          "IamRoleArn": { "$ref": "#/components/schemas/String" },
          "NodeType": { "$ref": "#/components/schemas/String" },
          "NotificationTopicArn": { "$ref": "#/components/schemas/String" },
          "ParameterGroupName": { "$ref": "#/components/schemas/String" },
          "PreferredMaintenanceWindow": { "$ref": "#/components/schemas/String" },
          "ReplicationFactor": { "$ref": "#/components/schemas/Integer" },
          "SSESpecification": { "$ref": "#/components/schemas/SSESpecification" },
          "SecurityGroupIds": { "$ref": "#/components/schemas/SecurityGroupIdentifierList" },
          "SubnetGroupName": { "$ref": "#/components/schemas/String" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["ClusterName", "NodeType", "ReplicationFactor", "IamRoleArn"],
        "type": "object"
      },
      "CreateClusterResponse": {
        "properties": { "Cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "CreateParameterGroupRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/String" },
          "ParameterGroupName": { "$ref": "#/components/schemas/String" }
        },
        "required": ["ParameterGroupName"],
        "type": "object"
      },
      "CreateParameterGroupResponse": {
        "properties": { "ParameterGroup": { "$ref": "#/components/schemas/ParameterGroup" } },
        "type": "object"
      },
      "CreateSubnetGroupRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/String" },
          "SubnetGroupName": { "$ref": "#/components/schemas/String" },
          "SubnetIds": { "$ref": "#/components/schemas/SubnetIdentifierList" }
        },
        "required": ["SubnetGroupName", "SubnetIds"],
        "type": "object"
      },
      "CreateSubnetGroupResponse": {
        "properties": { "SubnetGroup": { "$ref": "#/components/schemas/SubnetGroup" } },
        "type": "object"
      },
      "DecreaseReplicationFactorRequest": {
        "properties": {
          "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZoneList" },
          "ClusterName": { "$ref": "#/components/schemas/String" },
          "NewReplicationFactor": { "$ref": "#/components/schemas/Integer" },
          "NodeIdsToRemove": { "$ref": "#/components/schemas/NodeIdentifierList" }
        },
        "required": ["ClusterName", "NewReplicationFactor"],
        "type": "object"
      },
      "DecreaseReplicationFactorResponse": {
        "properties": { "Cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "DeleteClusterRequest": {
        "properties": { "ClusterName": { "$ref": "#/components/schemas/String" } },
        "required": ["ClusterName"],
        "type": "object"
      },
      "DeleteClusterResponse": {
        "properties": { "Cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "DeleteParameterGroupRequest": {
        "properties": { "ParameterGroupName": { "$ref": "#/components/schemas/String" } },
        "required": ["ParameterGroupName"],
        "type": "object"
      },
      "DeleteParameterGroupResponse": {
        "properties": { "DeletionMessage": { "$ref": "#/components/schemas/String" } },
        "type": "object"
      },
      "DeleteSubnetGroupRequest": {
        "properties": { "SubnetGroupName": { "$ref": "#/components/schemas/String" } },
        "required": ["SubnetGroupName"],
        "type": "object"
      },
      "DeleteSubnetGroupResponse": {
        "properties": { "DeletionMessage": { "$ref": "#/components/schemas/String" } },
        "type": "object"
      },
      "DescribeClustersRequest": {
        "properties": {
          "ClusterNames": { "$ref": "#/components/schemas/ClusterNameList" },
          "MaxResults": { "$ref": "#/components/schemas/IntegerOptional" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeClustersResponse": {
        "properties": {
          "Clusters": { "$ref": "#/components/schemas/ClusterList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeDefaultParametersRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/IntegerOptional" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeDefaultParametersResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "Parameters": { "$ref": "#/components/schemas/ParameterList" }
        },
        "type": "object"
      },
      "DescribeEventsRequest": {
        "properties": {
          "Duration": { "$ref": "#/components/schemas/IntegerOptional" },
          "EndTime": { "$ref": "#/components/schemas/TStamp" },
          "MaxResults": { "$ref": "#/components/schemas/IntegerOptional" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "SourceName": { "$ref": "#/components/schemas/String" },
          "SourceType": { "$ref": "#/components/schemas/SourceType" },
          "StartTime": { "$ref": "#/components/schemas/TStamp" }
        },
        "type": "object"
      },
      "DescribeEventsResponse": {
        "properties": {
          "Events": { "$ref": "#/components/schemas/EventList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeParameterGroupsRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/IntegerOptional" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "ParameterGroupNames": { "$ref": "#/components/schemas/ParameterGroupNameList" }
        },
        "type": "object"
      },
      "DescribeParameterGroupsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "ParameterGroups": { "$ref": "#/components/schemas/ParameterGroupList" }
        },
        "type": "object"
      },
      "DescribeParametersRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/IntegerOptional" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "ParameterGroupName": { "$ref": "#/components/schemas/String" },
          "Source": { "$ref": "#/components/schemas/String" }
        },
        "required": ["ParameterGroupName"],
        "type": "object"
      },
      "DescribeParametersResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "Parameters": { "$ref": "#/components/schemas/ParameterList" }
        },
        "type": "object"
      },
      "DescribeSubnetGroupsRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/IntegerOptional" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "SubnetGroupNames": { "$ref": "#/components/schemas/SubnetGroupNameList" }
        },
        "type": "object"
      },
      "DescribeSubnetGroupsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "SubnetGroups": { "$ref": "#/components/schemas/SubnetGroupList" }
        },
        "type": "object"
      },
      "Endpoint": {
        "description": "Represents the information required for client programs to connect to the configuration endpoint for a DAX cluster, or to an individual node within the cluster.",
        "properties": {
          "Address": { "$ref": "#/components/schemas/String" },
          "Port": { "$ref": "#/components/schemas/Integer" }
        },
        "type": "object"
      },
      "Event": {
        "description": "Represents a single occurrence of something interesting within the system. Some examples of events are creating a DAX cluster, adding or removing a node, or rebooting a node.",
        "properties": {
          "Date": { "$ref": "#/components/schemas/TStamp" },
          "Message": { "$ref": "#/components/schemas/String" },
          "SourceName": { "$ref": "#/components/schemas/String" },
          "SourceType": { "$ref": "#/components/schemas/SourceType" }
        },
        "type": "object"
      },
      "EventList": { "items": { "$ref": "#/components/schemas/Event" }, "type": "array" },
      "IncreaseReplicationFactorRequest": {
        "properties": {
          "AvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZoneList" },
          "ClusterName": { "$ref": "#/components/schemas/String" },
          "NewReplicationFactor": { "$ref": "#/components/schemas/Integer" }
        },
        "required": ["ClusterName", "NewReplicationFactor"],
        "type": "object"
      },
      "IncreaseReplicationFactorResponse": {
        "properties": { "Cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "InsufficientClusterCapacityFault": {},
      "Integer": { "type": "integer" },
      "IntegerOptional": { "type": "integer" },
      "InvalidARNFault": {},
      "InvalidClusterStateFault": {},
      "InvalidParameterCombinationException": {},
      "InvalidParameterGroupStateFault": {},
      "InvalidParameterValueException": {},
      "InvalidSubnet": {},
      "InvalidVPCNetworkStateFault": {},
      "IsModifiable": { "enum": ["TRUE", "FALSE", "CONDITIONAL"], "type": "string" },
      "KeyList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "ListTagsRequest": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "ResourceName": { "$ref": "#/components/schemas/String" }
        },
        "required": ["ResourceName"],
        "type": "object"
      },
      "ListTagsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "Node": {
        "description": "Represents an individual node within a DAX cluster.",
        "properties": {
          "AvailabilityZone": { "$ref": "#/components/schemas/String" },
          "Endpoint": { "$ref": "#/components/schemas/Endpoint" },
          "NodeCreateTime": { "$ref": "#/components/schemas/TStamp" },
          "NodeId": { "$ref": "#/components/schemas/String" },
          "NodeStatus": { "$ref": "#/components/schemas/String" },
          "ParameterGroupStatus": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "NodeIdentifierList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "NodeList": { "items": { "$ref": "#/components/schemas/Node" }, "type": "array" },
      "NodeNotFoundFault": {},
      "NodeQuotaForClusterExceededFault": {},
      "NodeQuotaForCustomerExceededFault": {},
      "NodeTypeSpecificValue": {
        "description": "Represents a parameter value that is applicable to a particular node type.",
        "properties": {
          "NodeType": { "$ref": "#/components/schemas/String" },
          "Value": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "NodeTypeSpecificValueList": {
        "items": { "$ref": "#/components/schemas/NodeTypeSpecificValue" },
        "type": "array"
      },
      "NotificationConfiguration": {
        "description": "Describes a notification topic and its status. Notification topics are used for publishing DAX events to subscribers using Amazon Simple Notification Service (SNS).",
        "properties": {
          "TopicArn": { "$ref": "#/components/schemas/String" },
          "TopicStatus": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "Parameter": {
        "description": "Describes an individual setting that controls some aspect of DAX behavior.",
        "properties": {
          "AllowedValues": { "$ref": "#/components/schemas/String" },
          "ChangeType": { "$ref": "#/components/schemas/ChangeType" },
          "DataType": { "$ref": "#/components/schemas/String" },
          "Description": { "$ref": "#/components/schemas/String" },
          "IsModifiable": { "$ref": "#/components/schemas/IsModifiable" },
          "NodeTypeSpecificValues": { "$ref": "#/components/schemas/NodeTypeSpecificValueList" },
          "ParameterName": { "$ref": "#/components/schemas/String" },
          "ParameterType": { "$ref": "#/components/schemas/ParameterType" },
          "ParameterValue": { "$ref": "#/components/schemas/String" },
          "Source": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ParameterGroup": {
        "description": "A named set of parameters that are applied to all of the nodes in a DAX cluster.",
        "properties": {
          "Description": { "$ref": "#/components/schemas/String" },
          "ParameterGroupName": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ParameterGroupAlreadyExistsFault": {},
      "ParameterGroupList": { "items": { "$ref": "#/components/schemas/ParameterGroup" }, "type": "array" },
      "ParameterGroupNameList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "ParameterGroupNotFoundFault": {},
      "ParameterGroupQuotaExceededFault": {},
      "ParameterGroupStatus": {
        "description": "The status of a parameter group.",
        "properties": {
          "NodeIdsToReboot": { "$ref": "#/components/schemas/NodeIdentifierList" },
          "ParameterApplyStatus": { "$ref": "#/components/schemas/String" },
          "ParameterGroupName": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ParameterList": { "items": { "$ref": "#/components/schemas/Parameter" }, "type": "array" },
      "ParameterNameValue": {
        "description": "An individual DAX parameter.",
        "properties": {
          "ParameterName": { "$ref": "#/components/schemas/String" },
          "ParameterValue": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ParameterNameValueList": { "items": { "$ref": "#/components/schemas/ParameterNameValue" }, "type": "array" },
      "ParameterType": { "enum": ["DEFAULT", "NODE_TYPE_SPECIFIC"], "type": "string" },
      "RebootNodeRequest": {
        "properties": {
          "ClusterName": { "$ref": "#/components/schemas/String" },
          "NodeId": { "$ref": "#/components/schemas/String" }
        },
        "required": ["ClusterName", "NodeId"],
        "type": "object"
      },
      "RebootNodeResponse": {
        "properties": { "Cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "SSEDescription": {
        "description": "The description of the server-side encryption status on the specified DAX cluster.",
        "properties": { "Status": { "$ref": "#/components/schemas/SSEStatus" } },
        "type": "object"
      },
      "SSEEnabled": { "type": "boolean" },
      "SSESpecification": {
        "description": "Represents the settings used to enable server-side encryption.",
        "properties": { "Enabled": { "$ref": "#/components/schemas/SSEEnabled" } },
        "required": ["Enabled"],
        "type": "object"
      },
      "SSEStatus": { "enum": ["ENABLING", "ENABLED", "DISABLING", "DISABLED"], "type": "string" },
      "SecurityGroupIdentifierList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "SecurityGroupMembership": {
        "description": "An individual VPC security group and its status.",
        "properties": {
          "SecurityGroupIdentifier": { "$ref": "#/components/schemas/String" },
          "Status": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "SecurityGroupMembershipList": {
        "items": { "$ref": "#/components/schemas/SecurityGroupMembership" },
        "type": "array"
      },
      "ServiceLinkedRoleNotFoundFault": {},
      "SourceType": { "enum": ["CLUSTER", "PARAMETER_GROUP", "SUBNET_GROUP"], "type": "string" },
      "String": { "type": "string" },
      "Subnet": {
        "description": "Represents the subnet associated with a DAX cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with DAX.",
        "properties": {
          "SubnetAvailabilityZone": { "$ref": "#/components/schemas/String" },
          "SubnetIdentifier": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "SubnetGroup": {
        "description": "<p>Represents the output of one of the following actions:</p> <ul> <li> <p> <i>CreateSubnetGroup</i> </p> </li> <li> <p> <i>ModifySubnetGroup</i> </p> </li> </ul>",
        "properties": {
          "Description": { "$ref": "#/components/schemas/String" },
          "SubnetGroupName": { "$ref": "#/components/schemas/String" },
          "Subnets": { "$ref": "#/components/schemas/SubnetList" },
          "VpcId": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "SubnetGroupAlreadyExistsFault": {},
      "SubnetGroupInUseFault": {},
      "SubnetGroupList": { "items": { "$ref": "#/components/schemas/SubnetGroup" }, "type": "array" },
      "SubnetGroupNameList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "SubnetGroupNotFoundFault": {},
      "SubnetGroupQuotaExceededFault": {},
      "SubnetIdentifierList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "SubnetInUse": {},
      "SubnetList": { "items": { "$ref": "#/components/schemas/Subnet" }, "type": "array" },
      "SubnetQuotaExceededFault": {},
      "TStamp": { "format": "date-time", "type": "string" },
      "Tag": {
        "description": "<p>A description of a tag. Every tag is a key-value pair. You can add up to 50 tags to a single DAX cluster.</p> <p>AWS-assigned tag names and values are automatically assigned the <code>aws:</code> prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</p> <p>You cannot backdate the application of a tag.</p>",
        "properties": {
          "Key": { "$ref": "#/components/schemas/String" },
          "Value": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "type": "array" },
      "TagNotFoundFault": {},
      "TagQuotaPerResourceExceeded": {},
      "TagResourceRequest": {
        "properties": {
          "ResourceName": { "$ref": "#/components/schemas/String" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["ResourceName", "Tags"],
        "type": "object"
      },
      "TagResourceResponse": { "properties": { "Tags": { "$ref": "#/components/schemas/TagList" } }, "type": "object" },
      "UntagResourceRequest": {
        "properties": {
          "ResourceName": { "$ref": "#/components/schemas/String" },
          "TagKeys": { "$ref": "#/components/schemas/KeyList" }
        },
        "required": ["ResourceName", "TagKeys"],
        "type": "object"
      },
      "UntagResourceResponse": {
        "properties": { "Tags": { "$ref": "#/components/schemas/TagList" } },
        "type": "object"
      },
      "UpdateClusterRequest": {
        "properties": {
          "ClusterName": { "$ref": "#/components/schemas/String" },
          "Description": { "$ref": "#/components/schemas/String" },
          "NotificationTopicArn": { "$ref": "#/components/schemas/String" },
          "NotificationTopicStatus": { "$ref": "#/components/schemas/String" },
          "ParameterGroupName": { "$ref": "#/components/schemas/String" },
          "PreferredMaintenanceWindow": { "$ref": "#/components/schemas/String" },
          "SecurityGroupIds": { "$ref": "#/components/schemas/SecurityGroupIdentifierList" }
        },
        "required": ["ClusterName"],
        "type": "object"
      },
      "UpdateClusterResponse": {
        "properties": { "Cluster": { "$ref": "#/components/schemas/Cluster" } },
        "type": "object"
      },
      "UpdateParameterGroupRequest": {
        "properties": {
          "ParameterGroupName": { "$ref": "#/components/schemas/String" },
          "ParameterNameValues": { "$ref": "#/components/schemas/ParameterNameValueList" }
        },
        "required": ["ParameterGroupName", "ParameterNameValues"],
        "type": "object"
      },
      "UpdateParameterGroupResponse": {
        "properties": { "ParameterGroup": { "$ref": "#/components/schemas/ParameterGroup" } },
        "type": "object"
      },
      "UpdateSubnetGroupRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/String" },
          "SubnetGroupName": { "$ref": "#/components/schemas/String" },
          "SubnetIds": { "$ref": "#/components/schemas/SubnetIdentifierList" }
        },
        "required": ["SubnetGroupName"],
        "type": "object"
      },
      "UpdateSubnetGroupResponse": {
        "properties": { "SubnetGroup": { "$ref": "#/components/schemas/SubnetGroup" } },
        "type": "object"
      }
    }
  }
}
