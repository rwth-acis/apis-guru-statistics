{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>Amazon Lightsail is the easiest way to get started with AWS for developers who just need virtual private servers. Lightsail includes everything you need to launch your project quickly - a virtual machine, a managed database, SSD-based storage, data transfer, DNS management, and a static IP - for a low, predictable price. You manage those Lightsail servers through the Lightsail console or by using the API or command-line interface (CLI).</p> <p>For more information about Lightsail concepts and tasks, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/all\">Lightsail Dev Guide</a>.</p> <p>To use the Lightsail API or the CLI, you will need to use AWS Identity and Access Management (IAM) to generate access keys. For details about how to set this up, see the <a href=\"http://lightsail.aws.amazon.com/ls/docs/how-to/article/lightsail-how-to-set-up-access-keys-to-use-sdk-api-cli\">Lightsail Dev Guide</a>.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Lightsail",
    "version": "2016-11-28",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lightsail-2016-11-28.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "lightsail"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/lightsail/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=Lightsail_20161128.AllocateStaticIp": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Allocates a static IP address.",
        "operationId": "AllocateStaticIp",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.AllocateStaticIp"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AllocateStaticIpRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AllocateStaticIpResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.AttachDisk": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Attaches a block storage disk to a running or stopped Lightsail instance and exposes it to the instance with the specified disk name.</p> <p>The <code>attach disk</code> operation supports tag-based access control via resource tags applied to the resource identified by diskName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "AttachDisk",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.AttachDisk"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AttachDiskRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AttachDiskResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.AttachInstancesToLoadBalancer": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Attaches one or more Lightsail instances to a load balancer.</p> <p>After some time, the instances are attached to the load balancer and the health check status is available.</p> <p>The <code>attach instances to load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by loadBalancerName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "AttachInstancesToLoadBalancer",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.AttachInstancesToLoadBalancer"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AttachInstancesToLoadBalancerRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AttachInstancesToLoadBalancerResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.AttachLoadBalancerTlsCertificate": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Attaches a Transport Layer Security (TLS) certificate to your load balancer. TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>Once you create and validate your certificate, you can attach it to your load balancer. You can also use this API to rotate the certificates on your account. Use the <code>AttachLoadBalancerTlsCertificate</code> operation with the non-attached certificate, and it will replace the existing one and become the attached certificate.</p> <p>The <code>attach load balancer tls certificate</code> operation supports tag-based access control via resource tags applied to the resource identified by loadBalancerName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "AttachLoadBalancerTlsCertificate",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.AttachLoadBalancerTlsCertificate"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AttachLoadBalancerTlsCertificateRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AttachLoadBalancerTlsCertificateResult" }
              }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.AttachStaticIp": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Attaches a static IP address to a specific Amazon Lightsail instance.",
        "operationId": "AttachStaticIp",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.AttachStaticIp"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AttachStaticIpRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AttachStaticIpResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CloseInstancePublicPorts": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Closes the public ports on a specific Amazon Lightsail instance.</p> <p>The <code>close instance public ports</code> operation supports tag-based access control via resource tags applied to the resource identified by instanceName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CloseInstancePublicPorts",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CloseInstancePublicPorts"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CloseInstancePublicPortsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CloseInstancePublicPortsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CopySnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Copies an instance or disk snapshot from one AWS Region to another in Amazon Lightsail.",
        "operationId": "CopySnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CopySnapshot"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CopySnapshotRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CopySnapshotResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateCloudFormationStack": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates an AWS CloudFormation stack, which creates a new Amazon EC2 instance from an exported Amazon Lightsail snapshot. This operation results in a CloudFormation stack record that can be used to track the AWS CloudFormation stack created. Use the <code>get cloud formation stack records</code> operation to get a list of the CloudFormation stacks created.</p> <important> <p>Wait until after your new Amazon EC2 instance is created before running the <code>create cloud formation stack</code> operation again with the same export snapshot record.</p> </important>",
        "operationId": "CreateCloudFormationStack",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateCloudFormationStack"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateCloudFormationStackRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateCloudFormationStackResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateDisk": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a block storage disk that can be attached to a Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>). The disk is created in the regional endpoint that you send the HTTP request to. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail\">Regions and Availability Zones in Lightsail</a>.</p> <p>The <code>create disk</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateDisk",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateDisk"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateDiskRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateDiskResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateDiskFromSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a block storage disk from a disk snapshot that can be attached to a Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>). The disk is created in the regional endpoint that you send the HTTP request to. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail\">Regions and Availability Zones in Lightsail</a>.</p> <p>The <code>create disk from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by diskSnapshotName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateDiskFromSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateDiskFromSnapshot"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateDiskFromSnapshotRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateDiskFromSnapshotResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateDiskSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a snapshot of a block storage disk. You can use snapshots for backups, to make copies of disks, and to save data before shutting down a Lightsail instance.</p> <p>You can take a snapshot of an attached disk that is in use; however, snapshots only capture data that has been written to your disk at the time the snapshot command is issued. This may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the disk long enough to take a snapshot, your snapshot should be complete. Nevertheless, if you cannot pause all file writes to the disk, you should unmount the disk from within the Lightsail instance, issue the create disk snapshot command, and then remount the disk to ensure a consistent and complete snapshot. You may remount and use your disk while the snapshot status is pending.</p> <p>You can also use this operation to create a snapshot of an instance's system volume. You might want to do this, for example, to recover data from the system volume of a botched instance or to create a backup of the system volume like you would for a block storage disk. To create a snapshot of a system volume, just define the <code>instance name</code> parameter when issuing the snapshot command, and a snapshot of the defined instance's system volume will be created. After the snapshot is available, you can create a block storage disk from the snapshot and attach it to a running instance to access the data on the disk.</p> <p>The <code>create disk snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateDiskSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateDiskSnapshot"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateDiskSnapshotRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateDiskSnapshotResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateDomain": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a domain resource for the specified domain (e.g., example.com).</p> <p>The <code>create domain</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateDomain",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateDomain"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateDomainRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateDomainResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateDomainEntry": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates one of the following entry records associated with the domain: Address (A), canonical name (CNAME), mail exchanger (MX), name server (NS), start of authority (SOA), service locator (SRV), or text (TXT).</p> <p>The <code>create domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by domainName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateDomainEntry",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateDomainEntry"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateDomainEntryRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateDomainEntryResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateInstanceSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a snapshot of a specific virtual private server, or <i>instance</i>. You can use a snapshot to create a new instance that is based on that snapshot.</p> <p>The <code>create instance snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateInstanceSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateInstanceSnapshot"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateInstanceSnapshotRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateInstanceSnapshotResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateInstances": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates one or more Amazon Lightsail virtual private servers, or <i>instances</i>. Create instances using active blueprints. Inactive blueprints are listed to support customers with existing instances but are not necessarily available for launch of new instances. Blueprints are marked inactive when they become outdated due to operating system updates or new application releases. Use the get blueprints operation to return a list of available blueprints.</p> <p>The <code>create instances</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateInstances",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateInstances"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateInstancesRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateInstancesResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateInstancesFromSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Uses a specific snapshot as a blueprint for creating one or more new instances that are based on that identical configuration.</p> <p>The <code>create instances from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by instanceSnapshotName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateInstancesFromSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateInstancesFromSnapshot"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateInstancesFromSnapshotRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateInstancesFromSnapshotResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateKeyPair": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates an SSH key pair.</p> <p>The <code>create key pair</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateKeyPair",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateKeyPair"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateKeyPairRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateKeyPairResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateLoadBalancer": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a Lightsail load balancer. To learn more about deciding whether to load balance your application, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/how-to/article/configure-lightsail-instances-for-load-balancing\">Configure your Lightsail instances for load balancing</a>. You can create up to 5 load balancers per AWS Region in your account.</p> <p>When you create a load balancer, you can specify a unique name and port settings. To change additional load balancer settings, use the <code>UpdateLoadBalancerAttribute</code> operation.</p> <p>The <code>create load balancer</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateLoadBalancer",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateLoadBalancer"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateLoadBalancerRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateLoadBalancerResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateLoadBalancerTlsCertificate": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a Lightsail load balancer TLS certificate.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>The <code>create load balancer tls certificate</code> operation supports tag-based access control via resource tags applied to the resource identified by loadBalancerName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateLoadBalancerTlsCertificate",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateLoadBalancerTlsCertificate"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateLoadBalancerTlsCertificateRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateLoadBalancerTlsCertificateResult" }
              }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabase": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a new database in Amazon Lightsail.</p> <p>The <code>create relational database</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateRelationalDatabase",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateRelationalDatabase"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateRelationalDatabaseRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateRelationalDatabaseResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabaseFromSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a new database from an existing database snapshot in Amazon Lightsail.</p> <p>You can create a new database from a snapshot in if something goes wrong with your original database, or to change it to a different plan, such as a high availability or standard plan.</p> <p>The <code>create relational database from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by relationalDatabaseSnapshotName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateRelationalDatabaseFromSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateRelationalDatabaseFromSnapshot"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateRelationalDatabaseFromSnapshotRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateRelationalDatabaseFromSnapshotResult" }
              }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabaseSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a snapshot of your database in Amazon Lightsail. You can use snapshots for backups, to make copies of a database, and to save data before deleting a database.</p> <p>The <code>create relational database snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "CreateRelationalDatabaseSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.CreateRelationalDatabaseSnapshot"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateRelationalDatabaseSnapshotRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateRelationalDatabaseSnapshotResult" }
              }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteDisk": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified block storage disk. The disk must be in the <code>available</code> state (not attached to a Lightsail instance).</p> <note> <p>The disk may remain in the <code>deleting</code> state for several minutes.</p> </note> <p>The <code>delete disk</code> operation supports tag-based access control via resource tags applied to the resource identified by diskName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteDisk",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteDisk"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDiskRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDiskResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteDiskSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified disk snapshot.</p> <p>When you make periodic snapshots of a disk, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the disk.</p> <p>The <code>delete disk snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by diskSnapshotName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteDiskSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteDiskSnapshot"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDiskSnapshotRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDiskSnapshotResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteDomain": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified domain recordset and all of its domain records.</p> <p>The <code>delete domain</code> operation supports tag-based access control via resource tags applied to the resource identified by domainName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteDomain",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteDomain"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDomainRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDomainResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteDomainEntry": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a specific domain entry.</p> <p>The <code>delete domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by domainName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteDomainEntry",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteDomainEntry"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDomainEntryRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDomainEntryResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteInstance": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a specific Amazon Lightsail virtual private server, or <i>instance</i>.</p> <p>The <code>delete instance</code> operation supports tag-based access control via resource tags applied to the resource identified by instanceName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteInstance",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteInstance"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteInstanceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteInstanceResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteInstanceSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a specific snapshot of a virtual private server (or <i>instance</i>).</p> <p>The <code>delete instance snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by instanceSnapshotName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteInstanceSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteInstanceSnapshot"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteInstanceSnapshotRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteInstanceSnapshotResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteKeyPair": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a specific SSH key pair.</p> <p>The <code>delete key pair</code> operation supports tag-based access control via resource tags applied to the resource identified by keyPairName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteKeyPair",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteKeyPair"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteKeyPairRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteKeyPairResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteKnownHostKeys": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the known host key or certificate used by the Amazon Lightsail browser-based SSH or RDP clients to authenticate an instance. This operation enables the Lightsail browser-based SSH or RDP clients to connect to the instance after a host key mismatch.</p> <important> <p>Perform this operation only if you were expecting the host key or certificate mismatch or if you are familiar with the new host key or certificate on the instance. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-troubleshooting-browser-based-ssh-rdp-client-connection\">Troubleshooting connection issues when using the Amazon Lightsail browser-based SSH or RDP client</a>.</p> </important>",
        "operationId": "DeleteKnownHostKeys",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteKnownHostKeys"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteKnownHostKeysRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteKnownHostKeysResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteLoadBalancer": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a Lightsail load balancer and all its associated SSL/TLS certificates. Once the load balancer is deleted, you will need to create a new load balancer, create a new certificate, and verify domain ownership again.</p> <p>The <code>delete load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by loadBalancerName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteLoadBalancer",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteLoadBalancer"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteLoadBalancerRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteLoadBalancerResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteLoadBalancerTlsCertificate": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes an SSL/TLS certificate associated with a Lightsail load balancer.</p> <p>The <code>delete load balancer tls certificate</code> operation supports tag-based access control via resource tags applied to the resource identified by loadBalancerName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteLoadBalancerTlsCertificate",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteLoadBalancerTlsCertificate"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteLoadBalancerTlsCertificateRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteLoadBalancerTlsCertificateResult" }
              }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteRelationalDatabase": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a database in Amazon Lightsail.</p> <p>The <code>delete relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteRelationalDatabase",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteRelationalDatabase"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteRelationalDatabaseRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteRelationalDatabaseResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DeleteRelationalDatabaseSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a database snapshot in Amazon Lightsail.</p> <p>The <code>delete relational database snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DeleteRelationalDatabaseSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DeleteRelationalDatabaseSnapshot"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteRelationalDatabaseSnapshotRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteRelationalDatabaseSnapshotResult" }
              }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DetachDisk": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Detaches a stopped block storage disk from a Lightsail instance. Make sure to unmount any file systems on the device within your operating system before stopping the instance and detaching the disk.</p> <p>The <code>detach disk</code> operation supports tag-based access control via resource tags applied to the resource identified by diskName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DetachDisk",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DetachDisk"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetachDiskRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetachDiskResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DetachInstancesFromLoadBalancer": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Detaches the specified instances from a Lightsail load balancer.</p> <p>This operation waits until the instances are no longer needed before they are detached from the load balancer.</p> <p>The <code>detach instances from load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by loadBalancerName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "DetachInstancesFromLoadBalancer",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DetachInstancesFromLoadBalancer"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DetachInstancesFromLoadBalancerRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DetachInstancesFromLoadBalancerResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DetachStaticIp": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Detaches a static IP from the Amazon Lightsail instance to which it is attached.",
        "operationId": "DetachStaticIp",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DetachStaticIp"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetachStaticIpRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetachStaticIpResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.DownloadDefaultKeyPair": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Downloads the default SSH key pair from the user's account.",
        "operationId": "DownloadDefaultKeyPair",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.DownloadDefaultKeyPair"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DownloadDefaultKeyPairRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DownloadDefaultKeyPairResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.ExportSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Exports an Amazon Lightsail instance or block storage disk snapshot to Amazon Elastic Compute Cloud (Amazon EC2). This operation results in an export snapshot record that can be used with the <code>create cloud formation stack</code> operation to create new Amazon EC2 instances.</p> <p>Exported instance snapshots appear in Amazon EC2 as Amazon Machine Images (AMIs), and the instance system disk appears as an Amazon Elastic Block Store (Amazon EBS) volume. Exported disk snapshots appear in Amazon EC2 as Amazon EBS volumes. Snapshots are exported to the same Amazon Web Services Region in Amazon EC2 as the source Lightsail snapshot.</p> <p/> <p>The <code>export snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by sourceSnapshotName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p> <note> <p>Use the <code>get instance snapshots</code> or <code>get disk snapshots</code> operations to get a list of snapshots that you can export to Amazon EC2.</p> </note>",
        "operationId": "ExportSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.ExportSnapshot"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExportSnapshotRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExportSnapshotResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetActiveNames": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the names of all active (not deleted) resources.",
        "operationId": "GetActiveNames",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetActiveNames"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetActiveNamesRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetActiveNamesResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetBlueprints": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the list of available instance images, or <i>blueprints</i>. You can use a blueprint to create a new virtual private server already running a specific operating system, as well as a preinstalled app or development stack. The software each instance is running depends on the blueprint image you choose.",
        "operationId": "GetBlueprints",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetBlueprints"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetBlueprintsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetBlueprintsResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetBundles": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the list of bundles that are available for purchase. A bundle describes the specs for your virtual private server (or <i>instance</i>).",
        "operationId": "GetBundles",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetBundles"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetBundlesRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetBundlesResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetCloudFormationStackRecords": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the CloudFormation stack record created as a result of the <code>create cloud formation stack</code> operation.</p> <p>An AWS CloudFormation stack is used to create a new Amazon EC2 instance from an exported Lightsail snapshot.</p>",
        "operationId": "GetCloudFormationStackRecords",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetCloudFormationStackRecords"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetCloudFormationStackRecordsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetCloudFormationStackRecordsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetDisk": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about a specific block storage disk.",
        "operationId": "GetDisk",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetDisk"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDiskRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDiskResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetDiskSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about a specific block storage disk snapshot.",
        "operationId": "GetDiskSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetDiskSnapshot"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDiskSnapshotRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDiskSnapshotResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetDiskSnapshots": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns information about all block storage disk snapshots in your AWS account and region.</p> <p>If you are describing a long list of disk snapshots, you can paginate the output to make the list more manageable. You can use the pageToken and nextPageToken values to retrieve the next items in the list.</p>",
        "operationId": "GetDiskSnapshots",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetDiskSnapshots"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDiskSnapshotsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDiskSnapshotsResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetDisks": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns information about all block storage disks in your AWS account and region.</p> <p>If you are describing a long list of disks, you can paginate the output to make the list more manageable. You can use the pageToken and nextPageToken values to retrieve the next items in the list.</p>",
        "operationId": "GetDisks",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetDisks"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDisksRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDisksResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetDomain": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about a specific domain recordset.",
        "operationId": "GetDomain",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetDomain"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDomainRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDomainResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetDomains": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of all domains in the user's account.",
        "operationId": "GetDomains",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetDomains"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDomainsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDomainsResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetExportSnapshotRecords": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the export snapshot record created as a result of the <code>export snapshot</code> operation.</p> <p>An export snapshot record can be used to create a new Amazon EC2 instance and its related resources with the <code>create cloud formation stack</code> operation.</p>",
        "operationId": "GetExportSnapshotRecords",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetExportSnapshotRecords"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetExportSnapshotRecordsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetExportSnapshotRecordsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetInstance": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about a specific Amazon Lightsail instance, which is a virtual private server.",
        "operationId": "GetInstance",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetInstance"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetInstanceAccessDetails": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns temporary SSH keys you can use to connect to a specific virtual private server, or <i>instance</i>.</p> <p>The <code>get instance access details</code> operation supports tag-based access control via resource tags applied to the resource identified by instanceName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "GetInstanceAccessDetails",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetInstanceAccessDetails"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceAccessDetailsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceAccessDetailsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetInstanceMetricData": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the data points for the specified Amazon Lightsail instance metric, given an instance name.",
        "operationId": "GetInstanceMetricData",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetInstanceMetricData"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceMetricDataRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceMetricDataResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetInstancePortStates": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the port states for a specific virtual private server, or <i>instance</i>.",
        "operationId": "GetInstancePortStates",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetInstancePortStates"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetInstancePortStatesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetInstancePortStatesResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetInstanceSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about a specific instance snapshot.",
        "operationId": "GetInstanceSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetInstanceSnapshot"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceSnapshotRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceSnapshotResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetInstanceSnapshots": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns all instance snapshots for the user's account.",
        "operationId": "GetInstanceSnapshots",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetInstanceSnapshots"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceSnapshotsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceSnapshotsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetInstanceState": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the state of a specific instance. Works on one instance at a time.",
        "operationId": "GetInstanceState",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetInstanceState"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceStateRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetInstanceStateResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetInstances": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about all Amazon Lightsail virtual private servers, or <i>instances</i>.",
        "operationId": "GetInstances",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetInstances"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetInstancesRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetInstancesResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetKeyPair": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about a specific key pair.",
        "operationId": "GetKeyPair",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetKeyPair"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetKeyPairRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetKeyPairResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetKeyPairs": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about all key pairs in the user's account.",
        "operationId": "GetKeyPairs",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetKeyPairs"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetKeyPairsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetKeyPairsResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetLoadBalancer": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about the specified Lightsail load balancer.",
        "operationId": "GetLoadBalancer",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetLoadBalancer"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetLoadBalancerRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetLoadBalancerResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetLoadBalancerMetricData": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about health metrics for your Lightsail load balancer.",
        "operationId": "GetLoadBalancerMetricData",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetLoadBalancerMetricData"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetLoadBalancerMetricDataRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetLoadBalancerMetricDataResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetLoadBalancerTlsCertificates": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns information about the TLS certificates that are associated with the specified Lightsail load balancer.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>You can have a maximum of 2 certificates associated with a Lightsail load balancer. One is active and the other is inactive.</p>",
        "operationId": "GetLoadBalancerTlsCertificates",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetLoadBalancerTlsCertificates"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetLoadBalancerTlsCertificatesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetLoadBalancerTlsCertificatesResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetLoadBalancers": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns information about all load balancers in an account.</p> <p>If you are describing a long list of load balancers, you can paginate the output to make the list more manageable. You can use the pageToken and nextPageToken values to retrieve the next items in the list.</p>",
        "operationId": "GetLoadBalancers",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetLoadBalancers"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetLoadBalancersRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetLoadBalancersResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetOperation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about a specific operation. Operations include events such as when you create an instance, allocate a static IP, attach a static IP, and so on.",
        "operationId": "GetOperation",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetOperation"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetOperationRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetOperationResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetOperations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns information about all operations.</p> <p>Results are returned from oldest to newest, up to a maximum of 200. Results can be paged by making each subsequent call to <code>GetOperations</code> use the maximum (last) <code>statusChangedAt</code> value from the previous request.</p>",
        "operationId": "GetOperations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetOperations"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetOperationsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetOperationsResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetOperationsForResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets operations for a specific resource (e.g., an instance or a static IP).",
        "operationId": "GetOperationsForResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetOperationsForResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetOperationsForResourceRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetOperationsForResourceResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRegions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of all valid regions for Amazon Lightsail. Use the <code>include availability zones</code> parameter to also return the Availability Zones in a region.",
        "operationId": "GetRegions",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRegions"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetRegionsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetRegionsResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabase": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about a specific database in Amazon Lightsail.",
        "operationId": "GetRelationalDatabase",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabase"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseBlueprints": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns a list of available database blueprints in Amazon Lightsail. A blueprint describes the major engine version of a database.</p> <p>You can use a blueprint ID to create a new database that runs a specific database engine.</p>",
        "operationId": "GetRelationalDatabaseBlueprints",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabaseBlueprints"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseBlueprintsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseBlueprintsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseBundles": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the list of bundles that are available in Amazon Lightsail. A bundle describes the performance specifications for a database.</p> <p>You can use a bundle ID to create a new database with explicit performance specifications.</p>",
        "operationId": "GetRelationalDatabaseBundles",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabaseBundles"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseBundlesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseBundlesResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseEvents": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of events for a specific database in Amazon Lightsail.",
        "operationId": "GetRelationalDatabaseEvents",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabaseEvents"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseEventsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseEventsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseLogEvents": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of log events for a database in Amazon Lightsail.",
        "operationId": "GetRelationalDatabaseLogEvents",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabaseLogEvents"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseLogEventsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseLogEventsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseLogStreams": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of available log streams for a specific database in Amazon Lightsail.",
        "operationId": "GetRelationalDatabaseLogStreams",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabaseLogStreams"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseLogStreamsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseLogStreamsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseMasterUserPassword": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the current, previous, or pending versions of the master user password for a Lightsail database.</p> <p>The <code>asdf</code> operation GetRelationalDatabaseMasterUserPassword supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName.</p>",
        "operationId": "GetRelationalDatabaseMasterUserPassword",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabaseMasterUserPassword"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseMasterUserPasswordRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseMasterUserPasswordResult" }
              }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseMetricData": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the data points of the specified metric for a database in Amazon Lightsail.",
        "operationId": "GetRelationalDatabaseMetricData",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabaseMetricData"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseMetricDataRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseMetricDataResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseParameters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns all of the runtime parameters offered by the underlying database software, or engine, for a specific database in Amazon Lightsail.</p> <p>In addition to the parameter names and values, this operation returns other information about each parameter. This information includes whether changes require a reboot, whether the parameter is modifiable, the allowed values, and the data types.</p>",
        "operationId": "GetRelationalDatabaseParameters",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabaseParameters"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseParametersRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseParametersResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about a specific database snapshot in Amazon Lightsail.",
        "operationId": "GetRelationalDatabaseSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabaseSnapshot"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseSnapshotRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseSnapshotResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseSnapshots": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about all of your database snapshots in Amazon Lightsail.",
        "operationId": "GetRelationalDatabaseSnapshots",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabaseSnapshots"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseSnapshotsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabaseSnapshotsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabases": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about all of your databases in Amazon Lightsail.",
        "operationId": "GetRelationalDatabases",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetRelationalDatabases"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabasesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetRelationalDatabasesResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetStaticIp": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about a specific static IP.",
        "operationId": "GetStaticIp",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetStaticIp"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetStaticIpRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetStaticIpResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.GetStaticIps": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about all static IPs in the user's account.",
        "operationId": "GetStaticIps",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.GetStaticIps"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetStaticIpsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetStaticIpsResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.ImportKeyPair": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Imports a public SSH key from a specific key pair.",
        "operationId": "ImportKeyPair",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.ImportKeyPair"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ImportKeyPairRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ImportKeyPairResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.IsVpcPeered": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a Boolean value indicating whether your Lightsail VPC is peered.",
        "operationId": "IsVpcPeered",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.IsVpcPeered"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/IsVpcPeeredRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/IsVpcPeeredResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.OpenInstancePublicPorts": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds public ports to an Amazon Lightsail instance.</p> <p>The <code>open instance public ports</code> operation supports tag-based access control via resource tags applied to the resource identified by instanceName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "OpenInstancePublicPorts",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.OpenInstancePublicPorts"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/OpenInstancePublicPortsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OpenInstancePublicPortsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.PeerVpc": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Tries to peer the Lightsail VPC with the user's default VPC.",
        "operationId": "PeerVpc",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.PeerVpc"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PeerVpcRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PeerVpcResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.PutInstancePublicPorts": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Sets the specified open ports for an Amazon Lightsail instance, and closes all ports for every protocol not included in the current request.</p> <p>The <code>put instance public ports</code> operation supports tag-based access control via resource tags applied to the resource identified by instanceName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "PutInstancePublicPorts",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.PutInstancePublicPorts"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PutInstancePublicPortsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PutInstancePublicPortsResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.RebootInstance": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Restarts a specific instance.</p> <p>The <code>reboot instance</code> operation supports tag-based access control via resource tags applied to the resource identified by instanceName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "RebootInstance",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.RebootInstance"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RebootInstanceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RebootInstanceResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.RebootRelationalDatabase": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Restarts a specific database in Amazon Lightsail.</p> <p>The <code>reboot relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "RebootRelationalDatabase",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.RebootRelationalDatabase"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RebootRelationalDatabaseRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RebootRelationalDatabaseResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.ReleaseStaticIp": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes a specific static IP from your account.",
        "operationId": "ReleaseStaticIp",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.ReleaseStaticIp"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ReleaseStaticIpRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ReleaseStaticIpResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.StartInstance": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Starts a specific Amazon Lightsail instance from a stopped state. To restart an instance, use the <code>reboot instance</code> operation.</p> <note> <p>When you start a stopped instance, Lightsail assigns a new public IP address to the instance. To use the same IP address after stopping and starting an instance, create a static IP address and attach it to the instance. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/lightsail-create-static-ip\">Lightsail Dev Guide</a>.</p> </note> <p>The <code>start instance</code> operation supports tag-based access control via resource tags applied to the resource identified by instanceName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "StartInstance",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.StartInstance"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartInstanceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartInstanceResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.StartRelationalDatabase": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Starts a specific database from a stopped state in Amazon Lightsail. To restart a database, use the <code>reboot relational database</code> operation.</p> <p>The <code>start relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "StartRelationalDatabase",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.StartRelationalDatabase"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartRelationalDatabaseRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartRelationalDatabaseResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.StopInstance": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Stops a specific Amazon Lightsail instance that is currently running.</p> <note> <p>When you start a stopped instance, Lightsail assigns a new public IP address to the instance. To use the same IP address after stopping and starting an instance, create a static IP address and attach it to the instance. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/lightsail-create-static-ip\">Lightsail Dev Guide</a>.</p> </note> <p>The <code>stop instance</code> operation supports tag-based access control via resource tags applied to the resource identified by instanceName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "StopInstance",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.StopInstance"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopInstanceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopInstanceResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.StopRelationalDatabase": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Stops a specific database that is currently running in Amazon Lightsail.</p> <p>The <code>stop relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "StopRelationalDatabase",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.StopRelationalDatabase"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopRelationalDatabaseRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StopRelationalDatabaseResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.TagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds one or more tags to the specified Amazon Lightsail resource. Each resource can have a maximum of 50 tags. Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags\">Lightsail Dev Guide</a>.</p> <p>The <code>tag resource</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by resourceName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "TagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.TagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.UnpeerVpc": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Attempts to unpeer the Lightsail VPC from the user's default VPC.",
        "operationId": "UnpeerVpc",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.UnpeerVpc"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnpeerVpcRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnpeerVpcResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.UntagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified set of tag keys and their values from the specified Amazon Lightsail resource.</p> <p>The <code>untag resource</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by resourceName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "UntagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.UntagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.UpdateDomainEntry": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates a domain recordset after it is created.</p> <p>The <code>update domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by domainName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "UpdateDomainEntry",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.UpdateDomainEntry"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateDomainEntryRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateDomainEntryResult" } } }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.UpdateLoadBalancerAttribute": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the specified attribute for a load balancer. You can only update one attribute at a time.</p> <p>The <code>update load balancer attribute</code> operation supports tag-based access control via resource tags applied to the resource identified by loadBalancerName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "UpdateLoadBalancerAttribute",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.UpdateLoadBalancerAttribute"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateLoadBalancerAttributeRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateLoadBalancerAttributeResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabase": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Allows the update of one or more attributes of a database in Amazon Lightsail.</p> <p>Updates are applied immediately, or in cases where the updates could result in an outage, are applied during the database's predefined maintenance window.</p> <p>The <code>update relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "UpdateRelationalDatabase",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.UpdateRelationalDatabase"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateRelationalDatabaseRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateRelationalDatabaseResult" } }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabaseParameters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Allows the update of one or more parameters of a database in Amazon Lightsail.</p> <p>Parameter updates don't cause outages; therefore, their application is not subject to the preferred maintenance window. However, there are two ways in which paramater updates are applied: <code>dynamic</code> or <code>pending-reboot</code>. Parameters marked with a <code>dynamic</code> apply type are applied immediately. Parameters marked with a <code>pending-reboot</code> apply type are applied only after the database is rebooted using the <code>reboot relational database</code> operation.</p> <p>The <code>update relational database parameters</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>",
        "operationId": "UpdateRelationalDatabaseParameters",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Lightsail_20161128.UpdateRelationalDatabaseParameters"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateRelationalDatabaseParametersRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateRelationalDatabaseParametersResult" }
              }
            }
          },
          "480": {
            "description": "ServiceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "483": {
            "description": "OperationFailureException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationFailureException" } }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "AccountSetupInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountSetupInProgressException" } }
            }
          },
          "486": {
            "description": "UnauthenticatedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnauthenticatedException" } } }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The Amazon Lightsail multi-region endpoint",
      "url": "http://lightsail.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon Lightsail multi-region endpoint",
      "url": "https://lightsail.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon Lightsail endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://lightsail.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Amazon Lightsail endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://lightsail.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AccessDeniedException": {},
      "AccessDirection": { "enum": ["inbound", "outbound"], "type": "string" },
      "AccountSetupInProgressException": {},
      "AllocateStaticIpRequest": {
        "properties": { "staticIpName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["staticIpName"],
        "type": "object"
      },
      "AllocateStaticIpResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "AttachDiskRequest": {
        "properties": {
          "diskName": { "$ref": "#/components/schemas/ResourceName" },
          "diskPath": { "$ref": "#/components/schemas/NonEmptyString" },
          "instanceName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["diskName", "instanceName", "diskPath"],
        "type": "object"
      },
      "AttachDiskResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "AttachInstancesToLoadBalancerRequest": {
        "properties": {
          "instanceNames": { "$ref": "#/components/schemas/ResourceNameList" },
          "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["loadBalancerName", "instanceNames"],
        "type": "object"
      },
      "AttachInstancesToLoadBalancerResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "AttachLoadBalancerTlsCertificateRequest": {
        "properties": {
          "certificateName": { "$ref": "#/components/schemas/ResourceName" },
          "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["loadBalancerName", "certificateName"],
        "type": "object"
      },
      "AttachLoadBalancerTlsCertificateResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "AttachStaticIpRequest": {
        "properties": {
          "instanceName": { "$ref": "#/components/schemas/ResourceName" },
          "staticIpName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["staticIpName", "instanceName"],
        "type": "object"
      },
      "AttachStaticIpResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "AttachedDiskMap": { "additionalProperties": { "$ref": "#/components/schemas/DiskMapList" }, "type": "object" },
      "AvailabilityZone": {
        "description": "Describes an Availability Zone.",
        "properties": {
          "state": { "$ref": "#/components/schemas/NonEmptyString" },
          "zoneName": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "AvailabilityZoneList": { "items": { "$ref": "#/components/schemas/AvailabilityZone" }, "type": "array" },
      "Base64": { "type": "string" },
      "Blueprint": {
        "description": "Describes a blueprint (a virtual private server image).",
        "properties": {
          "blueprintId": { "$ref": "#/components/schemas/NonEmptyString" },
          "description": { "$ref": "#/components/schemas/string" },
          "group": { "$ref": "#/components/schemas/NonEmptyString" },
          "isActive": { "$ref": "#/components/schemas/boolean" },
          "licenseUrl": { "$ref": "#/components/schemas/string" },
          "minPower": { "$ref": "#/components/schemas/integer" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "platform": { "$ref": "#/components/schemas/InstancePlatform" },
          "productUrl": { "$ref": "#/components/schemas/string" },
          "type": { "$ref": "#/components/schemas/BlueprintType" },
          "version": { "$ref": "#/components/schemas/string" },
          "versionCode": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "BlueprintList": { "items": { "$ref": "#/components/schemas/Blueprint" }, "type": "array" },
      "BlueprintType": { "enum": ["os", "app"], "type": "string" },
      "Bundle": {
        "description": "Describes a bundle, which is a set of specs describing your virtual private server (or <i>instance</i>).",
        "properties": {
          "bundleId": { "$ref": "#/components/schemas/NonEmptyString" },
          "cpuCount": { "$ref": "#/components/schemas/integer" },
          "diskSizeInGb": { "$ref": "#/components/schemas/integer" },
          "instanceType": { "$ref": "#/components/schemas/string" },
          "isActive": { "$ref": "#/components/schemas/boolean" },
          "name": { "$ref": "#/components/schemas/string" },
          "power": { "$ref": "#/components/schemas/integer" },
          "price": { "$ref": "#/components/schemas/float" },
          "ramSizeInGb": { "$ref": "#/components/schemas/float" },
          "supportedPlatforms": { "$ref": "#/components/schemas/InstancePlatformList" },
          "transferPerMonthInGb": { "$ref": "#/components/schemas/integer" }
        },
        "type": "object"
      },
      "BundleList": { "items": { "$ref": "#/components/schemas/Bundle" }, "type": "array" },
      "CloseInstancePublicPortsRequest": {
        "properties": {
          "instanceName": { "$ref": "#/components/schemas/ResourceName" },
          "portInfo": { "$ref": "#/components/schemas/PortInfo" }
        },
        "required": ["portInfo", "instanceName"],
        "type": "object"
      },
      "CloseInstancePublicPortsResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "CloudFormationStackRecord": {
        "description": "<p>Describes a CloudFormation stack record created as a result of the <code>create cloud formation stack</code> operation.</p> <p>A CloudFormation stack record provides information about the AWS CloudFormation stack used to create a new Amazon Elastic Compute Cloud instance from an exported Lightsail instance snapshot.</p>",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "destinationInfo": { "$ref": "#/components/schemas/DestinationInfo" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "sourceInfo": { "$ref": "#/components/schemas/CloudFormationStackRecordSourceInfoList" },
          "state": { "$ref": "#/components/schemas/RecordState" }
        },
        "type": "object"
      },
      "CloudFormationStackRecordList": {
        "items": { "$ref": "#/components/schemas/CloudFormationStackRecord" },
        "type": "array"
      },
      "CloudFormationStackRecordSourceInfo": {
        "description": "Describes the source of a CloudFormation stack record (i.e., the export snapshot record).",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "name": { "$ref": "#/components/schemas/NonEmptyString" },
          "resourceType": { "$ref": "#/components/schemas/CloudFormationStackRecordSourceType" }
        },
        "type": "object"
      },
      "CloudFormationStackRecordSourceInfoList": {
        "items": { "$ref": "#/components/schemas/CloudFormationStackRecordSourceInfo" },
        "type": "array"
      },
      "CloudFormationStackRecordSourceType": { "enum": ["ExportSnapshotRecord"], "type": "string" },
      "CopySnapshotRequest": {
        "properties": {
          "sourceRegion": { "$ref": "#/components/schemas/RegionName" },
          "sourceSnapshotName": { "$ref": "#/components/schemas/ResourceName" },
          "targetSnapshotName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["sourceSnapshotName", "targetSnapshotName", "sourceRegion"],
        "type": "object"
      },
      "CopySnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateCloudFormationStackRequest": {
        "properties": { "instances": { "$ref": "#/components/schemas/InstanceEntryList" } },
        "required": ["instances"],
        "type": "object"
      },
      "CreateCloudFormationStackResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateDiskFromSnapshotRequest": {
        "properties": {
          "availabilityZone": { "$ref": "#/components/schemas/NonEmptyString" },
          "diskName": { "$ref": "#/components/schemas/ResourceName" },
          "diskSnapshotName": { "$ref": "#/components/schemas/ResourceName" },
          "sizeInGb": { "$ref": "#/components/schemas/integer" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["diskName", "diskSnapshotName", "availabilityZone", "sizeInGb"],
        "type": "object"
      },
      "CreateDiskFromSnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateDiskRequest": {
        "properties": {
          "availabilityZone": { "$ref": "#/components/schemas/NonEmptyString" },
          "diskName": { "$ref": "#/components/schemas/ResourceName" },
          "sizeInGb": { "$ref": "#/components/schemas/integer" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["diskName", "availabilityZone", "sizeInGb"],
        "type": "object"
      },
      "CreateDiskResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateDiskSnapshotRequest": {
        "properties": {
          "diskName": { "$ref": "#/components/schemas/ResourceName" },
          "diskSnapshotName": { "$ref": "#/components/schemas/ResourceName" },
          "instanceName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["diskSnapshotName"],
        "type": "object"
      },
      "CreateDiskSnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateDomainEntryRequest": {
        "properties": {
          "domainEntry": { "$ref": "#/components/schemas/DomainEntry" },
          "domainName": { "$ref": "#/components/schemas/DomainName" }
        },
        "required": ["domainName", "domainEntry"],
        "type": "object"
      },
      "CreateDomainEntryResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "CreateDomainRequest": {
        "properties": {
          "domainName": { "$ref": "#/components/schemas/DomainName" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["domainName"],
        "type": "object"
      },
      "CreateDomainResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "CreateInstanceSnapshotRequest": {
        "properties": {
          "instanceName": { "$ref": "#/components/schemas/ResourceName" },
          "instanceSnapshotName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["instanceSnapshotName", "instanceName"],
        "type": "object"
      },
      "CreateInstanceSnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateInstancesFromSnapshotRequest": {
        "properties": {
          "attachedDiskMapping": { "$ref": "#/components/schemas/AttachedDiskMap" },
          "availabilityZone": { "$ref": "#/components/schemas/string" },
          "bundleId": { "$ref": "#/components/schemas/NonEmptyString" },
          "instanceNames": { "$ref": "#/components/schemas/StringList" },
          "instanceSnapshotName": { "$ref": "#/components/schemas/ResourceName" },
          "keyPairName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" },
          "userData": { "$ref": "#/components/schemas/string" }
        },
        "required": ["instanceNames", "availabilityZone", "instanceSnapshotName", "bundleId"],
        "type": "object"
      },
      "CreateInstancesFromSnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateInstancesRequest": {
        "properties": {
          "availabilityZone": { "$ref": "#/components/schemas/string" },
          "blueprintId": { "$ref": "#/components/schemas/NonEmptyString" },
          "bundleId": { "$ref": "#/components/schemas/NonEmptyString" },
          "customImageName": { "$ref": "#/components/schemas/ResourceName" },
          "instanceNames": { "$ref": "#/components/schemas/StringList" },
          "keyPairName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" },
          "userData": { "$ref": "#/components/schemas/string" }
        },
        "required": ["instanceNames", "availabilityZone", "blueprintId", "bundleId"],
        "type": "object"
      },
      "CreateInstancesResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateKeyPairRequest": {
        "properties": {
          "keyPairName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["keyPairName"],
        "type": "object"
      },
      "CreateKeyPairResult": {
        "properties": {
          "keyPair": { "$ref": "#/components/schemas/KeyPair" },
          "operation": { "$ref": "#/components/schemas/Operation" },
          "privateKeyBase64": { "$ref": "#/components/schemas/Base64" },
          "publicKeyBase64": { "$ref": "#/components/schemas/Base64" }
        },
        "type": "object"
      },
      "CreateLoadBalancerRequest": {
        "properties": {
          "certificateAlternativeNames": { "$ref": "#/components/schemas/DomainNameList" },
          "certificateDomainName": { "$ref": "#/components/schemas/DomainName" },
          "certificateName": { "$ref": "#/components/schemas/ResourceName" },
          "healthCheckPath": { "$ref": "#/components/schemas/string" },
          "instancePort": { "$ref": "#/components/schemas/Port" },
          "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["loadBalancerName", "instancePort"],
        "type": "object"
      },
      "CreateLoadBalancerResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateLoadBalancerTlsCertificateRequest": {
        "properties": {
          "certificateAlternativeNames": { "$ref": "#/components/schemas/DomainNameList" },
          "certificateDomainName": { "$ref": "#/components/schemas/DomainName" },
          "certificateName": { "$ref": "#/components/schemas/ResourceName" },
          "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["loadBalancerName", "certificateName", "certificateDomainName"],
        "type": "object"
      },
      "CreateLoadBalancerTlsCertificateResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateRelationalDatabaseFromSnapshotRequest": {
        "properties": {
          "availabilityZone": { "$ref": "#/components/schemas/string" },
          "publiclyAccessible": { "$ref": "#/components/schemas/boolean" },
          "relationalDatabaseBundleId": { "$ref": "#/components/schemas/string" },
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" },
          "relationalDatabaseSnapshotName": { "$ref": "#/components/schemas/ResourceName" },
          "restoreTime": { "$ref": "#/components/schemas/IsoDate" },
          "sourceRelationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" },
          "useLatestRestorableTime": { "$ref": "#/components/schemas/boolean" }
        },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "CreateRelationalDatabaseFromSnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateRelationalDatabaseRequest": {
        "properties": {
          "availabilityZone": { "$ref": "#/components/schemas/string" },
          "masterDatabaseName": { "$ref": "#/components/schemas/string" },
          "masterUserPassword": { "$ref": "#/components/schemas/SensitiveString" },
          "masterUsername": { "$ref": "#/components/schemas/string" },
          "preferredBackupWindow": { "$ref": "#/components/schemas/string" },
          "preferredMaintenanceWindow": { "$ref": "#/components/schemas/string" },
          "publiclyAccessible": { "$ref": "#/components/schemas/boolean" },
          "relationalDatabaseBlueprintId": { "$ref": "#/components/schemas/string" },
          "relationalDatabaseBundleId": { "$ref": "#/components/schemas/string" },
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": [
          "relationalDatabaseName",
          "relationalDatabaseBlueprintId",
          "relationalDatabaseBundleId",
          "masterDatabaseName",
          "masterUsername"
        ],
        "type": "object"
      },
      "CreateRelationalDatabaseResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "CreateRelationalDatabaseSnapshotRequest": {
        "properties": {
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" },
          "relationalDatabaseSnapshotName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["relationalDatabaseName", "relationalDatabaseSnapshotName"],
        "type": "object"
      },
      "CreateRelationalDatabaseSnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DeleteDiskRequest": {
        "properties": { "diskName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["diskName"],
        "type": "object"
      },
      "DeleteDiskResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DeleteDiskSnapshotRequest": {
        "properties": { "diskSnapshotName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["diskSnapshotName"],
        "type": "object"
      },
      "DeleteDiskSnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DeleteDomainEntryRequest": {
        "properties": {
          "domainEntry": { "$ref": "#/components/schemas/DomainEntry" },
          "domainName": { "$ref": "#/components/schemas/DomainName" }
        },
        "required": ["domainName", "domainEntry"],
        "type": "object"
      },
      "DeleteDomainEntryResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "DeleteDomainRequest": {
        "properties": { "domainName": { "$ref": "#/components/schemas/DomainName" } },
        "required": ["domainName"],
        "type": "object"
      },
      "DeleteDomainResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "DeleteInstanceRequest": {
        "properties": { "instanceName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["instanceName"],
        "type": "object"
      },
      "DeleteInstanceResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DeleteInstanceSnapshotRequest": {
        "properties": { "instanceSnapshotName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["instanceSnapshotName"],
        "type": "object"
      },
      "DeleteInstanceSnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DeleteKeyPairRequest": {
        "properties": { "keyPairName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["keyPairName"],
        "type": "object"
      },
      "DeleteKeyPairResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "DeleteKnownHostKeysRequest": {
        "properties": { "instanceName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["instanceName"],
        "type": "object"
      },
      "DeleteKnownHostKeysResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DeleteLoadBalancerRequest": {
        "properties": { "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["loadBalancerName"],
        "type": "object"
      },
      "DeleteLoadBalancerResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DeleteLoadBalancerTlsCertificateRequest": {
        "properties": {
          "certificateName": { "$ref": "#/components/schemas/ResourceName" },
          "force": { "$ref": "#/components/schemas/boolean" },
          "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["loadBalancerName", "certificateName"],
        "type": "object"
      },
      "DeleteLoadBalancerTlsCertificateResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DeleteRelationalDatabaseRequest": {
        "properties": {
          "finalRelationalDatabaseSnapshotName": { "$ref": "#/components/schemas/ResourceName" },
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" },
          "skipFinalSnapshot": { "$ref": "#/components/schemas/boolean" }
        },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "DeleteRelationalDatabaseResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DeleteRelationalDatabaseSnapshotRequest": {
        "properties": { "relationalDatabaseSnapshotName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["relationalDatabaseSnapshotName"],
        "type": "object"
      },
      "DeleteRelationalDatabaseSnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DestinationInfo": {
        "description": "Describes the destination of a record.",
        "properties": {
          "id": { "$ref": "#/components/schemas/NonEmptyString" },
          "service": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "DetachDiskRequest": {
        "properties": { "diskName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["diskName"],
        "type": "object"
      },
      "DetachDiskResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DetachInstancesFromLoadBalancerRequest": {
        "properties": {
          "instanceNames": { "$ref": "#/components/schemas/ResourceNameList" },
          "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["loadBalancerName", "instanceNames"],
        "type": "object"
      },
      "DetachInstancesFromLoadBalancerResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "DetachStaticIpRequest": {
        "properties": { "staticIpName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["staticIpName"],
        "type": "object"
      },
      "DetachStaticIpResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "Disk": {
        "description": "Describes a system disk or an block storage disk.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "attachedTo": { "$ref": "#/components/schemas/ResourceName" },
          "attachmentState": { "$ref": "#/components/schemas/string" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "gbInUse": { "$ref": "#/components/schemas/integer" },
          "iops": { "$ref": "#/components/schemas/integer" },
          "isAttached": { "$ref": "#/components/schemas/boolean" },
          "isSystemDisk": { "$ref": "#/components/schemas/boolean" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "path": { "$ref": "#/components/schemas/string" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "sizeInGb": { "$ref": "#/components/schemas/integer" },
          "state": { "$ref": "#/components/schemas/DiskState" },
          "supportCode": { "$ref": "#/components/schemas/string" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "DiskInfo": {
        "description": "Describes a disk.",
        "properties": {
          "isSystemDisk": { "$ref": "#/components/schemas/boolean" },
          "name": { "$ref": "#/components/schemas/string" },
          "path": { "$ref": "#/components/schemas/NonEmptyString" },
          "sizeInGb": { "$ref": "#/components/schemas/integer" }
        },
        "type": "object"
      },
      "DiskInfoList": { "items": { "$ref": "#/components/schemas/DiskInfo" }, "type": "array" },
      "DiskList": { "items": { "$ref": "#/components/schemas/Disk" }, "type": "array" },
      "DiskMap": {
        "description": "Describes a block storage disk mapping.",
        "properties": {
          "newDiskName": { "$ref": "#/components/schemas/ResourceName" },
          "originalDiskPath": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "DiskMapList": { "items": { "$ref": "#/components/schemas/DiskMap" }, "type": "array" },
      "DiskSnapshot": {
        "description": "Describes a block storage disk snapshot.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "fromDiskArn": { "$ref": "#/components/schemas/NonEmptyString" },
          "fromDiskName": { "$ref": "#/components/schemas/ResourceName" },
          "fromInstanceArn": { "$ref": "#/components/schemas/NonEmptyString" },
          "fromInstanceName": { "$ref": "#/components/schemas/ResourceName" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "progress": { "$ref": "#/components/schemas/string" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "sizeInGb": { "$ref": "#/components/schemas/integer" },
          "state": { "$ref": "#/components/schemas/DiskSnapshotState" },
          "supportCode": { "$ref": "#/components/schemas/string" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "DiskSnapshotInfo": {
        "description": "Describes a disk snapshot.",
        "properties": { "sizeInGb": { "$ref": "#/components/schemas/integer" } },
        "type": "object"
      },
      "DiskSnapshotList": { "items": { "$ref": "#/components/schemas/DiskSnapshot" }, "type": "array" },
      "DiskSnapshotState": { "enum": ["pending", "completed", "error", "unknown"], "type": "string" },
      "DiskState": { "enum": ["pending", "error", "available", "in-use", "unknown"], "type": "string" },
      "Domain": {
        "description": "Describes a domain where you are storing recordsets in Lightsail.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "domainEntries": { "$ref": "#/components/schemas/DomainEntryList" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "supportCode": { "$ref": "#/components/schemas/string" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "DomainEntry": {
        "description": "Describes a domain recordset entry.",
        "properties": {
          "id": { "$ref": "#/components/schemas/NonEmptyString" },
          "isAlias": { "$ref": "#/components/schemas/boolean" },
          "name": { "$ref": "#/components/schemas/DomainName" },
          "options": { "$ref": "#/components/schemas/DomainEntryOptions" },
          "target": { "$ref": "#/components/schemas/string" },
          "type": { "$ref": "#/components/schemas/DomainEntryType" }
        },
        "type": "object"
      },
      "DomainEntryList": { "items": { "$ref": "#/components/schemas/DomainEntry" }, "type": "array" },
      "DomainEntryOptions": { "additionalProperties": { "$ref": "#/components/schemas/string" }, "type": "object" },
      "DomainEntryOptionsKeys": { "type": "string" },
      "DomainEntryType": { "type": "string" },
      "DomainList": { "items": { "$ref": "#/components/schemas/Domain" }, "type": "array" },
      "DomainName": { "type": "string" },
      "DomainNameList": { "items": { "$ref": "#/components/schemas/DomainName" }, "type": "array" },
      "DownloadDefaultKeyPairRequest": { "properties": {}, "type": "object" },
      "DownloadDefaultKeyPairResult": {
        "properties": {
          "privateKeyBase64": { "$ref": "#/components/schemas/Base64" },
          "publicKeyBase64": { "$ref": "#/components/schemas/Base64" }
        },
        "type": "object"
      },
      "ExportSnapshotRecord": {
        "description": "Describes an export snapshot record.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "destinationInfo": { "$ref": "#/components/schemas/DestinationInfo" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "sourceInfo": { "$ref": "#/components/schemas/ExportSnapshotRecordSourceInfo" },
          "state": { "$ref": "#/components/schemas/RecordState" }
        },
        "type": "object"
      },
      "ExportSnapshotRecordList": { "items": { "$ref": "#/components/schemas/ExportSnapshotRecord" }, "type": "array" },
      "ExportSnapshotRecordSourceInfo": {
        "description": "Describes the source of an export snapshot record.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "diskSnapshotInfo": { "$ref": "#/components/schemas/DiskSnapshotInfo" },
          "fromResourceArn": { "$ref": "#/components/schemas/NonEmptyString" },
          "fromResourceName": { "$ref": "#/components/schemas/NonEmptyString" },
          "instanceSnapshotInfo": { "$ref": "#/components/schemas/InstanceSnapshotInfo" },
          "name": { "$ref": "#/components/schemas/NonEmptyString" },
          "resourceType": { "$ref": "#/components/schemas/ExportSnapshotRecordSourceType" }
        },
        "type": "object"
      },
      "ExportSnapshotRecordSourceType": { "enum": ["InstanceSnapshot", "DiskSnapshot"], "type": "string" },
      "ExportSnapshotRequest": {
        "properties": { "sourceSnapshotName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["sourceSnapshotName"],
        "type": "object"
      },
      "ExportSnapshotResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "GetActiveNamesRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetActiveNamesResult": {
        "properties": {
          "activeNames": { "$ref": "#/components/schemas/StringList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetBlueprintsRequest": {
        "properties": {
          "includeInactive": { "$ref": "#/components/schemas/boolean" },
          "pageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetBlueprintsResult": {
        "properties": {
          "blueprints": { "$ref": "#/components/schemas/BlueprintList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetBundlesRequest": {
        "properties": {
          "includeInactive": { "$ref": "#/components/schemas/boolean" },
          "pageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetBundlesResult": {
        "properties": {
          "bundles": { "$ref": "#/components/schemas/BundleList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetCloudFormationStackRecordsRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetCloudFormationStackRecordsResult": {
        "properties": {
          "cloudFormationStackRecords": { "$ref": "#/components/schemas/CloudFormationStackRecordList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetDiskRequest": {
        "properties": { "diskName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["diskName"],
        "type": "object"
      },
      "GetDiskResult": { "properties": { "disk": { "$ref": "#/components/schemas/Disk" } }, "type": "object" },
      "GetDiskSnapshotRequest": {
        "properties": { "diskSnapshotName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["diskSnapshotName"],
        "type": "object"
      },
      "GetDiskSnapshotResult": {
        "properties": { "diskSnapshot": { "$ref": "#/components/schemas/DiskSnapshot" } },
        "type": "object"
      },
      "GetDiskSnapshotsRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetDiskSnapshotsResult": {
        "properties": {
          "diskSnapshots": { "$ref": "#/components/schemas/DiskSnapshotList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetDisksRequest": { "properties": { "pageToken": { "$ref": "#/components/schemas/string" } }, "type": "object" },
      "GetDisksResult": {
        "properties": {
          "disks": { "$ref": "#/components/schemas/DiskList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetDomainRequest": {
        "properties": { "domainName": { "$ref": "#/components/schemas/DomainName" } },
        "required": ["domainName"],
        "type": "object"
      },
      "GetDomainResult": { "properties": { "domain": { "$ref": "#/components/schemas/Domain" } }, "type": "object" },
      "GetDomainsRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetDomainsResult": {
        "properties": {
          "domains": { "$ref": "#/components/schemas/DomainList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetExportSnapshotRecordsRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetExportSnapshotRecordsResult": {
        "properties": {
          "exportSnapshotRecords": { "$ref": "#/components/schemas/ExportSnapshotRecordList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetInstanceAccessDetailsRequest": {
        "properties": {
          "instanceName": { "$ref": "#/components/schemas/ResourceName" },
          "protocol": { "$ref": "#/components/schemas/InstanceAccessProtocol" }
        },
        "required": ["instanceName"],
        "type": "object"
      },
      "GetInstanceAccessDetailsResult": {
        "properties": { "accessDetails": { "$ref": "#/components/schemas/InstanceAccessDetails" } },
        "type": "object"
      },
      "GetInstanceMetricDataRequest": {
        "properties": {
          "endTime": { "$ref": "#/components/schemas/timestamp" },
          "instanceName": { "$ref": "#/components/schemas/ResourceName" },
          "metricName": { "$ref": "#/components/schemas/InstanceMetricName" },
          "period": { "$ref": "#/components/schemas/MetricPeriod" },
          "startTime": { "$ref": "#/components/schemas/timestamp" },
          "statistics": { "$ref": "#/components/schemas/MetricStatisticList" },
          "unit": { "$ref": "#/components/schemas/MetricUnit" }
        },
        "required": ["instanceName", "metricName", "period", "startTime", "endTime", "unit", "statistics"],
        "type": "object"
      },
      "GetInstanceMetricDataResult": {
        "properties": {
          "metricData": { "$ref": "#/components/schemas/MetricDatapointList" },
          "metricName": { "$ref": "#/components/schemas/InstanceMetricName" }
        },
        "type": "object"
      },
      "GetInstancePortStatesRequest": {
        "properties": { "instanceName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["instanceName"],
        "type": "object"
      },
      "GetInstancePortStatesResult": {
        "properties": { "portStates": { "$ref": "#/components/schemas/InstancePortStateList" } },
        "type": "object"
      },
      "GetInstanceRequest": {
        "properties": { "instanceName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["instanceName"],
        "type": "object"
      },
      "GetInstanceResult": {
        "properties": { "instance": { "$ref": "#/components/schemas/Instance" } },
        "type": "object"
      },
      "GetInstanceSnapshotRequest": {
        "properties": { "instanceSnapshotName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["instanceSnapshotName"],
        "type": "object"
      },
      "GetInstanceSnapshotResult": {
        "properties": { "instanceSnapshot": { "$ref": "#/components/schemas/InstanceSnapshot" } },
        "type": "object"
      },
      "GetInstanceSnapshotsRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetInstanceSnapshotsResult": {
        "properties": {
          "instanceSnapshots": { "$ref": "#/components/schemas/InstanceSnapshotList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetInstanceStateRequest": {
        "properties": { "instanceName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["instanceName"],
        "type": "object"
      },
      "GetInstanceStateResult": {
        "properties": { "state": { "$ref": "#/components/schemas/InstanceState" } },
        "type": "object"
      },
      "GetInstancesRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetInstancesResult": {
        "properties": {
          "instances": { "$ref": "#/components/schemas/InstanceList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetKeyPairRequest": {
        "properties": { "keyPairName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["keyPairName"],
        "type": "object"
      },
      "GetKeyPairResult": { "properties": { "keyPair": { "$ref": "#/components/schemas/KeyPair" } }, "type": "object" },
      "GetKeyPairsRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetKeyPairsResult": {
        "properties": {
          "keyPairs": { "$ref": "#/components/schemas/KeyPairList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetLoadBalancerMetricDataRequest": {
        "properties": {
          "endTime": { "$ref": "#/components/schemas/timestamp" },
          "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" },
          "metricName": { "$ref": "#/components/schemas/LoadBalancerMetricName" },
          "period": { "$ref": "#/components/schemas/MetricPeriod" },
          "startTime": { "$ref": "#/components/schemas/timestamp" },
          "statistics": { "$ref": "#/components/schemas/MetricStatisticList" },
          "unit": { "$ref": "#/components/schemas/MetricUnit" }
        },
        "required": ["loadBalancerName", "metricName", "period", "startTime", "endTime", "unit", "statistics"],
        "type": "object"
      },
      "GetLoadBalancerMetricDataResult": {
        "properties": {
          "metricData": { "$ref": "#/components/schemas/MetricDatapointList" },
          "metricName": { "$ref": "#/components/schemas/LoadBalancerMetricName" }
        },
        "type": "object"
      },
      "GetLoadBalancerRequest": {
        "properties": { "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["loadBalancerName"],
        "type": "object"
      },
      "GetLoadBalancerResult": {
        "properties": { "loadBalancer": { "$ref": "#/components/schemas/LoadBalancer" } },
        "type": "object"
      },
      "GetLoadBalancerTlsCertificatesRequest": {
        "properties": { "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["loadBalancerName"],
        "type": "object"
      },
      "GetLoadBalancerTlsCertificatesResult": {
        "properties": { "tlsCertificates": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateList" } },
        "type": "object"
      },
      "GetLoadBalancersRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetLoadBalancersResult": {
        "properties": {
          "loadBalancers": { "$ref": "#/components/schemas/LoadBalancerList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetOperationRequest": {
        "properties": { "operationId": { "$ref": "#/components/schemas/NonEmptyString" } },
        "required": ["operationId"],
        "type": "object"
      },
      "GetOperationResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "GetOperationsForResourceRequest": {
        "properties": {
          "pageToken": { "$ref": "#/components/schemas/string" },
          "resourceName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["resourceName"],
        "type": "object"
      },
      "GetOperationsForResourceResult": {
        "properties": {
          "nextPageCount": { "$ref": "#/components/schemas/string" },
          "nextPageToken": { "$ref": "#/components/schemas/string" },
          "operations": { "$ref": "#/components/schemas/OperationList" }
        },
        "type": "object"
      },
      "GetOperationsRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetOperationsResult": {
        "properties": {
          "nextPageToken": { "$ref": "#/components/schemas/string" },
          "operations": { "$ref": "#/components/schemas/OperationList" }
        },
        "type": "object"
      },
      "GetRegionsRequest": {
        "properties": {
          "includeAvailabilityZones": { "$ref": "#/components/schemas/boolean" },
          "includeRelationalDatabaseAvailabilityZones": { "$ref": "#/components/schemas/boolean" }
        },
        "type": "object"
      },
      "GetRegionsResult": {
        "properties": { "regions": { "$ref": "#/components/schemas/RegionList" } },
        "type": "object"
      },
      "GetRelationalDatabaseBlueprintsRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetRelationalDatabaseBlueprintsResult": {
        "properties": {
          "blueprints": { "$ref": "#/components/schemas/RelationalDatabaseBlueprintList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetRelationalDatabaseBundlesRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetRelationalDatabaseBundlesResult": {
        "properties": {
          "bundles": { "$ref": "#/components/schemas/RelationalDatabaseBundleList" },
          "nextPageToken": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "GetRelationalDatabaseEventsRequest": {
        "properties": {
          "durationInMinutes": { "$ref": "#/components/schemas/integer" },
          "pageToken": { "$ref": "#/components/schemas/string" },
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "GetRelationalDatabaseEventsResult": {
        "properties": {
          "nextPageToken": { "$ref": "#/components/schemas/string" },
          "relationalDatabaseEvents": { "$ref": "#/components/schemas/RelationalDatabaseEventList" }
        },
        "type": "object"
      },
      "GetRelationalDatabaseLogEventsRequest": {
        "properties": {
          "endTime": { "$ref": "#/components/schemas/IsoDate" },
          "logStreamName": { "$ref": "#/components/schemas/string" },
          "pageToken": { "$ref": "#/components/schemas/string" },
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" },
          "startFromHead": { "$ref": "#/components/schemas/boolean" },
          "startTime": { "$ref": "#/components/schemas/IsoDate" }
        },
        "required": ["relationalDatabaseName", "logStreamName"],
        "type": "object"
      },
      "GetRelationalDatabaseLogEventsResult": {
        "properties": {
          "nextBackwardToken": { "$ref": "#/components/schemas/string" },
          "nextForwardToken": { "$ref": "#/components/schemas/string" },
          "resourceLogEvents": { "$ref": "#/components/schemas/LogEventList" }
        },
        "type": "object"
      },
      "GetRelationalDatabaseLogStreamsRequest": {
        "properties": { "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "GetRelationalDatabaseLogStreamsResult": {
        "properties": { "logStreams": { "$ref": "#/components/schemas/StringList" } },
        "type": "object"
      },
      "GetRelationalDatabaseMasterUserPasswordRequest": {
        "properties": {
          "passwordVersion": { "$ref": "#/components/schemas/RelationalDatabasePasswordVersion" },
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "GetRelationalDatabaseMasterUserPasswordResult": {
        "properties": {
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "masterUserPassword": { "$ref": "#/components/schemas/SensitiveString" }
        },
        "type": "object"
      },
      "GetRelationalDatabaseMetricDataRequest": {
        "properties": {
          "endTime": { "$ref": "#/components/schemas/IsoDate" },
          "metricName": { "$ref": "#/components/schemas/RelationalDatabaseMetricName" },
          "period": { "$ref": "#/components/schemas/MetricPeriod" },
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" },
          "startTime": { "$ref": "#/components/schemas/IsoDate" },
          "statistics": { "$ref": "#/components/schemas/MetricStatisticList" },
          "unit": { "$ref": "#/components/schemas/MetricUnit" }
        },
        "required": ["relationalDatabaseName", "metricName", "period", "startTime", "endTime", "unit", "statistics"],
        "type": "object"
      },
      "GetRelationalDatabaseMetricDataResult": {
        "properties": {
          "metricData": { "$ref": "#/components/schemas/MetricDatapointList" },
          "metricName": { "$ref": "#/components/schemas/RelationalDatabaseMetricName" }
        },
        "type": "object"
      },
      "GetRelationalDatabaseParametersRequest": {
        "properties": {
          "pageToken": { "$ref": "#/components/schemas/string" },
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "GetRelationalDatabaseParametersResult": {
        "properties": {
          "nextPageToken": { "$ref": "#/components/schemas/string" },
          "parameters": { "$ref": "#/components/schemas/RelationalDatabaseParameterList" }
        },
        "type": "object"
      },
      "GetRelationalDatabaseRequest": {
        "properties": { "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "GetRelationalDatabaseResult": {
        "properties": { "relationalDatabase": { "$ref": "#/components/schemas/RelationalDatabase" } },
        "type": "object"
      },
      "GetRelationalDatabaseSnapshotRequest": {
        "properties": { "relationalDatabaseSnapshotName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["relationalDatabaseSnapshotName"],
        "type": "object"
      },
      "GetRelationalDatabaseSnapshotResult": {
        "properties": { "relationalDatabaseSnapshot": { "$ref": "#/components/schemas/RelationalDatabaseSnapshot" } },
        "type": "object"
      },
      "GetRelationalDatabaseSnapshotsRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetRelationalDatabaseSnapshotsResult": {
        "properties": {
          "nextPageToken": { "$ref": "#/components/schemas/string" },
          "relationalDatabaseSnapshots": { "$ref": "#/components/schemas/RelationalDatabaseSnapshotList" }
        },
        "type": "object"
      },
      "GetRelationalDatabasesRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetRelationalDatabasesResult": {
        "properties": {
          "nextPageToken": { "$ref": "#/components/schemas/string" },
          "relationalDatabases": { "$ref": "#/components/schemas/RelationalDatabaseList" }
        },
        "type": "object"
      },
      "GetStaticIpRequest": {
        "properties": { "staticIpName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["staticIpName"],
        "type": "object"
      },
      "GetStaticIpResult": {
        "properties": { "staticIp": { "$ref": "#/components/schemas/StaticIp" } },
        "type": "object"
      },
      "GetStaticIpsRequest": {
        "properties": { "pageToken": { "$ref": "#/components/schemas/string" } },
        "type": "object"
      },
      "GetStaticIpsResult": {
        "properties": {
          "nextPageToken": { "$ref": "#/components/schemas/string" },
          "staticIps": { "$ref": "#/components/schemas/StaticIpList" }
        },
        "type": "object"
      },
      "HostKeyAttributes": {
        "description": "Describes the public SSH host keys or the RDP certificate.",
        "properties": {
          "algorithm": { "$ref": "#/components/schemas/string" },
          "fingerprintSHA1": { "$ref": "#/components/schemas/string" },
          "fingerprintSHA256": { "$ref": "#/components/schemas/string" },
          "notValidAfter": { "$ref": "#/components/schemas/IsoDate" },
          "notValidBefore": { "$ref": "#/components/schemas/IsoDate" },
          "publicKey": { "$ref": "#/components/schemas/string" },
          "witnessedAt": { "$ref": "#/components/schemas/IsoDate" }
        },
        "type": "object"
      },
      "HostKeysList": { "items": { "$ref": "#/components/schemas/HostKeyAttributes" }, "type": "array" },
      "ImportKeyPairRequest": {
        "properties": {
          "keyPairName": { "$ref": "#/components/schemas/ResourceName" },
          "publicKeyBase64": { "$ref": "#/components/schemas/Base64" }
        },
        "required": ["keyPairName", "publicKeyBase64"],
        "type": "object"
      },
      "ImportKeyPairResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "Instance": {
        "description": "Describes an instance (a virtual private server).",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "blueprintId": { "$ref": "#/components/schemas/NonEmptyString" },
          "blueprintName": { "$ref": "#/components/schemas/NonEmptyString" },
          "bundleId": { "$ref": "#/components/schemas/NonEmptyString" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "hardware": { "$ref": "#/components/schemas/InstanceHardware" },
          "ipv6Address": { "$ref": "#/components/schemas/IpV6Address" },
          "isStaticIp": { "$ref": "#/components/schemas/boolean" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "networking": { "$ref": "#/components/schemas/InstanceNetworking" },
          "privateIpAddress": { "$ref": "#/components/schemas/IpAddress" },
          "publicIpAddress": { "$ref": "#/components/schemas/IpAddress" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "sshKeyName": { "$ref": "#/components/schemas/ResourceName" },
          "state": { "$ref": "#/components/schemas/InstanceState" },
          "supportCode": { "$ref": "#/components/schemas/string" },
          "tags": { "$ref": "#/components/schemas/TagList" },
          "username": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "InstanceAccessDetails": {
        "description": "The parameters for gaining temporary access to one of your Amazon Lightsail instances.",
        "properties": {
          "certKey": { "$ref": "#/components/schemas/string" },
          "expiresAt": { "$ref": "#/components/schemas/IsoDate" },
          "hostKeys": { "$ref": "#/components/schemas/HostKeysList" },
          "instanceName": { "$ref": "#/components/schemas/ResourceName" },
          "ipAddress": { "$ref": "#/components/schemas/IpAddress" },
          "password": { "$ref": "#/components/schemas/string" },
          "passwordData": { "$ref": "#/components/schemas/PasswordData" },
          "privateKey": { "$ref": "#/components/schemas/string" },
          "protocol": { "$ref": "#/components/schemas/InstanceAccessProtocol" },
          "username": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "InstanceAccessProtocol": { "enum": ["ssh", "rdp"], "type": "string" },
      "InstanceEntry": {
        "description": "Describes the Amazon Elastic Compute Cloud instance and related resources to be created using the <code>create cloud formation stack</code> operation.",
        "properties": {
          "availabilityZone": { "$ref": "#/components/schemas/string" },
          "instanceType": { "$ref": "#/components/schemas/NonEmptyString" },
          "portInfoSource": { "$ref": "#/components/schemas/PortInfoSourceType" },
          "sourceName": { "$ref": "#/components/schemas/ResourceName" },
          "userData": { "$ref": "#/components/schemas/string" }
        },
        "required": ["sourceName", "instanceType", "portInfoSource", "availabilityZone"],
        "type": "object"
      },
      "InstanceEntryList": { "items": { "$ref": "#/components/schemas/InstanceEntry" }, "type": "array" },
      "InstanceHardware": {
        "description": "Describes the hardware for the instance.",
        "properties": {
          "cpuCount": { "$ref": "#/components/schemas/integer" },
          "disks": { "$ref": "#/components/schemas/DiskList" },
          "ramSizeInGb": { "$ref": "#/components/schemas/float" }
        },
        "type": "object"
      },
      "InstanceHealthReason": {
        "enum": [
          "Lb.RegistrationInProgress",
          "Lb.InitialHealthChecking",
          "Lb.InternalError",
          "Instance.ResponseCodeMismatch",
          "Instance.Timeout",
          "Instance.FailedHealthChecks",
          "Instance.NotRegistered",
          "Instance.NotInUse",
          "Instance.DeregistrationInProgress",
          "Instance.InvalidState",
          "Instance.IpUnusable"
        ],
        "type": "string"
      },
      "InstanceHealthState": {
        "enum": ["initial", "healthy", "unhealthy", "unused", "draining", "unavailable"],
        "type": "string"
      },
      "InstanceHealthSummary": {
        "description": "Describes information about the health of the instance.",
        "properties": {
          "instanceHealth": { "$ref": "#/components/schemas/InstanceHealthState" },
          "instanceHealthReason": { "$ref": "#/components/schemas/InstanceHealthReason" },
          "instanceName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "type": "object"
      },
      "InstanceHealthSummaryList": {
        "items": { "$ref": "#/components/schemas/InstanceHealthSummary" },
        "type": "array"
      },
      "InstanceList": { "items": { "$ref": "#/components/schemas/Instance" }, "type": "array" },
      "InstanceMetricName": {
        "enum": [
          "CPUUtilization",
          "NetworkIn",
          "NetworkOut",
          "StatusCheckFailed",
          "StatusCheckFailed_Instance",
          "StatusCheckFailed_System"
        ],
        "type": "string"
      },
      "InstanceNetworking": {
        "description": "Describes monthly data transfer rates and port information for an instance.",
        "properties": {
          "monthlyTransfer": { "$ref": "#/components/schemas/MonthlyTransfer" },
          "ports": { "$ref": "#/components/schemas/InstancePortInfoList" }
        },
        "type": "object"
      },
      "InstancePlatform": { "enum": ["LINUX_UNIX", "WINDOWS"], "type": "string" },
      "InstancePlatformList": { "items": { "$ref": "#/components/schemas/InstancePlatform" }, "type": "array" },
      "InstancePortInfo": {
        "description": "Describes information about the instance ports.",
        "properties": {
          "accessDirection": { "$ref": "#/components/schemas/AccessDirection" },
          "accessFrom": { "$ref": "#/components/schemas/string" },
          "accessType": { "$ref": "#/components/schemas/PortAccessType" },
          "commonName": { "$ref": "#/components/schemas/string" },
          "fromPort": { "$ref": "#/components/schemas/Port" },
          "protocol": { "$ref": "#/components/schemas/NetworkProtocol" },
          "toPort": { "$ref": "#/components/schemas/Port" }
        },
        "type": "object"
      },
      "InstancePortInfoList": { "items": { "$ref": "#/components/schemas/InstancePortInfo" }, "type": "array" },
      "InstancePortState": {
        "description": "Describes the port state.",
        "properties": {
          "fromPort": { "$ref": "#/components/schemas/Port" },
          "protocol": { "$ref": "#/components/schemas/NetworkProtocol" },
          "state": { "$ref": "#/components/schemas/PortState" },
          "toPort": { "$ref": "#/components/schemas/Port" }
        },
        "type": "object"
      },
      "InstancePortStateList": { "items": { "$ref": "#/components/schemas/InstancePortState" }, "type": "array" },
      "InstanceSnapshot": {
        "description": "Describes the snapshot of the virtual private server, or <i>instance</i>.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "fromAttachedDisks": { "$ref": "#/components/schemas/DiskList" },
          "fromBlueprintId": { "$ref": "#/components/schemas/string" },
          "fromBundleId": { "$ref": "#/components/schemas/string" },
          "fromInstanceArn": { "$ref": "#/components/schemas/NonEmptyString" },
          "fromInstanceName": { "$ref": "#/components/schemas/ResourceName" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "progress": { "$ref": "#/components/schemas/string" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "sizeInGb": { "$ref": "#/components/schemas/integer" },
          "state": { "$ref": "#/components/schemas/InstanceSnapshotState" },
          "supportCode": { "$ref": "#/components/schemas/string" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "InstanceSnapshotInfo": {
        "description": "Describes an instance snapshot.",
        "properties": {
          "fromBlueprintId": { "$ref": "#/components/schemas/NonEmptyString" },
          "fromBundleId": { "$ref": "#/components/schemas/NonEmptyString" },
          "fromDiskInfo": { "$ref": "#/components/schemas/DiskInfoList" }
        },
        "type": "object"
      },
      "InstanceSnapshotList": { "items": { "$ref": "#/components/schemas/InstanceSnapshot" }, "type": "array" },
      "InstanceSnapshotState": { "enum": ["pending", "error", "available"], "type": "string" },
      "InstanceState": {
        "description": "Describes the virtual private server (or <i>instance</i>) status.",
        "properties": {
          "code": { "$ref": "#/components/schemas/integer" },
          "name": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "InvalidInputException": {},
      "IpAddress": { "pattern": "([0-9]{1,3}\\.){3}[0-9]{1,3}", "type": "string" },
      "IpV6Address": { "pattern": "([A-F0-9]{1,4}:){7}[A-F0-9]{1,4}", "type": "string" },
      "IsVpcPeeredRequest": { "properties": {}, "type": "object" },
      "IsVpcPeeredResult": {
        "properties": { "isPeered": { "$ref": "#/components/schemas/boolean" } },
        "type": "object"
      },
      "IsoDate": { "format": "date-time", "type": "string" },
      "KeyPair": {
        "description": "Describes the SSH key pair.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "fingerprint": { "$ref": "#/components/schemas/Base64" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "supportCode": { "$ref": "#/components/schemas/string" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "KeyPairList": { "items": { "$ref": "#/components/schemas/KeyPair" }, "type": "array" },
      "LoadBalancer": {
        "description": "Describes the Lightsail load balancer.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "configurationOptions": { "$ref": "#/components/schemas/LoadBalancerConfigurationOptions" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "dnsName": { "$ref": "#/components/schemas/NonEmptyString" },
          "healthCheckPath": { "$ref": "#/components/schemas/NonEmptyString" },
          "instanceHealthSummary": { "$ref": "#/components/schemas/InstanceHealthSummaryList" },
          "instancePort": { "$ref": "#/components/schemas/integer" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "protocol": { "$ref": "#/components/schemas/LoadBalancerProtocol" },
          "publicPorts": { "$ref": "#/components/schemas/PortList" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "state": { "$ref": "#/components/schemas/LoadBalancerState" },
          "supportCode": { "$ref": "#/components/schemas/string" },
          "tags": { "$ref": "#/components/schemas/TagList" },
          "tlsCertificateSummaries": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateSummaryList" }
        },
        "type": "object"
      },
      "LoadBalancerAttributeName": {
        "enum": ["HealthCheckPath", "SessionStickinessEnabled", "SessionStickiness_LB_CookieDurationSeconds"],
        "type": "string"
      },
      "LoadBalancerConfigurationOptions": {
        "additionalProperties": { "$ref": "#/components/schemas/string" },
        "type": "object"
      },
      "LoadBalancerList": { "items": { "$ref": "#/components/schemas/LoadBalancer" }, "type": "array" },
      "LoadBalancerMetricName": {
        "enum": [
          "ClientTLSNegotiationErrorCount",
          "HealthyHostCount",
          "UnhealthyHostCount",
          "HTTPCode_LB_4XX_Count",
          "HTTPCode_LB_5XX_Count",
          "HTTPCode_Instance_2XX_Count",
          "HTTPCode_Instance_3XX_Count",
          "HTTPCode_Instance_4XX_Count",
          "HTTPCode_Instance_5XX_Count",
          "InstanceResponseTime",
          "RejectedConnectionCount",
          "RequestCount"
        ],
        "type": "string"
      },
      "LoadBalancerProtocol": { "enum": ["HTTP_HTTPS", "HTTP"], "type": "string" },
      "LoadBalancerState": {
        "enum": ["active", "provisioning", "active_impaired", "failed", "unknown"],
        "type": "string"
      },
      "LoadBalancerTlsCertificate": {
        "description": "<p>Describes a load balancer SSL/TLS certificate.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "domainName": { "$ref": "#/components/schemas/DomainName" },
          "domainValidationRecords": {
            "$ref": "#/components/schemas/LoadBalancerTlsCertificateDomainValidationRecordList"
          },
          "failureReason": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateFailureReason" },
          "isAttached": { "$ref": "#/components/schemas/boolean" },
          "issuedAt": { "$ref": "#/components/schemas/IsoDate" },
          "issuer": { "$ref": "#/components/schemas/NonEmptyString" },
          "keyAlgorithm": { "$ref": "#/components/schemas/NonEmptyString" },
          "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "notAfter": { "$ref": "#/components/schemas/IsoDate" },
          "notBefore": { "$ref": "#/components/schemas/IsoDate" },
          "renewalSummary": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateRenewalSummary" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "revocationReason": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateRevocationReason" },
          "revokedAt": { "$ref": "#/components/schemas/IsoDate" },
          "serial": { "$ref": "#/components/schemas/NonEmptyString" },
          "signatureAlgorithm": { "$ref": "#/components/schemas/NonEmptyString" },
          "status": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateStatus" },
          "subject": { "$ref": "#/components/schemas/NonEmptyString" },
          "subjectAlternativeNames": { "$ref": "#/components/schemas/StringList" },
          "supportCode": { "$ref": "#/components/schemas/string" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "LoadBalancerTlsCertificateDomainStatus": {
        "enum": ["PENDING_VALIDATION", "FAILED", "SUCCESS"],
        "type": "string"
      },
      "LoadBalancerTlsCertificateDomainValidationOption": {
        "description": "Contains information about the domain names on an SSL/TLS certificate that you will use to validate domain ownership.",
        "properties": {
          "domainName": { "$ref": "#/components/schemas/DomainName" },
          "validationStatus": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateDomainStatus" }
        },
        "type": "object"
      },
      "LoadBalancerTlsCertificateDomainValidationOptionList": {
        "items": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateDomainValidationOption" },
        "type": "array"
      },
      "LoadBalancerTlsCertificateDomainValidationRecord": {
        "description": "Describes the validation record of each domain name in the SSL/TLS certificate.",
        "properties": {
          "domainName": { "$ref": "#/components/schemas/DomainName" },
          "name": { "$ref": "#/components/schemas/NonEmptyString" },
          "type": { "$ref": "#/components/schemas/NonEmptyString" },
          "validationStatus": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateDomainStatus" },
          "value": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "LoadBalancerTlsCertificateDomainValidationRecordList": {
        "items": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateDomainValidationRecord" },
        "type": "array"
      },
      "LoadBalancerTlsCertificateFailureReason": {
        "enum": [
          "NO_AVAILABLE_CONTACTS",
          "ADDITIONAL_VERIFICATION_REQUIRED",
          "DOMAIN_NOT_ALLOWED",
          "INVALID_PUBLIC_DOMAIN",
          "OTHER"
        ],
        "type": "string"
      },
      "LoadBalancerTlsCertificateList": {
        "items": { "$ref": "#/components/schemas/LoadBalancerTlsCertificate" },
        "type": "array"
      },
      "LoadBalancerTlsCertificateRenewalStatus": {
        "enum": ["PENDING_AUTO_RENEWAL", "PENDING_VALIDATION", "SUCCESS", "FAILED"],
        "type": "string"
      },
      "LoadBalancerTlsCertificateRenewalSummary": {
        "description": "Contains information about the status of Lightsail's managed renewal for the certificate.",
        "properties": {
          "domainValidationOptions": {
            "$ref": "#/components/schemas/LoadBalancerTlsCertificateDomainValidationOptionList"
          },
          "renewalStatus": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateRenewalStatus" }
        },
        "type": "object"
      },
      "LoadBalancerTlsCertificateRevocationReason": {
        "enum": [
          "UNSPECIFIED",
          "KEY_COMPROMISE",
          "CA_COMPROMISE",
          "AFFILIATION_CHANGED",
          "SUPERCEDED",
          "CESSATION_OF_OPERATION",
          "CERTIFICATE_HOLD",
          "REMOVE_FROM_CRL",
          "PRIVILEGE_WITHDRAWN",
          "A_A_COMPROMISE"
        ],
        "type": "string"
      },
      "LoadBalancerTlsCertificateStatus": {
        "enum": [
          "PENDING_VALIDATION",
          "ISSUED",
          "INACTIVE",
          "EXPIRED",
          "VALIDATION_TIMED_OUT",
          "REVOKED",
          "FAILED",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "LoadBalancerTlsCertificateSummary": {
        "description": "Provides a summary of SSL/TLS certificate metadata.",
        "properties": {
          "isAttached": { "$ref": "#/components/schemas/boolean" },
          "name": { "$ref": "#/components/schemas/ResourceName" }
        },
        "type": "object"
      },
      "LoadBalancerTlsCertificateSummaryList": {
        "items": { "$ref": "#/components/schemas/LoadBalancerTlsCertificateSummary" },
        "type": "array"
      },
      "LogEvent": {
        "description": "Describes a database log event.",
        "properties": {
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "message": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "LogEventList": { "items": { "$ref": "#/components/schemas/LogEvent" }, "type": "array" },
      "MetricDatapoint": {
        "description": "Describes the metric data point.",
        "properties": {
          "average": { "$ref": "#/components/schemas/double" },
          "maximum": { "$ref": "#/components/schemas/double" },
          "minimum": { "$ref": "#/components/schemas/double" },
          "sampleCount": { "$ref": "#/components/schemas/double" },
          "sum": { "$ref": "#/components/schemas/double" },
          "timestamp": { "$ref": "#/components/schemas/timestamp" },
          "unit": { "$ref": "#/components/schemas/MetricUnit" }
        },
        "type": "object"
      },
      "MetricDatapointList": { "items": { "$ref": "#/components/schemas/MetricDatapoint" }, "type": "array" },
      "MetricPeriod": { "maximum": 86400, "minimum": 60, "type": "integer" },
      "MetricStatistic": { "enum": ["Minimum", "Maximum", "Sum", "Average", "SampleCount"], "type": "string" },
      "MetricStatisticList": { "items": { "$ref": "#/components/schemas/MetricStatistic" }, "type": "array" },
      "MetricUnit": {
        "enum": [
          "Seconds",
          "Microseconds",
          "Milliseconds",
          "Bytes",
          "Kilobytes",
          "Megabytes",
          "Gigabytes",
          "Terabytes",
          "Bits",
          "Kilobits",
          "Megabits",
          "Gigabits",
          "Terabits",
          "Percent",
          "Count",
          "Bytes/Second",
          "Kilobytes/Second",
          "Megabytes/Second",
          "Gigabytes/Second",
          "Terabytes/Second",
          "Bits/Second",
          "Kilobits/Second",
          "Megabits/Second",
          "Gigabits/Second",
          "Terabits/Second",
          "Count/Second",
          "None"
        ],
        "type": "string"
      },
      "MonthlyTransfer": {
        "description": "Describes the monthly data transfer in and out of your virtual private server (or <i>instance</i>).",
        "properties": { "gbPerMonthAllocated": { "$ref": "#/components/schemas/integer" } },
        "type": "object"
      },
      "NetworkProtocol": { "enum": ["tcp", "all", "udp"], "type": "string" },
      "NonEmptyString": { "pattern": ".*\\S.*", "type": "string" },
      "NotFoundException": {},
      "OpenInstancePublicPortsRequest": {
        "properties": {
          "instanceName": { "$ref": "#/components/schemas/ResourceName" },
          "portInfo": { "$ref": "#/components/schemas/PortInfo" }
        },
        "required": ["portInfo", "instanceName"],
        "type": "object"
      },
      "OpenInstancePublicPortsResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "Operation": {
        "description": "Describes the API operation.",
        "properties": {
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "errorCode": { "$ref": "#/components/schemas/string" },
          "errorDetails": { "$ref": "#/components/schemas/string" },
          "id": { "$ref": "#/components/schemas/NonEmptyString" },
          "isTerminal": { "$ref": "#/components/schemas/boolean" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "operationDetails": { "$ref": "#/components/schemas/string" },
          "operationType": { "$ref": "#/components/schemas/OperationType" },
          "resourceName": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "status": { "$ref": "#/components/schemas/OperationStatus" },
          "statusChangedAt": { "$ref": "#/components/schemas/IsoDate" }
        },
        "type": "object"
      },
      "OperationFailureException": {},
      "OperationList": { "items": { "$ref": "#/components/schemas/Operation" }, "type": "array" },
      "OperationStatus": { "enum": ["NotStarted", "Started", "Failed", "Completed", "Succeeded"], "type": "string" },
      "OperationType": {
        "enum": [
          "DeleteKnownHostKeys",
          "DeleteInstance",
          "CreateInstance",
          "StopInstance",
          "StartInstance",
          "RebootInstance",
          "OpenInstancePublicPorts",
          "PutInstancePublicPorts",
          "CloseInstancePublicPorts",
          "AllocateStaticIp",
          "ReleaseStaticIp",
          "AttachStaticIp",
          "DetachStaticIp",
          "UpdateDomainEntry",
          "DeleteDomainEntry",
          "CreateDomain",
          "DeleteDomain",
          "CreateInstanceSnapshot",
          "DeleteInstanceSnapshot",
          "CreateInstancesFromSnapshot",
          "CreateLoadBalancer",
          "DeleteLoadBalancer",
          "AttachInstancesToLoadBalancer",
          "DetachInstancesFromLoadBalancer",
          "UpdateLoadBalancerAttribute",
          "CreateLoadBalancerTlsCertificate",
          "DeleteLoadBalancerTlsCertificate",
          "AttachLoadBalancerTlsCertificate",
          "CreateDisk",
          "DeleteDisk",
          "AttachDisk",
          "DetachDisk",
          "CreateDiskSnapshot",
          "DeleteDiskSnapshot",
          "CreateDiskFromSnapshot",
          "CreateRelationalDatabase",
          "UpdateRelationalDatabase",
          "DeleteRelationalDatabase",
          "CreateRelationalDatabaseFromSnapshot",
          "CreateRelationalDatabaseSnapshot",
          "DeleteRelationalDatabaseSnapshot",
          "UpdateRelationalDatabaseParameters",
          "StartRelationalDatabase",
          "RebootRelationalDatabase",
          "StopRelationalDatabase"
        ],
        "type": "string"
      },
      "PasswordData": {
        "description": "The password data for the Windows Server-based instance, including the ciphertext and the key pair name.",
        "properties": {
          "ciphertext": { "$ref": "#/components/schemas/string" },
          "keyPairName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "type": "object"
      },
      "PeerVpcRequest": { "properties": {}, "type": "object" },
      "PeerVpcResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "PendingMaintenanceAction": {
        "description": "Describes a pending database maintenance action.",
        "properties": {
          "action": { "$ref": "#/components/schemas/NonEmptyString" },
          "currentApplyDate": { "$ref": "#/components/schemas/IsoDate" },
          "description": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "PendingMaintenanceActionList": {
        "items": { "$ref": "#/components/schemas/PendingMaintenanceAction" },
        "type": "array"
      },
      "PendingModifiedRelationalDatabaseValues": {
        "description": "Describes a pending database value modification.",
        "properties": {
          "backupRetentionEnabled": { "$ref": "#/components/schemas/boolean" },
          "engineVersion": { "$ref": "#/components/schemas/string" },
          "masterUserPassword": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "Port": { "maximum": 65535, "minimum": 0, "type": "integer" },
      "PortAccessType": { "enum": ["Public", "Private"], "type": "string" },
      "PortInfo": {
        "description": "Describes information about the ports on your virtual private server (or <i>instance</i>).",
        "properties": {
          "fromPort": { "$ref": "#/components/schemas/Port" },
          "protocol": { "$ref": "#/components/schemas/NetworkProtocol" },
          "toPort": { "$ref": "#/components/schemas/Port" }
        },
        "type": "object"
      },
      "PortInfoList": { "items": { "$ref": "#/components/schemas/PortInfo" }, "type": "array" },
      "PortInfoSourceType": { "enum": ["DEFAULT", "INSTANCE", "NONE", "CLOSED"], "type": "string" },
      "PortList": { "items": { "$ref": "#/components/schemas/Port" }, "type": "array" },
      "PortState": { "enum": ["open", "closed"], "type": "string" },
      "PutInstancePublicPortsRequest": {
        "properties": {
          "instanceName": { "$ref": "#/components/schemas/ResourceName" },
          "portInfos": { "$ref": "#/components/schemas/PortInfoList" }
        },
        "required": ["portInfos", "instanceName"],
        "type": "object"
      },
      "PutInstancePublicPortsResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "RebootInstanceRequest": {
        "properties": { "instanceName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["instanceName"],
        "type": "object"
      },
      "RebootInstanceResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "RebootRelationalDatabaseRequest": {
        "properties": { "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "RebootRelationalDatabaseResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "RecordState": { "enum": ["Started", "Succeeded", "Failed"], "type": "string" },
      "Region": {
        "description": "Describes the AWS Region.",
        "properties": {
          "availabilityZones": { "$ref": "#/components/schemas/AvailabilityZoneList" },
          "continentCode": { "$ref": "#/components/schemas/string" },
          "description": { "$ref": "#/components/schemas/string" },
          "displayName": { "$ref": "#/components/schemas/string" },
          "name": { "$ref": "#/components/schemas/RegionName" },
          "relationalDatabaseAvailabilityZones": { "$ref": "#/components/schemas/AvailabilityZoneList" }
        },
        "type": "object"
      },
      "RegionList": { "items": { "$ref": "#/components/schemas/Region" }, "type": "array" },
      "RegionName": {
        "enum": [
          "us-east-1",
          "us-east-2",
          "us-west-1",
          "us-west-2",
          "eu-west-1",
          "eu-west-2",
          "eu-west-3",
          "eu-central-1",
          "ca-central-1",
          "ap-south-1",
          "ap-southeast-1",
          "ap-southeast-2",
          "ap-northeast-1",
          "ap-northeast-2"
        ],
        "type": "string"
      },
      "RelationalDatabase": {
        "description": "Describes a database.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "backupRetentionEnabled": { "$ref": "#/components/schemas/boolean" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "engine": { "$ref": "#/components/schemas/NonEmptyString" },
          "engineVersion": { "$ref": "#/components/schemas/NonEmptyString" },
          "hardware": { "$ref": "#/components/schemas/RelationalDatabaseHardware" },
          "latestRestorableTime": { "$ref": "#/components/schemas/IsoDate" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "masterDatabaseName": { "$ref": "#/components/schemas/string" },
          "masterEndpoint": { "$ref": "#/components/schemas/RelationalDatabaseEndpoint" },
          "masterUsername": { "$ref": "#/components/schemas/NonEmptyString" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "parameterApplyStatus": { "$ref": "#/components/schemas/NonEmptyString" },
          "pendingMaintenanceActions": { "$ref": "#/components/schemas/PendingMaintenanceActionList" },
          "pendingModifiedValues": { "$ref": "#/components/schemas/PendingModifiedRelationalDatabaseValues" },
          "preferredBackupWindow": { "$ref": "#/components/schemas/NonEmptyString" },
          "preferredMaintenanceWindow": { "$ref": "#/components/schemas/NonEmptyString" },
          "publiclyAccessible": { "$ref": "#/components/schemas/boolean" },
          "relationalDatabaseBlueprintId": { "$ref": "#/components/schemas/NonEmptyString" },
          "relationalDatabaseBundleId": { "$ref": "#/components/schemas/NonEmptyString" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "secondaryAvailabilityZone": { "$ref": "#/components/schemas/string" },
          "state": { "$ref": "#/components/schemas/NonEmptyString" },
          "supportCode": { "$ref": "#/components/schemas/string" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "RelationalDatabaseBlueprint": {
        "description": "Describes a database image, or blueprint. A blueprint describes the major engine version of a database.",
        "properties": {
          "blueprintId": { "$ref": "#/components/schemas/string" },
          "engine": { "$ref": "#/components/schemas/RelationalDatabaseEngine" },
          "engineDescription": { "$ref": "#/components/schemas/string" },
          "engineVersion": { "$ref": "#/components/schemas/string" },
          "engineVersionDescription": { "$ref": "#/components/schemas/string" },
          "isEngineDefault": { "$ref": "#/components/schemas/boolean" }
        },
        "type": "object"
      },
      "RelationalDatabaseBlueprintList": {
        "items": { "$ref": "#/components/schemas/RelationalDatabaseBlueprint" },
        "type": "array"
      },
      "RelationalDatabaseBundle": {
        "description": "Describes a database bundle. A bundle describes the performance specifications of the database.",
        "properties": {
          "bundleId": { "$ref": "#/components/schemas/string" },
          "cpuCount": { "$ref": "#/components/schemas/integer" },
          "diskSizeInGb": { "$ref": "#/components/schemas/integer" },
          "isActive": { "$ref": "#/components/schemas/boolean" },
          "isEncrypted": { "$ref": "#/components/schemas/boolean" },
          "name": { "$ref": "#/components/schemas/string" },
          "price": { "$ref": "#/components/schemas/float" },
          "ramSizeInGb": { "$ref": "#/components/schemas/float" },
          "transferPerMonthInGb": { "$ref": "#/components/schemas/integer" }
        },
        "type": "object"
      },
      "RelationalDatabaseBundleList": {
        "items": { "$ref": "#/components/schemas/RelationalDatabaseBundle" },
        "type": "array"
      },
      "RelationalDatabaseEndpoint": {
        "description": "Describes an endpoint for a database.",
        "properties": {
          "address": { "$ref": "#/components/schemas/NonEmptyString" },
          "port": { "$ref": "#/components/schemas/integer" }
        },
        "type": "object"
      },
      "RelationalDatabaseEngine": { "enum": ["mysql"], "type": "string" },
      "RelationalDatabaseEvent": {
        "description": "Describes an event for a database.",
        "properties": {
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "eventCategories": { "$ref": "#/components/schemas/StringList" },
          "message": { "$ref": "#/components/schemas/string" },
          "resource": { "$ref": "#/components/schemas/ResourceName" }
        },
        "type": "object"
      },
      "RelationalDatabaseEventList": {
        "items": { "$ref": "#/components/schemas/RelationalDatabaseEvent" },
        "type": "array"
      },
      "RelationalDatabaseHardware": {
        "description": "Describes the hardware of a database.",
        "properties": {
          "cpuCount": { "$ref": "#/components/schemas/integer" },
          "diskSizeInGb": { "$ref": "#/components/schemas/integer" },
          "ramSizeInGb": { "$ref": "#/components/schemas/float" }
        },
        "type": "object"
      },
      "RelationalDatabaseList": { "items": { "$ref": "#/components/schemas/RelationalDatabase" }, "type": "array" },
      "RelationalDatabaseMetricName": {
        "enum": [
          "CPUUtilization",
          "DatabaseConnections",
          "DiskQueueDepth",
          "FreeStorageSpace",
          "NetworkReceiveThroughput",
          "NetworkTransmitThroughput"
        ],
        "type": "string"
      },
      "RelationalDatabaseParameter": {
        "description": "Describes the parameters of a database.",
        "properties": {
          "allowedValues": { "$ref": "#/components/schemas/string" },
          "applyMethod": { "$ref": "#/components/schemas/string" },
          "applyType": { "$ref": "#/components/schemas/string" },
          "dataType": { "$ref": "#/components/schemas/string" },
          "description": { "$ref": "#/components/schemas/string" },
          "isModifiable": { "$ref": "#/components/schemas/boolean" },
          "parameterName": { "$ref": "#/components/schemas/string" },
          "parameterValue": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "RelationalDatabaseParameterList": {
        "items": { "$ref": "#/components/schemas/RelationalDatabaseParameter" },
        "type": "array"
      },
      "RelationalDatabasePasswordVersion": { "enum": ["CURRENT", "PREVIOUS", "PENDING"], "type": "string" },
      "RelationalDatabaseSnapshot": {
        "description": "Describes a database snapshot.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "engine": { "$ref": "#/components/schemas/NonEmptyString" },
          "engineVersion": { "$ref": "#/components/schemas/NonEmptyString" },
          "fromRelationalDatabaseArn": { "$ref": "#/components/schemas/NonEmptyString" },
          "fromRelationalDatabaseBlueprintId": { "$ref": "#/components/schemas/string" },
          "fromRelationalDatabaseBundleId": { "$ref": "#/components/schemas/string" },
          "fromRelationalDatabaseName": { "$ref": "#/components/schemas/NonEmptyString" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "sizeInGb": { "$ref": "#/components/schemas/integer" },
          "state": { "$ref": "#/components/schemas/NonEmptyString" },
          "supportCode": { "$ref": "#/components/schemas/string" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "RelationalDatabaseSnapshotList": {
        "items": { "$ref": "#/components/schemas/RelationalDatabaseSnapshot" },
        "type": "array"
      },
      "ReleaseStaticIpRequest": {
        "properties": { "staticIpName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["staticIpName"],
        "type": "object"
      },
      "ReleaseStaticIpResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "ResourceLocation": {
        "description": "Describes the resource location.",
        "properties": {
          "availabilityZone": { "$ref": "#/components/schemas/string" },
          "regionName": { "$ref": "#/components/schemas/RegionName" }
        },
        "type": "object"
      },
      "ResourceName": { "pattern": "\\w[\\w\\-]*\\w", "type": "string" },
      "ResourceNameList": { "items": { "$ref": "#/components/schemas/ResourceName" }, "type": "array" },
      "ResourceType": {
        "enum": [
          "Instance",
          "StaticIp",
          "KeyPair",
          "InstanceSnapshot",
          "Domain",
          "PeeredVpc",
          "LoadBalancer",
          "LoadBalancerTlsCertificate",
          "Disk",
          "DiskSnapshot",
          "RelationalDatabase",
          "RelationalDatabaseSnapshot",
          "ExportSnapshotRecord",
          "CloudFormationStackRecord"
        ],
        "type": "string"
      },
      "SensitiveString": { "format": "password", "type": "string" },
      "ServiceException": {},
      "StartInstanceRequest": {
        "properties": { "instanceName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["instanceName"],
        "type": "object"
      },
      "StartInstanceResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "StartRelationalDatabaseRequest": {
        "properties": { "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" } },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "StartRelationalDatabaseResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "StaticIp": {
        "description": "Describes the static IP.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/NonEmptyString" },
          "attachedTo": { "$ref": "#/components/schemas/ResourceName" },
          "createdAt": { "$ref": "#/components/schemas/IsoDate" },
          "ipAddress": { "$ref": "#/components/schemas/IpAddress" },
          "isAttached": { "$ref": "#/components/schemas/boolean" },
          "location": { "$ref": "#/components/schemas/ResourceLocation" },
          "name": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "supportCode": { "$ref": "#/components/schemas/string" }
        },
        "type": "object"
      },
      "StaticIpList": { "items": { "$ref": "#/components/schemas/StaticIp" }, "type": "array" },
      "StopInstanceRequest": {
        "properties": {
          "force": { "$ref": "#/components/schemas/boolean" },
          "instanceName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["instanceName"],
        "type": "object"
      },
      "StopInstanceResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "StopRelationalDatabaseRequest": {
        "properties": {
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" },
          "relationalDatabaseSnapshotName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "StopRelationalDatabaseResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "StringList": { "items": { "$ref": "#/components/schemas/string" }, "type": "array" },
      "StringMax256": { "maxLength": 256, "minLength": 1, "type": "string" },
      "Tag": {
        "description": "<p>Describes a tag key and optional value assigned to an Amazon Lightsail resource.</p> <p>For more information about tags in Lightsail, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags\">Lightsail Dev Guide</a>.</p>",
        "properties": {
          "key": { "$ref": "#/components/schemas/TagKey" },
          "value": { "$ref": "#/components/schemas/TagValue" }
        },
        "type": "object"
      },
      "TagKey": { "type": "string" },
      "TagKeyList": { "items": { "$ref": "#/components/schemas/TagKey" }, "type": "array" },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "type": "array" },
      "TagResourceRequest": {
        "properties": {
          "resourceName": { "$ref": "#/components/schemas/ResourceName" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["resourceName", "tags"],
        "type": "object"
      },
      "TagResourceResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "TagValue": { "type": "string" },
      "UnauthenticatedException": {},
      "UnpeerVpcRequest": { "properties": {}, "type": "object" },
      "UnpeerVpcResult": {
        "properties": { "operation": { "$ref": "#/components/schemas/Operation" } },
        "type": "object"
      },
      "UntagResourceRequest": {
        "properties": {
          "resourceName": { "$ref": "#/components/schemas/ResourceName" },
          "tagKeys": { "$ref": "#/components/schemas/TagKeyList" }
        },
        "required": ["resourceName", "tagKeys"],
        "type": "object"
      },
      "UntagResourceResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "UpdateDomainEntryRequest": {
        "properties": {
          "domainEntry": { "$ref": "#/components/schemas/DomainEntry" },
          "domainName": { "$ref": "#/components/schemas/DomainName" }
        },
        "required": ["domainName", "domainEntry"],
        "type": "object"
      },
      "UpdateDomainEntryResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "UpdateLoadBalancerAttributeRequest": {
        "properties": {
          "attributeName": { "$ref": "#/components/schemas/LoadBalancerAttributeName" },
          "attributeValue": { "$ref": "#/components/schemas/StringMax256" },
          "loadBalancerName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["loadBalancerName", "attributeName", "attributeValue"],
        "type": "object"
      },
      "UpdateLoadBalancerAttributeResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "UpdateRelationalDatabaseParametersRequest": {
        "properties": {
          "parameters": { "$ref": "#/components/schemas/RelationalDatabaseParameterList" },
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "required": ["relationalDatabaseName", "parameters"],
        "type": "object"
      },
      "UpdateRelationalDatabaseParametersResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "UpdateRelationalDatabaseRequest": {
        "properties": {
          "applyImmediately": { "$ref": "#/components/schemas/boolean" },
          "disableBackupRetention": { "$ref": "#/components/schemas/boolean" },
          "enableBackupRetention": { "$ref": "#/components/schemas/boolean" },
          "masterUserPassword": { "$ref": "#/components/schemas/SensitiveString" },
          "preferredBackupWindow": { "$ref": "#/components/schemas/string" },
          "preferredMaintenanceWindow": { "$ref": "#/components/schemas/string" },
          "publiclyAccessible": { "$ref": "#/components/schemas/boolean" },
          "relationalDatabaseName": { "$ref": "#/components/schemas/ResourceName" },
          "rotateMasterUserPassword": { "$ref": "#/components/schemas/boolean" }
        },
        "required": ["relationalDatabaseName"],
        "type": "object"
      },
      "UpdateRelationalDatabaseResult": {
        "properties": { "operations": { "$ref": "#/components/schemas/OperationList" } },
        "type": "object"
      },
      "boolean": { "type": "boolean" },
      "double": { "format": "double", "type": "number" },
      "float": { "format": "float", "type": "number" },
      "integer": { "type": "integer" },
      "string": { "type": "string" },
      "timestamp": { "format": "date-time", "type": "string" }
    }
  }
}
