{"openapi":"3.0.0","info":{"contact":{"email":"mike.ralphson@gmail.com","name":"Mike Ralphson","url":"https://github.com/mermade/aws2openapi","x-twitter":"PermittedSoc"},"description":"AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. AWS IoT Events Data API commands enable you to send inputs to detectors, list detectors, and view or update a detector's status.","license":{"name":"Apache 2.0 License","url":"http://www.apache.org/licenses/"},"termsOfService":"https://aws.amazon.com/service-terms/","title":"AWS IoT Events Data","version":"2018-10-23","x-apiClientRegistration":{"url":"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"},"x-apisguru-categories":["cloud"],"x-logo":{"backgroundColor":"#FFFFFF","url":"https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"},"x-origin":[{"contentType":"application/json","converter":{"url":"https://github.com/mermade/aws2openapi","version":"1.0.0"},"url":"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotevents-data-2018-10-23.normal.json","x-apisguru-direct":true}],"x-preferred":true,"x-providerName":"amazonaws.com","x-release":"v4","x-serviceName":"iotevents-data"},"externalDocs":{"description":"Amazon Web Services documentation","url":"https://docs.aws.amazon.com/iotevents/"},"security":[{"hmac":[]}],"paths":{"/detectors":{"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Updates the state, variable values, and timer settings of one or more detectors (instances) of a specified detector model.","operationId":"BatchUpdateDetector","requestBody":{"content":{"application/json":{"schema":{"properties":{"detectors":{"description":"The list of detectors (instances) to update, along with the values to update.","items":{"$ref":"#/components/schemas/UpdateDetectorRequest"},"minItems":1,"type":"array"}},"required":["detectors"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchUpdateDetectorResponse"}}}},"480":{"description":"InvalidRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvalidRequestException"}}}},"481":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"482":{"description":"ServiceUnavailableException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServiceUnavailableException"}}}},"483":{"description":"ThrottlingException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThrottlingException"}}}}}}},"/detectors/{detectorModelName}":{"get":{"description":"Lists detectors (the instances of a detector model).","operationId":"ListDetectors","parameters":[{"description":"The name of the detector model whose detectors (instances) are listed.","in":"path","name":"detectorModelName","required":true,"schema":{"type":"string","minLength":1,"maxLength":128,"pattern":"^[a-zA-Z0-9_-]+$"}},{"description":"A filter that limits results to those detectors (instances) in the given state.","in":"query","name":"stateName","required":false,"schema":{"type":"string","minLength":1,"maxLength":128}},{"description":"The token for the next set of results.","in":"query","name":"nextToken","required":false,"schema":{"type":"string"}},{"description":"The maximum number of results to return at one time.","in":"query","name":"maxResults","required":false,"schema":{"type":"integer","minimum":1,"maximum":250}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListDetectorsResponse"}}}},"480":{"description":"InvalidRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvalidRequestException"}}}},"481":{"description":"ResourceNotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceNotFoundException"}}}},"482":{"description":"ThrottlingException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThrottlingException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"484":{"description":"ServiceUnavailableException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServiceUnavailableException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}]},"/detectors/{detectorModelName}/keyValues/":{"get":{"description":"Returns information about the specified detector (instance).","operationId":"DescribeDetector","parameters":[{"description":"The name of the detector model whose detectors (instances) you want information about.","in":"path","name":"detectorModelName","required":true,"schema":{"type":"string","minLength":1,"maxLength":128,"pattern":"^[a-zA-Z0-9_-]+$"}},{"description":"A filter used to limit results to detectors (instances) created because of the given key ID.","in":"query","name":"keyValue","required":false,"schema":{"type":"string","minLength":1,"maxLength":128,"pattern":"^[a-zA-Z0-9\\-_:]+$"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DescribeDetectorResponse"}}}},"480":{"description":"InvalidRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvalidRequestException"}}}},"481":{"description":"ResourceNotFoundException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceNotFoundException"}}}},"482":{"description":"ThrottlingException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThrottlingException"}}}},"483":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"484":{"description":"ServiceUnavailableException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServiceUnavailableException"}}}}}},"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}]},"/inputs/messages":{"parameters":[{"$ref":"#/components/parameters/X-Amz-Content-Sha256"},{"$ref":"#/components/parameters/X-Amz-Date"},{"$ref":"#/components/parameters/X-Amz-Algorithm"},{"$ref":"#/components/parameters/X-Amz-Credential"},{"$ref":"#/components/parameters/X-Amz-Security-Token"},{"$ref":"#/components/parameters/X-Amz-Signature"},{"$ref":"#/components/parameters/X-Amz-SignedHeaders"}],"post":{"description":"Sends a set of messages to the AWS IoT Events system. Each message payload is transformed into the input you specify (<code>\"inputName\"</code>) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed isn't guaranteed. To guarantee ordering, you must send messages one at a time and wait for a successful response.","operationId":"BatchPutMessage","requestBody":{"content":{"application/json":{"schema":{"properties":{"messages":{"description":"The list of messages to send. Each message has the following format: <code>'{ \"messageId\": \"string\", \"inputName\": \"string\", \"payload\": \"string\"}'</code> ","items":{"$ref":"#/components/schemas/Message"},"minItems":1,"type":"array"}},"required":["messages"],"type":"object"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchPutMessageResponse"}}}},"480":{"description":"InvalidRequestException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvalidRequestException"}}}},"481":{"description":"InternalFailureException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalFailureException"}}}},"482":{"description":"ServiceUnavailableException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServiceUnavailableException"}}}},"483":{"description":"ThrottlingException","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThrottlingException"}}}}}}}},"servers":[{"description":"The AWS IoT Events Data multi-region endpoint","url":"http://data.iotevents.{region}.amazonaws.com","variables":{"region":{"default":"us-east-1","description":"The AWS region","enum":["us-east-1","us-east-2","us-west-1","us-west-2","us-gov-west-1","us-gov-east-1","ca-central-1","eu-north-1","eu-west-1","eu-west-2","eu-west-3","eu-central-1","ap-northeast-1","ap-northeast-2","ap-northeast-3","ap-southeast-1","ap-southeast-2","ap-south-1","sa-east-1"]}}},{"description":"The AWS IoT Events Data multi-region endpoint","url":"https://data.iotevents.{region}.amazonaws.com","variables":{"region":{"default":"us-east-1","description":"The AWS region","enum":["us-east-1","us-east-2","us-west-1","us-west-2","us-gov-west-1","us-gov-east-1","ca-central-1","eu-north-1","eu-west-1","eu-west-2","eu-west-3","eu-central-1","ap-northeast-1","ap-northeast-2","ap-northeast-3","ap-southeast-1","ap-southeast-2","ap-south-1","sa-east-1"]}}},{"description":"The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)","url":"http://data.iotevents.{region}.amazonaws.com.cn","variables":{"region":{"default":"cn-north-1","description":"The AWS region","enum":["cn-north-1","cn-northwest-1"]}}},{"description":"The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)","url":"https://data.iotevents.{region}.amazonaws.com.cn","variables":{"region":{"default":"cn-north-1","description":"The AWS region","enum":["cn-north-1","cn-northwest-1"]}}}],"components":{"parameters":{"X-Amz-Algorithm":{"in":"header","name":"X-Amz-Algorithm","required":false,"schema":{"type":"string"}},"X-Amz-Content-Sha256":{"in":"header","name":"X-Amz-Content-Sha256","required":false,"schema":{"type":"string"}},"X-Amz-Credential":{"in":"header","name":"X-Amz-Credential","required":false,"schema":{"type":"string"}},"X-Amz-Date":{"in":"header","name":"X-Amz-Date","required":false,"schema":{"type":"string"}},"X-Amz-Security-Token":{"in":"header","name":"X-Amz-Security-Token","required":false,"schema":{"type":"string"}},"X-Amz-Signature":{"in":"header","name":"X-Amz-Signature","required":false,"schema":{"type":"string"}},"X-Amz-SignedHeaders":{"in":"header","name":"X-Amz-SignedHeaders","required":false,"schema":{"type":"string"}}},"securitySchemes":{"hmac":{"description":"Amazon Signature authorization v4","in":"header","name":"Authorization","type":"apiKey","x-amazon-apigateway-authtype":"awsSigv4"}},"schemas":{"BatchPutMessageErrorEntries":{"items":{"$ref":"#/components/schemas/BatchPutMessageErrorEntry"},"type":"array"},"BatchPutMessageErrorEntry":{"description":"Contains information about the errors encountered.","properties":{"errorCode":{"$ref":"#/components/schemas/ErrorCode"},"errorMessage":{"$ref":"#/components/schemas/ErrorMessage"},"messageId":{"$ref":"#/components/schemas/MessageId"}},"type":"object"},"BatchPutMessageRequest":{"properties":{"messages":{"$ref":"#/components/schemas/Messages"}},"required":["messages"],"type":"object"},"BatchPutMessageResponse":{"properties":{"BatchPutMessageErrorEntries":{"$ref":"#/components/schemas/BatchPutMessageErrorEntries"}},"type":"object"},"BatchUpdateDetectorErrorEntries":{"items":{"$ref":"#/components/schemas/BatchUpdateDetectorErrorEntry"},"type":"array"},"BatchUpdateDetectorErrorEntry":{"description":"Information about the error that occured when attempting to update a detector.","properties":{"errorCode":{"$ref":"#/components/schemas/ErrorCode"},"errorMessage":{"$ref":"#/components/schemas/ErrorMessage"},"messageId":{"$ref":"#/components/schemas/MessageId"}},"type":"object"},"BatchUpdateDetectorRequest":{"properties":{"detectors":{"$ref":"#/components/schemas/UpdateDetectorRequests"}},"required":["detectors"],"type":"object"},"BatchUpdateDetectorResponse":{"properties":{"batchUpdateDetectorErrorEntries":{"$ref":"#/components/schemas/BatchUpdateDetectorErrorEntries"}},"type":"object"},"DescribeDetectorRequest":{"properties":{},"type":"object"},"DescribeDetectorResponse":{"properties":{"detector":{"$ref":"#/components/schemas/Detector"}},"type":"object"},"Detector":{"description":"Information about the detector (instance).","properties":{"creationTime":{"$ref":"#/components/schemas/Timestamp"},"detectorModelName":{"$ref":"#/components/schemas/DetectorModelName"},"detectorModelVersion":{"$ref":"#/components/schemas/DetectorModelVersion"},"keyValue":{"$ref":"#/components/schemas/KeyValue"},"lastUpdateTime":{"$ref":"#/components/schemas/Timestamp"},"state":{"$ref":"#/components/schemas/DetectorState"}},"type":"object"},"DetectorModelName":{"maxLength":128,"minLength":1,"pattern":"^[a-zA-Z0-9_-]+$","type":"string"},"DetectorModelVersion":{"maxLength":128,"minLength":1,"type":"string"},"DetectorState":{"description":"Information about the current state of the detector instance.","properties":{"stateName":{"$ref":"#/components/schemas/StateName"},"timers":{"$ref":"#/components/schemas/Timers"},"variables":{"$ref":"#/components/schemas/Variables"}},"required":["stateName","variables","timers"],"type":"object"},"DetectorStateDefinition":{"description":"The new state, variable values, and timer settings of the detector (instance).","properties":{"stateName":{"$ref":"#/components/schemas/StateName"},"timers":{"$ref":"#/components/schemas/TimerDefinitions"},"variables":{"$ref":"#/components/schemas/VariableDefinitions"}},"required":["stateName","variables","timers"],"type":"object"},"DetectorStateSummary":{"description":"Information about the detector state.","properties":{"stateName":{"$ref":"#/components/schemas/StateName"}},"type":"object"},"DetectorSummaries":{"items":{"$ref":"#/components/schemas/DetectorSummary"},"type":"array"},"DetectorSummary":{"description":"Information about the detector (instance).","properties":{"creationTime":{"$ref":"#/components/schemas/Timestamp"},"detectorModelName":{"$ref":"#/components/schemas/DetectorModelName"},"detectorModelVersion":{"$ref":"#/components/schemas/DetectorModelVersion"},"keyValue":{"$ref":"#/components/schemas/KeyValue"},"lastUpdateTime":{"$ref":"#/components/schemas/Timestamp"},"state":{"$ref":"#/components/schemas/DetectorStateSummary"}},"type":"object"},"ErrorCode":{"enum":["ResourceNotFoundException","InvalidRequestException","InternalFailureException","ServiceUnavailableException","ThrottlingException"],"type":"string"},"ErrorMessage":{"type":"string"},"InputName":{"maxLength":128,"minLength":1,"pattern":"^[a-zA-Z][a-zA-Z0-9_]*$","type":"string"},"InternalFailureException":{},"InvalidRequestException":{},"KeyValue":{"maxLength":128,"minLength":1,"pattern":"^[a-zA-Z0-9\\-_:]+$","type":"string"},"ListDetectorsRequest":{"properties":{},"type":"object"},"ListDetectorsResponse":{"properties":{"detectorSummaries":{"$ref":"#/components/schemas/DetectorSummaries"},"nextToken":{"$ref":"#/components/schemas/NextToken"}},"type":"object"},"MaxResults":{"maximum":250,"minimum":1,"type":"integer"},"Message":{"description":"Information about a message.","properties":{"inputName":{"$ref":"#/components/schemas/InputName"},"messageId":{"$ref":"#/components/schemas/MessageId"},"payload":{"$ref":"#/components/schemas/Payload"}},"required":["messageId","inputName","payload"],"type":"object"},"MessageId":{"maxLength":64,"minLength":1,"pattern":"^[a-zA-Z0-9_-]+$","type":"string"},"Messages":{"items":{"$ref":"#/components/schemas/Message"},"minItems":1,"type":"array"},"NextToken":{"type":"string"},"Payload":{"type":"string"},"ResourceNotFoundException":{},"Seconds":{"type":"integer"},"ServiceUnavailableException":{},"StateName":{"maxLength":128,"minLength":1,"type":"string"},"ThrottlingException":{},"Timer":{"description":"The current state of a timer.","properties":{"name":{"$ref":"#/components/schemas/TimerName"},"timestamp":{"$ref":"#/components/schemas/Timestamp"}},"required":["name","timestamp"],"type":"object"},"TimerDefinition":{"description":"The new setting of a timer.","properties":{"name":{"$ref":"#/components/schemas/TimerName"},"seconds":{"$ref":"#/components/schemas/Seconds"}},"required":["name","seconds"],"type":"object"},"TimerDefinitions":{"items":{"$ref":"#/components/schemas/TimerDefinition"},"type":"array"},"TimerName":{"maxLength":128,"minLength":1,"type":"string"},"Timers":{"items":{"$ref":"#/components/schemas/Timer"},"type":"array"},"Timestamp":{"format":"date-time","type":"string"},"UpdateDetectorRequest":{"description":"Information used to update the detector (instance).","properties":{"detectorModelName":{"$ref":"#/components/schemas/DetectorModelName"},"keyValue":{"$ref":"#/components/schemas/KeyValue"},"messageId":{"$ref":"#/components/schemas/MessageId"},"state":{"$ref":"#/components/schemas/DetectorStateDefinition"}},"required":["messageId","detectorModelName","state"],"type":"object"},"UpdateDetectorRequests":{"items":{"$ref":"#/components/schemas/UpdateDetectorRequest"},"minItems":1,"type":"array"},"Variable":{"description":"The current state of the variable.","properties":{"name":{"$ref":"#/components/schemas/VariableName"},"value":{"$ref":"#/components/schemas/VariableValue"}},"required":["name","value"],"type":"object"},"VariableDefinition":{"description":"The new value of the variable.","properties":{"name":{"$ref":"#/components/schemas/VariableName"},"value":{"$ref":"#/components/schemas/VariableValue"}},"required":["name","value"],"type":"object"},"VariableDefinitions":{"items":{"$ref":"#/components/schemas/VariableDefinition"},"type":"array"},"VariableName":{"maxLength":128,"minLength":1,"pattern":"^[a-zA-Z][a-zA-Z0-9_]*$","type":"string"},"VariableValue":{"maxLength":1024,"minLength":1,"type":"string"},"Variables":{"items":{"$ref":"#/components/schemas/Variable"},"type":"array"}}}}