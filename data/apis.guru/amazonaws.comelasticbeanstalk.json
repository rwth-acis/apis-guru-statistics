{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it easy for you to create, deploy, and manage scalable, fault-tolerant applications running on the Amazon Web Services cloud.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> details page. The location of the latest AWS Elastic Beanstalk WSDL is <a href=\"http://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl\">http://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>. To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that enable you to access the API, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific endpoints that AWS Elastic Beanstalk supports, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region\">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Elastic Beanstalk",
    "version": "2010-12-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticbeanstalk-2010-12-01.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "elasticbeanstalk"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/elasticbeanstalk/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#Action=AbortEnvironmentUpdate": {
      "get": {
        "description": "Cancels in-progress environment configuration update or application version deployment.",
        "operationId": "GET AbortEnvironmentUpdate",
        "parameters": [
          {
            "description": "This specifies the ID of the environment with the in-progress update that you want to cancel.",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "This specifies the name of the environment with the in-progress update that you want to cancel.",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AbortEnvironmentUpdate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "AbortEnvironmentUpdate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Cancels in-progress environment configuration update or application version deployment.",
        "operationId": "POST AbortEnvironmentUpdate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AbortEnvironmentUpdate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentId": {
                    "description": "This specifies the ID of the environment with the in-progress update that you want to cancel.",
                    "type": "string"
                  },
                  "EnvironmentName": {
                    "description": "This specifies the name of the environment with the in-progress update that you want to cancel.",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "AbortEnvironmentUpdate"
      }
    },
    "/#Action=ApplyEnvironmentManagedAction": {
      "get": {
        "description": "Applies a scheduled managed action immediately. A managed action can be applied only if its status is <code>Scheduled</code>. Get the status and action ID of a managed action with <a>DescribeEnvironmentManagedActions</a>.",
        "operationId": "GET ApplyEnvironmentManagedAction",
        "parameters": [
          {
            "description": "The name of the target environment.",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The environment ID of the target environment.",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The action ID of the scheduled managed action to execute.",
            "in": "query",
            "name": "ActionId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ApplyEnvironmentManagedAction"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ApplyEnvironmentManagedActionResult" } }
            }
          },
          "480": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          },
          "481": {
            "description": "ManagedActionInvalidStateException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ManagedActionInvalidStateException" } }
            }
          }
        },
        "x-aws-operation-name": "ApplyEnvironmentManagedAction"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Applies a scheduled managed action immediately. A managed action can be applied only if its status is <code>Scheduled</code>. Get the status and action ID of a managed action with <a>DescribeEnvironmentManagedActions</a>.",
        "operationId": "POST ApplyEnvironmentManagedAction",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ApplyEnvironmentManagedAction"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentName": { "description": "The name of the target environment.", "type": "string" },
                  "EnvironmentId": { "description": "The environment ID of the target environment.", "type": "string" },
                  "ActionId": {
                    "description": "The action ID of the scheduled managed action to execute.",
                    "type": "string"
                  }
                },
                "required": ["ActionId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ApplyEnvironmentManagedActionResult" } }
            }
          },
          "480": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          },
          "481": {
            "description": "ManagedActionInvalidStateException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ManagedActionInvalidStateException" } }
            }
          }
        },
        "x-aws-operation-name": "ApplyEnvironmentManagedAction"
      }
    },
    "/#Action=CheckDNSAvailability": {
      "get": {
        "description": "Checks if the specified CNAME is available.",
        "operationId": "GET CheckDNSAvailability",
        "parameters": [
          {
            "description": "The prefix used when this CNAME is reserved.",
            "in": "query",
            "name": "CNAMEPrefix",
            "required": true,
            "schema": { "type": "string", "minLength": 4, "maxLength": 63 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CheckDNSAvailability"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CheckDNSAvailabilityResultMessage" } }
            }
          }
        },
        "x-aws-operation-name": "CheckDNSAvailability"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Checks if the specified CNAME is available.",
        "operationId": "POST CheckDNSAvailability",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CheckDNSAvailability"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "CNAMEPrefix": {
                    "description": "The prefix used when this CNAME is reserved.",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 63
                  }
                },
                "required": ["CNAMEPrefix"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CheckDNSAvailabilityResultMessage" } }
            }
          }
        },
        "x-aws-operation-name": "CheckDNSAvailability"
      }
    },
    "/#Action=ComposeEnvironments": {
      "get": {
        "description": "Create or update a group of environments that each run a separate component of a single application. Takes a list of version labels that specify application source bundles for each of the environments to create or update. The name of each environment and other required information must be included in the source bundles in an environment manifest named <code>env.yaml</code>. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html\">Compose Environments</a> for details.",
        "operationId": "GET ComposeEnvironments",
        "parameters": [
          {
            "description": "The name of the application to which the specified source bundles belong.",
            "in": "query",
            "name": "ApplicationName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "The name of the group to which the target environments belong. Specify a group name only if the environment name defined in each target environment's manifest ends with a + (plus) character. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html\">Environment Manifest (env.yaml)</a> for details.",
            "in": "query",
            "name": "GroupName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 19 }
          },
          {
            "description": "A list of version labels, specifying one or more application source bundles that belong to the target application. Each source bundle must include an environment manifest that specifies the name of the environment and the name of the solution stack to use, and optionally can specify environment links to create.",
            "in": "query",
            "name": "VersionLabels",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ComposeEnvironments"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentDescriptionsMessage" } } }
          },
          "480": {
            "description": "TooManyEnvironmentsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyEnvironmentsException" } } }
          },
          "481": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "ComposeEnvironments"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Create or update a group of environments that each run a separate component of a single application. Takes a list of version labels that specify application source bundles for each of the environments to create or update. The name of each environment and other required information must be included in the source bundles in an environment manifest named <code>env.yaml</code>. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html\">Compose Environments</a> for details.",
        "operationId": "POST ComposeEnvironments",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ComposeEnvironments"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application to which the specified source bundles belong.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "GroupName": {
                    "description": "The name of the group to which the target environments belong. Specify a group name only if the environment name defined in each target environment's manifest ends with a + (plus) character. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html\">Environment Manifest (env.yaml)</a> for details.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 19
                  },
                  "VersionLabels": {
                    "description": "A list of version labels, specifying one or more application source bundles that belong to the target application. Each source bundle must include an environment manifest that specifies the name of the environment and the name of the solution stack to use, and optionally can specify environment links to create.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentDescriptionsMessage" } } }
          },
          "480": {
            "description": "TooManyEnvironmentsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyEnvironmentsException" } } }
          },
          "481": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "ComposeEnvironments"
      }
    },
    "/#Action=CreateApplication": {
      "get": {
        "description": " Creates an application that has one configuration template named <code>default</code> and no application versions. ",
        "operationId": "GET CreateApplication",
        "parameters": [
          {
            "description": "<p>The name of the application.</p> <p>Constraint: This name must be unique within your account. If the specified name already exists, the action returns an <code>InvalidParameterValue</code> error.</p>",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "Describes the application.",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 200 }
          },
          {
            "description": "The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.\n<p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>",
            "in": "query",
            "name": "ResourceLifecycleConfig.ServiceRole",
            "schema": { "type": "string" }
          },
          {
            "description": "The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.\nThe application version lifecycle configuration.",
            "in": "query",
            "name": "ResourceLifecycleConfig.VersionLifecycleConfig",
            "schema": { "type": "string" }
          },
          {
            "description": "<p>Specifies the tags applied to the application.</p> <p>Elastic Beanstalk applies these tags only to the application. Environments that you create in the application don't inherit the tags.</p>",
            "in": "query",
            "name": "Tags",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateApplication"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationDescriptionMessage" } } }
          },
          "480": {
            "description": "TooManyApplicationsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyApplicationsException" } } }
          }
        },
        "x-aws-operation-name": "CreateApplication"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": " Creates an application that has one configuration template named <code>default</code> and no application versions. ",
        "operationId": "POST CreateApplication",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateApplication"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "<p>The name of the application.</p> <p>Constraint: This name must be unique within your account. If the specified name already exists, the action returns an <code>InvalidParameterValue</code> error.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "Description": { "description": "Describes the application.", "type": "string", "maxLength": 200 },
                  "ResourceLifecycleConfig.ServiceRole": {
                    "description": "The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.\n<p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>",
                    "type": "string"
                  },
                  "ResourceLifecycleConfig.VersionLifecycleConfig": {
                    "description": "The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.\nThe application version lifecycle configuration.",
                    "type": "string"
                  },
                  "Tags": {
                    "description": "<p>Specifies the tags applied to the application.</p> <p>Elastic Beanstalk applies these tags only to the application. Environments that you create in the application don't inherit the tags.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ApplicationName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationDescriptionMessage" } } }
          },
          "480": {
            "description": "TooManyApplicationsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyApplicationsException" } } }
          }
        },
        "x-aws-operation-name": "CreateApplication"
      }
    },
    "/#Action=CreateApplicationVersion": {
      "get": {
        "description": "<p>Creates an application version for the specified application. You can create an application version from a source bundle in Amazon S3, a commit in AWS CodeCommit, or the output of an AWS CodeBuild build as follows:</p> <p>Specify a commit in an AWS CodeCommit repository with <code>SourceBuildInformation</code>.</p> <p>Specify a build in an AWS CodeBuild with <code>SourceBuildInformation</code> and <code>BuildConfiguration</code>.</p> <p>Specify a source bundle in S3 with <code>SourceBundle</code> </p> <p>Omit both <code>SourceBuildInformation</code> and <code>SourceBundle</code> to use the default sample application.</p> <note> <p>Once you create an application version with a specified Amazon S3 bucket and key location, you cannot change that Amazon S3 location. If you change the Amazon S3 location, you receive an exception when you attempt to launch an environment from the application version.</p> </note>",
        "operationId": "GET CreateApplicationVersion",
        "parameters": [
          {
            "description": " The name of the application. If no application is found with this name, and <code>AutoCreateApplication</code> is <code>false</code>, returns an <code>InvalidParameterValue</code> error. ",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>A label identifying this version.</p> <p>Constraint: Must be unique per application. If an application version already exists with this label for the specified application, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>",
            "in": "query",
            "name": "VersionLabel",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "Describes this version.",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 200 }
          },
          {
            "description": "Location of the source code for an application version.\n<p>The type of repository.</p> <ul> <li> <p> <code>Git</code> </p> </li> <li> <p> <code>Zip</code> </p> </li> </ul>",
            "in": "query",
            "name": "SourceBuildInformation.SourceType",
            "schema": { "type": "string" }
          },
          {
            "description": "Location of the source code for an application version.\n<p>Location where the repository is stored.</p> <ul> <li> <p> <code>CodeCommit</code> </p> </li> <li> <p> <code>S3</code> </p> </li> </ul>",
            "in": "query",
            "name": "SourceBuildInformation.SourceRepository",
            "schema": { "type": "string" }
          },
          {
            "description": "Location of the source code for an application version.\n<p>The location of the source code, as a formatted string, depending on the value of <code>SourceRepository</code> </p> <ul> <li> <p>For <code>CodeCommit</code>, the format is the repository name and commit ID, separated by a forward slash. For example, <code>my-git-repo/265cfa0cf6af46153527f55d6503ec030551f57a</code>.</p> </li> <li> <p>For <code>S3</code>, the format is the S3 bucket name and object key, separated by a forward slash. For example, <code>my-s3-bucket/Folders/my-source-file</code>.</p> </li> </ul>",
            "in": "query",
            "name": "SourceBuildInformation.SourceLocation",
            "schema": { "type": "string" }
          },
          {
            "description": "The bucket and key of an item stored in Amazon S3.\nThe Amazon S3 bucket where the data is located.",
            "in": "query",
            "name": "SourceBundle.S3Bucket",
            "schema": { "type": "string" }
          },
          {
            "description": "The bucket and key of an item stored in Amazon S3.\nThe Amazon S3 key where the data is located.",
            "in": "query",
            "name": "SourceBundle.S3Key",
            "schema": { "type": "string" }
          },
          {
            "description": "Settings for an AWS CodeBuild build.\nThe name of the artifact of the CodeBuild build. If provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>-<i>artifact-name</i>.zip. If not provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>.zip. ",
            "in": "query",
            "name": "BuildConfiguration.ArtifactName",
            "schema": { "type": "string" }
          },
          {
            "description": "Settings for an AWS CodeBuild build.\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.",
            "in": "query",
            "name": "BuildConfiguration.CodeBuildServiceRole",
            "schema": { "type": "string" }
          },
          {
            "description": "Settings for an AWS CodeBuild build.\n<p>Information about the compute resources the build project will use.</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL: Use up to 3 GB memory and 2 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM: Use up to 7 GB memory and 4 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE: Use up to 15 GB memory and 8 vCPUs for builds</code> </p> </li> </ul>",
            "in": "query",
            "name": "BuildConfiguration.ComputeType",
            "schema": { "type": "string" }
          },
          {
            "description": "Settings for an AWS CodeBuild build.\nThe ID of the Docker image to use for this build project.",
            "in": "query",
            "name": "BuildConfiguration.Image",
            "schema": { "type": "string" }
          },
          {
            "description": "Settings for an AWS CodeBuild build.\nHow long in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.",
            "in": "query",
            "name": "BuildConfiguration.TimeoutInMinutes",
            "schema": { "type": "string" }
          },
          {
            "description": "Set to <code>true</code> to create an application with the specified name if it doesn't already exist.",
            "in": "query",
            "name": "AutoCreateApplication",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "<p>Pre-processes and validates the environment manifest (<code>env.yaml</code>) and configuration files (<code>*.config</code> files in the <code>.ebextensions</code> folder) in the source bundle. Validating configuration files can identify issues prior to deploying the application version to an environment.</p> <p>You must turn processing on for application versions that you create using AWS CodeBuild or AWS CodeCommit. For application versions built from a source bundle in Amazon S3, processing is optional.</p> <note> <p>The <code>Process</code> option validates Elastic Beanstalk configuration files. It doesn't validate your application's configuration files, like proxy server or Docker configuration.</p> </note>",
            "in": "query",
            "name": "Process",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "<p>Specifies the tags applied to the application version.</p> <p>Elastic Beanstalk applies these tags only to the application version. Environments that use the application version don't inherit the tags.</p>",
            "in": "query",
            "name": "Tags",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateApplicationVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationVersionDescriptionMessage" } }
            }
          },
          "480": {
            "description": "TooManyApplicationsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyApplicationsException" } } }
          },
          "481": {
            "description": "TooManyApplicationVersionsException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyApplicationVersionsException" } }
            }
          },
          "482": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "483": {
            "description": "S3LocationNotInServiceRegionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/S3LocationNotInServiceRegionException" } }
            }
          },
          "484": {
            "description": "CodeBuildNotInServiceRegionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CodeBuildNotInServiceRegionException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateApplicationVersion"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates an application version for the specified application. You can create an application version from a source bundle in Amazon S3, a commit in AWS CodeCommit, or the output of an AWS CodeBuild build as follows:</p> <p>Specify a commit in an AWS CodeCommit repository with <code>SourceBuildInformation</code>.</p> <p>Specify a build in an AWS CodeBuild with <code>SourceBuildInformation</code> and <code>BuildConfiguration</code>.</p> <p>Specify a source bundle in S3 with <code>SourceBundle</code> </p> <p>Omit both <code>SourceBuildInformation</code> and <code>SourceBundle</code> to use the default sample application.</p> <note> <p>Once you create an application version with a specified Amazon S3 bucket and key location, you cannot change that Amazon S3 location. If you change the Amazon S3 location, you receive an exception when you attempt to launch an environment from the application version.</p> </note>",
        "operationId": "POST CreateApplicationVersion",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateApplicationVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": " The name of the application. If no application is found with this name, and <code>AutoCreateApplication</code> is <code>false</code>, returns an <code>InvalidParameterValue</code> error. ",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "VersionLabel": {
                    "description": "<p>A label identifying this version.</p> <p>Constraint: Must be unique per application. If an application version already exists with this label for the specified application, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "Description": { "description": "Describes this version.", "type": "string", "maxLength": 200 },
                  "SourceBuildInformation.SourceType": {
                    "description": "Location of the source code for an application version.\n<p>The type of repository.</p> <ul> <li> <p> <code>Git</code> </p> </li> <li> <p> <code>Zip</code> </p> </li> </ul>",
                    "type": "string"
                  },
                  "SourceBuildInformation.SourceRepository": {
                    "description": "Location of the source code for an application version.\n<p>Location where the repository is stored.</p> <ul> <li> <p> <code>CodeCommit</code> </p> </li> <li> <p> <code>S3</code> </p> </li> </ul>",
                    "type": "string"
                  },
                  "SourceBuildInformation.SourceLocation": {
                    "description": "Location of the source code for an application version.\n<p>The location of the source code, as a formatted string, depending on the value of <code>SourceRepository</code> </p> <ul> <li> <p>For <code>CodeCommit</code>, the format is the repository name and commit ID, separated by a forward slash. For example, <code>my-git-repo/265cfa0cf6af46153527f55d6503ec030551f57a</code>.</p> </li> <li> <p>For <code>S3</code>, the format is the S3 bucket name and object key, separated by a forward slash. For example, <code>my-s3-bucket/Folders/my-source-file</code>.</p> </li> </ul>",
                    "type": "string"
                  },
                  "SourceBundle.S3Bucket": {
                    "description": "The bucket and key of an item stored in Amazon S3.\nThe Amazon S3 bucket where the data is located.",
                    "type": "string"
                  },
                  "SourceBundle.S3Key": {
                    "description": "The bucket and key of an item stored in Amazon S3.\nThe Amazon S3 key where the data is located.",
                    "type": "string"
                  },
                  "BuildConfiguration.ArtifactName": {
                    "description": "Settings for an AWS CodeBuild build.\nThe name of the artifact of the CodeBuild build. If provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>-<i>artifact-name</i>.zip. If not provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>.zip. ",
                    "type": "string"
                  },
                  "BuildConfiguration.CodeBuildServiceRole": {
                    "description": "Settings for an AWS CodeBuild build.\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.",
                    "type": "string"
                  },
                  "BuildConfiguration.ComputeType": {
                    "description": "Settings for an AWS CodeBuild build.\n<p>Information about the compute resources the build project will use.</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL: Use up to 3 GB memory and 2 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM: Use up to 7 GB memory and 4 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE: Use up to 15 GB memory and 8 vCPUs for builds</code> </p> </li> </ul>",
                    "type": "string"
                  },
                  "BuildConfiguration.Image": {
                    "description": "Settings for an AWS CodeBuild build.\nThe ID of the Docker image to use for this build project.",
                    "type": "string"
                  },
                  "BuildConfiguration.TimeoutInMinutes": {
                    "description": "Settings for an AWS CodeBuild build.\nHow long in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.",
                    "type": "string"
                  },
                  "AutoCreateApplication": {
                    "description": "Set to <code>true</code> to create an application with the specified name if it doesn't already exist.",
                    "type": "boolean"
                  },
                  "Process": {
                    "description": "<p>Pre-processes and validates the environment manifest (<code>env.yaml</code>) and configuration files (<code>*.config</code> files in the <code>.ebextensions</code> folder) in the source bundle. Validating configuration files can identify issues prior to deploying the application version to an environment.</p> <p>You must turn processing on for application versions that you create using AWS CodeBuild or AWS CodeCommit. For application versions built from a source bundle in Amazon S3, processing is optional.</p> <note> <p>The <code>Process</code> option validates Elastic Beanstalk configuration files. It doesn't validate your application's configuration files, like proxy server or Docker configuration.</p> </note>",
                    "type": "boolean"
                  },
                  "Tags": {
                    "description": "<p>Specifies the tags applied to the application version.</p> <p>Elastic Beanstalk applies these tags only to the application version. Environments that use the application version don't inherit the tags.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ApplicationName", "VersionLabel"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationVersionDescriptionMessage" } }
            }
          },
          "480": {
            "description": "TooManyApplicationsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyApplicationsException" } } }
          },
          "481": {
            "description": "TooManyApplicationVersionsException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyApplicationVersionsException" } }
            }
          },
          "482": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "483": {
            "description": "S3LocationNotInServiceRegionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/S3LocationNotInServiceRegionException" } }
            }
          },
          "484": {
            "description": "CodeBuildNotInServiceRegionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CodeBuildNotInServiceRegionException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateApplicationVersion"
      }
    },
    "/#Action=CreateConfigurationTemplate": {
      "get": {
        "description": "<p>Creates a configuration template. Templates are associated with a specific application and are used to deploy different versions of the application with the same configuration settings.</p> <p>Templates aren't associated with any environment. The <code>EnvironmentName</code> response element is always <code>null</code>.</p> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> <li> <p> <a>DescribeConfigurationSettings</a> </p> </li> <li> <p> <a>ListAvailableSolutionStacks</a> </p> </li> </ul>",
        "operationId": "GET CreateConfigurationTemplate",
        "parameters": [
          {
            "description": "The name of the application to associate with this configuration template. If no application is found with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. ",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>The name of the configuration template.</p> <p>Constraint: This name must be unique per application.</p> <p>Default: If a configuration template already exists with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>",
            "in": "query",
            "name": "TemplateName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>The name of the solution stack used by this configuration. The solution stack specifies the operating system, architecture, and application server for a configuration template. It determines the set of configuration options as well as the possible and default values.</p> <p> Use <a>ListAvailableSolutionStacks</a> to obtain a list of available solution stacks. </p> <p> A solution stack name or a source configuration parameter must be specified, otherwise AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>If a solution stack name is not specified and the source configuration parameter is specified, AWS Elastic Beanstalk uses the same solution stack as the source configuration template.</p>",
            "in": "query",
            "name": "SolutionStackName",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The ARN of the custom platform.",
            "in": "query",
            "name": "PlatformArn",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "A specification for an environment configuration\nThe name of the application associated with the configuration.",
            "in": "query",
            "name": "SourceConfiguration.ApplicationName",
            "schema": { "type": "string" }
          },
          {
            "description": "A specification for an environment configuration\nThe name of the configuration template.",
            "in": "query",
            "name": "SourceConfiguration.TemplateName",
            "schema": { "type": "string" }
          },
          {
            "description": "The ID of the environment used with this configuration template.",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Describes this configuration.",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 200 }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk sets the specified configuration option to the requested value. The new value overrides the value obtained from the solution stack or the source configuration template.",
            "in": "query",
            "name": "OptionSettings",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "Specifies the tags applied to the configuration template.",
            "in": "query",
            "name": "Tags",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateConfigurationTemplate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigurationSettingsDescription" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          },
          "482": {
            "description": "TooManyConfigurationTemplatesException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyConfigurationTemplatesException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateConfigurationTemplate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a configuration template. Templates are associated with a specific application and are used to deploy different versions of the application with the same configuration settings.</p> <p>Templates aren't associated with any environment. The <code>EnvironmentName</code> response element is always <code>null</code>.</p> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> <li> <p> <a>DescribeConfigurationSettings</a> </p> </li> <li> <p> <a>ListAvailableSolutionStacks</a> </p> </li> </ul>",
        "operationId": "POST CreateConfigurationTemplate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateConfigurationTemplate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application to associate with this configuration template. If no application is found with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. ",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "TemplateName": {
                    "description": "<p>The name of the configuration template.</p> <p>Constraint: This name must be unique per application.</p> <p>Default: If a configuration template already exists with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "SolutionStackName": {
                    "description": "<p>The name of the solution stack used by this configuration. The solution stack specifies the operating system, architecture, and application server for a configuration template. It determines the set of configuration options as well as the possible and default values.</p> <p> Use <a>ListAvailableSolutionStacks</a> to obtain a list of available solution stacks. </p> <p> A solution stack name or a source configuration parameter must be specified, otherwise AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>If a solution stack name is not specified and the source configuration parameter is specified, AWS Elastic Beanstalk uses the same solution stack as the source configuration template.</p>",
                    "type": "string"
                  },
                  "PlatformArn": { "description": "The ARN of the custom platform.", "type": "string" },
                  "SourceConfiguration.ApplicationName": {
                    "description": "A specification for an environment configuration\nThe name of the application associated with the configuration.",
                    "type": "string"
                  },
                  "SourceConfiguration.TemplateName": {
                    "description": "A specification for an environment configuration\nThe name of the configuration template.",
                    "type": "string"
                  },
                  "EnvironmentId": {
                    "description": "The ID of the environment used with this configuration template.",
                    "type": "string"
                  },
                  "Description": { "description": "Describes this configuration.", "type": "string", "maxLength": 200 },
                  "OptionSettings": {
                    "description": "If specified, AWS Elastic Beanstalk sets the specified configuration option to the requested value. The new value overrides the value obtained from the solution stack or the source configuration template.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Tags": {
                    "description": "Specifies the tags applied to the configuration template.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ApplicationName", "TemplateName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigurationSettingsDescription" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          },
          "482": {
            "description": "TooManyConfigurationTemplatesException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyConfigurationTemplatesException" } }
            }
          }
        },
        "x-aws-operation-name": "CreateConfigurationTemplate"
      }
    },
    "/#Action=CreateEnvironment": {
      "get": {
        "description": "Launches an environment for the specified application using the specified configuration.",
        "operationId": "GET CreateEnvironment",
        "parameters": [
          {
            "description": "<p>The name of the application that contains the version to be deployed.</p> <p> If no application is found with this name, <code>CreateEnvironment</code> returns an <code>InvalidParameterValue</code> error. </p>",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>A unique name for the deployment environment. Used in the application URL.</p> <p>Constraint: Must be from 4 to 40 characters in length. The name can contain only letters, numbers, and hyphens. It cannot start or end with a hyphen. This name must be unique within a region in your account. If the specified name already exists in the region, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Default: If the CNAME parameter is not specified, the environment name becomes part of the CNAME, and therefore part of the visible URL for your application.</p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "The name of the group to which the target environment belongs. Specify a group name only if the environment's name is specified in an environment manifest and not with the environment name parameter. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html\">Environment Manifest (env.yaml)</a> for details.",
            "in": "query",
            "name": "GroupName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 19 }
          },
          {
            "description": "Describes this environment.",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 200 }
          },
          {
            "description": "If specified, the environment attempts to use this value as the prefix for the CNAME. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.",
            "in": "query",
            "name": "CNAMEPrefix",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 63 }
          },
          {
            "description": "Describes the properties of an environment tier\n<p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>",
            "in": "query",
            "name": "Tier.Name",
            "schema": { "type": "string" }
          },
          {
            "description": "Describes the properties of an environment tier\n<p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>",
            "in": "query",
            "name": "Tier.Type",
            "schema": { "type": "string" }
          },
          {
            "description": "Describes the properties of an environment tier\n<p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>",
            "in": "query",
            "name": "Tier.Version",
            "schema": { "type": "string" }
          },
          {
            "description": "Specifies the tags applied to resources in the environment.",
            "in": "query",
            "name": "Tags",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>The name of the application version to deploy.</p> <p> If the specified application has no associated application versions, AWS Elastic Beanstalk <code>UpdateEnvironment</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Default: If not specified, AWS Elastic Beanstalk attempts to launch the sample application in the container.</p>",
            "in": "query",
            "name": "VersionLabel",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": " The name of the configuration template to use in deployment. If no configuration template is found with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. ",
            "in": "query",
            "name": "TemplateName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>This is an alternative to specifying a template name. If specified, AWS Elastic Beanstalk sets the configuration values to the default values associated with the specified solution stack.</p> <p>For a list of current solution stacks, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html\">Elastic Beanstalk Supported Platforms</a>.</p>",
            "in": "query",
            "name": "SolutionStackName",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The ARN of the platform.",
            "in": "query",
            "name": "PlatformArn",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk sets the specified configuration options to the requested value in the configuration set for the new environment. These override the values obtained from the solution stack or the configuration template.",
            "in": "query",
            "name": "OptionSettings",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "A list of custom user-defined configuration options to remove from the configuration set for this new environment.",
            "in": "query",
            "name": "OptionsToRemove",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateEnvironment"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentDescription" } } }
          },
          "480": {
            "description": "TooManyEnvironmentsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyEnvironmentsException" } } }
          },
          "481": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "CreateEnvironment"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Launches an environment for the specified application using the specified configuration.",
        "operationId": "POST CreateEnvironment",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateEnvironment"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "<p>The name of the application that contains the version to be deployed.</p> <p> If no application is found with this name, <code>CreateEnvironment</code> returns an <code>InvalidParameterValue</code> error. </p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "EnvironmentName": {
                    "description": "<p>A unique name for the deployment environment. Used in the application URL.</p> <p>Constraint: Must be from 4 to 40 characters in length. The name can contain only letters, numbers, and hyphens. It cannot start or end with a hyphen. This name must be unique within a region in your account. If the specified name already exists in the region, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Default: If the CNAME parameter is not specified, the environment name becomes part of the CNAME, and therefore part of the visible URL for your application.</p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "GroupName": {
                    "description": "The name of the group to which the target environment belongs. Specify a group name only if the environment's name is specified in an environment manifest and not with the environment name parameter. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html\">Environment Manifest (env.yaml)</a> for details.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 19
                  },
                  "Description": { "description": "Describes this environment.", "type": "string", "maxLength": 200 },
                  "CNAMEPrefix": {
                    "description": "If specified, the environment attempts to use this value as the prefix for the CNAME. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 63
                  },
                  "Tier.Name": {
                    "description": "Describes the properties of an environment tier\n<p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>",
                    "type": "string"
                  },
                  "Tier.Type": {
                    "description": "Describes the properties of an environment tier\n<p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>",
                    "type": "string"
                  },
                  "Tier.Version": {
                    "description": "Describes the properties of an environment tier\n<p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>",
                    "type": "string"
                  },
                  "Tags": {
                    "description": "Specifies the tags applied to resources in the environment.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "VersionLabel": {
                    "description": "<p>The name of the application version to deploy.</p> <p> If the specified application has no associated application versions, AWS Elastic Beanstalk <code>UpdateEnvironment</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Default: If not specified, AWS Elastic Beanstalk attempts to launch the sample application in the container.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "TemplateName": {
                    "description": " The name of the configuration template to use in deployment. If no configuration template is found with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. ",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "SolutionStackName": {
                    "description": "<p>This is an alternative to specifying a template name. If specified, AWS Elastic Beanstalk sets the configuration values to the default values associated with the specified solution stack.</p> <p>For a list of current solution stacks, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html\">Elastic Beanstalk Supported Platforms</a>.</p>",
                    "type": "string"
                  },
                  "PlatformArn": { "description": "The ARN of the platform.", "type": "string" },
                  "OptionSettings": {
                    "description": "If specified, AWS Elastic Beanstalk sets the specified configuration options to the requested value in the configuration set for the new environment. These override the values obtained from the solution stack or the configuration template.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "OptionsToRemove": {
                    "description": "A list of custom user-defined configuration options to remove from the configuration set for this new environment.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ApplicationName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentDescription" } } }
          },
          "480": {
            "description": "TooManyEnvironmentsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyEnvironmentsException" } } }
          },
          "481": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "CreateEnvironment"
      }
    },
    "/#Action=CreatePlatformVersion": {
      "get": {
        "description": "Create a new version of your custom platform.",
        "operationId": "GET CreatePlatformVersion",
        "parameters": [
          {
            "description": "The name of your custom platform.",
            "in": "query",
            "name": "PlatformName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The number, such as 1.0.2, for the new platform version.",
            "in": "query",
            "name": "PlatformVersion",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The bucket and key of an item stored in Amazon S3.\nThe Amazon S3 bucket where the data is located.",
            "in": "query",
            "name": "PlatformDefinitionBundle.S3Bucket",
            "schema": { "type": "string" }
          },
          {
            "description": "The bucket and key of an item stored in Amazon S3.\nThe Amazon S3 key where the data is located.",
            "in": "query",
            "name": "PlatformDefinitionBundle.S3Key",
            "schema": { "type": "string" }
          },
          {
            "description": "The name of the builder environment.",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "The configuration option settings to apply to the builder environment.",
            "in": "query",
            "name": "OptionSettings",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>Specifies the tags applied to the new platform version.</p> <p>Elastic Beanstalk applies these tags only to the platform version. Environments that you create using the platform version don't inherit the tags.</p>",
            "in": "query",
            "name": "Tags",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreatePlatformVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreatePlatformVersionResult" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          },
          "482": {
            "description": "TooManyPlatformsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyPlatformsException" } } }
          }
        },
        "x-aws-operation-name": "CreatePlatformVersion"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Create a new version of your custom platform.",
        "operationId": "POST CreatePlatformVersion",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreatePlatformVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PlatformName": { "description": "The name of your custom platform.", "type": "string" },
                  "PlatformVersion": {
                    "description": "The number, such as 1.0.2, for the new platform version.",
                    "type": "string"
                  },
                  "PlatformDefinitionBundle.S3Bucket": {
                    "description": "The bucket and key of an item stored in Amazon S3.\nThe Amazon S3 bucket where the data is located.",
                    "type": "string"
                  },
                  "PlatformDefinitionBundle.S3Key": {
                    "description": "The bucket and key of an item stored in Amazon S3.\nThe Amazon S3 key where the data is located.",
                    "type": "string"
                  },
                  "EnvironmentName": {
                    "description": "The name of the builder environment.",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "OptionSettings": {
                    "description": "The configuration option settings to apply to the builder environment.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "Tags": {
                    "description": "<p>Specifies the tags applied to the new platform version.</p> <p>Elastic Beanstalk applies these tags only to the platform version. Environments that you create using the platform version don't inherit the tags.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["PlatformName", "PlatformVersion"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreatePlatformVersionResult" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          },
          "482": {
            "description": "TooManyPlatformsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyPlatformsException" } } }
          }
        },
        "x-aws-operation-name": "CreatePlatformVersion"
      }
    },
    "/#Action=CreateStorageLocation": {
      "get": {
        "description": "Creates a bucket in Amazon S3 to store application versions, logs, and other files used by Elastic Beanstalk environments. The Elastic Beanstalk console and EB CLI call this API the first time you create an environment in a region. If the storage location already exists, <code>CreateStorageLocation</code> still returns the bucket name but does not create a new bucket.",
        "operationId": "GET CreateStorageLocation",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateStorageLocation"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CreateStorageLocationResultMessage" } }
            }
          },
          "480": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          },
          "481": {
            "description": "S3SubscriptionRequiredException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/S3SubscriptionRequiredException" } } }
          },
          "482": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "CreateStorageLocation"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a bucket in Amazon S3 to store application versions, logs, and other files used by Elastic Beanstalk environments. The Elastic Beanstalk console and EB CLI call this API the first time you create an environment in a region. If the storage location already exists, <code>CreateStorageLocation</code> still returns the bucket name but does not create a new bucket.",
        "operationId": "POST CreateStorageLocation",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateStorageLocation"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CreateStorageLocationResultMessage" } }
            }
          },
          "480": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          },
          "481": {
            "description": "S3SubscriptionRequiredException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/S3SubscriptionRequiredException" } } }
          },
          "482": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "CreateStorageLocation"
      }
    },
    "/#Action=DeleteApplication": {
      "get": {
        "description": "<p>Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket.</p> <note> <p>You cannot delete an application that has a running environment.</p> </note>",
        "operationId": "GET DeleteApplication",
        "parameters": [
          {
            "description": "The name of the application to delete.",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "When set to true, running environments will be terminated before deleting the application.",
            "in": "query",
            "name": "TerminateEnvByForce",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteApplication"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "OperationInProgressException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationInProgressException" } } }
          }
        },
        "x-aws-operation-name": "DeleteApplication"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket.</p> <note> <p>You cannot delete an application that has a running environment.</p> </note>",
        "operationId": "POST DeleteApplication",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteApplication"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application to delete.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "TerminateEnvByForce": {
                    "description": "When set to true, running environments will be terminated before deleting the application.",
                    "type": "boolean"
                  }
                },
                "required": ["ApplicationName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "OperationInProgressException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationInProgressException" } } }
          }
        },
        "x-aws-operation-name": "DeleteApplication"
      }
    },
    "/#Action=DeleteApplicationVersion": {
      "get": {
        "description": "<p>Deletes the specified version from the specified application.</p> <note> <p>You cannot delete an application version that is associated with a running environment.</p> </note>",
        "operationId": "GET DeleteApplicationVersion",
        "parameters": [
          {
            "description": "The name of the application to which the version belongs.",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "The label of the version to delete.",
            "in": "query",
            "name": "VersionLabel",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "Set to <code>true</code> to delete the source bundle from your storage bucket. Otherwise, the application version is deleted only from Elastic Beanstalk and the source bundle remains in Amazon S3.",
            "in": "query",
            "name": "DeleteSourceBundle",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteApplicationVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "SourceBundleDeletionException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SourceBundleDeletionException" } } }
          },
          "481": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "482": {
            "description": "OperationInProgressException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationInProgressException" } } }
          },
          "483": {
            "description": "S3LocationNotInServiceRegionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/S3LocationNotInServiceRegionException" } }
            }
          }
        },
        "x-aws-operation-name": "DeleteApplicationVersion"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified version from the specified application.</p> <note> <p>You cannot delete an application version that is associated with a running environment.</p> </note>",
        "operationId": "POST DeleteApplicationVersion",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteApplicationVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application to which the version belongs.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "VersionLabel": {
                    "description": "The label of the version to delete.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "DeleteSourceBundle": {
                    "description": "Set to <code>true</code> to delete the source bundle from your storage bucket. Otherwise, the application version is deleted only from Elastic Beanstalk and the source bundle remains in Amazon S3.",
                    "type": "boolean"
                  }
                },
                "required": ["ApplicationName", "VersionLabel"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "SourceBundleDeletionException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SourceBundleDeletionException" } } }
          },
          "481": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "482": {
            "description": "OperationInProgressException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationInProgressException" } } }
          },
          "483": {
            "description": "S3LocationNotInServiceRegionException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/S3LocationNotInServiceRegionException" } }
            }
          }
        },
        "x-aws-operation-name": "DeleteApplicationVersion"
      }
    },
    "/#Action=DeleteConfigurationTemplate": {
      "get": {
        "description": "<p>Deletes the specified configuration template.</p> <note> <p>When you launch an environment using a configuration template, the environment gets a copy of the template. You can delete or modify the environment's copy of the template without affecting the running environment.</p> </note>",
        "operationId": "GET DeleteConfigurationTemplate",
        "parameters": [
          {
            "description": "The name of the application to delete the configuration template from.",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "The name of the configuration template to delete.",
            "in": "query",
            "name": "TemplateName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteConfigurationTemplate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "OperationInProgressException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationInProgressException" } } }
          }
        },
        "x-aws-operation-name": "DeleteConfigurationTemplate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified configuration template.</p> <note> <p>When you launch an environment using a configuration template, the environment gets a copy of the template. You can delete or modify the environment's copy of the template without affecting the running environment.</p> </note>",
        "operationId": "POST DeleteConfigurationTemplate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteConfigurationTemplate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application to delete the configuration template from.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "TemplateName": {
                    "description": "The name of the configuration template to delete.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  }
                },
                "required": ["ApplicationName", "TemplateName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "OperationInProgressException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationInProgressException" } } }
          }
        },
        "x-aws-operation-name": "DeleteConfigurationTemplate"
      }
    },
    "/#Action=DeleteEnvironmentConfiguration": {
      "get": {
        "description": "<p>Deletes the draft configuration associated with the running environment.</p> <p>Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using <a>DescribeConfigurationSettings</a> while the update is in progress or if the update fails. The <code>DeploymentStatus</code> for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action.</p>",
        "operationId": "GET DeleteEnvironmentConfiguration",
        "parameters": [
          {
            "description": "The name of the application the environment is associated with.",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "The name of the environment to delete the draft configuration from.",
            "in": "query",
            "name": "EnvironmentName",
            "required": true,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteEnvironmentConfiguration"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": { "200": { "description": "Success" } },
        "x-aws-operation-name": "DeleteEnvironmentConfiguration"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the draft configuration associated with the running environment.</p> <p>Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using <a>DescribeConfigurationSettings</a> while the update is in progress or if the update fails. The <code>DeploymentStatus</code> for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action.</p>",
        "operationId": "POST DeleteEnvironmentConfiguration",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteEnvironmentConfiguration"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application the environment is associated with.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "EnvironmentName": {
                    "description": "The name of the environment to delete the draft configuration from.",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  }
                },
                "required": ["ApplicationName", "EnvironmentName"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Success" } },
        "x-aws-operation-name": "DeleteEnvironmentConfiguration"
      }
    },
    "/#Action=DeletePlatformVersion": {
      "get": {
        "description": "Deletes the specified version of a custom platform.",
        "operationId": "GET DeletePlatformVersion",
        "parameters": [
          {
            "description": "The ARN of the version of the custom platform.",
            "in": "query",
            "name": "PlatformArn",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeletePlatformVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeletePlatformVersionResult" } } }
          },
          "480": {
            "description": "OperationInProgressException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationInProgressException" } } }
          },
          "481": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "482": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          },
          "483": {
            "description": "PlatformVersionStillReferencedException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/PlatformVersionStillReferencedException" } }
            }
          }
        },
        "x-aws-operation-name": "DeletePlatformVersion"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified version of a custom platform.",
        "operationId": "POST DeletePlatformVersion",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeletePlatformVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PlatformArn": { "description": "The ARN of the version of the custom platform.", "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeletePlatformVersionResult" } } }
          },
          "480": {
            "description": "OperationInProgressException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationInProgressException" } } }
          },
          "481": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "482": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          },
          "483": {
            "description": "PlatformVersionStillReferencedException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/PlatformVersionStillReferencedException" } }
            }
          }
        },
        "x-aws-operation-name": "DeletePlatformVersion"
      }
    },
    "/#Action=DescribeAccountAttributes": {
      "get": {
        "description": "<p>Returns attributes related to AWS Elastic Beanstalk that are associated with the calling AWS account.</p> <p>The result currently has one set of attributes—resource quotas.</p>",
        "operationId": "GET DescribeAccountAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeAccountAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeAccountAttributesResult" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "DescribeAccountAttributes"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns attributes related to AWS Elastic Beanstalk that are associated with the calling AWS account.</p> <p>The result currently has one set of attributes—resource quotas.</p>",
        "operationId": "POST DescribeAccountAttributes",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeAccountAttributes"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeAccountAttributesResult" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "DescribeAccountAttributes"
      }
    },
    "/#Action=DescribeApplicationVersions": {
      "get": {
        "description": "Retrieve a list of application versions.",
        "operationId": "GET DescribeApplicationVersions",
        "parameters": [
          {
            "description": "Specify an application name to show only application versions for that application.",
            "in": "query",
            "name": "ApplicationName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "Specify a version label to show a specific application version.",
            "in": "query",
            "name": "VersionLabels",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>For a paginated request. Specify a maximum number of application versions to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available application versions are retrieved in a single response.</p>",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "description": "<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeApplicationVersions"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationVersionDescriptionsMessage" } }
            }
          }
        },
        "x-aws-operation-name": "DescribeApplicationVersions"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieve a list of application versions.",
        "operationId": "POST DescribeApplicationVersions",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeApplicationVersions"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "Specify an application name to show only application versions for that application.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "VersionLabels": {
                    "description": "Specify a version label to show a specific application version.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "MaxRecords": {
                    "description": "<p>For a paginated request. Specify a maximum number of application versions to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available application versions are retrieved in a single response.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "NextToken": {
                    "description": "<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationVersionDescriptionsMessage" } }
            }
          }
        },
        "x-aws-operation-name": "DescribeApplicationVersions"
      }
    },
    "/#Action=DescribeApplications": {
      "get": {
        "description": "Returns the descriptions of existing applications.",
        "operationId": "GET DescribeApplications",
        "parameters": [
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to only include those with the specified names.",
            "in": "query",
            "name": "ApplicationNames",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeApplications"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationDescriptionsMessage" } } }
          }
        },
        "x-aws-operation-name": "DescribeApplications"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the descriptions of existing applications.",
        "operationId": "POST DescribeApplications",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeApplications"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationNames": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to only include those with the specified names.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationDescriptionsMessage" } } }
          }
        },
        "x-aws-operation-name": "DescribeApplications"
      }
    },
    "/#Action=DescribeConfigurationOptions": {
      "get": {
        "description": "Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed.",
        "operationId": "GET DescribeConfigurationOptions",
        "parameters": [
          {
            "description": "The name of the application associated with the configuration template or environment. Only needed if you want to describe the configuration options associated with either the configuration template or environment.",
            "in": "query",
            "name": "ApplicationName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "The name of the configuration template whose configuration options you want to describe.",
            "in": "query",
            "name": "TemplateName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "The name of the environment whose configuration options you want to describe.",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "The name of the solution stack whose configuration options you want to describe.",
            "in": "query",
            "name": "SolutionStackName",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The ARN of the custom platform.",
            "in": "query",
            "name": "PlatformArn",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "If specified, restricts the descriptions to only the specified options.",
            "in": "query",
            "name": "Options",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeConfigurationOptions"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigurationOptionsDescription" } } }
          },
          "480": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          }
        },
        "x-aws-operation-name": "DescribeConfigurationOptions"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed.",
        "operationId": "POST DescribeConfigurationOptions",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeConfigurationOptions"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application associated with the configuration template or environment. Only needed if you want to describe the configuration options associated with either the configuration template or environment.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "TemplateName": {
                    "description": "The name of the configuration template whose configuration options you want to describe.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "EnvironmentName": {
                    "description": "The name of the environment whose configuration options you want to describe.",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "SolutionStackName": {
                    "description": "The name of the solution stack whose configuration options you want to describe.",
                    "type": "string"
                  },
                  "PlatformArn": { "description": "The ARN of the custom platform.", "type": "string" },
                  "Options": {
                    "description": "If specified, restricts the descriptions to only the specified options.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigurationOptionsDescription" } } }
          },
          "480": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          }
        },
        "x-aws-operation-name": "DescribeConfigurationOptions"
      }
    },
    "/#Action=DescribeConfigurationSettings": {
      "get": {
        "description": "<p>Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.</p> <p>When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.</p> <p>Related Topics</p> <ul> <li> <p> <a>DeleteEnvironmentConfiguration</a> </p> </li> </ul>",
        "operationId": "GET DescribeConfigurationSettings",
        "parameters": [
          {
            "description": "The application for the environment or configuration template.",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>The name of the configuration template to describe.</p> <p> Conditional: You must specify either this parameter or an EnvironmentName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "TemplateName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>The name of the environment to describe.</p> <p> Condition: You must specify either this or a TemplateName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeConfigurationSettings"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigurationSettingsDescriptions" } }
            }
          },
          "480": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          }
        },
        "x-aws-operation-name": "DescribeConfigurationSettings"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.</p> <p>When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.</p> <p>Related Topics</p> <ul> <li> <p> <a>DeleteEnvironmentConfiguration</a> </p> </li> </ul>",
        "operationId": "POST DescribeConfigurationSettings",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeConfigurationSettings"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The application for the environment or configuration template.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "TemplateName": {
                    "description": "<p>The name of the configuration template to describe.</p> <p> Conditional: You must specify either this parameter or an EnvironmentName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "EnvironmentName": {
                    "description": "<p>The name of the environment to describe.</p> <p> Condition: You must specify either this or a TemplateName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  }
                },
                "required": ["ApplicationName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigurationSettingsDescriptions" } }
            }
          },
          "480": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          }
        },
        "x-aws-operation-name": "DescribeConfigurationSettings"
      }
    },
    "/#Action=DescribeEnvironmentHealth": {
      "get": {
        "description": "Returns information about the overall health of the specified environment. The <b>DescribeEnvironmentHealth</b> operation is only available with AWS Elastic Beanstalk Enhanced Health.",
        "operationId": "GET DescribeEnvironmentHealth",
        "parameters": [
          {
            "description": "<p>Specify the environment by name.</p> <p>You must specify either this or an EnvironmentName, or both.</p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "<p>Specify the environment by ID.</p> <p>You must specify either this or an EnvironmentName, or both.</p>",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Specify the response elements to return. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns the name of the environment.",
            "in": "query",
            "name": "AttributeNames",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEnvironmentHealth"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeEnvironmentHealthResult" } } }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "DescribeEnvironmentHealth"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about the overall health of the specified environment. The <b>DescribeEnvironmentHealth</b> operation is only available with AWS Elastic Beanstalk Enhanced Health.",
        "operationId": "POST DescribeEnvironmentHealth",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEnvironmentHealth"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentName": {
                    "description": "<p>Specify the environment by name.</p> <p>You must specify either this or an EnvironmentName, or both.</p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "EnvironmentId": {
                    "description": "<p>Specify the environment by ID.</p> <p>You must specify either this or an EnvironmentName, or both.</p>",
                    "type": "string"
                  },
                  "AttributeNames": {
                    "description": "Specify the response elements to return. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns the name of the environment.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeEnvironmentHealthResult" } } }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "DescribeEnvironmentHealth"
      }
    },
    "/#Action=DescribeEnvironmentManagedActionHistory": {
      "get": {
        "description": "Lists an environment's completed and failed managed actions.",
        "operationId": "GET DescribeEnvironmentManagedActionHistory",
        "parameters": [
          {
            "description": "The environment ID of the target environment.",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The name of the target environment.",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "The pagination token returned by a previous request.",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The maximum number of items to return for a single request.",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEnvironmentManagedActionHistory"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeEnvironmentManagedActionHistoryResult" } }
            }
          },
          "480": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "DescribeEnvironmentManagedActionHistory"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists an environment's completed and failed managed actions.",
        "operationId": "POST DescribeEnvironmentManagedActionHistory",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEnvironmentManagedActionHistory"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentId": { "description": "The environment ID of the target environment.", "type": "string" },
                  "EnvironmentName": {
                    "description": "The name of the target environment.",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "NextToken": {
                    "description": "The pagination token returned by a previous request.",
                    "type": "string"
                  },
                  "MaxItems": {
                    "description": "The maximum number of items to return for a single request.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeEnvironmentManagedActionHistoryResult" } }
            }
          },
          "480": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "DescribeEnvironmentManagedActionHistory"
      }
    },
    "/#Action=DescribeEnvironmentManagedActions": {
      "get": {
        "description": "Lists an environment's upcoming and in-progress managed actions.",
        "operationId": "GET DescribeEnvironmentManagedActions",
        "parameters": [
          {
            "description": "The name of the target environment.",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The environment ID of the target environment.",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "To show only actions with a particular status, specify a status.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": { "type": "string", "enum": ["Scheduled", "Pending", "Running", "Unknown"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEnvironmentManagedActions"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeEnvironmentManagedActionsResult" } }
            }
          },
          "480": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "DescribeEnvironmentManagedActions"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists an environment's upcoming and in-progress managed actions.",
        "operationId": "POST DescribeEnvironmentManagedActions",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEnvironmentManagedActions"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentName": { "description": "The name of the target environment.", "type": "string" },
                  "EnvironmentId": { "description": "The environment ID of the target environment.", "type": "string" },
                  "Status": {
                    "description": "To show only actions with a particular status, specify a status.",
                    "type": "string",
                    "enum": ["Scheduled", "Pending", "Running", "Unknown"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeEnvironmentManagedActionsResult" } }
            }
          },
          "480": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "DescribeEnvironmentManagedActions"
      }
    },
    "/#Action=DescribeEnvironmentResources": {
      "get": {
        "description": "Returns AWS resources for this environment.",
        "operationId": "GET DescribeEnvironmentResources",
        "parameters": [
          {
            "description": "<p>The ID of the environment to retrieve AWS resource usage data.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The name of the environment to retrieve AWS resource usage data.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEnvironmentResources"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentResourceDescriptionsMessage" } }
            }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "DescribeEnvironmentResources"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns AWS resources for this environment.",
        "operationId": "POST DescribeEnvironmentResources",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEnvironmentResources"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentId": {
                    "description": "<p>The ID of the environment to retrieve AWS resource usage data.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string"
                  },
                  "EnvironmentName": {
                    "description": "<p>The name of the environment to retrieve AWS resource usage data.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentResourceDescriptionsMessage" } }
            }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "DescribeEnvironmentResources"
      }
    },
    "/#Action=DescribeEnvironments": {
      "get": {
        "description": "Returns descriptions for existing environments.",
        "operationId": "GET DescribeEnvironments",
        "parameters": [
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application.",
            "in": "query",
            "name": "ApplicationName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version.",
            "in": "query",
            "name": "VersionLabel",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs.",
            "in": "query",
            "name": "EnvironmentIds",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names.",
            "in": "query",
            "name": "EnvironmentNames",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>Indicates whether to include deleted environments:</p> <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.</p> <p> <code>false</code>: Do not include deleted environments.</p>",
            "in": "query",
            "name": "IncludeDeleted",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": " If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed. ",
            "in": "query",
            "name": "IncludedDeletedBackTo",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "description": "<p>For a paginated request. Specify a maximum number of environments to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available environments are retrieved in a single response.</p>",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "description": "<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEnvironments"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentDescriptionsMessage" } } }
          }
        },
        "x-aws-operation-name": "DescribeEnvironments"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns descriptions for existing environments.",
        "operationId": "POST DescribeEnvironments",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEnvironments"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "VersionLabel": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "EnvironmentIds": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "EnvironmentNames": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "IncludeDeleted": {
                    "description": "<p>Indicates whether to include deleted environments:</p> <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.</p> <p> <code>false</code>: Do not include deleted environments.</p>",
                    "type": "boolean"
                  },
                  "IncludedDeletedBackTo": {
                    "description": " If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed. ",
                    "type": "string",
                    "format": "date-time"
                  },
                  "MaxRecords": {
                    "description": "<p>For a paginated request. Specify a maximum number of environments to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available environments are retrieved in a single response.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "NextToken": {
                    "description": "<p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentDescriptionsMessage" } } }
          }
        },
        "x-aws-operation-name": "DescribeEnvironments"
      }
    },
    "/#Action=DescribeEvents": {
      "get": {
        "description": "<p>Returns list of event descriptions matching criteria up to the last 6 weeks.</p> <note> <p>This action returns the most recent 1,000 events from the specified <code>NextToken</code>.</p> </note>",
        "operationId": "GET DescribeEvents",
        "parameters": [
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those associated with this application.",
            "in": "query",
            "name": "ApplicationName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this application version.",
            "in": "query",
            "name": "VersionLabel",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that are associated with this environment configuration.",
            "in": "query",
            "name": "TemplateName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "The ARN of the version of the custom platform.",
            "in": "query",
            "name": "PlatformArn",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the described events to include only those associated with this request ID.",
            "in": "query",
            "name": "RequestId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "If specified, limits the events returned from this call to include only those with the specified severity or higher.",
            "in": "query",
            "name": "Severity",
            "required": false,
            "schema": { "type": "string", "enum": ["TRACE", "DEBUG", "INFO", "WARN", "ERROR", "FATAL"] }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur on or after this time.",
            "in": "query",
            "name": "StartTime",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "description": " If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur up to, but not including, the <code>EndTime</code>. ",
            "in": "query",
            "name": "EndTime",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "description": "Specifies the maximum number of events that can be returned, beginning with the most recent event.",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "description": "Pagination token. If specified, the events return the next batch of results.",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEvents"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EventDescriptionsMessage" } } }
          }
        },
        "x-aws-operation-name": "DescribeEvents"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns list of event descriptions matching criteria up to the last 6 weeks.</p> <note> <p>This action returns the most recent 1,000 events from the specified <code>NextToken</code>.</p> </note>",
        "operationId": "POST DescribeEvents",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeEvents"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those associated with this application.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "VersionLabel": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this application version.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "TemplateName": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that are associated with this environment configuration.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "EnvironmentId": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.",
                    "type": "string"
                  },
                  "EnvironmentName": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "PlatformArn": { "description": "The ARN of the version of the custom platform.", "type": "string" },
                  "RequestId": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the described events to include only those associated with this request ID.",
                    "type": "string"
                  },
                  "Severity": {
                    "description": "If specified, limits the events returned from this call to include only those with the specified severity or higher.",
                    "type": "string",
                    "enum": ["TRACE", "DEBUG", "INFO", "WARN", "ERROR", "FATAL"]
                  },
                  "StartTime": {
                    "description": "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur on or after this time.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "EndTime": {
                    "description": " If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur up to, but not including, the <code>EndTime</code>. ",
                    "type": "string",
                    "format": "date-time"
                  },
                  "MaxRecords": {
                    "description": "Specifies the maximum number of events that can be returned, beginning with the most recent event.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "NextToken": {
                    "description": "Pagination token. If specified, the events return the next batch of results.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EventDescriptionsMessage" } } }
          }
        },
        "x-aws-operation-name": "DescribeEvents"
      }
    },
    "/#Action=DescribeInstancesHealth": {
      "get": {
        "description": "Retrieves detailed information about the health of instances in your AWS Elastic Beanstalk. This operation requires <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html\">enhanced health reporting</a>.",
        "operationId": "GET DescribeInstancesHealth",
        "parameters": [
          {
            "description": "Specify the AWS Elastic Beanstalk environment by name.",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "Specify the AWS Elastic Beanstalk environment by ID.",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Specifies the response elements you wish to receive. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns a list of instances.",
            "in": "query",
            "name": "AttributeNames",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "Specify the pagination token returned by a previous call.",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeInstancesHealth"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeInstancesHealthResult" } } }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "DescribeInstancesHealth"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves detailed information about the health of instances in your AWS Elastic Beanstalk. This operation requires <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html\">enhanced health reporting</a>.",
        "operationId": "POST DescribeInstancesHealth",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribeInstancesHealth"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentName": {
                    "description": "Specify the AWS Elastic Beanstalk environment by name.",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "EnvironmentId": {
                    "description": "Specify the AWS Elastic Beanstalk environment by ID.",
                    "type": "string"
                  },
                  "AttributeNames": {
                    "description": "Specifies the response elements you wish to receive. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns a list of instances.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "NextToken": {
                    "description": "Specify the pagination token returned by a previous call.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribeInstancesHealthResult" } } }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "DescribeInstancesHealth"
      }
    },
    "/#Action=DescribePlatformVersion": {
      "get": {
        "description": "Describes the version of the platform.",
        "operationId": "GET DescribePlatformVersion",
        "parameters": [
          {
            "description": "The ARN of the version of the platform.",
            "in": "query",
            "name": "PlatformArn",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribePlatformVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribePlatformVersionResult" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "DescribePlatformVersion"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the version of the platform.",
        "operationId": "POST DescribePlatformVersion",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DescribePlatformVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PlatformArn": { "description": "The ARN of the version of the platform.", "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DescribePlatformVersionResult" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "DescribePlatformVersion"
      }
    },
    "/#Action=ListAvailableSolutionStacks": {
      "get": {
        "description": "Returns a list of the available solution stack names, with the public version first and then in reverse chronological order.",
        "operationId": "GET ListAvailableSolutionStacks",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAvailableSolutionStacks"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListAvailableSolutionStacksResultMessage" } }
            }
          }
        },
        "x-aws-operation-name": "ListAvailableSolutionStacks"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of the available solution stack names, with the public version first and then in reverse chronological order.",
        "operationId": "POST ListAvailableSolutionStacks",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAvailableSolutionStacks"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListAvailableSolutionStacksResultMessage" } }
            }
          }
        },
        "x-aws-operation-name": "ListAvailableSolutionStacks"
      }
    },
    "/#Action=ListPlatformVersions": {
      "get": {
        "description": "Lists the available platforms.",
        "operationId": "GET ListPlatformVersions",
        "parameters": [
          {
            "description": "List only the platforms where the platform member value relates to one of the supplied values.",
            "in": "query",
            "name": "Filters",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "The maximum number of platform values returned in one call.",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "schema": { "type": "integer", "minimum": 1 }
          },
          {
            "description": "The starting index into the remaining list of platforms. Use the <code>NextToken</code> value from a previous <code>ListPlatformVersion</code> call.",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListPlatformVersions"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListPlatformVersionsResult" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "ListPlatformVersions"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the available platforms.",
        "operationId": "POST ListPlatformVersions",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListPlatformVersions"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Filters": {
                    "description": "List only the platforms where the platform member value relates to one of the supplied values.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "MaxRecords": {
                    "description": "The maximum number of platform values returned in one call.",
                    "type": "integer",
                    "minimum": 1
                  },
                  "NextToken": {
                    "description": "The starting index into the remaining list of platforms. Use the <code>NextToken</code> value from a previous <code>ListPlatformVersion</code> call.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListPlatformVersionsResult" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "ElasticBeanstalkServiceException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ElasticBeanstalkServiceException" } } }
          }
        },
        "x-aws-operation-name": "ListPlatformVersions"
      }
    },
    "/#Action=ListTagsForResource": {
      "get": {
        "description": "<p>Returns the tags applied to an AWS Elastic Beanstalk resource. The response contains a list of tag key-value pairs.</p> <p>Currently, Elastic Beanstalk only supports tagging of Elastic Beanstalk environments. For details about environment tagging, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.tagging.html\">Tagging Resources in Your Elastic Beanstalk Environment</a>.</p>",
        "operationId": "GET ListTagsForResource",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN) of the resouce for which a tag list is requested.</p> <p>Must be the ARN of an Elastic Beanstalk environment.</p>",
            "in": "query",
            "name": "ResourceArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListTagsForResource"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceTagsDescriptionMessage" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } } }
          },
          "482": {
            "description": "ResourceTypeNotSupportedException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceTypeNotSupportedException" } }
            }
          }
        },
        "x-aws-operation-name": "ListTagsForResource"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the tags applied to an AWS Elastic Beanstalk resource. The response contains a list of tag key-value pairs.</p> <p>Currently, Elastic Beanstalk only supports tagging of Elastic Beanstalk environments. For details about environment tagging, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.tagging.html\">Tagging Resources in Your Elastic Beanstalk Environment</a>.</p>",
        "operationId": "POST ListTagsForResource",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListTagsForResource"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ResourceArn": {
                    "description": "<p>The Amazon Resource Name (ARN) of the resouce for which a tag list is requested.</p> <p>Must be the ARN of an Elastic Beanstalk environment.</p>",
                    "type": "string"
                  }
                },
                "required": ["ResourceArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceTagsDescriptionMessage" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } } }
          },
          "482": {
            "description": "ResourceTypeNotSupportedException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceTypeNotSupportedException" } }
            }
          }
        },
        "x-aws-operation-name": "ListTagsForResource"
      }
    },
    "/#Action=RebuildEnvironment": {
      "get": {
        "description": "Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart.",
        "operationId": "GET RebuildEnvironment",
        "parameters": [
          {
            "description": "<p>The ID of the environment to rebuild.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The name of the environment to rebuild.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RebuildEnvironment"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "RebuildEnvironment"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart.",
        "operationId": "POST RebuildEnvironment",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RebuildEnvironment"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentId": {
                    "description": "<p>The ID of the environment to rebuild.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string"
                  },
                  "EnvironmentName": {
                    "description": "<p>The name of the environment to rebuild.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "RebuildEnvironment"
      }
    },
    "/#Action=RequestEnvironmentInfo": {
      "get": {
        "description": "<p>Initiates a request to compile the specified type of information of the deployed environment.</p> <p> Setting the <code>InfoType</code> to <code>tail</code> compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. </p> <p> Setting the <code>InfoType</code> to <code>bundle</code> compresses the application server log files for every Amazon EC2 instance into a <code>.zip</code> file. Legacy and .NET containers do not support bundle logs. </p> <p> Use <a>RetrieveEnvironmentInfo</a> to obtain the set of logs. </p> <p>Related Topics</p> <ul> <li> <p> <a>RetrieveEnvironmentInfo</a> </p> </li> </ul>",
        "operationId": "GET RequestEnvironmentInfo",
        "parameters": [
          {
            "description": "<p>The ID of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The name of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "The type of information to request.",
            "in": "query",
            "name": "InfoType",
            "required": true,
            "schema": { "type": "string", "enum": ["tail", "bundle"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RequestEnvironmentInfo"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": { "200": { "description": "Success" } },
        "x-aws-operation-name": "RequestEnvironmentInfo"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Initiates a request to compile the specified type of information of the deployed environment.</p> <p> Setting the <code>InfoType</code> to <code>tail</code> compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. </p> <p> Setting the <code>InfoType</code> to <code>bundle</code> compresses the application server log files for every Amazon EC2 instance into a <code>.zip</code> file. Legacy and .NET containers do not support bundle logs. </p> <p> Use <a>RetrieveEnvironmentInfo</a> to obtain the set of logs. </p> <p>Related Topics</p> <ul> <li> <p> <a>RetrieveEnvironmentInfo</a> </p> </li> </ul>",
        "operationId": "POST RequestEnvironmentInfo",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RequestEnvironmentInfo"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentId": {
                    "description": "<p>The ID of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string"
                  },
                  "EnvironmentName": {
                    "description": "<p>The name of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "InfoType": {
                    "description": "The type of information to request.",
                    "type": "string",
                    "enum": ["tail", "bundle"]
                  }
                },
                "required": ["InfoType"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Success" } },
        "x-aws-operation-name": "RequestEnvironmentInfo"
      }
    },
    "/#Action=RestartAppServer": {
      "get": {
        "description": "Causes the environment to restart the application container server running on each Amazon EC2 instance.",
        "operationId": "GET RestartAppServer",
        "parameters": [
          {
            "description": "<p>The ID of the environment to restart the server for.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The name of the environment to restart the server for.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RestartAppServer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": { "200": { "description": "Success" } },
        "x-aws-operation-name": "RestartAppServer"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Causes the environment to restart the application container server running on each Amazon EC2 instance.",
        "operationId": "POST RestartAppServer",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RestartAppServer"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentId": {
                    "description": "<p>The ID of the environment to restart the server for.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string"
                  },
                  "EnvironmentName": {
                    "description": "<p>The name of the environment to restart the server for.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  }
                }
              }
            }
          }
        },
        "responses": { "200": { "description": "Success" } },
        "x-aws-operation-name": "RestartAppServer"
      }
    },
    "/#Action=RetrieveEnvironmentInfo": {
      "get": {
        "description": "<p>Retrieves the compiled information from a <a>RequestEnvironmentInfo</a> request.</p> <p>Related Topics</p> <ul> <li> <p> <a>RequestEnvironmentInfo</a> </p> </li> </ul>",
        "operationId": "GET RetrieveEnvironmentInfo",
        "parameters": [
          {
            "description": "<p>The ID of the data's environment.</p> <p>If no such environment is found, returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error.</p>",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The name of the data's environment.</p> <p> If no such environment is found, returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "The type of information to retrieve.",
            "in": "query",
            "name": "InfoType",
            "required": true,
            "schema": { "type": "string", "enum": ["tail", "bundle"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RetrieveEnvironmentInfo"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/RetrieveEnvironmentInfoResultMessage" } }
            }
          }
        },
        "x-aws-operation-name": "RetrieveEnvironmentInfo"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves the compiled information from a <a>RequestEnvironmentInfo</a> request.</p> <p>Related Topics</p> <ul> <li> <p> <a>RequestEnvironmentInfo</a> </p> </li> </ul>",
        "operationId": "POST RetrieveEnvironmentInfo",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RetrieveEnvironmentInfo"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentId": {
                    "description": "<p>The ID of the data's environment.</p> <p>If no such environment is found, returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error.</p>",
                    "type": "string"
                  },
                  "EnvironmentName": {
                    "description": "<p>The name of the data's environment.</p> <p> If no such environment is found, returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "InfoType": {
                    "description": "The type of information to retrieve.",
                    "type": "string",
                    "enum": ["tail", "bundle"]
                  }
                },
                "required": ["InfoType"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/RetrieveEnvironmentInfoResultMessage" } }
            }
          }
        },
        "x-aws-operation-name": "RetrieveEnvironmentInfo"
      }
    },
    "/#Action=SwapEnvironmentCNAMEs": {
      "get": {
        "description": "Swaps the CNAMEs of two environments.",
        "operationId": "GET SwapEnvironmentCNAMEs",
        "parameters": [
          {
            "description": "<p>The ID of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentId</code>, you must specify the <code>DestinationEnvironmentId</code>. </p>",
            "in": "query",
            "name": "SourceEnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The name of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentName</code>, you must specify the <code>DestinationEnvironmentName</code>. </p>",
            "in": "query",
            "name": "SourceEnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "<p>The ID of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentId</code> with the <code>DestinationEnvironmentId</code>. </p>",
            "in": "query",
            "name": "DestinationEnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The name of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentName</code> with the <code>DestinationEnvironmentName</code>. </p>",
            "in": "query",
            "name": "DestinationEnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SwapEnvironmentCNAMEs"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": { "200": { "description": "Success" } },
        "x-aws-operation-name": "SwapEnvironmentCNAMEs"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Swaps the CNAMEs of two environments.",
        "operationId": "POST SwapEnvironmentCNAMEs",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SwapEnvironmentCNAMEs"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "SourceEnvironmentId": {
                    "description": "<p>The ID of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentId</code>, you must specify the <code>DestinationEnvironmentId</code>. </p>",
                    "type": "string"
                  },
                  "SourceEnvironmentName": {
                    "description": "<p>The name of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentName</code>, you must specify the <code>DestinationEnvironmentName</code>. </p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "DestinationEnvironmentId": {
                    "description": "<p>The ID of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentId</code> with the <code>DestinationEnvironmentId</code>. </p>",
                    "type": "string"
                  },
                  "DestinationEnvironmentName": {
                    "description": "<p>The name of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentName</code> with the <code>DestinationEnvironmentName</code>. </p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  }
                }
              }
            }
          }
        },
        "responses": { "200": { "description": "Success" } },
        "x-aws-operation-name": "SwapEnvironmentCNAMEs"
      }
    },
    "/#Action=TerminateEnvironment": {
      "get": {
        "description": "Terminates the specified environment.",
        "operationId": "GET TerminateEnvironment",
        "parameters": [
          {
            "description": "<p>The ID of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The name of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "<p>Indicates whether the associated AWS resources should shut down when the environment is terminated:</p> <ul> <li> <p> <code>true</code>: The specified environment as well as the associated AWS resources, such as Auto Scaling group and LoadBalancer, are terminated.</p> </li> <li> <p> <code>false</code>: AWS Elastic Beanstalk resource management is removed from the environment, but the AWS resources continue to operate.</p> </li> </ul> <p> For more information, see the <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/ug/\"> AWS Elastic Beanstalk User Guide. </a> </p> <p> Default: <code>true</code> </p> <p> Valid Values: <code>true</code> | <code>false</code> </p>",
            "in": "query",
            "name": "TerminateResources",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "Terminates the target environment even if another environment in the same group is dependent on it.",
            "in": "query",
            "name": "ForceTerminate",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["TerminateEnvironment"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentDescription" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "TerminateEnvironment"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Terminates the specified environment.",
        "operationId": "POST TerminateEnvironment",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["TerminateEnvironment"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EnvironmentId": {
                    "description": "<p>The ID of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string"
                  },
                  "EnvironmentName": {
                    "description": "<p>The name of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "TerminateResources": {
                    "description": "<p>Indicates whether the associated AWS resources should shut down when the environment is terminated:</p> <ul> <li> <p> <code>true</code>: The specified environment as well as the associated AWS resources, such as Auto Scaling group and LoadBalancer, are terminated.</p> </li> <li> <p> <code>false</code>: AWS Elastic Beanstalk resource management is removed from the environment, but the AWS resources continue to operate.</p> </li> </ul> <p> For more information, see the <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/ug/\"> AWS Elastic Beanstalk User Guide. </a> </p> <p> Default: <code>true</code> </p> <p> Valid Values: <code>true</code> | <code>false</code> </p>",
                    "type": "boolean"
                  },
                  "ForceTerminate": {
                    "description": "Terminates the target environment even if another environment in the same group is dependent on it.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentDescription" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "TerminateEnvironment"
      }
    },
    "/#Action=UpdateApplication": {
      "get": {
        "description": "<p>Updates the specified application to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear these properties, specify an empty string.</p> </note>",
        "operationId": "GET UpdateApplication",
        "parameters": [
          {
            "description": "The name of the application to update. If no such application is found, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. ",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>A new description for the application.</p> <p>Default: If not specified, AWS Elastic Beanstalk does not update the description.</p>",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 200 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateApplication"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationDescriptionMessage" } } }
          }
        },
        "x-aws-operation-name": "UpdateApplication"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the specified application to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear these properties, specify an empty string.</p> </note>",
        "operationId": "POST UpdateApplication",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateApplication"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application to update. If no such application is found, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. ",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "Description": {
                    "description": "<p>A new description for the application.</p> <p>Default: If not specified, AWS Elastic Beanstalk does not update the description.</p>",
                    "type": "string",
                    "maxLength": 200
                  }
                },
                "required": ["ApplicationName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationDescriptionMessage" } } }
          }
        },
        "x-aws-operation-name": "UpdateApplication"
      }
    },
    "/#Action=UpdateApplicationResourceLifecycle": {
      "get": {
        "description": "Modifies lifecycle settings for an application.",
        "operationId": "GET UpdateApplicationResourceLifecycle",
        "parameters": [
          {
            "description": "The name of the application.",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.\n<p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>",
            "in": "query",
            "name": "ResourceLifecycleConfig.ServiceRole",
            "schema": { "type": "string" }
          },
          {
            "description": "The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.\nThe application version lifecycle configuration.",
            "in": "query",
            "name": "ResourceLifecycleConfig.VersionLifecycleConfig",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateApplicationResourceLifecycle"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": { "$ref": "#/components/schemas/ApplicationResourceLifecycleDescriptionMessage" }
              }
            }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "UpdateApplicationResourceLifecycle"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Modifies lifecycle settings for an application.",
        "operationId": "POST UpdateApplicationResourceLifecycle",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateApplicationResourceLifecycle"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "ResourceLifecycleConfig.ServiceRole": {
                    "description": "The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.\n<p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>",
                    "type": "string"
                  },
                  "ResourceLifecycleConfig.VersionLifecycleConfig": {
                    "description": "The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.\nThe application version lifecycle configuration.",
                    "type": "string"
                  }
                },
                "required": ["ApplicationName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": { "$ref": "#/components/schemas/ApplicationResourceLifecycleDescriptionMessage" }
              }
            }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          }
        },
        "x-aws-operation-name": "UpdateApplicationResourceLifecycle"
      }
    },
    "/#Action=UpdateApplicationVersion": {
      "get": {
        "description": "<p>Updates the specified application version to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear properties, specify an empty string.</p> </note>",
        "operationId": "GET UpdateApplicationVersion",
        "parameters": [
          {
            "description": "<p>The name of the application associated with this version.</p> <p> If no application is found with this name, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error.</p>",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>The name of the version to update.</p> <p>If no application version is found with this label, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. </p>",
            "in": "query",
            "name": "VersionLabel",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "A new description for this version.",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 200 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateApplicationVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationVersionDescriptionMessage" } }
            }
          }
        },
        "x-aws-operation-name": "UpdateApplicationVersion"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the specified application version to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear properties, specify an empty string.</p> </note>",
        "operationId": "POST UpdateApplicationVersion",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateApplicationVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "<p>The name of the application associated with this version.</p> <p> If no application is found with this name, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "VersionLabel": {
                    "description": "<p>The name of the version to update.</p> <p>If no application version is found with this label, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. </p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "Description": {
                    "description": "A new description for this version.",
                    "type": "string",
                    "maxLength": 200
                  }
                },
                "required": ["ApplicationName", "VersionLabel"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ApplicationVersionDescriptionMessage" } }
            }
          }
        },
        "x-aws-operation-name": "UpdateApplicationVersion"
      }
    },
    "/#Action=UpdateConfigurationTemplate": {
      "get": {
        "description": "<p>Updates the specified configuration template to have the specified properties or configuration option values.</p> <note> <p>If a property (for example, <code>ApplicationName</code>) is not provided, its value remains unchanged. To clear such properties, specify an empty string.</p> </note> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> </ul>",
        "operationId": "GET UpdateConfigurationTemplate",
        "parameters": [
          {
            "description": "<p>The name of the application associated with the configuration template to update.</p> <p> If no application is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>The name of the configuration template to update.</p> <p> If no configuration template is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>",
            "in": "query",
            "name": "TemplateName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "A new description for the configuration.",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 200 }
          },
          {
            "description": "A list of configuration option settings to update with the new specified option value.",
            "in": "query",
            "name": "OptionSettings",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>A list of configuration options to remove from the configuration set.</p> <p> Constraint: You can remove only <code>UserDefined</code> configuration options. </p>",
            "in": "query",
            "name": "OptionsToRemove",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateConfigurationTemplate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigurationSettingsDescription" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          }
        },
        "x-aws-operation-name": "UpdateConfigurationTemplate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the specified configuration template to have the specified properties or configuration option values.</p> <note> <p>If a property (for example, <code>ApplicationName</code>) is not provided, its value remains unchanged. To clear such properties, specify an empty string.</p> </note> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> </ul>",
        "operationId": "POST UpdateConfigurationTemplate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateConfigurationTemplate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "<p>The name of the application associated with the configuration template to update.</p> <p> If no application is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "TemplateName": {
                    "description": "<p>The name of the configuration template to update.</p> <p> If no configuration template is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "Description": {
                    "description": "A new description for the configuration.",
                    "type": "string",
                    "maxLength": 200
                  },
                  "OptionSettings": {
                    "description": "A list of configuration option settings to update with the new specified option value.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "OptionsToRemove": {
                    "description": "<p>A list of configuration options to remove from the configuration set.</p> <p> Constraint: You can remove only <code>UserDefined</code> configuration options. </p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ApplicationName", "TemplateName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigurationSettingsDescription" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          }
        },
        "x-aws-operation-name": "UpdateConfigurationTemplate"
      }
    },
    "/#Action=UpdateEnvironment": {
      "get": {
        "description": "<p>Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.</p> <p> Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p> <p> When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values. </p>",
        "operationId": "GET UpdateEnvironment",
        "parameters": [
          {
            "description": "The name of the application with which the environment is associated.",
            "in": "query",
            "name": "ApplicationName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>The ID of the environment to update.</p> <p>If no environment with this ID exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentId",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>The name of the environment to update. If no environment with this name exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "The name of the group to which the target environment belongs. Specify a group name only if the environment's name is specified in an environment manifest and not with the environment name or environment ID parameters. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html\">Environment Manifest (env.yaml)</a> for details.",
            "in": "query",
            "name": "GroupName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 19 }
          },
          {
            "description": "If this parameter is specified, AWS Elastic Beanstalk updates the description of this environment.",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 200 }
          },
          {
            "description": "Describes the properties of an environment tier\n<p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>",
            "in": "query",
            "name": "Tier.Name",
            "schema": { "type": "string" }
          },
          {
            "description": "Describes the properties of an environment tier\n<p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>",
            "in": "query",
            "name": "Tier.Type",
            "schema": { "type": "string" }
          },
          {
            "description": "Describes the properties of an environment tier\n<p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>",
            "in": "query",
            "name": "Tier.Version",
            "schema": { "type": "string" }
          },
          {
            "description": "If this parameter is specified, AWS Elastic Beanstalk deploys the named application version to the environment. If no such application version is found, returns an <code>InvalidParameterValue</code> error. ",
            "in": "query",
            "name": "VersionLabel",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "If this parameter is specified, AWS Elastic Beanstalk deploys this configuration template to the environment. If no such configuration template is found, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. ",
            "in": "query",
            "name": "TemplateName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "This specifies the platform version that the environment will run after the environment is updated.",
            "in": "query",
            "name": "SolutionStackName",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "The ARN of the platform, if used.",
            "in": "query",
            "name": "PlatformArn",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "If specified, AWS Elastic Beanstalk updates the configuration set associated with the running environment and sets the specified configuration options to the requested value.",
            "in": "query",
            "name": "OptionSettings",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "A list of custom user-defined configuration options to remove from the configuration set for this environment.",
            "in": "query",
            "name": "OptionsToRemove",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateEnvironment"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentDescription" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          }
        },
        "x-aws-operation-name": "UpdateEnvironment"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.</p> <p> Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p> <p> When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values. </p>",
        "operationId": "POST UpdateEnvironment",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateEnvironment"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application with which the environment is associated.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "EnvironmentId": {
                    "description": "<p>The ID of the environment to update.</p> <p>If no environment with this ID exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string"
                  },
                  "EnvironmentName": {
                    "description": "<p>The name of the environment to update. If no environment with this name exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "GroupName": {
                    "description": "The name of the group to which the target environment belongs. Specify a group name only if the environment's name is specified in an environment manifest and not with the environment name or environment ID parameters. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html\">Environment Manifest (env.yaml)</a> for details.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 19
                  },
                  "Description": {
                    "description": "If this parameter is specified, AWS Elastic Beanstalk updates the description of this environment.",
                    "type": "string",
                    "maxLength": 200
                  },
                  "Tier.Name": {
                    "description": "Describes the properties of an environment tier\n<p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>",
                    "type": "string"
                  },
                  "Tier.Type": {
                    "description": "Describes the properties of an environment tier\n<p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>",
                    "type": "string"
                  },
                  "Tier.Version": {
                    "description": "Describes the properties of an environment tier\n<p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>",
                    "type": "string"
                  },
                  "VersionLabel": {
                    "description": "If this parameter is specified, AWS Elastic Beanstalk deploys the named application version to the environment. If no such application version is found, returns an <code>InvalidParameterValue</code> error. ",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "TemplateName": {
                    "description": "If this parameter is specified, AWS Elastic Beanstalk deploys this configuration template to the environment. If no such configuration template is found, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. ",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "SolutionStackName": {
                    "description": "This specifies the platform version that the environment will run after the environment is updated.",
                    "type": "string"
                  },
                  "PlatformArn": { "description": "The ARN of the platform, if used.", "type": "string" },
                  "OptionSettings": {
                    "description": "If specified, AWS Elastic Beanstalk updates the configuration set associated with the running environment and sets the specified configuration options to the requested value.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "OptionsToRemove": {
                    "description": "A list of custom user-defined configuration options to remove from the configuration set for this environment.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EnvironmentDescription" } } }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          }
        },
        "x-aws-operation-name": "UpdateEnvironment"
      }
    },
    "/#Action=UpdateTagsForResource": {
      "get": {
        "description": "<p>Update the list of tags applied to an AWS Elastic Beanstalk resource. Two lists can be passed: <code>TagsToAdd</code> for tags to add or update, and <code>TagsToRemove</code>.</p> <p>Currently, Elastic Beanstalk only supports tagging of Elastic Beanstalk environments. For details about environment tagging, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.tagging.html\">Tagging Resources in Your Elastic Beanstalk Environment</a>.</p> <p>If you create a custom IAM user policy to control permission to this operation, specify one of the following two virtual actions (or both) instead of the API operation name:</p> <dl> <dt>elasticbeanstalk:AddTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tags to add in the <code>TagsToAdd</code> parameter.</p> </dd> <dt>elasticbeanstalk:RemoveTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tag keys to remove in the <code>TagsToRemove</code> parameter.</p> </dd> </dl> <p>For details about creating a custom user policy, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.managed-policies.html#AWSHowTo.iam.policies\">Creating a Custom User Policy</a>.</p>",
        "operationId": "GET UpdateTagsForResource",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN) of the resouce to be updated.</p> <p>Must be the ARN of an Elastic Beanstalk environment.</p>",
            "in": "query",
            "name": "ResourceArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "<p>A list of tags to add or update.</p> <p>If a key of an existing tag is added, the tag's value is updated.</p>",
            "in": "query",
            "name": "TagsToAdd",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>A list of tag keys to remove.</p> <p>If a tag key doesn't exist, it is silently ignored.</p>",
            "in": "query",
            "name": "TagsToRemove",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateTagsForResource"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "OperationInProgressException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationInProgressException" } } }
          },
          "482": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } } }
          },
          "484": {
            "description": "ResourceTypeNotSupportedException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceTypeNotSupportedException" } }
            }
          }
        },
        "x-aws-operation-name": "UpdateTagsForResource"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Update the list of tags applied to an AWS Elastic Beanstalk resource. Two lists can be passed: <code>TagsToAdd</code> for tags to add or update, and <code>TagsToRemove</code>.</p> <p>Currently, Elastic Beanstalk only supports tagging of Elastic Beanstalk environments. For details about environment tagging, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.tagging.html\">Tagging Resources in Your Elastic Beanstalk Environment</a>.</p> <p>If you create a custom IAM user policy to control permission to this operation, specify one of the following two virtual actions (or both) instead of the API operation name:</p> <dl> <dt>elasticbeanstalk:AddTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tags to add in the <code>TagsToAdd</code> parameter.</p> </dd> <dt>elasticbeanstalk:RemoveTags</dt> <dd> <p>Controls permission to call <code>UpdateTagsForResource</code> and pass a list of tag keys to remove in the <code>TagsToRemove</code> parameter.</p> </dd> </dl> <p>For details about creating a custom user policy, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.managed-policies.html#AWSHowTo.iam.policies\">Creating a Custom User Policy</a>.</p>",
        "operationId": "POST UpdateTagsForResource",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateTagsForResource"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ResourceArn": {
                    "description": "<p>The Amazon Resource Name (ARN) of the resouce to be updated.</p> <p>Must be the ARN of an Elastic Beanstalk environment.</p>",
                    "type": "string"
                  },
                  "TagsToAdd": {
                    "description": "<p>A list of tags to add or update.</p> <p>If a key of an existing tag is added, the tag's value is updated.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "TagsToRemove": {
                    "description": "<p>A list of tag keys to remove.</p> <p>If a tag key doesn't exist, it is silently ignored.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ResourceArn"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "OperationInProgressException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/OperationInProgressException" } } }
          },
          "482": {
            "description": "TooManyTagsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } } }
          },
          "484": {
            "description": "ResourceTypeNotSupportedException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ResourceTypeNotSupportedException" } }
            }
          }
        },
        "x-aws-operation-name": "UpdateTagsForResource"
      }
    },
    "/#Action=ValidateConfigurationSettings": {
      "get": {
        "description": "<p>Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid.</p> <p>This action returns a list of messages indicating any errors or warnings associated with the selection of option values.</p>",
        "operationId": "GET ValidateConfigurationSettings",
        "parameters": [
          {
            "description": "The name of the application that the configuration template or environment belongs to.",
            "in": "query",
            "name": "ApplicationName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>The name of the configuration template to validate the settings against.</p> <p>Condition: You cannot specify both this and an environment name.</p>",
            "in": "query",
            "name": "TemplateName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 100 }
          },
          {
            "description": "<p>The name of the environment to validate the settings against.</p> <p>Condition: You cannot specify both this and a configuration template name.</p>",
            "in": "query",
            "name": "EnvironmentName",
            "required": false,
            "schema": { "type": "string", "minLength": 4, "maxLength": 40 }
          },
          {
            "description": "A list of the options and desired values to evaluate.",
            "in": "query",
            "name": "OptionSettings",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ValidateConfigurationSettings"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigurationSettingsValidationMessages" } }
            }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          }
        },
        "x-aws-operation-name": "ValidateConfigurationSettings"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid.</p> <p>This action returns a list of messages indicating any errors or warnings associated with the selection of option values.</p>",
        "operationId": "POST ValidateConfigurationSettings",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ValidateConfigurationSettings"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-12-01"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApplicationName": {
                    "description": "The name of the application that the configuration template or environment belongs to.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "TemplateName": {
                    "description": "<p>The name of the configuration template to validate the settings against.</p> <p>Condition: You cannot specify both this and an environment name.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "EnvironmentName": {
                    "description": "<p>The name of the environment to validate the settings against.</p> <p>Condition: You cannot specify both this and a configuration template name.</p>",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 40
                  },
                  "OptionSettings": {
                    "description": "A list of the options and desired values to evaluate.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["ApplicationName", "OptionSettings"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ConfigurationSettingsValidationMessages" } }
            }
          },
          "480": {
            "description": "InsufficientPrivilegesException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InsufficientPrivilegesException" } } }
          },
          "481": {
            "description": "TooManyBucketsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/TooManyBucketsException" } } }
          }
        },
        "x-aws-operation-name": "ValidateConfigurationSettings"
      }
    }
  },
  "servers": [
    {
      "description": "The Elastic Beanstalk multi-region endpoint",
      "url": "http://elasticbeanstalk.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Elastic Beanstalk multi-region endpoint",
      "url": "https://elasticbeanstalk.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Elastic Beanstalk endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://elasticbeanstalk.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Elastic Beanstalk endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://elasticbeanstalk.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "ARN": { "type": "string" },
      "AbortEnvironmentUpdateMessage": {
        "description": "<p/>",
        "properties": {
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" }
        },
        "type": "object"
      },
      "AbortableOperationInProgress": { "type": "boolean" },
      "ActionHistoryStatus": { "enum": ["Completed", "Failed", "Unknown"], "type": "string" },
      "ActionStatus": { "enum": ["Scheduled", "Pending", "Running", "Unknown"], "type": "string" },
      "ActionType": { "enum": ["InstanceRefresh", "PlatformUpdate", "Unknown"], "type": "string" },
      "ApplicationArn": { "type": "string" },
      "ApplicationDescription": {
        "description": "Describes the properties of an application.",
        "properties": {
          "ApplicationArn": { "$ref": "#/components/schemas/ApplicationArn" },
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "ConfigurationTemplates": { "$ref": "#/components/schemas/ConfigurationTemplateNamesList" },
          "DateCreated": { "$ref": "#/components/schemas/CreationDate" },
          "DateUpdated": { "$ref": "#/components/schemas/UpdateDate" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "ResourceLifecycleConfig": { "$ref": "#/components/schemas/ApplicationResourceLifecycleConfig" },
          "Versions": { "$ref": "#/components/schemas/VersionLabelsList" }
        },
        "type": "object"
      },
      "ApplicationDescriptionList": {
        "items": { "$ref": "#/components/schemas/ApplicationDescription" },
        "type": "array"
      },
      "ApplicationDescriptionMessage": {
        "description": "Result message containing a single description of an application.",
        "example": {
          "Application": {
            "ApplicationName": "my-app",
            "ConfigurationTemplates": [],
            "DateCreated": "2015-08-13T19:15:50.449Z",
            "DateUpdated": "2015-08-20T22:34:56.195Z",
            "Description": "my Elastic Beanstalk application",
            "Versions": [
              "2fba-stage-150819_234450",
              "bf07-stage-150820_214945",
              "93f8",
              "fd7c-stage-150820_000431",
              "22a0-stage-150819_185942"
            ]
          }
        },
        "properties": { "Application": { "$ref": "#/components/schemas/ApplicationDescription" } },
        "type": "object"
      },
      "ApplicationDescriptionsMessage": {
        "description": "Result message containing a list of application descriptions.",
        "example": {
          "Applications": [
            {
              "ApplicationName": "ruby",
              "ConfigurationTemplates": [],
              "DateCreated": "2015-08-13T21:05:44.376Z",
              "DateUpdated": "2015-08-13T21:05:44.376Z",
              "Versions": ["Sample Application"]
            },
            {
              "ApplicationName": "pythonsample",
              "ConfigurationTemplates": [],
              "DateCreated": "2015-08-13T19:05:43.637Z",
              "DateUpdated": "2015-08-13T19:05:43.637Z",
              "Description": "Application created from the EB CLI using \"eb init\"",
              "Versions": ["Sample Application"]
            },
            {
              "ApplicationName": "nodejs-example",
              "ConfigurationTemplates": [],
              "DateCreated": "2015-08-06T17:50:02.486Z",
              "DateUpdated": "2015-08-06T17:50:02.486Z",
              "Versions": ["add elasticache", "First Release"]
            }
          ]
        },
        "properties": { "Applications": { "$ref": "#/components/schemas/ApplicationDescriptionList" } },
        "type": "object"
      },
      "ApplicationMetrics": {
        "description": "Application request metrics for an AWS Elastic Beanstalk environment.",
        "properties": {
          "Duration": { "$ref": "#/components/schemas/NullableInteger" },
          "Latency": { "$ref": "#/components/schemas/Latency" },
          "RequestCount": { "$ref": "#/components/schemas/RequestCount" },
          "StatusCodes": { "$ref": "#/components/schemas/StatusCodes" }
        },
        "type": "object"
      },
      "ApplicationName": { "maxLength": 100, "minLength": 1, "type": "string" },
      "ApplicationNamesList": { "items": { "$ref": "#/components/schemas/ApplicationName" }, "type": "array" },
      "ApplicationResourceLifecycleConfig": {
        "description": "The resource lifecycle configuration for an application. Defines lifecycle settings for resources that belong to the application, and the service role that Elastic Beanstalk assumes in order to apply lifecycle settings. The version lifecycle configuration defines lifecycle settings for application versions.",
        "properties": {
          "ServiceRole": { "$ref": "#/components/schemas/String" },
          "VersionLifecycleConfig": { "$ref": "#/components/schemas/ApplicationVersionLifecycleConfig" }
        },
        "type": "object"
      },
      "ApplicationResourceLifecycleDescriptionMessage": {
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "ResourceLifecycleConfig": { "$ref": "#/components/schemas/ApplicationResourceLifecycleConfig" }
        },
        "type": "object"
      },
      "ApplicationVersionArn": { "type": "string" },
      "ApplicationVersionDescription": {
        "description": "Describes the properties of an application version.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "ApplicationVersionArn": { "$ref": "#/components/schemas/ApplicationVersionArn" },
          "BuildArn": { "$ref": "#/components/schemas/String" },
          "DateCreated": { "$ref": "#/components/schemas/CreationDate" },
          "DateUpdated": { "$ref": "#/components/schemas/UpdateDate" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "SourceBuildInformation": { "$ref": "#/components/schemas/SourceBuildInformation" },
          "SourceBundle": { "$ref": "#/components/schemas/S3Location" },
          "Status": { "$ref": "#/components/schemas/ApplicationVersionStatus" },
          "VersionLabel": { "$ref": "#/components/schemas/VersionLabel" }
        },
        "type": "object"
      },
      "ApplicationVersionDescriptionList": {
        "items": { "$ref": "#/components/schemas/ApplicationVersionDescription" },
        "type": "array"
      },
      "ApplicationVersionDescriptionMessage": {
        "description": "Result message wrapping a single description of an application version.",
        "example": {
          "ApplicationVersion": {
            "ApplicationName": "my-app",
            "DateCreated": "2015-08-19T18:59:17.646Z",
            "DateUpdated": "2015-08-20T22:53:28.871Z",
            "Description": "new description",
            "SourceBundle": {
              "S3Bucket": "elasticbeanstalk-us-west-2-0123456789012",
              "S3Key": "my-app/22a0-stage-150819_185942.war"
            },
            "VersionLabel": "22a0-stage-150819_185942"
          }
        },
        "properties": { "ApplicationVersion": { "$ref": "#/components/schemas/ApplicationVersionDescription" } },
        "type": "object"
      },
      "ApplicationVersionDescriptionsMessage": {
        "description": "Result message wrapping a list of application version descriptions.",
        "example": {
          "ApplicationVersions": [
            {
              "ApplicationName": "my-app",
              "DateCreated": "2015-07-23T01:32:26.079Z",
              "DateUpdated": "2015-07-23T01:32:26.079Z",
              "Description": "update cover page",
              "SourceBundle": {
                "S3Bucket": "elasticbeanstalk-us-west-2-015321684451",
                "S3Key": "my-app/5026-stage-150723_224258.war"
              },
              "VersionLabel": "v2"
            },
            {
              "ApplicationName": "my-app",
              "DateCreated": "2015-07-23T22:26:10.816Z",
              "DateUpdated": "2015-07-23T22:26:10.816Z",
              "Description": "initial version",
              "SourceBundle": {
                "S3Bucket": "elasticbeanstalk-us-west-2-015321684451",
                "S3Key": "my-app/5026-stage-150723_222618.war"
              },
              "VersionLabel": "v1"
            }
          ]
        },
        "properties": {
          "ApplicationVersions": { "$ref": "#/components/schemas/ApplicationVersionDescriptionList" },
          "NextToken": { "$ref": "#/components/schemas/Token" }
        },
        "type": "object"
      },
      "ApplicationVersionLifecycleConfig": {
        "description": "<p>The application version lifecycle settings for an application. Defines the rules that Elastic Beanstalk applies to an application's versions in order to avoid hitting the per-region limit for application versions.</p> <p>When Elastic Beanstalk deletes an application version from its database, you can no longer deploy that version to an environment. The source bundle remains in S3 unless you configure the rule to delete it.</p>",
        "properties": {
          "MaxAgeRule": { "$ref": "#/components/schemas/MaxAgeRule" },
          "MaxCountRule": { "$ref": "#/components/schemas/MaxCountRule" }
        },
        "type": "object"
      },
      "ApplicationVersionProccess": { "type": "boolean" },
      "ApplicationVersionStatus": {
        "enum": ["Processed", "Unprocessed", "Failed", "Processing", "Building"],
        "type": "string"
      },
      "ApplyEnvironmentManagedActionRequest": {
        "description": "Request to execute a scheduled managed action immediately.",
        "properties": {
          "ActionId": { "$ref": "#/components/schemas/String" },
          "EnvironmentId": { "$ref": "#/components/schemas/String" },
          "EnvironmentName": { "$ref": "#/components/schemas/String" }
        },
        "required": ["ActionId"],
        "type": "object"
      },
      "ApplyEnvironmentManagedActionResult": {
        "description": "The result message containing information about the managed action.",
        "properties": {
          "ActionDescription": { "$ref": "#/components/schemas/String" },
          "ActionId": { "$ref": "#/components/schemas/String" },
          "ActionType": { "$ref": "#/components/schemas/ActionType" },
          "Status": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "AutoCreateApplication": { "type": "boolean" },
      "AutoScalingGroup": {
        "description": "Describes an Auto Scaling launch configuration.",
        "properties": { "Name": { "$ref": "#/components/schemas/ResourceId" } },
        "type": "object"
      },
      "AutoScalingGroupList": { "items": { "$ref": "#/components/schemas/AutoScalingGroup" }, "type": "array" },
      "AvailableSolutionStackDetailsList": {
        "items": { "$ref": "#/components/schemas/SolutionStackDescription" },
        "type": "array"
      },
      "AvailableSolutionStackNamesList": {
        "items": { "$ref": "#/components/schemas/SolutionStackName" },
        "type": "array"
      },
      "BoxedBoolean": { "type": "boolean" },
      "BoxedInt": { "type": "integer" },
      "BuildConfiguration": {
        "description": "Settings for an AWS CodeBuild build.",
        "properties": {
          "ArtifactName": { "$ref": "#/components/schemas/String" },
          "CodeBuildServiceRole": { "$ref": "#/components/schemas/NonEmptyString" },
          "ComputeType": { "$ref": "#/components/schemas/ComputeType" },
          "Image": { "$ref": "#/components/schemas/NonEmptyString" },
          "TimeoutInMinutes": { "$ref": "#/components/schemas/BoxedInt" }
        },
        "required": ["CodeBuildServiceRole", "Image"],
        "type": "object"
      },
      "Builder": {
        "description": "The builder used to build the custom platform.",
        "properties": { "ARN": { "$ref": "#/components/schemas/ARN" } },
        "type": "object"
      },
      "CPUUtilization": {
        "description": "CPU utilization metrics for an instance.",
        "properties": {
          "IOWait": { "$ref": "#/components/schemas/NullableDouble" },
          "IRQ": { "$ref": "#/components/schemas/NullableDouble" },
          "Idle": { "$ref": "#/components/schemas/NullableDouble" },
          "Nice": { "$ref": "#/components/schemas/NullableDouble" },
          "Privileged": { "$ref": "#/components/schemas/NullableDouble" },
          "SoftIRQ": { "$ref": "#/components/schemas/NullableDouble" },
          "System": { "$ref": "#/components/schemas/NullableDouble" },
          "User": { "$ref": "#/components/schemas/NullableDouble" }
        },
        "type": "object"
      },
      "Cause": { "maxLength": 255, "minLength": 1, "type": "string" },
      "Causes": { "items": { "$ref": "#/components/schemas/Cause" }, "type": "array" },
      "CheckDNSAvailabilityMessage": {
        "description": "Results message indicating whether a CNAME is available.",
        "properties": { "CNAMEPrefix": { "$ref": "#/components/schemas/DNSCnamePrefix" } },
        "required": ["CNAMEPrefix"],
        "type": "object"
      },
      "CheckDNSAvailabilityResultMessage": {
        "description": "Indicates if the specified CNAME is available.",
        "example": { "Available": true, "FullyQualifiedCNAME": "my-cname.us-west-2.elasticbeanstalk.com" },
        "properties": {
          "Available": { "$ref": "#/components/schemas/CnameAvailability" },
          "FullyQualifiedCNAME": { "$ref": "#/components/schemas/DNSCname" }
        },
        "type": "object"
      },
      "CnameAvailability": { "type": "boolean" },
      "CodeBuildNotInServiceRegionException": {},
      "ComposeEnvironmentsMessage": {
        "description": "Request to create or update a group of environments.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "GroupName": { "$ref": "#/components/schemas/GroupName" },
          "VersionLabels": { "$ref": "#/components/schemas/VersionLabels" }
        },
        "type": "object"
      },
      "ComputeType": {
        "enum": ["BUILD_GENERAL1_SMALL", "BUILD_GENERAL1_MEDIUM", "BUILD_GENERAL1_LARGE"],
        "type": "string"
      },
      "ConfigurationDeploymentStatus": { "enum": ["deployed", "pending", "failed"], "type": "string" },
      "ConfigurationOptionDefaultValue": { "type": "string" },
      "ConfigurationOptionDescription": {
        "description": "Describes the possible values for a configuration option.",
        "properties": {
          "ChangeSeverity": { "$ref": "#/components/schemas/ConfigurationOptionSeverity" },
          "DefaultValue": { "$ref": "#/components/schemas/ConfigurationOptionDefaultValue" },
          "MaxLength": { "$ref": "#/components/schemas/OptionRestrictionMaxLength" },
          "MaxValue": { "$ref": "#/components/schemas/OptionRestrictionMaxValue" },
          "MinValue": { "$ref": "#/components/schemas/OptionRestrictionMinValue" },
          "Name": { "$ref": "#/components/schemas/ConfigurationOptionName" },
          "Namespace": { "$ref": "#/components/schemas/OptionNamespace" },
          "Regex": { "$ref": "#/components/schemas/OptionRestrictionRegex" },
          "UserDefined": { "$ref": "#/components/schemas/UserDefinedOption" },
          "ValueOptions": { "$ref": "#/components/schemas/ConfigurationOptionPossibleValues" },
          "ValueType": { "$ref": "#/components/schemas/ConfigurationOptionValueType" }
        },
        "type": "object"
      },
      "ConfigurationOptionDescriptionsList": {
        "items": { "$ref": "#/components/schemas/ConfigurationOptionDescription" },
        "type": "array"
      },
      "ConfigurationOptionName": { "type": "string" },
      "ConfigurationOptionPossibleValue": { "type": "string" },
      "ConfigurationOptionPossibleValues": {
        "items": { "$ref": "#/components/schemas/ConfigurationOptionPossibleValue" },
        "type": "array"
      },
      "ConfigurationOptionSetting": {
        "description": " A specification identifying an individual configuration option along with its current value. For a list of possible option values, go to <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html\">Option Values</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>. ",
        "properties": {
          "Namespace": { "$ref": "#/components/schemas/OptionNamespace" },
          "OptionName": { "$ref": "#/components/schemas/ConfigurationOptionName" },
          "ResourceName": { "$ref": "#/components/schemas/ResourceName" },
          "Value": { "$ref": "#/components/schemas/ConfigurationOptionValue" }
        },
        "type": "object"
      },
      "ConfigurationOptionSettingsList": {
        "items": { "$ref": "#/components/schemas/ConfigurationOptionSetting" },
        "type": "array"
      },
      "ConfigurationOptionSeverity": { "type": "string" },
      "ConfigurationOptionValue": { "type": "string" },
      "ConfigurationOptionValueType": { "enum": ["Scalar", "List"], "type": "string" },
      "ConfigurationOptionsDescription": {
        "description": "Describes the settings for a specified configuration set.",
        "example": {
          "Options": [
            {
              "ChangeSeverity": "NoInterruption",
              "DefaultValue": "30",
              "MaxValue": 300,
              "MinValue": 5,
              "Name": "Interval",
              "Namespace": "aws:elb:healthcheck",
              "UserDefined": false,
              "ValueType": "Scalar"
            },
            {
              "ChangeSeverity": "NoInterruption",
              "DefaultValue": "2000000",
              "MinValue": 0,
              "Name": "LowerThreshold",
              "Namespace": "aws:autoscaling:trigger",
              "UserDefined": false,
              "ValueType": "Scalar"
            }
          ]
        },
        "properties": {
          "Options": { "$ref": "#/components/schemas/ConfigurationOptionDescriptionsList" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "SolutionStackName": { "$ref": "#/components/schemas/SolutionStackName" }
        },
        "type": "object"
      },
      "ConfigurationSettingsDescription": {
        "description": "Describes the settings for a configuration set.",
        "example": {
          "ApplicationName": "my-app",
          "DateCreated": "2015-08-20T22:39:31Z",
          "DateUpdated": "2015-08-20T22:43:11Z",
          "SolutionStackName": "64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8",
          "TemplateName": "my-template"
        },
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "DateCreated": { "$ref": "#/components/schemas/CreationDate" },
          "DateUpdated": { "$ref": "#/components/schemas/UpdateDate" },
          "DeploymentStatus": { "$ref": "#/components/schemas/ConfigurationDeploymentStatus" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "OptionSettings": { "$ref": "#/components/schemas/ConfigurationOptionSettingsList" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "SolutionStackName": { "$ref": "#/components/schemas/SolutionStackName" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" }
        },
        "type": "object"
      },
      "ConfigurationSettingsDescriptionList": {
        "items": { "$ref": "#/components/schemas/ConfigurationSettingsDescription" },
        "type": "array"
      },
      "ConfigurationSettingsDescriptions": {
        "description": "The results from a request to change the configuration settings of an environment.",
        "example": {
          "ConfigurationSettings": [
            {
              "ApplicationName": "my-app",
              "DateCreated": "2015-08-13T19:16:25Z",
              "DateUpdated": "2015-08-13T23:30:07Z",
              "DeploymentStatus": "deployed",
              "Description": "Environment created from the EB CLI using \"eb create\"",
              "EnvironmentName": "my-env",
              "OptionSettings": [
                {
                  "Namespace": "aws:autoscaling:asg",
                  "OptionName": "Availability Zones",
                  "ResourceName": "AWSEBAutoScalingGroup",
                  "Value": "Any"
                },
                {
                  "Namespace": "aws:autoscaling:asg",
                  "OptionName": "Cooldown",
                  "ResourceName": "AWSEBAutoScalingGroup",
                  "Value": "360"
                },
                {
                  "Namespace": "aws:elb:policies",
                  "OptionName": "ConnectionDrainingTimeout",
                  "ResourceName": "AWSEBLoadBalancer",
                  "Value": "20"
                },
                {
                  "Namespace": "aws:elb:policies",
                  "OptionName": "ConnectionSettingIdleTimeout",
                  "ResourceName": "AWSEBLoadBalancer",
                  "Value": "60"
                }
              ],
              "SolutionStackName": "64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8"
            }
          ]
        },
        "properties": {
          "ConfigurationSettings": { "$ref": "#/components/schemas/ConfigurationSettingsDescriptionList" }
        },
        "type": "object"
      },
      "ConfigurationSettingsValidationMessages": {
        "description": "Provides a list of validation messages.",
        "example": { "Messages": [] },
        "properties": { "Messages": { "$ref": "#/components/schemas/ValidationMessagesList" } },
        "type": "object"
      },
      "ConfigurationTemplateName": { "maxLength": 100, "minLength": 1, "type": "string" },
      "ConfigurationTemplateNamesList": {
        "items": { "$ref": "#/components/schemas/ConfigurationTemplateName" },
        "type": "array"
      },
      "CreateApplicationMessage": {
        "description": "Request to create an application.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "ResourceLifecycleConfig": { "$ref": "#/components/schemas/ApplicationResourceLifecycleConfig" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "required": ["ApplicationName"],
        "type": "object"
      },
      "CreateApplicationVersionMessage": {
        "description": "<p/>",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "AutoCreateApplication": { "$ref": "#/components/schemas/AutoCreateApplication" },
          "BuildConfiguration": { "$ref": "#/components/schemas/BuildConfiguration" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "Process": { "$ref": "#/components/schemas/ApplicationVersionProccess" },
          "SourceBuildInformation": { "$ref": "#/components/schemas/SourceBuildInformation" },
          "SourceBundle": { "$ref": "#/components/schemas/S3Location" },
          "Tags": { "$ref": "#/components/schemas/Tags" },
          "VersionLabel": { "$ref": "#/components/schemas/VersionLabel" }
        },
        "required": ["ApplicationName", "VersionLabel"],
        "type": "object"
      },
      "CreateConfigurationTemplateMessage": {
        "description": "Request to create a configuration template.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "OptionSettings": { "$ref": "#/components/schemas/ConfigurationOptionSettingsList" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "SolutionStackName": { "$ref": "#/components/schemas/SolutionStackName" },
          "SourceConfiguration": { "$ref": "#/components/schemas/SourceConfiguration" },
          "Tags": { "$ref": "#/components/schemas/Tags" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" }
        },
        "required": ["ApplicationName", "TemplateName"],
        "type": "object"
      },
      "CreateEnvironmentMessage": {
        "description": "<p/>",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "CNAMEPrefix": { "$ref": "#/components/schemas/DNSCnamePrefix" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "GroupName": { "$ref": "#/components/schemas/GroupName" },
          "OptionSettings": { "$ref": "#/components/schemas/ConfigurationOptionSettingsList" },
          "OptionsToRemove": { "$ref": "#/components/schemas/OptionsSpecifierList" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "SolutionStackName": { "$ref": "#/components/schemas/SolutionStackName" },
          "Tags": { "$ref": "#/components/schemas/Tags" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" },
          "Tier": { "$ref": "#/components/schemas/EnvironmentTier" },
          "VersionLabel": { "$ref": "#/components/schemas/VersionLabel" }
        },
        "required": ["ApplicationName"],
        "type": "object"
      },
      "CreatePlatformVersionRequest": {
        "description": "Request to create a new platform version.",
        "properties": {
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "OptionSettings": { "$ref": "#/components/schemas/ConfigurationOptionSettingsList" },
          "PlatformDefinitionBundle": { "$ref": "#/components/schemas/S3Location" },
          "PlatformName": { "$ref": "#/components/schemas/PlatformName" },
          "PlatformVersion": { "$ref": "#/components/schemas/PlatformVersion" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "required": ["PlatformName", "PlatformVersion", "PlatformDefinitionBundle"],
        "type": "object"
      },
      "CreatePlatformVersionResult": {
        "properties": {
          "Builder": { "$ref": "#/components/schemas/Builder" },
          "PlatformSummary": { "$ref": "#/components/schemas/PlatformSummary" }
        },
        "type": "object"
      },
      "CreateStorageLocationResultMessage": {
        "description": "Results of a <a>CreateStorageLocationResult</a> call.",
        "example": { "S3Bucket": "elasticbeanstalk-us-west-2-0123456789012" },
        "properties": { "S3Bucket": { "$ref": "#/components/schemas/S3Bucket" } },
        "type": "object"
      },
      "CreationDate": { "format": "date-time", "type": "string" },
      "CustomAmi": {
        "description": "A custom AMI available to platforms.",
        "properties": {
          "ImageId": { "$ref": "#/components/schemas/ImageId" },
          "VirtualizationType": { "$ref": "#/components/schemas/VirtualizationType" }
        },
        "type": "object"
      },
      "CustomAmiList": { "items": { "$ref": "#/components/schemas/CustomAmi" }, "type": "array" },
      "DNSCname": { "maxLength": 255, "minLength": 1, "type": "string" },
      "DNSCnamePrefix": { "maxLength": 63, "minLength": 4, "type": "string" },
      "DeleteApplicationMessage": {
        "description": "Request to delete an application.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "TerminateEnvByForce": { "$ref": "#/components/schemas/TerminateEnvForce" }
        },
        "required": ["ApplicationName"],
        "type": "object"
      },
      "DeleteApplicationVersionMessage": {
        "description": "Request to delete an application version.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "DeleteSourceBundle": { "$ref": "#/components/schemas/DeleteSourceBundle" },
          "VersionLabel": { "$ref": "#/components/schemas/VersionLabel" }
        },
        "required": ["ApplicationName", "VersionLabel"],
        "type": "object"
      },
      "DeleteConfigurationTemplateMessage": {
        "description": "Request to delete a configuration template.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" }
        },
        "required": ["ApplicationName", "TemplateName"],
        "type": "object"
      },
      "DeleteEnvironmentConfigurationMessage": {
        "description": "Request to delete a draft environment configuration.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" }
        },
        "required": ["ApplicationName", "EnvironmentName"],
        "type": "object"
      },
      "DeletePlatformVersionRequest": {
        "properties": { "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" } },
        "type": "object"
      },
      "DeletePlatformVersionResult": {
        "properties": { "PlatformSummary": { "$ref": "#/components/schemas/PlatformSummary" } },
        "type": "object"
      },
      "DeleteSourceBundle": { "type": "boolean" },
      "Deployment": {
        "description": "Information about an application version deployment.",
        "properties": {
          "DeploymentId": { "$ref": "#/components/schemas/NullableLong" },
          "DeploymentTime": { "$ref": "#/components/schemas/DeploymentTimestamp" },
          "Status": { "$ref": "#/components/schemas/String" },
          "VersionLabel": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DeploymentTimestamp": { "format": "date-time", "type": "string" },
      "DescribeAccountAttributesResult": {
        "properties": { "ResourceQuotas": { "$ref": "#/components/schemas/ResourceQuotas" } },
        "type": "object"
      },
      "DescribeApplicationVersionsMessage": {
        "description": "Request to describe application versions.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "MaxRecords": { "$ref": "#/components/schemas/MaxRecords" },
          "NextToken": { "$ref": "#/components/schemas/Token" },
          "VersionLabels": { "$ref": "#/components/schemas/VersionLabelsList" }
        },
        "type": "object"
      },
      "DescribeApplicationsMessage": {
        "description": "Request to describe one or more applications.",
        "properties": { "ApplicationNames": { "$ref": "#/components/schemas/ApplicationNamesList" } },
        "type": "object"
      },
      "DescribeConfigurationOptionsMessage": {
        "description": "Result message containing a list of application version descriptions.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "Options": { "$ref": "#/components/schemas/OptionsSpecifierList" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "SolutionStackName": { "$ref": "#/components/schemas/SolutionStackName" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" }
        },
        "type": "object"
      },
      "DescribeConfigurationSettingsMessage": {
        "description": "Result message containing all of the configuration settings for a specified solution stack or configuration template.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" }
        },
        "required": ["ApplicationName"],
        "type": "object"
      },
      "DescribeEnvironmentHealthRequest": {
        "description": "See the example below to learn how to create a request body.",
        "properties": {
          "AttributeNames": { "$ref": "#/components/schemas/EnvironmentHealthAttributes" },
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" }
        },
        "type": "object"
      },
      "DescribeEnvironmentHealthResult": {
        "description": "Health details for an AWS Elastic Beanstalk environment.",
        "example": {
          "ApplicationMetrics": {
            "Duration": 10,
            "Latency": {
              "P10": 0.001,
              "P50": 0.001,
              "P75": 0.002,
              "P85": 0.003,
              "P90": 0.003,
              "P95": 0.004,
              "P99": 0.004,
              "P999": 0.004
            },
            "RequestCount": 45,
            "StatusCodes": { "Status2xx": 45, "Status3xx": 0, "Status4xx": 0, "Status5xx": 0 }
          },
          "Causes": [],
          "Color": "Green",
          "EnvironmentName": "my-env",
          "HealthStatus": "Ok",
          "InstancesHealth": {
            "Degraded": 0,
            "Info": 0,
            "NoData": 0,
            "Ok": 1,
            "Pending": 0,
            "Severe": 0,
            "Unknown": 0,
            "Warning": 0
          },
          "RefreshedAt": "2015-08-20T21:09:18Z"
        },
        "properties": {
          "ApplicationMetrics": { "$ref": "#/components/schemas/ApplicationMetrics" },
          "Causes": { "$ref": "#/components/schemas/Causes" },
          "Color": { "$ref": "#/components/schemas/String" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "HealthStatus": { "$ref": "#/components/schemas/String" },
          "InstancesHealth": { "$ref": "#/components/schemas/InstanceHealthSummary" },
          "RefreshedAt": { "$ref": "#/components/schemas/RefreshedAt" },
          "Status": { "$ref": "#/components/schemas/EnvironmentHealth" }
        },
        "type": "object"
      },
      "DescribeEnvironmentManagedActionHistoryRequest": {
        "description": "Request to list completed and failed managed actions.",
        "properties": {
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "MaxItems": { "$ref": "#/components/schemas/Integer" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeEnvironmentManagedActionHistoryResult": {
        "description": "A result message containing a list of completed and failed managed actions.",
        "properties": {
          "ManagedActionHistoryItems": { "$ref": "#/components/schemas/ManagedActionHistoryItems" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeEnvironmentManagedActionsRequest": {
        "description": "Request to list an environment's upcoming and in-progress managed actions.",
        "properties": {
          "EnvironmentId": { "$ref": "#/components/schemas/String" },
          "EnvironmentName": { "$ref": "#/components/schemas/String" },
          "Status": { "$ref": "#/components/schemas/ActionStatus" }
        },
        "type": "object"
      },
      "DescribeEnvironmentManagedActionsResult": {
        "description": "The result message containing a list of managed actions.",
        "properties": { "ManagedActions": { "$ref": "#/components/schemas/ManagedActions" } },
        "type": "object"
      },
      "DescribeEnvironmentResourcesMessage": {
        "description": "Request to describe the resources in an environment.",
        "properties": {
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" }
        },
        "type": "object"
      },
      "DescribeEnvironmentsMessage": {
        "description": "Request to describe one or more environments.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "EnvironmentIds": { "$ref": "#/components/schemas/EnvironmentIdList" },
          "EnvironmentNames": { "$ref": "#/components/schemas/EnvironmentNamesList" },
          "IncludeDeleted": { "$ref": "#/components/schemas/IncludeDeleted" },
          "IncludedDeletedBackTo": { "$ref": "#/components/schemas/IncludeDeletedBackTo" },
          "MaxRecords": { "$ref": "#/components/schemas/MaxRecords" },
          "NextToken": { "$ref": "#/components/schemas/Token" },
          "VersionLabel": { "$ref": "#/components/schemas/VersionLabel" }
        },
        "type": "object"
      },
      "DescribeEventsMessage": {
        "description": "Request to retrieve a list of events for an environment.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "EndTime": { "$ref": "#/components/schemas/TimeFilterEnd" },
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "MaxRecords": { "$ref": "#/components/schemas/MaxRecords" },
          "NextToken": { "$ref": "#/components/schemas/Token" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "RequestId": { "$ref": "#/components/schemas/RequestId" },
          "Severity": { "$ref": "#/components/schemas/EventSeverity" },
          "StartTime": { "$ref": "#/components/schemas/TimeFilterStart" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" },
          "VersionLabel": { "$ref": "#/components/schemas/VersionLabel" }
        },
        "type": "object"
      },
      "DescribeInstancesHealthRequest": {
        "description": "Parameters for a call to <code>DescribeInstancesHealth</code>.",
        "properties": {
          "AttributeNames": { "$ref": "#/components/schemas/InstancesHealthAttributes" },
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeInstancesHealthResult": {
        "description": "Detailed health information about the Amazon EC2 instances in an AWS Elastic Beanstalk environment.",
        "example": {
          "InstanceHealthList": [
            {
              "ApplicationMetrics": {
                "Duration": 10,
                "Latency": {
                  "P10": 0,
                  "P50": 0.001,
                  "P75": 0.002,
                  "P85": 0.003,
                  "P90": 0.004,
                  "P95": 0.005,
                  "P99": 0.006,
                  "P999": 0.006
                },
                "RequestCount": 48,
                "StatusCodes": { "Status2xx": 47, "Status3xx": 0, "Status4xx": 1, "Status5xx": 0 }
              },
              "Causes": [],
              "Color": "Green",
              "HealthStatus": "Ok",
              "InstanceId": "i-08691cc7",
              "LaunchedAt": "2015-08-13T19:17:09Z",
              "System": {
                "CPUUtilization": {
                  "IOWait": 0.2,
                  "IRQ": 0,
                  "Idle": 97.8,
                  "Nice": 0.1,
                  "SoftIRQ": 0.1,
                  "System": 0.3,
                  "User": 1.5
                },
                "LoadAverage": [0, 0.02, 0.05]
              }
            }
          ],
          "RefreshedAt": "2015-08-20T21:09:08Z"
        },
        "properties": {
          "InstanceHealthList": { "$ref": "#/components/schemas/InstanceHealthList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "RefreshedAt": { "$ref": "#/components/schemas/RefreshedAt" }
        },
        "type": "object"
      },
      "DescribePlatformVersionRequest": {
        "properties": { "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" } },
        "type": "object"
      },
      "DescribePlatformVersionResult": {
        "properties": { "PlatformDescription": { "$ref": "#/components/schemas/PlatformDescription" } },
        "type": "object"
      },
      "Description": { "maxLength": 200, "type": "string" },
      "Ec2InstanceId": { "type": "string" },
      "ElasticBeanstalkServiceException": {},
      "EndpointURL": { "type": "string" },
      "EnvironmentArn": { "type": "string" },
      "EnvironmentDescription": {
        "description": "Describes the properties of an environment.",
        "example": {
          "AbortableOperationInProgress": true,
          "ApplicationName": "my-app",
          "CNAME": "my-env.elasticbeanstalk.com",
          "DateCreated": "2015-08-07T20:48:49.599Z",
          "DateUpdated": "2015-08-12T18:15:23.804Z",
          "EndpointURL": "awseb-e-w-AWSEBLoa-14XB83101Q4L-104QXY80921.sa-east-1.elb.amazonaws.com",
          "EnvironmentId": "e-wtp2rpqsej",
          "EnvironmentName": "my-env",
          "Health": "Grey",
          "SolutionStackName": "64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8",
          "Status": "Updating",
          "Tier": { "Name": "WebServer", "Type": "Standard", "Version": " " },
          "VersionLabel": "7f58-stage-150812_025409"
        },
        "properties": {
          "AbortableOperationInProgress": { "$ref": "#/components/schemas/AbortableOperationInProgress" },
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "CNAME": { "$ref": "#/components/schemas/DNSCname" },
          "DateCreated": { "$ref": "#/components/schemas/CreationDate" },
          "DateUpdated": { "$ref": "#/components/schemas/UpdateDate" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "EndpointURL": { "$ref": "#/components/schemas/EndpointURL" },
          "EnvironmentArn": { "$ref": "#/components/schemas/EnvironmentArn" },
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentLinks": { "$ref": "#/components/schemas/EnvironmentLinks" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "Health": { "$ref": "#/components/schemas/EnvironmentHealth" },
          "HealthStatus": { "$ref": "#/components/schemas/EnvironmentHealthStatus" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "Resources": { "$ref": "#/components/schemas/EnvironmentResourcesDescription" },
          "SolutionStackName": { "$ref": "#/components/schemas/SolutionStackName" },
          "Status": { "$ref": "#/components/schemas/EnvironmentStatus" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" },
          "Tier": { "$ref": "#/components/schemas/EnvironmentTier" },
          "VersionLabel": { "$ref": "#/components/schemas/VersionLabel" }
        },
        "type": "object"
      },
      "EnvironmentDescriptionsList": {
        "items": { "$ref": "#/components/schemas/EnvironmentDescription" },
        "type": "array"
      },
      "EnvironmentDescriptionsMessage": {
        "description": "Result message containing a list of environment descriptions.",
        "example": {
          "Environments": [
            {
              "AbortableOperationInProgress": false,
              "ApplicationName": "my-app",
              "CNAME": "my-env.elasticbeanstalk.com",
              "DateCreated": "2015-08-07T20:48:49.599Z",
              "DateUpdated": "2015-08-12T18:16:55.019Z",
              "EndpointURL": "awseb-e-w-AWSEBLoa-1483140XB0Q4L-109QXY8121.us-west-2.elb.amazonaws.com",
              "EnvironmentId": "e-rpqsewtp2j",
              "EnvironmentName": "my-env",
              "Health": "Green",
              "SolutionStackName": "64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8",
              "Status": "Ready",
              "Tier": { "Name": "WebServer", "Type": "Standard", "Version": " " },
              "VersionLabel": "7f58-stage-150812_025409"
            }
          ]
        },
        "properties": {
          "Environments": { "$ref": "#/components/schemas/EnvironmentDescriptionsList" },
          "NextToken": { "$ref": "#/components/schemas/Token" }
        },
        "type": "object"
      },
      "EnvironmentHealth": { "enum": ["Green", "Yellow", "Red", "Grey"], "type": "string" },
      "EnvironmentHealthAttribute": {
        "enum": [
          "Status",
          "Color",
          "Causes",
          "ApplicationMetrics",
          "InstancesHealth",
          "All",
          "HealthStatus",
          "RefreshedAt"
        ],
        "type": "string"
      },
      "EnvironmentHealthAttributes": {
        "items": { "$ref": "#/components/schemas/EnvironmentHealthAttribute" },
        "type": "array"
      },
      "EnvironmentHealthStatus": {
        "enum": ["NoData", "Unknown", "Pending", "Ok", "Info", "Warning", "Degraded", "Severe", "Suspended"],
        "type": "string"
      },
      "EnvironmentId": { "type": "string" },
      "EnvironmentIdList": { "items": { "$ref": "#/components/schemas/EnvironmentId" }, "type": "array" },
      "EnvironmentInfoDescription": {
        "description": "The information retrieved from the Amazon EC2 instances.",
        "properties": {
          "Ec2InstanceId": { "$ref": "#/components/schemas/Ec2InstanceId" },
          "InfoType": { "$ref": "#/components/schemas/EnvironmentInfoType" },
          "Message": { "$ref": "#/components/schemas/Message" },
          "SampleTimestamp": { "$ref": "#/components/schemas/SampleTimestamp" }
        },
        "type": "object"
      },
      "EnvironmentInfoDescriptionList": {
        "items": { "$ref": "#/components/schemas/EnvironmentInfoDescription" },
        "type": "array"
      },
      "EnvironmentInfoType": { "enum": ["tail", "bundle"], "type": "string" },
      "EnvironmentLink": {
        "description": "A link to another environment, defined in the environment's manifest. Links provide connection information in system properties that can be used to connect to another environment in the same group. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html\">Environment Manifest (env.yaml)</a> for details.",
        "properties": {
          "EnvironmentName": { "$ref": "#/components/schemas/String" },
          "LinkName": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "EnvironmentLinks": { "items": { "$ref": "#/components/schemas/EnvironmentLink" }, "type": "array" },
      "EnvironmentName": { "maxLength": 40, "minLength": 4, "type": "string" },
      "EnvironmentNamesList": { "items": { "$ref": "#/components/schemas/EnvironmentName" }, "type": "array" },
      "EnvironmentResourceDescription": {
        "description": "Describes the AWS resources in use by this environment. This data is live.",
        "properties": {
          "AutoScalingGroups": { "$ref": "#/components/schemas/AutoScalingGroupList" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "Instances": { "$ref": "#/components/schemas/InstanceList" },
          "LaunchConfigurations": { "$ref": "#/components/schemas/LaunchConfigurationList" },
          "LaunchTemplates": { "$ref": "#/components/schemas/LaunchTemplateList" },
          "LoadBalancers": { "$ref": "#/components/schemas/LoadBalancerList" },
          "Queues": { "$ref": "#/components/schemas/QueueList" },
          "Triggers": { "$ref": "#/components/schemas/TriggerList" }
        },
        "type": "object"
      },
      "EnvironmentResourceDescriptionsMessage": {
        "description": "Result message containing a list of environment resource descriptions.",
        "example": {
          "EnvironmentResources": {
            "AutoScalingGroups": [{ "Name": "awseb-e-qu3fyyjyjs-stack-AWSEBAutoScalingGroup-QSB2ZO88SXZT" }],
            "EnvironmentName": "my-env",
            "Instances": [{ "Id": "i-0c91c786" }],
            "LaunchConfigurations": [
              { "Name": "awseb-e-qu3fyyjyjs-stack-AWSEBAutoScalingLaunchConfiguration-1UUVQIBC96TQ2" }
            ],
            "LoadBalancers": [{ "Name": "awseb-e-q-AWSEBLoa-1EEPZ0K98BIF0" }],
            "Queues": [],
            "Triggers": []
          }
        },
        "properties": { "EnvironmentResources": { "$ref": "#/components/schemas/EnvironmentResourceDescription" } },
        "type": "object"
      },
      "EnvironmentResourcesDescription": {
        "description": "Describes the AWS resources in use by this environment. This data is not live data.",
        "properties": { "LoadBalancer": { "$ref": "#/components/schemas/LoadBalancerDescription" } },
        "type": "object"
      },
      "EnvironmentStatus": {
        "enum": ["Launching", "Updating", "Ready", "Terminating", "Terminated"],
        "type": "string"
      },
      "EnvironmentTier": {
        "description": "Describes the properties of an environment tier",
        "properties": {
          "Name": { "$ref": "#/components/schemas/String" },
          "Type": { "$ref": "#/components/schemas/String" },
          "Version": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "EventDate": { "format": "date-time", "type": "string" },
      "EventDescription": {
        "description": "Describes an event.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "EventDate": { "$ref": "#/components/schemas/EventDate" },
          "Message": { "$ref": "#/components/schemas/EventMessage" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "RequestId": { "$ref": "#/components/schemas/RequestId" },
          "Severity": { "$ref": "#/components/schemas/EventSeverity" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" },
          "VersionLabel": { "$ref": "#/components/schemas/VersionLabel" }
        },
        "type": "object"
      },
      "EventDescriptionList": { "items": { "$ref": "#/components/schemas/EventDescription" }, "type": "array" },
      "EventDescriptionsMessage": {
        "description": "Result message wrapping a list of event descriptions.",
        "example": {
          "Events": [
            {
              "ApplicationName": "my-app",
              "EnvironmentName": "my-env",
              "EventDate": "2015-08-20T07:06:53.535Z",
              "Message": "Environment health has transitioned from Info to Ok.",
              "Severity": "INFO"
            },
            {
              "ApplicationName": "my-app",
              "EnvironmentName": "my-env",
              "EventDate": "2015-08-20T07:06:02.049Z",
              "Message": "Environment update completed successfully.",
              "RequestId": "b7f3960b-4709-11e5-ba1e-07e16200da41",
              "Severity": "INFO"
            },
            {
              "ApplicationName": "my-app",
              "EnvironmentName": "my-env",
              "EventDate": "2015-08-13T19:16:27.561Z",
              "Message": "Using elasticbeanstalk-us-west-2-012445113685 as Amazon S3 storage bucket for environment data.",
              "RequestId": "ca8dfbf6-41ef-11e5-988b-651aa638f46b",
              "Severity": "INFO"
            },
            {
              "ApplicationName": "my-app",
              "EnvironmentName": "my-env",
              "EventDate": "2015-08-13T19:16:26.581Z",
              "Message": "createEnvironment is starting.",
              "RequestId": "cdfba8f6-41ef-11e5-988b-65638f41aa6b",
              "Severity": "INFO"
            }
          ]
        },
        "properties": {
          "Events": { "$ref": "#/components/schemas/EventDescriptionList" },
          "NextToken": { "$ref": "#/components/schemas/Token" }
        },
        "type": "object"
      },
      "EventMessage": { "type": "string" },
      "EventSeverity": { "enum": ["TRACE", "DEBUG", "INFO", "WARN", "ERROR", "FATAL"], "type": "string" },
      "FailureType": {
        "enum": [
          "UpdateCancelled",
          "CancellationFailed",
          "RollbackFailed",
          "RollbackSuccessful",
          "InternalFailure",
          "InvalidEnvironmentState",
          "PermissionsError"
        ],
        "type": "string"
      },
      "FileTypeExtension": { "maxLength": 100, "minLength": 1, "type": "string" },
      "ForceTerminate": { "type": "boolean" },
      "GroupName": { "maxLength": 19, "minLength": 1, "type": "string" },
      "ImageId": { "type": "string" },
      "IncludeDeleted": { "type": "boolean" },
      "IncludeDeletedBackTo": { "format": "date-time", "type": "string" },
      "Instance": {
        "description": "The description of an Amazon EC2 instance.",
        "properties": { "Id": { "$ref": "#/components/schemas/ResourceId" } },
        "type": "object"
      },
      "InstanceHealthList": { "items": { "$ref": "#/components/schemas/SingleInstanceHealth" }, "type": "array" },
      "InstanceHealthSummary": {
        "description": "Represents summary information about the health of an instance. For more information, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html\">Health Colors and Statuses</a>.",
        "properties": {
          "Degraded": { "$ref": "#/components/schemas/NullableInteger" },
          "Info": { "$ref": "#/components/schemas/NullableInteger" },
          "NoData": { "$ref": "#/components/schemas/NullableInteger" },
          "Ok": { "$ref": "#/components/schemas/NullableInteger" },
          "Pending": { "$ref": "#/components/schemas/NullableInteger" },
          "Severe": { "$ref": "#/components/schemas/NullableInteger" },
          "Unknown": { "$ref": "#/components/schemas/NullableInteger" },
          "Warning": { "$ref": "#/components/schemas/NullableInteger" }
        },
        "type": "object"
      },
      "InstanceId": { "maxLength": 255, "minLength": 1, "type": "string" },
      "InstanceList": { "items": { "$ref": "#/components/schemas/Instance" }, "type": "array" },
      "InstancesHealthAttribute": {
        "enum": [
          "HealthStatus",
          "Color",
          "Causes",
          "ApplicationMetrics",
          "RefreshedAt",
          "LaunchedAt",
          "System",
          "Deployment",
          "AvailabilityZone",
          "InstanceType",
          "All"
        ],
        "type": "string"
      },
      "InstancesHealthAttributes": {
        "items": { "$ref": "#/components/schemas/InstancesHealthAttribute" },
        "type": "array"
      },
      "InsufficientPrivilegesException": {},
      "Integer": { "type": "integer" },
      "InvalidRequestException": {},
      "Latency": {
        "description": "Represents the average latency for the slowest X percent of requests over the last 10 seconds.",
        "properties": {
          "P10": { "$ref": "#/components/schemas/NullableDouble" },
          "P50": { "$ref": "#/components/schemas/NullableDouble" },
          "P75": { "$ref": "#/components/schemas/NullableDouble" },
          "P85": { "$ref": "#/components/schemas/NullableDouble" },
          "P90": { "$ref": "#/components/schemas/NullableDouble" },
          "P95": { "$ref": "#/components/schemas/NullableDouble" },
          "P99": { "$ref": "#/components/schemas/NullableDouble" },
          "P999": { "$ref": "#/components/schemas/NullableDouble" }
        },
        "type": "object"
      },
      "LaunchConfiguration": {
        "description": "Describes an Auto Scaling launch configuration.",
        "properties": { "Name": { "$ref": "#/components/schemas/ResourceId" } },
        "type": "object"
      },
      "LaunchConfigurationList": { "items": { "$ref": "#/components/schemas/LaunchConfiguration" }, "type": "array" },
      "LaunchTemplate": {
        "description": "Describes an Amazon EC2 launch template.",
        "properties": { "Id": { "$ref": "#/components/schemas/ResourceId" } },
        "type": "object"
      },
      "LaunchTemplateList": { "items": { "$ref": "#/components/schemas/LaunchTemplate" }, "type": "array" },
      "LaunchedAt": { "format": "date-time", "type": "string" },
      "ListAvailableSolutionStacksResultMessage": {
        "description": "A list of available AWS Elastic Beanstalk solution stacks.",
        "example": {
          "SolutionStackDetails": [
            { "PermittedFileTypes": ["zip"], "SolutionStackName": "64bit Amazon Linux 2015.03 v2.0.0 running Node.js" }
          ],
          "SolutionStacks": [
            "64bit Amazon Linux 2015.03 v2.0.0 running Node.js",
            "64bit Amazon Linux 2015.03 v2.0.0 running PHP 5.6",
            "64bit Amazon Linux 2015.03 v2.0.0 running PHP 5.5",
            "64bit Amazon Linux 2015.03 v2.0.0 running PHP 5.4",
            "64bit Amazon Linux 2015.03 v2.0.0 running Python 3.4",
            "64bit Amazon Linux 2015.03 v2.0.0 running Python 2.7",
            "64bit Amazon Linux 2015.03 v2.0.0 running Python",
            "64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.2 (Puma)",
            "64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.2 (Passenger Standalone)",
            "64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.1 (Puma)",
            "64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.1 (Passenger Standalone)",
            "64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.0 (Puma)",
            "64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.0 (Passenger Standalone)",
            "64bit Amazon Linux 2015.03 v2.0.0 running Ruby 1.9.3",
            "64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8",
            "64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 7 Java 7",
            "64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 7 Java 6",
            "64bit Windows Server Core 2012 R2 running IIS 8.5",
            "64bit Windows Server 2012 R2 running IIS 8.5",
            "64bit Windows Server 2012 running IIS 8",
            "64bit Windows Server 2008 R2 running IIS 7.5",
            "64bit Amazon Linux 2015.03 v2.0.0 running Docker 1.6.2",
            "64bit Amazon Linux 2015.03 v2.0.0 running Multi-container Docker 1.6.2 (Generic)",
            "64bit Debian jessie v2.0.0 running GlassFish 4.1 Java 8 (Preconfigured - Docker)",
            "64bit Debian jessie v2.0.0 running GlassFish 4.0 Java 7 (Preconfigured - Docker)",
            "64bit Debian jessie v2.0.0 running Go 1.4 (Preconfigured - Docker)",
            "64bit Debian jessie v2.0.0 running Go 1.3 (Preconfigured - Docker)",
            "64bit Debian jessie v2.0.0 running Python 3.4 (Preconfigured - Docker)"
          ]
        },
        "properties": {
          "SolutionStackDetails": { "$ref": "#/components/schemas/AvailableSolutionStackDetailsList" },
          "SolutionStacks": { "$ref": "#/components/schemas/AvailableSolutionStackNamesList" }
        },
        "type": "object"
      },
      "ListPlatformVersionsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/PlatformFilters" },
          "MaxRecords": { "$ref": "#/components/schemas/PlatformMaxRecords" },
          "NextToken": { "$ref": "#/components/schemas/Token" }
        },
        "type": "object"
      },
      "ListPlatformVersionsResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/Token" },
          "PlatformSummaryList": { "$ref": "#/components/schemas/PlatformSummaryList" }
        },
        "type": "object"
      },
      "ListTagsForResourceMessage": {
        "properties": { "ResourceArn": { "$ref": "#/components/schemas/ResourceArn" } },
        "required": ["ResourceArn"],
        "type": "object"
      },
      "Listener": {
        "description": "Describes the properties of a Listener for the LoadBalancer.",
        "properties": {
          "Port": { "$ref": "#/components/schemas/Integer" },
          "Protocol": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "LoadAverage": { "items": { "$ref": "#/components/schemas/LoadAverageValue" }, "type": "array" },
      "LoadAverageValue": { "format": "double", "type": "number" },
      "LoadBalancer": {
        "description": "Describes a LoadBalancer.",
        "properties": { "Name": { "$ref": "#/components/schemas/ResourceId" } },
        "type": "object"
      },
      "LoadBalancerDescription": {
        "description": "Describes the details of a LoadBalancer.",
        "properties": {
          "Domain": { "$ref": "#/components/schemas/String" },
          "Listeners": { "$ref": "#/components/schemas/LoadBalancerListenersDescription" },
          "LoadBalancerName": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "LoadBalancerList": { "items": { "$ref": "#/components/schemas/LoadBalancer" }, "type": "array" },
      "LoadBalancerListenersDescription": { "items": { "$ref": "#/components/schemas/Listener" }, "type": "array" },
      "Maintainer": { "type": "string" },
      "ManagedAction": {
        "description": "The record of an upcoming or in-progress managed action.",
        "properties": {
          "ActionDescription": { "$ref": "#/components/schemas/String" },
          "ActionId": { "$ref": "#/components/schemas/String" },
          "ActionType": { "$ref": "#/components/schemas/ActionType" },
          "Status": { "$ref": "#/components/schemas/ActionStatus" },
          "WindowStartTime": { "$ref": "#/components/schemas/Timestamp" }
        },
        "type": "object"
      },
      "ManagedActionHistoryItem": {
        "description": "The record of a completed or failed managed action.",
        "properties": {
          "ActionDescription": { "$ref": "#/components/schemas/String" },
          "ActionId": { "$ref": "#/components/schemas/String" },
          "ActionType": { "$ref": "#/components/schemas/ActionType" },
          "ExecutedTime": { "$ref": "#/components/schemas/Timestamp" },
          "FailureDescription": { "$ref": "#/components/schemas/String" },
          "FailureType": { "$ref": "#/components/schemas/FailureType" },
          "FinishedTime": { "$ref": "#/components/schemas/Timestamp" },
          "Status": { "$ref": "#/components/schemas/ActionHistoryStatus" }
        },
        "type": "object"
      },
      "ManagedActionHistoryItems": {
        "items": { "$ref": "#/components/schemas/ManagedActionHistoryItem" },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "ManagedActionInvalidStateException": {},
      "ManagedActions": {
        "items": { "$ref": "#/components/schemas/ManagedAction" },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "MaxAgeRule": {
        "description": "A lifecycle rule that deletes application versions after the specified number of days.",
        "properties": {
          "DeleteSourceFromS3": { "$ref": "#/components/schemas/BoxedBoolean" },
          "Enabled": { "$ref": "#/components/schemas/BoxedBoolean" },
          "MaxAgeInDays": { "$ref": "#/components/schemas/BoxedInt" }
        },
        "required": ["Enabled"],
        "type": "object"
      },
      "MaxCountRule": {
        "description": "A lifecycle rule that deletes the oldest application version when the maximum count is exceeded.",
        "properties": {
          "DeleteSourceFromS3": { "$ref": "#/components/schemas/BoxedBoolean" },
          "Enabled": { "$ref": "#/components/schemas/BoxedBoolean" },
          "MaxCount": { "$ref": "#/components/schemas/BoxedInt" }
        },
        "required": ["Enabled"],
        "type": "object"
      },
      "MaxRecords": { "maximum": 1000, "minimum": 1, "type": "integer" },
      "Message": { "type": "string" },
      "NextToken": { "maxLength": 100, "minLength": 1, "type": "string" },
      "NonEmptyString": { "pattern": ".*\\S.*", "type": "string" },
      "NullableDouble": { "format": "double", "type": "number" },
      "NullableInteger": { "type": "integer" },
      "NullableLong": { "type": "integer" },
      "OperatingSystemName": { "type": "string" },
      "OperatingSystemVersion": { "type": "string" },
      "OperationInProgressException": {},
      "OptionNamespace": { "type": "string" },
      "OptionRestrictionMaxLength": { "type": "integer" },
      "OptionRestrictionMaxValue": { "type": "integer" },
      "OptionRestrictionMinValue": { "type": "integer" },
      "OptionRestrictionRegex": {
        "description": "A regular expression representing a restriction on a string configuration option value.",
        "properties": {
          "Label": { "$ref": "#/components/schemas/RegexLabel" },
          "Pattern": { "$ref": "#/components/schemas/RegexPattern" }
        },
        "type": "object"
      },
      "OptionSpecification": {
        "description": "A specification identifying an individual configuration option.",
        "properties": {
          "Namespace": { "$ref": "#/components/schemas/OptionNamespace" },
          "OptionName": { "$ref": "#/components/schemas/ConfigurationOptionName" },
          "ResourceName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "type": "object"
      },
      "OptionsSpecifierList": { "items": { "$ref": "#/components/schemas/OptionSpecification" }, "type": "array" },
      "PlatformArn": { "type": "string" },
      "PlatformCategory": { "type": "string" },
      "PlatformDescription": {
        "description": "Detailed information about a platform.",
        "properties": {
          "CustomAmiList": { "$ref": "#/components/schemas/CustomAmiList" },
          "DateCreated": { "$ref": "#/components/schemas/CreationDate" },
          "DateUpdated": { "$ref": "#/components/schemas/UpdateDate" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "Frameworks": { "$ref": "#/components/schemas/PlatformFrameworks" },
          "Maintainer": { "$ref": "#/components/schemas/Maintainer" },
          "OperatingSystemName": { "$ref": "#/components/schemas/OperatingSystemName" },
          "OperatingSystemVersion": { "$ref": "#/components/schemas/OperatingSystemVersion" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "PlatformCategory": { "$ref": "#/components/schemas/PlatformCategory" },
          "PlatformName": { "$ref": "#/components/schemas/PlatformName" },
          "PlatformOwner": { "$ref": "#/components/schemas/PlatformOwner" },
          "PlatformStatus": { "$ref": "#/components/schemas/PlatformStatus" },
          "PlatformVersion": { "$ref": "#/components/schemas/PlatformVersion" },
          "ProgrammingLanguages": { "$ref": "#/components/schemas/PlatformProgrammingLanguages" },
          "SolutionStackName": { "$ref": "#/components/schemas/SolutionStackName" },
          "SupportedAddonList": { "$ref": "#/components/schemas/SupportedAddonList" },
          "SupportedTierList": { "$ref": "#/components/schemas/SupportedTierList" }
        },
        "type": "object"
      },
      "PlatformFilter": {
        "description": "<p>Specify criteria to restrict the results when listing custom platforms.</p> <p>The filter is evaluated as the expression:</p> <p> <code>Type</code> <code>Operator</code> <code>Values[i]</code> </p>",
        "properties": {
          "Operator": { "$ref": "#/components/schemas/PlatformFilterOperator" },
          "Type": { "$ref": "#/components/schemas/PlatformFilterType" },
          "Values": { "$ref": "#/components/schemas/PlatformFilterValueList" }
        },
        "type": "object"
      },
      "PlatformFilterOperator": { "type": "string" },
      "PlatformFilterType": { "type": "string" },
      "PlatformFilterValue": { "type": "string" },
      "PlatformFilterValueList": { "items": { "$ref": "#/components/schemas/PlatformFilterValue" }, "type": "array" },
      "PlatformFilters": { "items": { "$ref": "#/components/schemas/PlatformFilter" }, "type": "array" },
      "PlatformFramework": {
        "description": "A framework supported by the custom platform.",
        "properties": {
          "Name": { "$ref": "#/components/schemas/String" },
          "Version": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "PlatformFrameworks": { "items": { "$ref": "#/components/schemas/PlatformFramework" }, "type": "array" },
      "PlatformMaxRecords": { "minimum": 1, "type": "integer" },
      "PlatformName": { "type": "string" },
      "PlatformOwner": { "type": "string" },
      "PlatformProgrammingLanguage": {
        "description": "A programming language supported by the platform.",
        "properties": {
          "Name": { "$ref": "#/components/schemas/String" },
          "Version": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "PlatformProgrammingLanguages": {
        "items": { "$ref": "#/components/schemas/PlatformProgrammingLanguage" },
        "type": "array"
      },
      "PlatformStatus": { "enum": ["Creating", "Failed", "Ready", "Deleting", "Deleted"], "type": "string" },
      "PlatformSummary": {
        "description": "Detailed information about a platform.",
        "properties": {
          "OperatingSystemName": { "$ref": "#/components/schemas/OperatingSystemName" },
          "OperatingSystemVersion": { "$ref": "#/components/schemas/OperatingSystemVersion" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "PlatformCategory": { "$ref": "#/components/schemas/PlatformCategory" },
          "PlatformOwner": { "$ref": "#/components/schemas/PlatformOwner" },
          "PlatformStatus": { "$ref": "#/components/schemas/PlatformStatus" },
          "SupportedAddonList": { "$ref": "#/components/schemas/SupportedAddonList" },
          "SupportedTierList": { "$ref": "#/components/schemas/SupportedTierList" }
        },
        "type": "object"
      },
      "PlatformSummaryList": { "items": { "$ref": "#/components/schemas/PlatformSummary" }, "type": "array" },
      "PlatformVersion": { "type": "string" },
      "PlatformVersionStillReferencedException": {},
      "Queue": {
        "description": "Describes a queue.",
        "properties": {
          "Name": { "$ref": "#/components/schemas/String" },
          "URL": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "QueueList": { "items": { "$ref": "#/components/schemas/Queue" }, "type": "array" },
      "RebuildEnvironmentMessage": {
        "description": "<p/>",
        "properties": {
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" }
        },
        "type": "object"
      },
      "RefreshedAt": { "format": "date-time", "type": "string" },
      "RegexLabel": { "type": "string" },
      "RegexPattern": { "type": "string" },
      "RequestCount": { "type": "integer" },
      "RequestEnvironmentInfoMessage": {
        "description": "Request to retrieve logs from an environment and store them in your Elastic Beanstalk storage bucket.",
        "properties": {
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "InfoType": { "$ref": "#/components/schemas/EnvironmentInfoType" }
        },
        "required": ["InfoType"],
        "type": "object"
      },
      "RequestId": { "type": "string" },
      "ResourceArn": { "type": "string" },
      "ResourceId": { "type": "string" },
      "ResourceName": { "maxLength": 256, "minLength": 1, "type": "string" },
      "ResourceNotFoundException": {},
      "ResourceQuota": {
        "description": "The AWS Elastic Beanstalk quota information for a single resource type in an AWS account. It reflects the resource's limits for this account.",
        "properties": { "Maximum": { "$ref": "#/components/schemas/BoxedInt" } },
        "type": "object"
      },
      "ResourceQuotas": {
        "description": "A set of per-resource AWS Elastic Beanstalk quotas associated with an AWS account. They reflect Elastic Beanstalk resource limits for this account.",
        "properties": {
          "ApplicationQuota": { "$ref": "#/components/schemas/ResourceQuota" },
          "ApplicationVersionQuota": { "$ref": "#/components/schemas/ResourceQuota" },
          "ConfigurationTemplateQuota": { "$ref": "#/components/schemas/ResourceQuota" },
          "CustomPlatformQuota": { "$ref": "#/components/schemas/ResourceQuota" },
          "EnvironmentQuota": { "$ref": "#/components/schemas/ResourceQuota" }
        },
        "type": "object"
      },
      "ResourceTagsDescriptionMessage": {
        "properties": {
          "ResourceArn": { "$ref": "#/components/schemas/ResourceArn" },
          "ResourceTags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "ResourceTypeNotSupportedException": {},
      "RestartAppServerMessage": {
        "description": "<p/>",
        "properties": {
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" }
        },
        "type": "object"
      },
      "RetrieveEnvironmentInfoMessage": {
        "description": "Request to download logs retrieved with <a>RequestEnvironmentInfo</a>.",
        "properties": {
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "InfoType": { "$ref": "#/components/schemas/EnvironmentInfoType" }
        },
        "required": ["InfoType"],
        "type": "object"
      },
      "RetrieveEnvironmentInfoResultMessage": {
        "description": "Result message containing a description of the requested environment info.",
        "example": {
          "EnvironmentInfo": [
            {
              "Ec2InstanceId": "i-09c1c867",
              "InfoType": "tail",
              "Message": "https://elasticbeanstalk-us-west-2-0123456789012.s3.amazonaws.com/resources/environments/logs/tail/e-fyqyju3yjs/i-09c1c867/TailLogs-1440109397703.out?AWSAccessKeyId=AKGPT4J56IAJ2EUBL5CQ&Expires=1440195891&Signature=n%2BEalOV6A2HIOx4Rcfb7LT16bBM%3D",
              "SampleTimestamp": "2015-08-20T22:23:17.703Z"
            }
          ]
        },
        "properties": { "EnvironmentInfo": { "$ref": "#/components/schemas/EnvironmentInfoDescriptionList" } },
        "type": "object"
      },
      "S3Bucket": { "maxLength": 255, "type": "string" },
      "S3Key": { "maxLength": 1024, "type": "string" },
      "S3Location": {
        "description": "The bucket and key of an item stored in Amazon S3.",
        "properties": {
          "S3Bucket": { "$ref": "#/components/schemas/S3Bucket" },
          "S3Key": { "$ref": "#/components/schemas/S3Key" }
        },
        "type": "object"
      },
      "S3LocationNotInServiceRegionException": {},
      "S3SubscriptionRequiredException": {},
      "SampleTimestamp": { "format": "date-time", "type": "string" },
      "SingleInstanceHealth": {
        "description": "Detailed health information about an Amazon EC2 instance in your Elastic Beanstalk environment.",
        "properties": {
          "ApplicationMetrics": { "$ref": "#/components/schemas/ApplicationMetrics" },
          "AvailabilityZone": { "$ref": "#/components/schemas/String" },
          "Causes": { "$ref": "#/components/schemas/Causes" },
          "Color": { "$ref": "#/components/schemas/String" },
          "Deployment": { "$ref": "#/components/schemas/Deployment" },
          "HealthStatus": { "$ref": "#/components/schemas/String" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "InstanceType": { "$ref": "#/components/schemas/String" },
          "LaunchedAt": { "$ref": "#/components/schemas/LaunchedAt" },
          "System": { "$ref": "#/components/schemas/SystemStatus" }
        },
        "type": "object"
      },
      "SolutionStackDescription": {
        "description": "Describes the solution stack.",
        "properties": {
          "PermittedFileTypes": { "$ref": "#/components/schemas/SolutionStackFileTypeList" },
          "SolutionStackName": { "$ref": "#/components/schemas/SolutionStackName" }
        },
        "type": "object"
      },
      "SolutionStackFileTypeList": { "items": { "$ref": "#/components/schemas/FileTypeExtension" }, "type": "array" },
      "SolutionStackName": { "type": "string" },
      "SourceBuildInformation": {
        "description": "Location of the source code for an application version.",
        "properties": {
          "SourceLocation": { "$ref": "#/components/schemas/SourceLocation" },
          "SourceRepository": { "$ref": "#/components/schemas/SourceRepository" },
          "SourceType": { "$ref": "#/components/schemas/SourceType" }
        },
        "required": ["SourceType", "SourceRepository", "SourceLocation"],
        "type": "object"
      },
      "SourceBundleDeletionException": {},
      "SourceConfiguration": {
        "description": "A specification for an environment configuration",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" }
        },
        "type": "object"
      },
      "SourceLocation": { "maxLength": 255, "minLength": 3, "pattern": ".+/.+", "type": "string" },
      "SourceRepository": { "enum": ["CodeCommit", "S3"], "type": "string" },
      "SourceType": { "enum": ["Git", "Zip"], "type": "string" },
      "StatusCodes": {
        "description": "Represents the percentage of requests over the last 10 seconds that resulted in each type of status code response. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\">Status Code Definitions</a>.",
        "properties": {
          "Status2xx": { "$ref": "#/components/schemas/NullableInteger" },
          "Status3xx": { "$ref": "#/components/schemas/NullableInteger" },
          "Status4xx": { "$ref": "#/components/schemas/NullableInteger" },
          "Status5xx": { "$ref": "#/components/schemas/NullableInteger" }
        },
        "type": "object"
      },
      "String": { "type": "string" },
      "SupportedAddon": { "type": "string" },
      "SupportedAddonList": { "items": { "$ref": "#/components/schemas/SupportedAddon" }, "type": "array" },
      "SupportedTier": { "type": "string" },
      "SupportedTierList": { "items": { "$ref": "#/components/schemas/SupportedTier" }, "type": "array" },
      "SwapEnvironmentCNAMEsMessage": {
        "description": "Swaps the CNAMEs of two environments.",
        "properties": {
          "DestinationEnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "DestinationEnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "SourceEnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "SourceEnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" }
        },
        "type": "object"
      },
      "SystemStatus": {
        "description": "CPU utilization and load average metrics for an Amazon EC2 instance.",
        "properties": {
          "CPUUtilization": { "$ref": "#/components/schemas/CPUUtilization" },
          "LoadAverage": { "$ref": "#/components/schemas/LoadAverage" }
        },
        "type": "object"
      },
      "Tag": {
        "description": "Describes a tag applied to a resource in an environment.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TagKey" },
          "Value": { "$ref": "#/components/schemas/TagValue" }
        },
        "type": "object"
      },
      "TagKey": { "maxLength": 128, "minLength": 1, "type": "string" },
      "TagKeyList": { "items": { "$ref": "#/components/schemas/TagKey" }, "type": "array" },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "type": "array" },
      "TagValue": { "maxLength": 256, "minLength": 1, "type": "string" },
      "Tags": { "items": { "$ref": "#/components/schemas/Tag" }, "type": "array" },
      "TerminateEnvForce": { "type": "boolean" },
      "TerminateEnvironmentMessage": {
        "description": "Request to terminate an environment.",
        "properties": {
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "ForceTerminate": { "$ref": "#/components/schemas/ForceTerminate" },
          "TerminateResources": { "$ref": "#/components/schemas/TerminateEnvironmentResources" }
        },
        "type": "object"
      },
      "TerminateEnvironmentResources": { "type": "boolean" },
      "TimeFilterEnd": { "format": "date-time", "type": "string" },
      "TimeFilterStart": { "format": "date-time", "type": "string" },
      "Timestamp": { "format": "date-time", "type": "string" },
      "Token": { "type": "string" },
      "TooManyApplicationVersionsException": {},
      "TooManyApplicationsException": {},
      "TooManyBucketsException": {},
      "TooManyConfigurationTemplatesException": {},
      "TooManyEnvironmentsException": {},
      "TooManyPlatformsException": {},
      "TooManyTagsException": {},
      "Trigger": {
        "description": "Describes a trigger.",
        "properties": { "Name": { "$ref": "#/components/schemas/ResourceId" } },
        "type": "object"
      },
      "TriggerList": { "items": { "$ref": "#/components/schemas/Trigger" }, "type": "array" },
      "UpdateApplicationMessage": {
        "description": "Request to update an application.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "Description": { "$ref": "#/components/schemas/Description" }
        },
        "required": ["ApplicationName"],
        "type": "object"
      },
      "UpdateApplicationResourceLifecycleMessage": {
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "ResourceLifecycleConfig": { "$ref": "#/components/schemas/ApplicationResourceLifecycleConfig" }
        },
        "required": ["ApplicationName", "ResourceLifecycleConfig"],
        "type": "object"
      },
      "UpdateApplicationVersionMessage": {
        "description": "<p/>",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "VersionLabel": { "$ref": "#/components/schemas/VersionLabel" }
        },
        "required": ["ApplicationName", "VersionLabel"],
        "type": "object"
      },
      "UpdateConfigurationTemplateMessage": {
        "description": "The result message containing the options for the specified solution stack.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "OptionSettings": { "$ref": "#/components/schemas/ConfigurationOptionSettingsList" },
          "OptionsToRemove": { "$ref": "#/components/schemas/OptionsSpecifierList" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" }
        },
        "required": ["ApplicationName", "TemplateName"],
        "type": "object"
      },
      "UpdateDate": { "format": "date-time", "type": "string" },
      "UpdateEnvironmentMessage": {
        "description": "Request to update an environment.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "EnvironmentId": { "$ref": "#/components/schemas/EnvironmentId" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "GroupName": { "$ref": "#/components/schemas/GroupName" },
          "OptionSettings": { "$ref": "#/components/schemas/ConfigurationOptionSettingsList" },
          "OptionsToRemove": { "$ref": "#/components/schemas/OptionsSpecifierList" },
          "PlatformArn": { "$ref": "#/components/schemas/PlatformArn" },
          "SolutionStackName": { "$ref": "#/components/schemas/SolutionStackName" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" },
          "Tier": { "$ref": "#/components/schemas/EnvironmentTier" },
          "VersionLabel": { "$ref": "#/components/schemas/VersionLabel" }
        },
        "type": "object"
      },
      "UpdateTagsForResourceMessage": {
        "properties": {
          "ResourceArn": { "$ref": "#/components/schemas/ResourceArn" },
          "TagsToAdd": { "$ref": "#/components/schemas/TagList" },
          "TagsToRemove": { "$ref": "#/components/schemas/TagKeyList" }
        },
        "required": ["ResourceArn"],
        "type": "object"
      },
      "UserDefinedOption": { "type": "boolean" },
      "ValidateConfigurationSettingsMessage": {
        "description": "A list of validation messages for a specified configuration template.",
        "properties": {
          "ApplicationName": { "$ref": "#/components/schemas/ApplicationName" },
          "EnvironmentName": { "$ref": "#/components/schemas/EnvironmentName" },
          "OptionSettings": { "$ref": "#/components/schemas/ConfigurationOptionSettingsList" },
          "TemplateName": { "$ref": "#/components/schemas/ConfigurationTemplateName" }
        },
        "required": ["ApplicationName", "OptionSettings"],
        "type": "object"
      },
      "ValidationMessage": {
        "description": "An error or warning for a desired configuration option value.",
        "properties": {
          "Message": { "$ref": "#/components/schemas/ValidationMessageString" },
          "Namespace": { "$ref": "#/components/schemas/OptionNamespace" },
          "OptionName": { "$ref": "#/components/schemas/ConfigurationOptionName" },
          "Severity": { "$ref": "#/components/schemas/ValidationSeverity" }
        },
        "type": "object"
      },
      "ValidationMessageString": { "type": "string" },
      "ValidationMessagesList": { "items": { "$ref": "#/components/schemas/ValidationMessage" }, "type": "array" },
      "ValidationSeverity": { "enum": ["error", "warning"], "type": "string" },
      "VersionLabel": { "maxLength": 100, "minLength": 1, "type": "string" },
      "VersionLabels": { "items": { "$ref": "#/components/schemas/VersionLabel" }, "type": "array" },
      "VersionLabelsList": { "items": { "$ref": "#/components/schemas/VersionLabel" }, "type": "array" },
      "VirtualizationType": { "type": "string" }
    }
  }
}
