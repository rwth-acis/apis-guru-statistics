{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "Pinpoint SMS and Voice Messaging public facing APIs",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Pinpoint SMS and Voice Service",
    "version": "2018-09-05",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sms-voice-2018-09-05.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "sms-voice"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/pinpoint/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/v1/sms-voice/configuration-sets": {
      "get": {
        "description": "List all of the configuration sets associated with your Amazon Pinpoint account in the current region.",
        "operationId": "ListConfigurationSets",
        "parameters": [
          {
            "description": "A token returned from a previous call to the API that indicates the position in the list of results.",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Used to specify the number of items that should be returned in the response.",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListConfigurationSetsResponse" } }
            }
          },
          "480": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "481": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "482": {
            "description": "InternalServiceErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceErrorException" } }
            }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Create a new configuration set. After you create the configuration set, you can add one or more event destinations to it.",
        "operationId": "CreateConfigurationSet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ConfigurationSetName": {
                    "description": "The name that you want to give the configuration set.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateConfigurationSetResponse" } }
            }
          },
          "480": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "481": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceErrorException" } }
            }
          },
          "484": {
            "description": "AlreadyExistsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AlreadyExistsException" } } }
          }
        }
      }
    },
    "/v1/sms-voice/configuration-sets/{ConfigurationSetName}": {
      "delete": {
        "description": "Deletes an existing configuration set.",
        "operationId": "DeleteConfigurationSet",
        "parameters": [
          {
            "description": "ConfigurationSetName",
            "in": "path",
            "name": "ConfigurationSetName",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteConfigurationSetResponse" } }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceErrorException" } }
            }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/v1/sms-voice/configuration-sets/{ConfigurationSetName}/event-destinations": {
      "get": {
        "description": "Obtain information about an event destination, including the types of events it reports, the Amazon Resource Name (ARN) of the destination, and the name of the event destination.",
        "operationId": "GetConfigurationSetEventDestinations",
        "parameters": [
          {
            "description": "ConfigurationSetName",
            "in": "path",
            "name": "ConfigurationSetName",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetConfigurationSetEventDestinationsResponse" }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceErrorException" } }
            }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Create a new event destination in a configuration set.",
        "operationId": "CreateConfigurationSetEventDestination",
        "parameters": [
          {
            "description": "ConfigurationSetName",
            "in": "path",
            "name": "ConfigurationSetName",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "EventDestination": {
                    "description": "An object that defines a single event destination.",
                    "properties": {
                      "CloudWatchLogsDestination": { "$ref": "#/components/schemas/CloudWatchLogsDestination" },
                      "Enabled": { "$ref": "#/components/schemas/Boolean" },
                      "KinesisFirehoseDestination": { "$ref": "#/components/schemas/KinesisFirehoseDestination" },
                      "MatchingEventTypes": { "$ref": "#/components/schemas/EventTypes" },
                      "SnsDestination": { "$ref": "#/components/schemas/SnsDestination" }
                    },
                    "type": "object"
                  },
                  "EventDestinationName": {
                    "description": "A name that identifies the event destination.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateConfigurationSetEventDestinationResponse" }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InternalServiceErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceErrorException" } }
            }
          },
          "483": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "484": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "485": {
            "description": "AlreadyExistsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AlreadyExistsException" } } }
          }
        }
      }
    },
    "/v1/sms-voice/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}": {
      "delete": {
        "description": "Deletes an event destination in a configuration set.",
        "operationId": "DeleteConfigurationSetEventDestination",
        "parameters": [
          {
            "description": "ConfigurationSetName",
            "in": "path",
            "name": "ConfigurationSetName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "EventDestinationName",
            "in": "path",
            "name": "EventDestinationName",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteConfigurationSetEventDestinationResponse" }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceErrorException" } }
            }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "put": {
        "description": "Update an event destination in a configuration set. An event destination is a location that you publish information about your voice calls to. For example, you can log an event to an Amazon CloudWatch destination when a call fails.",
        "operationId": "UpdateConfigurationSetEventDestination",
        "parameters": [
          {
            "description": "ConfigurationSetName",
            "in": "path",
            "name": "ConfigurationSetName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "EventDestinationName",
            "in": "path",
            "name": "EventDestinationName",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "EventDestination": {
                    "description": "An object that defines a single event destination.",
                    "properties": {
                      "CloudWatchLogsDestination": { "$ref": "#/components/schemas/CloudWatchLogsDestination" },
                      "Enabled": { "$ref": "#/components/schemas/Boolean" },
                      "KinesisFirehoseDestination": { "$ref": "#/components/schemas/KinesisFirehoseDestination" },
                      "MatchingEventTypes": { "$ref": "#/components/schemas/EventTypes" },
                      "SnsDestination": { "$ref": "#/components/schemas/SnsDestination" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateConfigurationSetEventDestinationResponse" }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotFoundException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceErrorException" } }
            }
          }
        }
      }
    },
    "/v1/sms-voice/voice/message": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Create a new voice message and send it to a recipient's phone number.",
        "operationId": "SendVoiceMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "CallerId": {
                    "description": "The phone number that appears on recipients' devices when they receive the message.",
                    "type": "string"
                  },
                  "ConfigurationSetName": {
                    "description": "The name of the configuration set that you want to use to send the message.",
                    "type": "string"
                  },
                  "Content": {
                    "description": "An object that contains a voice message and information about the recipient that you want to send it to.",
                    "properties": {
                      "CallInstructionsMessage": { "$ref": "#/components/schemas/CallInstructionsMessageType" },
                      "PlainTextMessage": { "$ref": "#/components/schemas/PlainTextMessageType" },
                      "SSMLMessage": { "$ref": "#/components/schemas/SSMLMessageType" }
                    },
                    "type": "object"
                  },
                  "DestinationPhoneNumber": {
                    "description": "The phone number that you want to send the voice message to.",
                    "type": "string"
                  },
                  "OriginationPhoneNumber": {
                    "description": "The phone number that Amazon Pinpoint should use to send the voice message. This isn't necessarily the phone number that appears on recipients' devices when they receive the message, because you can specify a CallerId parameter in the request.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SendVoiceMessageResponse" } } }
          },
          "480": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "481": {
            "description": "BadRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestException" } } }
          },
          "482": {
            "description": "InternalServiceErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceErrorException" } }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The Pinpoint SMS Voice multi-region endpoint",
      "url": "http://sms-voice.pinpoint.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Pinpoint SMS Voice multi-region endpoint",
      "url": "https://sms-voice.pinpoint.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Pinpoint SMS Voice endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://sms-voice.pinpoint.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Pinpoint SMS Voice endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://sms-voice.pinpoint.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AlreadyExistsException": {},
      "BadRequestException": {},
      "Boolean": { "type": "boolean" },
      "CallInstructionsMessageType": {
        "description": "An object that defines a message that contains text formatted using Amazon Pinpoint Voice Instructions markup.",
        "properties": { "Text": { "$ref": "#/components/schemas/NonEmptyString" } },
        "type": "object"
      },
      "CloudWatchLogsDestination": {
        "description": "An object that contains information about an event destination that sends data to Amazon CloudWatch Logs.",
        "properties": {
          "IamRoleArn": { "$ref": "#/components/schemas/String" },
          "LogGroupArn": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ConfigurationSets": {
        "description": "An array that contains all of the configuration sets in your Amazon Pinpoint account in the current AWS Region.",
        "items": { "$ref": "#/components/schemas/WordCharactersWithDelimiters" },
        "type": "array"
      },
      "CreateConfigurationSetEventDestinationRequest": {
        "description": "Create a new event destination in a configuration set.",
        "properties": {
          "EventDestination": { "$ref": "#/components/schemas/EventDestinationDefinition" },
          "EventDestinationName": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "CreateConfigurationSetEventDestinationResponse": {
        "description": "An empty object that indicates that the event destination was created successfully.",
        "properties": {},
        "type": "object"
      },
      "CreateConfigurationSetRequest": {
        "description": "A request to create a new configuration set.",
        "properties": { "ConfigurationSetName": { "$ref": "#/components/schemas/WordCharactersWithDelimiters" } },
        "type": "object"
      },
      "CreateConfigurationSetResponse": {
        "description": "An empty object that indicates that the configuration set was successfully created.",
        "properties": {},
        "type": "object"
      },
      "DeleteConfigurationSetEventDestinationRequest": { "properties": {}, "type": "object" },
      "DeleteConfigurationSetEventDestinationResponse": {
        "description": "An empty object that indicates that the event destination was deleted successfully.",
        "properties": {},
        "type": "object"
      },
      "DeleteConfigurationSetRequest": { "properties": {}, "type": "object" },
      "DeleteConfigurationSetResponse": {
        "description": "An empty object that indicates that the configuration set was deleted successfully.",
        "properties": {},
        "type": "object"
      },
      "EventDestination": {
        "description": "An object that defines an event destination.",
        "properties": {
          "CloudWatchLogsDestination": { "$ref": "#/components/schemas/CloudWatchLogsDestination" },
          "Enabled": { "$ref": "#/components/schemas/Boolean" },
          "KinesisFirehoseDestination": { "$ref": "#/components/schemas/KinesisFirehoseDestination" },
          "MatchingEventTypes": { "$ref": "#/components/schemas/EventTypes" },
          "Name": { "$ref": "#/components/schemas/String" },
          "SnsDestination": { "$ref": "#/components/schemas/SnsDestination" }
        },
        "type": "object"
      },
      "EventDestinationDefinition": {
        "description": "An object that defines a single event destination.",
        "properties": {
          "CloudWatchLogsDestination": { "$ref": "#/components/schemas/CloudWatchLogsDestination" },
          "Enabled": { "$ref": "#/components/schemas/Boolean" },
          "KinesisFirehoseDestination": { "$ref": "#/components/schemas/KinesisFirehoseDestination" },
          "MatchingEventTypes": { "$ref": "#/components/schemas/EventTypes" },
          "SnsDestination": { "$ref": "#/components/schemas/SnsDestination" }
        },
        "type": "object"
      },
      "EventDestinations": {
        "description": "An array of EventDestination objects. Each EventDestination object includes ARNs and other information that define an event destination.",
        "items": { "$ref": "#/components/schemas/EventDestination" },
        "type": "array"
      },
      "EventType": {
        "description": "The types of events that are sent to the event destination.",
        "enum": ["INITIATED_CALL", "RINGING", "ANSWERED", "COMPLETED_CALL", "BUSY", "FAILED", "NO_ANSWER"],
        "type": "string"
      },
      "EventTypes": {
        "description": "An array of EventDestination objects. Each EventDestination object includes ARNs and other information that define an event destination.",
        "items": { "$ref": "#/components/schemas/EventType" },
        "type": "array"
      },
      "GetConfigurationSetEventDestinationsRequest": { "properties": {}, "type": "object" },
      "GetConfigurationSetEventDestinationsResponse": {
        "description": "An object that contains information about an event destination.",
        "properties": { "EventDestinations": { "$ref": "#/components/schemas/EventDestinations" } },
        "type": "object"
      },
      "InternalServiceErrorException": {},
      "KinesisFirehoseDestination": {
        "description": "An object that contains information about an event destination that sends data to Amazon Kinesis Data Firehose.",
        "properties": {
          "DeliveryStreamArn": { "$ref": "#/components/schemas/String" },
          "IamRoleArn": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "LimitExceededException": {},
      "ListConfigurationSetsRequest": { "properties": {}, "type": "object" },
      "ListConfigurationSetsResponse": {
        "description": "An object that contains information about the configuration sets for your account in the current region.",
        "properties": {
          "ConfigurationSets": { "$ref": "#/components/schemas/ConfigurationSets" },
          "NextToken": { "$ref": "#/components/schemas/NextTokenString" }
        },
        "type": "object"
      },
      "NextTokenString": { "type": "string" },
      "NonEmptyString": { "type": "string" },
      "NotFoundException": {},
      "PlainTextMessageType": {
        "description": "An object that defines a message that contains unformatted text.",
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/String" },
          "Text": { "$ref": "#/components/schemas/NonEmptyString" },
          "VoiceId": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "SSMLMessageType": {
        "description": "An object that defines a message that contains SSML-formatted text.",
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/String" },
          "Text": { "$ref": "#/components/schemas/NonEmptyString" },
          "VoiceId": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "SendVoiceMessageRequest": {
        "description": "SendVoiceMessageRequest",
        "properties": {
          "CallerId": { "$ref": "#/components/schemas/String" },
          "ConfigurationSetName": { "$ref": "#/components/schemas/WordCharactersWithDelimiters" },
          "Content": { "$ref": "#/components/schemas/VoiceMessageContent" },
          "DestinationPhoneNumber": { "$ref": "#/components/schemas/NonEmptyString" },
          "OriginationPhoneNumber": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "SendVoiceMessageResponse": {
        "description": "An object that that contains the Message ID of a Voice message that was sent successfully.",
        "properties": { "MessageId": { "$ref": "#/components/schemas/String" } },
        "type": "object"
      },
      "SnsDestination": {
        "description": "An object that contains information about an event destination that sends data to Amazon SNS.",
        "properties": { "TopicArn": { "$ref": "#/components/schemas/String" } },
        "type": "object"
      },
      "String": { "type": "string" },
      "TooManyRequestsException": {},
      "UpdateConfigurationSetEventDestinationRequest": {
        "description": "UpdateConfigurationSetEventDestinationRequest",
        "properties": { "EventDestination": { "$ref": "#/components/schemas/EventDestinationDefinition" } },
        "type": "object"
      },
      "UpdateConfigurationSetEventDestinationResponse": {
        "description": "An empty object that indicates that the event destination was updated successfully.",
        "properties": {},
        "type": "object"
      },
      "VoiceMessageContent": {
        "description": "An object that contains a voice message and information about the recipient that you want to send it to.",
        "properties": {
          "CallInstructionsMessage": { "$ref": "#/components/schemas/CallInstructionsMessageType" },
          "PlainTextMessage": { "$ref": "#/components/schemas/PlainTextMessageType" },
          "SSMLMessage": { "$ref": "#/components/schemas/SSMLMessageType" }
        },
        "type": "object"
      },
      "WordCharactersWithDelimiters": { "type": "string" },
      "__string": { "type": "string" }
    }
  }
}
