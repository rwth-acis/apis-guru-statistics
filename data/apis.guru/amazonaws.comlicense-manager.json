{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname> AWS License Manager </fullname> <p> <i>This is the AWS License Manager API Reference.</i> It provides descriptions, syntax, and usage examples for each of the actions and data types for License Manager. The topic for each action shows the Query API request parameters and the XML response. You can also view the XML request elements in the WSDL. </p> <p> Alternatively, you can use one of the AWS SDKs to access an API that's tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>. </p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS License Manager",
    "version": "2018-08-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/license-manager-2018-08-01.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "license-manager"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/license-manager/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=AWSLicenseManager.CreateLicenseConfiguration": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a new license configuration object. A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or VCPU), tenancy (shared tenancy, Amazon EC2 Dedicated Instance, Amazon EC2 Dedicated Host, or any of these), host affinity (how long a VM must be associated with a host), the number of licenses purchased and used.",
        "operationId": "CreateLicenseConfiguration",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.CreateLicenseConfiguration"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateLicenseConfigurationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateLicenseConfigurationResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceLimitExceededException" } }
            }
          },
          "483": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.DeleteLicenseConfiguration": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes an existing license configuration. This action fails if the configuration is in use.",
        "operationId": "DeleteLicenseConfiguration",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.DeleteLicenseConfiguration"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteLicenseConfigurationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteLicenseConfigurationResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "483": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "484": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.GetLicenseConfiguration": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a detailed description of a license configuration.",
        "operationId": "GetLicenseConfiguration",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.GetLicenseConfiguration"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetLicenseConfigurationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetLicenseConfigurationResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "483": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "484": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.GetServiceSettings": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets License Manager settings for a region. Exposes the configured S3 bucket, SNS topic, etc., for inspection. ",
        "operationId": "GetServiceSettings",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.GetServiceSettings"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetServiceSettingsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetServiceSettingsResponse" } }
            }
          },
          "480": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "481": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "483": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.ListAssociationsForLicenseConfiguration": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the resource associations for a license configuration. Resource associations need not consume licenses from a license configuration. For example, an AMI or a stopped instance may not consume a license (depending on the license rules). Use this operation to find all resources associated with a license configuration.",
        "operationId": "ListAssociationsForLicenseConfiguration",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.ListAssociationsForLicenseConfiguration"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ListAssociationsForLicenseConfigurationRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListAssociationsForLicenseConfigurationResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "FilterLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FilterLimitExceededException" } }
            }
          },
          "482": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "483": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.ListLicenseConfigurations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists license configuration objects for an account, each containing the name, description, license type, and other license terms modeled from a license agreement.",
        "operationId": "ListLicenseConfigurations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.ListLicenseConfigurations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListLicenseConfigurationsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListLicenseConfigurationsResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "FilterLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FilterLimitExceededException" } }
            }
          },
          "483": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.ListLicenseSpecificationsForResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the license configuration for a resource.",
        "operationId": "ListLicenseSpecificationsForResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.ListLicenseSpecificationsForResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ListLicenseSpecificationsForResourceRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListLicenseSpecificationsForResourceResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "483": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "484": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.ListResourceInventory": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a detailed list of resources.",
        "operationId": "ListResourceInventory",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.ListResourceInventory"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListResourceInventoryRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListResourceInventoryResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "FilterLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FilterLimitExceededException" } }
            }
          },
          "483": {
            "description": "FailedDependencyException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FailedDependencyException" } }
            }
          },
          "484": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "485": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "486": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.ListTagsForResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists tags attached to a resource.",
        "operationId": "ListTagsForResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.ListTagsForResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsForResourceRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsForResourceResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "483": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "484": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.ListUsageForLicenseConfiguration": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all license usage records for a license configuration, displaying license consumption details by resource at a selected point in time. Use this action to audit the current license consumption for any license inventory and configuration.",
        "operationId": "ListUsageForLicenseConfiguration",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.ListUsageForLicenseConfiguration"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListUsageForLicenseConfigurationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListUsageForLicenseConfigurationResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "FilterLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FilterLimitExceededException" } }
            }
          },
          "482": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "483": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "485": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.TagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Attach one of more tags to any resource.",
        "operationId": "TagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.TagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceResponse" } } }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "483": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "484": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.UntagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Remove tags from a resource.",
        "operationId": "UntagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.UntagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceResponse" } } }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "483": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "484": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.UpdateLicenseConfiguration": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Modifies the attributes of an existing license configuration object. A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (Instances, cores, sockets, VCPUs), tenancy (shared or Dedicated Host), host affinity (how long a VM is associated with a host), the number of licenses purchased and used.",
        "operationId": "UpdateLicenseConfiguration",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.UpdateLicenseConfiguration"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateLicenseConfigurationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateLicenseConfigurationResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "483": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "484": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.UpdateLicenseSpecificationsForResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Adds or removes license configurations for a specified AWS resource. This operation currently supports updating the license specifications of AMIs, instances, and hosts. Launch templates and AWS CloudFormation templates are not managed from this operation as those resources send the license configurations directly to a resource creation operation, such as <code>RunInstances</code>.",
        "operationId": "UpdateLicenseSpecificationsForResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.UpdateLicenseSpecificationsForResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateLicenseSpecificationsForResourceRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateLicenseSpecificationsForResourceResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "InvalidResourceStateException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceStateException" } }
            }
          },
          "482": {
            "description": "LicenseUsageException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LicenseUsageException" } } }
          },
          "483": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "484": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "485": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "486": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSLicenseManager.UpdateServiceSettings": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates License Manager service settings.",
        "operationId": "UpdateServiceSettings",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSLicenseManager.UpdateServiceSettings"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateServiceSettingsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateServiceSettingsResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "AuthorizationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationException" } } }
          },
          "483": {
            "description": "AccessDeniedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AccessDeniedException" } } }
          },
          "484": {
            "description": "RateLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RateLimitExceededException" } }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The AWS License Manager multi-region endpoint",
      "url": "http://license-manager.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS License Manager multi-region endpoint",
      "url": "https://license-manager.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS License Manager endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://license-manager.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The AWS License Manager endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://license-manager.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AccessDeniedException": {},
      "AuthorizationException": {},
      "Boolean": { "type": "boolean" },
      "BoxBoolean": { "type": "boolean" },
      "BoxInteger": { "type": "integer" },
      "BoxLong": { "type": "integer" },
      "ConsumedLicenseSummary": {
        "description": "Details about license consumption.",
        "properties": {
          "ConsumedLicenses": { "$ref": "#/components/schemas/BoxLong" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "type": "object"
      },
      "ConsumedLicenseSummaryList": {
        "items": { "$ref": "#/components/schemas/ConsumedLicenseSummary" },
        "type": "array"
      },
      "CreateLicenseConfigurationRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/String" },
          "LicenseCount": { "$ref": "#/components/schemas/BoxLong" },
          "LicenseCountHardLimit": { "$ref": "#/components/schemas/BoxBoolean" },
          "LicenseCountingType": { "$ref": "#/components/schemas/LicenseCountingType" },
          "LicenseRules": { "$ref": "#/components/schemas/StringList" },
          "Name": { "$ref": "#/components/schemas/String" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["Name", "LicenseCountingType"],
        "type": "object"
      },
      "CreateLicenseConfigurationResponse": {
        "properties": { "LicenseConfigurationArn": { "$ref": "#/components/schemas/String" } },
        "type": "object"
      },
      "DateTime": { "format": "date-time", "type": "string" },
      "DeleteLicenseConfigurationRequest": {
        "properties": { "LicenseConfigurationArn": { "$ref": "#/components/schemas/String" } },
        "required": ["LicenseConfigurationArn"],
        "type": "object"
      },
      "DeleteLicenseConfigurationResponse": { "properties": {}, "type": "object" },
      "FailedDependencyException": {},
      "Filter": {
        "description": "A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a <code>Describe</code> operation are documented with the <code>Describe</code> operation.",
        "properties": {
          "Name": { "$ref": "#/components/schemas/FilterName" },
          "Values": { "$ref": "#/components/schemas/FilterValues" }
        },
        "type": "object"
      },
      "FilterLimitExceededException": {},
      "FilterName": { "type": "string" },
      "FilterValue": { "type": "string" },
      "FilterValues": { "items": { "$ref": "#/components/schemas/FilterValue" }, "type": "array" },
      "Filters": { "items": { "$ref": "#/components/schemas/Filter" }, "type": "array" },
      "GetLicenseConfigurationRequest": {
        "properties": { "LicenseConfigurationArn": { "$ref": "#/components/schemas/String" } },
        "required": ["LicenseConfigurationArn"],
        "type": "object"
      },
      "GetLicenseConfigurationResponse": {
        "properties": {
          "ConsumedLicenseSummaryList": { "$ref": "#/components/schemas/ConsumedLicenseSummaryList" },
          "ConsumedLicenses": { "$ref": "#/components/schemas/BoxLong" },
          "Description": { "$ref": "#/components/schemas/String" },
          "LicenseConfigurationArn": { "$ref": "#/components/schemas/String" },
          "LicenseConfigurationId": { "$ref": "#/components/schemas/String" },
          "LicenseCount": { "$ref": "#/components/schemas/BoxLong" },
          "LicenseCountHardLimit": { "$ref": "#/components/schemas/BoxBoolean" },
          "LicenseCountingType": { "$ref": "#/components/schemas/LicenseCountingType" },
          "LicenseRules": { "$ref": "#/components/schemas/StringList" },
          "ManagedResourceSummaryList": { "$ref": "#/components/schemas/ManagedResourceSummaryList" },
          "Name": { "$ref": "#/components/schemas/String" },
          "OwnerAccountId": { "$ref": "#/components/schemas/String" },
          "Status": { "$ref": "#/components/schemas/String" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "GetServiceSettingsRequest": { "properties": {}, "type": "object" },
      "GetServiceSettingsResponse": {
        "properties": {
          "EnableCrossAccountsDiscovery": { "$ref": "#/components/schemas/BoxBoolean" },
          "OrganizationConfiguration": { "$ref": "#/components/schemas/OrganizationConfiguration" },
          "S3BucketArn": { "$ref": "#/components/schemas/String" },
          "SnsTopicArn": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "InvalidParameterValueException": {},
      "InvalidResourceStateException": {},
      "InventoryFilter": {
        "description": "An inventory filter object.",
        "properties": {
          "Condition": { "$ref": "#/components/schemas/InventoryFilterCondition" },
          "Name": { "$ref": "#/components/schemas/String" },
          "Value": { "$ref": "#/components/schemas/String" }
        },
        "required": ["Name", "Condition"],
        "type": "object"
      },
      "InventoryFilterCondition": { "enum": ["EQUALS", "NOT_EQUALS", "BEGINS_WITH", "CONTAINS"], "type": "string" },
      "InventoryFilterList": { "items": { "$ref": "#/components/schemas/InventoryFilter" }, "type": "array" },
      "LicenseConfiguration": {
        "description": "A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or VCPU), tenancy (shared tenancy, Amazon EC2 Dedicated Instance, Amazon EC2 Dedicated Host, or any of these), host affinity (how long a VM must be associated with a host), the number of licenses purchased and used.",
        "properties": {
          "ConsumedLicenseSummaryList": { "$ref": "#/components/schemas/ConsumedLicenseSummaryList" },
          "ConsumedLicenses": { "$ref": "#/components/schemas/BoxLong" },
          "Description": { "$ref": "#/components/schemas/String" },
          "LicenseConfigurationArn": { "$ref": "#/components/schemas/String" },
          "LicenseConfigurationId": { "$ref": "#/components/schemas/String" },
          "LicenseCount": { "$ref": "#/components/schemas/BoxLong" },
          "LicenseCountHardLimit": { "$ref": "#/components/schemas/BoxBoolean" },
          "LicenseCountingType": { "$ref": "#/components/schemas/LicenseCountingType" },
          "LicenseRules": { "$ref": "#/components/schemas/StringList" },
          "ManagedResourceSummaryList": { "$ref": "#/components/schemas/ManagedResourceSummaryList" },
          "Name": { "$ref": "#/components/schemas/String" },
          "OwnerAccountId": { "$ref": "#/components/schemas/String" },
          "Status": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "LicenseConfigurationAssociation": {
        "description": "Describes a server resource that is associated with a license configuration.",
        "properties": {
          "AssociationTime": { "$ref": "#/components/schemas/DateTime" },
          "ResourceArn": { "$ref": "#/components/schemas/String" },
          "ResourceOwnerId": { "$ref": "#/components/schemas/String" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "type": "object"
      },
      "LicenseConfigurationAssociations": {
        "items": { "$ref": "#/components/schemas/LicenseConfigurationAssociation" },
        "type": "array"
      },
      "LicenseConfigurationStatus": { "enum": ["AVAILABLE", "DISABLED"], "type": "string" },
      "LicenseConfigurationUsage": {
        "description": "Contains details of the usage of each resource from the license pool.",
        "properties": {
          "AssociationTime": { "$ref": "#/components/schemas/DateTime" },
          "ConsumedLicenses": { "$ref": "#/components/schemas/BoxLong" },
          "ResourceArn": { "$ref": "#/components/schemas/String" },
          "ResourceOwnerId": { "$ref": "#/components/schemas/String" },
          "ResourceStatus": { "$ref": "#/components/schemas/String" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "type": "object"
      },
      "LicenseConfigurationUsageList": {
        "items": { "$ref": "#/components/schemas/LicenseConfigurationUsage" },
        "type": "array"
      },
      "LicenseConfigurations": { "items": { "$ref": "#/components/schemas/LicenseConfiguration" }, "type": "array" },
      "LicenseCountingType": { "enum": ["vCPU", "Instance", "Core", "Socket"], "type": "string" },
      "LicenseSpecification": {
        "description": "Object used for associating a license configuration with a resource.",
        "properties": { "LicenseConfigurationArn": { "$ref": "#/components/schemas/String" } },
        "required": ["LicenseConfigurationArn"],
        "type": "object"
      },
      "LicenseSpecifications": { "items": { "$ref": "#/components/schemas/LicenseSpecification" }, "type": "array" },
      "LicenseUsageException": {},
      "ListAssociationsForLicenseConfigurationRequest": {
        "properties": {
          "LicenseConfigurationArn": { "$ref": "#/components/schemas/String" },
          "MaxResults": { "$ref": "#/components/schemas/BoxInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "required": ["LicenseConfigurationArn"],
        "type": "object"
      },
      "ListAssociationsForLicenseConfigurationResponse": {
        "properties": {
          "LicenseConfigurationAssociations": { "$ref": "#/components/schemas/LicenseConfigurationAssociations" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListLicenseConfigurationsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/Filters" },
          "LicenseConfigurationArns": { "$ref": "#/components/schemas/StringList" },
          "MaxResults": { "$ref": "#/components/schemas/BoxInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListLicenseConfigurationsResponse": {
        "properties": {
          "LicenseConfigurations": { "$ref": "#/components/schemas/LicenseConfigurations" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListLicenseSpecificationsForResourceRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/BoxInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "ResourceArn": { "$ref": "#/components/schemas/String" }
        },
        "required": ["ResourceArn"],
        "type": "object"
      },
      "ListLicenseSpecificationsForResourceResponse": {
        "properties": {
          "LicenseSpecifications": { "$ref": "#/components/schemas/LicenseSpecifications" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListResourceInventoryRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/InventoryFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/BoxInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListResourceInventoryResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "ResourceInventoryList": { "$ref": "#/components/schemas/ResourceInventoryList" }
        },
        "type": "object"
      },
      "ListTagsForResourceRequest": {
        "properties": { "ResourceArn": { "$ref": "#/components/schemas/String" } },
        "required": ["ResourceArn"],
        "type": "object"
      },
      "ListTagsForResourceResponse": {
        "properties": { "Tags": { "$ref": "#/components/schemas/TagList" } },
        "type": "object"
      },
      "ListUsageForLicenseConfigurationRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/Filters" },
          "LicenseConfigurationArn": { "$ref": "#/components/schemas/String" },
          "MaxResults": { "$ref": "#/components/schemas/BoxInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "required": ["LicenseConfigurationArn"],
        "type": "object"
      },
      "ListUsageForLicenseConfigurationResponse": {
        "properties": {
          "LicenseConfigurationUsageList": { "$ref": "#/components/schemas/LicenseConfigurationUsageList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ManagedResourceSummary": {
        "description": "Summary for a resource.",
        "properties": {
          "AssociationCount": { "$ref": "#/components/schemas/BoxLong" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "type": "object"
      },
      "ManagedResourceSummaryList": {
        "items": { "$ref": "#/components/schemas/ManagedResourceSummary" },
        "type": "array"
      },
      "OrganizationConfiguration": {
        "description": "Object containing configuration information for AWS Organizations.",
        "properties": { "EnableIntegration": { "$ref": "#/components/schemas/Boolean" } },
        "required": ["EnableIntegration"],
        "type": "object"
      },
      "RateLimitExceededException": {},
      "ResourceInventory": {
        "description": "A set of attributes that describe a resource.",
        "properties": {
          "Platform": { "$ref": "#/components/schemas/String" },
          "PlatformVersion": { "$ref": "#/components/schemas/String" },
          "ResourceArn": { "$ref": "#/components/schemas/String" },
          "ResourceId": { "$ref": "#/components/schemas/String" },
          "ResourceOwningAccountId": { "$ref": "#/components/schemas/String" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "type": "object"
      },
      "ResourceInventoryList": { "items": { "$ref": "#/components/schemas/ResourceInventory" }, "type": "array" },
      "ResourceLimitExceededException": {},
      "ResourceType": { "enum": ["EC2_INSTANCE", "EC2_HOST", "EC2_AMI"], "type": "string" },
      "ServerInternalException": {},
      "String": { "type": "string" },
      "StringList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "Tag": {
        "description": "Tag for a resource in a key-value format.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/String" },
          "Value": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "TagKeyList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "type": "array" },
      "TagResourceRequest": {
        "properties": {
          "ResourceArn": { "$ref": "#/components/schemas/String" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["ResourceArn", "Tags"],
        "type": "object"
      },
      "TagResourceResponse": { "properties": {}, "type": "object" },
      "UntagResourceRequest": {
        "properties": {
          "ResourceArn": { "$ref": "#/components/schemas/String" },
          "TagKeys": { "$ref": "#/components/schemas/TagKeyList" }
        },
        "required": ["ResourceArn", "TagKeys"],
        "type": "object"
      },
      "UntagResourceResponse": { "properties": {}, "type": "object" },
      "UpdateLicenseConfigurationRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/String" },
          "LicenseConfigurationArn": { "$ref": "#/components/schemas/String" },
          "LicenseConfigurationStatus": { "$ref": "#/components/schemas/LicenseConfigurationStatus" },
          "LicenseCount": { "$ref": "#/components/schemas/BoxLong" },
          "LicenseCountHardLimit": { "$ref": "#/components/schemas/BoxBoolean" },
          "LicenseRules": { "$ref": "#/components/schemas/StringList" },
          "Name": { "$ref": "#/components/schemas/String" }
        },
        "required": ["LicenseConfigurationArn"],
        "type": "object"
      },
      "UpdateLicenseConfigurationResponse": { "properties": {}, "type": "object" },
      "UpdateLicenseSpecificationsForResourceRequest": {
        "properties": {
          "AddLicenseSpecifications": { "$ref": "#/components/schemas/LicenseSpecifications" },
          "RemoveLicenseSpecifications": { "$ref": "#/components/schemas/LicenseSpecifications" },
          "ResourceArn": { "$ref": "#/components/schemas/String" }
        },
        "required": ["ResourceArn"],
        "type": "object"
      },
      "UpdateLicenseSpecificationsForResourceResponse": { "properties": {}, "type": "object" },
      "UpdateServiceSettingsRequest": {
        "properties": {
          "EnableCrossAccountsDiscovery": { "$ref": "#/components/schemas/BoxBoolean" },
          "OrganizationConfiguration": { "$ref": "#/components/schemas/OrganizationConfiguration" },
          "S3BucketArn": { "$ref": "#/components/schemas/String" },
          "SnsTopicArn": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "UpdateServiceSettingsResponse": { "properties": {}, "type": "object" }
    }
  }
}
