{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Service Catalog</fullname> <p> <a href=\"https://aws.amazon.com/servicecatalog/\">AWS Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for use on AWS. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">AWS Service Catalog Concepts</a>.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Service Catalog",
    "version": "2015-12-10",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicecatalog-2015-12-10.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "servicecatalog"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/servicecatalog/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=AWS242ServiceCatalogService.AcceptPortfolioShare": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Accepts an offer to share the specified portfolio.",
        "operationId": "AcceptPortfolioShare",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.AcceptPortfolioShare"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AcceptPortfolioShareInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AcceptPortfolioShareOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.AssociateBudgetWithResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associates the specified budget with the specified resource.",
        "operationId": "AssociateBudgetWithResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.AssociateBudgetWithResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AssociateBudgetWithResourceInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AssociateBudgetWithResourceOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "DuplicateResourceException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateResourceException" } }
            }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associates the specified principal ARN with the specified portfolio.",
        "operationId": "AssociatePrincipalWithPortfolio",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AssociatePrincipalWithPortfolioInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AssociatePrincipalWithPortfolioOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.AssociateProductWithPortfolio": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associates the specified product with the specified portfolio.",
        "operationId": "AssociateProductWithPortfolio",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.AssociateProductWithPortfolio"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AssociateProductWithPortfolioInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AssociateProductWithPortfolioOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associates a self-service action with a provisioning artifact.",
        "operationId": "AssociateServiceActionWithProvisioningArtifact",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AssociateServiceActionWithProvisioningArtifactInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AssociateServiceActionWithProvisioningArtifactOutput" }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "DuplicateResourceException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateResourceException" } }
            }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.AssociateTagOptionWithResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associate the specified TagOption with the specified portfolio or product.",
        "operationId": "AssociateTagOptionWithResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.AssociateTagOptionWithResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AssociateTagOptionWithResourceInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AssociateTagOptionWithResourceOutput" } }
            }
          },
          "480": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "484": {
            "description": "DuplicateResourceException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateResourceException" } }
            }
          },
          "485": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associates multiple self-service actions with provisioning artifacts.",
        "operationId": "BatchAssociateServiceActionWithProvisioningArtifact",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BatchAssociateServiceActionWithProvisioningArtifactInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BatchAssociateServiceActionWithProvisioningArtifactOutput" }
              }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Disassociates a batch of self-service actions from the specified provisioning artifact.",
        "operationId": "BatchDisassociateServiceActionFromProvisioningArtifact",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BatchDisassociateServiceActionFromProvisioningArtifactInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDisassociateServiceActionFromProvisioningArtifactOutput"
                }
              }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.CopyProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Copies the specified source product to the specified target product or a new product.</p> <p>You can copy a product to the same account or another account. You can copy a product to the same region or another region.</p> <p>This operation is performed asynchronously. To track the progress of the operation, use <a>DescribeCopyProductStatus</a>.</p>",
        "operationId": "CopyProduct",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.CopyProduct"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CopyProductInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CopyProductOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.CreateConstraint": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a constraint.",
        "operationId": "CreateConstraint",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.CreateConstraint"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateConstraintInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateConstraintOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "DuplicateResourceException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateResourceException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolio": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a portfolio.",
        "operationId": "CreatePortfolio",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.CreatePortfolio"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreatePortfolioInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreatePortfolioOutput" } } }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolioShare": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Shares the specified portfolio with the specified account or organization node. Shares to an organization node can only be created by the master account of an Organization. AWSOrganizationsAccess must be enabled in order to create a portfolio share to an organization node.",
        "operationId": "CreatePortfolioShare",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.CreatePortfolioShare"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreatePortfolioShareInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreatePortfolioShareOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "483": {
            "description": "OperationNotSupportedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotSupportedException" } }
            }
          },
          "484": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.CreateProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a product.",
        "operationId": "CreateProduct",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.CreateProduct"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateProductInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateProductOutput" } } }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisionedProductPlan": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a plan. A plan includes the list of resources to be created (when provisioning a new product) or modified (when updating a provisioned product) when the plan is executed.</p> <p>You can create one plan per provisioned product. To create a plan for an existing provisioned product, the product status must be AVAILBLE or TAINTED.</p> <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>. To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>",
        "operationId": "CreateProvisionedProductPlan",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.CreateProvisionedProductPlan"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateProvisionedProductPlanInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateProvisionedProductPlanOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisioningArtifact": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot create a provisioning artifact for a product that was shared with you.</p>",
        "operationId": "CreateProvisioningArtifact",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.CreateProvisioningArtifact"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateProvisioningArtifactInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateProvisioningArtifactOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.CreateServiceAction": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a self-service action.",
        "operationId": "CreateServiceAction",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.CreateServiceAction"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateServiceActionInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateServiceActionOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.CreateTagOption": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a TagOption.",
        "operationId": "CreateTagOption",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.CreateTagOption"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateTagOptionInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateTagOptionOutput" } } }
          },
          "480": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          },
          "481": {
            "description": "DuplicateResourceException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateResourceException" } }
            }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DeleteConstraint": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified constraint.",
        "operationId": "DeleteConstraint",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DeleteConstraint"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteConstraintInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteConstraintOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolio": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified portfolio.</p> <p>You cannot delete a portfolio if it was shared with you or if it has associated products, users, constraints, or shared accounts.</p>",
        "operationId": "DeletePortfolio",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DeletePortfolio"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeletePortfolioInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeletePortfolioOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "482": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "483": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolioShare": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Stops sharing the specified portfolio with the specified account or organization node. Shares to an organization node can only be deleted by the master account of an Organization.",
        "operationId": "DeletePortfolioShare",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DeletePortfolioShare"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeletePortfolioShareInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeletePortfolioShareOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "482": {
            "description": "OperationNotSupportedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotSupportedException" } }
            }
          },
          "483": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DeleteProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified product.</p> <p>You cannot delete a product if it was shared with you or is associated with a portfolio.</p>",
        "operationId": "DeleteProduct",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DeleteProduct"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteProductInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteProductOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "482": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "483": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisionedProductPlan": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified plan.",
        "operationId": "DeleteProvisionedProductPlan",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DeleteProvisionedProductPlan"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteProvisionedProductPlanInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteProvisionedProductPlanOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisioningArtifact": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot delete a provisioning artifact associated with a product that was shared with you. You cannot delete the last provisioning artifact for a product, because a product must have at least one provisioning artifact.</p>",
        "operationId": "DeleteProvisioningArtifact",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DeleteProvisioningArtifact"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteProvisioningArtifactInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteProvisioningArtifactOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "482": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DeleteServiceAction": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes a self-service action.",
        "operationId": "DeleteServiceAction",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DeleteServiceAction"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteServiceActionInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteServiceActionOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DeleteTagOption": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified TagOption.</p> <p>You cannot delete a TagOption if it is associated with a product or portfolio.</p>",
        "operationId": "DeleteTagOption",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DeleteTagOption"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteTagOptionInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteTagOptionOutput" } } }
          },
          "480": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeConstraint": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the specified constraint.",
        "operationId": "DescribeConstraint",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeConstraint"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeConstraintInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeConstraintOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeCopyProductStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the status of the specified copy product operation.",
        "operationId": "DescribeCopyProductStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeCopyProductStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeCopyProductStatusInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeCopyProductStatusOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolio": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the specified portfolio.",
        "operationId": "DescribePortfolio",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribePortfolio"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribePortfolioInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribePortfolioOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShareStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the status of the specified portfolio share operation. This API can only be called by the master account in the organization.",
        "operationId": "DescribePortfolioShareStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribePortfolioShareStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribePortfolioShareStatusInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribePortfolioShareStatusOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "482": {
            "description": "OperationNotSupportedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotSupportedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the specified product.",
        "operationId": "DescribeProduct",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeProduct"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProductInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProductOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductAsAdmin": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the specified product. This operation is run with administrator access.",
        "operationId": "DescribeProductAsAdmin",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeProductAsAdmin"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProductAsAdminInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProductAsAdminOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductView": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the specified product.",
        "operationId": "DescribeProductView",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeProductView"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProductViewInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProductViewOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the specified provisioned product.",
        "operationId": "DescribeProvisionedProduct",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeProvisionedProduct"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProvisionedProductInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProvisionedProductOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProductPlan": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the resource changes for the specified plan.",
        "operationId": "DescribeProvisionedProductPlan",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeProvisionedProductPlan"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProvisionedProductPlanInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProvisionedProductPlanOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningArtifact": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the specified provisioning artifact (also known as a version) for the specified product.",
        "operationId": "DescribeProvisioningArtifact",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeProvisioningArtifact"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProvisioningArtifactInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProvisioningArtifactOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningParameters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Gets information about the configuration required to provision the specified product using the specified provisioning artifact.</p> <p>If the output contains a TagOption key with an empty list of values, there is a TagOption conflict for that key. The end user cannot take action to fix the conflict, and launch is not blocked. In subsequent calls to <a>ProvisionProduct</a>, do not include conflicted TagOption keys as tags, or this causes the error \"Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>\". Tag the provisioned product with the value <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>",
        "operationId": "DescribeProvisioningParameters",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeProvisioningParameters"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProvisioningParametersInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeProvisioningParametersOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeRecord": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Gets information about the specified request operation.</p> <p>Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>). </p> <note> <p>If a provisioned product was transferred to a new owner using <a>UpdateProvisionedProductProperties</a>, the new owner will be able to describe all past records for that product. The previous owner will no longer be able to describe the records, but will be able to use <a>ListRecordHistory</a> to see the product's history from when he was the owner.</p> </note>",
        "operationId": "DescribeRecord",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeRecord"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeRecordInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeRecordOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceAction": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes a self-service action.",
        "operationId": "DescribeServiceAction",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeServiceAction"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeServiceActionInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeServiceActionOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "",
        "operationId": "DescribeServiceActionExecutionParameters",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeServiceActionExecutionParametersInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeServiceActionExecutionParametersOutput" }
              }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DescribeTagOption": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the specified TagOption.",
        "operationId": "DescribeTagOption",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DescribeTagOption"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeTagOptionInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeTagOptionOutput" } } }
          },
          "480": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DisableAWSOrganizationsAccess": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Disable portfolio sharing through AWS Organizations feature. This feature will not delete your current shares but it will prevent you from creating new shares throughout your organization. Current shares will not be in sync with your organization structure if it changes after calling this API. This API can only be called by the master account in the organization.",
        "operationId": "DisableAWSOrganizationsAccess",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DisableAWSOrganizationsAccess"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DisableAWSOrganizationsAccessInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DisableAWSOrganizationsAccessOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateException" } } }
          },
          "482": {
            "description": "OperationNotSupportedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotSupportedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DisassociateBudgetFromResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Disassociates the specified budget from the specified resource.",
        "operationId": "DisassociateBudgetFromResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DisassociateBudgetFromResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DisassociateBudgetFromResourceInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DisassociateBudgetFromResourceOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Disassociates a previously associated principal ARN from a specified portfolio.",
        "operationId": "DisassociatePrincipalFromPortfolio",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DisassociatePrincipalFromPortfolioInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DisassociatePrincipalFromPortfolioOutput" }
              }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DisassociateProductFromPortfolio": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Disassociates the specified product from the specified portfolio. ",
        "operationId": "DisassociateProductFromPortfolio",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DisassociateProductFromPortfolio"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DisassociateProductFromPortfolioInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DisassociateProductFromPortfolioOutput" }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "482": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Disassociates the specified self-service action association from the specified provisioning artifact.",
        "operationId": "DisassociateServiceActionFromProvisioningArtifact",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DisassociateServiceActionFromProvisioningArtifactInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DisassociateServiceActionFromProvisioningArtifactOutput" }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.DisassociateTagOptionFromResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Disassociates the specified TagOption from the specified resource.",
        "operationId": "DisassociateTagOptionFromResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.DisassociateTagOptionFromResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DisassociateTagOptionFromResourceInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DisassociateTagOptionFromResourceOutput" }
              }
            }
          },
          "480": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.EnableAWSOrganizationsAccess": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Enable portfolio sharing feature through AWS Organizations. This API will allow Service Catalog to receive updates on your organization in order to sync your shares with the current structure. This API can only be called by the master account in the organization.</p> <p>By calling this API Service Catalog will make a call to organizations:EnableAWSServiceAccess on your behalf so that your shares can be in sync with any changes in your AWS Organizations structure.</p>",
        "operationId": "EnableAWSOrganizationsAccess",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.EnableAWSOrganizationsAccess"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/EnableAWSOrganizationsAccessInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/EnableAWSOrganizationsAccessOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateException" } } }
          },
          "482": {
            "description": "OperationNotSupportedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotSupportedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductPlan": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Provisions or modifies a product based on the resource changes for the specified plan.",
        "operationId": "ExecuteProvisionedProductPlan",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ExecuteProvisionedProductPlan"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ExecuteProvisionedProductPlanInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ExecuteProvisionedProductPlanOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Executes a self-service action against a provisioned product.",
        "operationId": "ExecuteProvisionedProductServiceAction",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ExecuteProvisionedProductServiceActionInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ExecuteProvisionedProductServiceActionOutput" }
              }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Get the Access Status for AWS Organization portfolio share feature. This API can only be called by the master account in the organization.",
        "operationId": "GetAWSOrganizationsAccessStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetAWSOrganizationsAccessStatusInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetAWSOrganizationsAccessStatusOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "OperationNotSupportedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotSupportedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListAcceptedPortfolioShares": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all portfolios for which sharing was accepted by this account.",
        "operationId": "ListAcceptedPortfolioShares",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListAcceptedPortfolioShares"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListAcceptedPortfolioSharesInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListAcceptedPortfolioSharesOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "OperationNotSupportedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotSupportedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListBudgetsForResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all the budgets associated to the specified resource.",
        "operationId": "ListBudgetsForResource",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListBudgetsForResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListBudgetsForResourceInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListBudgetsForResourceOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListConstraintsForPortfolio": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the constraints for the specified portfolio and product.",
        "operationId": "ListConstraintsForPortfolio",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListConstraintsForPortfolio"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListConstraintsForPortfolioInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListConstraintsForPortfolioOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListLaunchPaths": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the paths to the specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.",
        "operationId": "ListLaunchPaths",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListLaunchPaths"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListLaunchPathsInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListLaunchPathsOutput" } } }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListOrganizationPortfolioAccess": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the organization nodes that have access to the specified portfolio. This API can only be called by the master account in the organization.",
        "operationId": "ListOrganizationPortfolioAccess",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListOrganizationPortfolioAccess"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListOrganizationPortfolioAccessInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListOrganizationPortfolioAccessOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "482": {
            "description": "OperationNotSupportedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotSupportedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolioAccess": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the account IDs that have access to the specified portfolio.",
        "operationId": "ListPortfolioAccess",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListPortfolioAccess"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListPortfolioAccessInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListPortfolioAccessOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolios": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all portfolios in the catalog.",
        "operationId": "ListPortfolios",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListPortfolios"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListPortfoliosInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListPortfoliosOutput" } } }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListPortfoliosForProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all portfolios that the specified product is associated with.",
        "operationId": "ListPortfoliosForProduct",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListPortfoliosForProduct"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListPortfoliosForProductInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListPortfoliosForProductOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListPrincipalsForPortfolio": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all principal ARNs associated with the specified portfolio.",
        "operationId": "ListPrincipalsForPortfolio",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListPrincipalsForPortfolio"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListPrincipalsForPortfolioInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListPrincipalsForPortfolioOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListProvisionedProductPlans": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the plans for the specified provisioned product or all plans to which the user has access.",
        "operationId": "ListProvisionedProductPlans",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListProvisionedProductPlans"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListProvisionedProductPlansInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListProvisionedProductPlansOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifacts": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all provisioning artifacts (also known as versions) for the specified product.",
        "operationId": "ListProvisioningArtifacts",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListProvisioningArtifacts"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListProvisioningArtifactsInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListProvisioningArtifactsOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all provisioning artifacts (also known as versions) for the specified self-service action.",
        "operationId": "ListProvisioningArtifactsForServiceAction",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ListProvisioningArtifactsForServiceActionInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListProvisioningArtifactsForServiceActionOutput" }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListRecordHistory": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the specified requests or all performed requests.",
        "operationId": "ListRecordHistory",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListRecordHistory"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListRecordHistoryInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListRecordHistoryOutput" } } }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListResourcesForTagOption": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the resources associated with the specified TagOption.",
        "operationId": "ListResourcesForTagOption",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListResourcesForTagOption"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListResourcesForTagOptionInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListResourcesForTagOptionOutput" } }
            }
          },
          "480": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all self-service actions.",
        "operationId": "ListServiceActions",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListServiceActions"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListServiceActionsInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListServiceActionsOutput" } } }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a paginated list of self-service actions associated with the specified Product ID and Provisioning Artifact ID.",
        "operationId": "ListServiceActionsForProvisioningArtifact",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ListServiceActionsForProvisioningArtifactInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListServiceActionsForProvisioningArtifactOutput" }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns summary information about stack instances that are associated with the specified <code>CFN_STACKSET</code> type provisioned product. You can filter for stack instances that are associated with a specific AWS account name or region. ",
        "operationId": "ListStackInstancesForProvisionedProduct",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ListStackInstancesForProvisionedProductInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListStackInstancesForProvisionedProductOutput" }
              }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ListTagOptions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the specified TagOptions or all TagOptions.",
        "operationId": "ListTagOptions",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ListTagOptions"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListTagOptionsInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListTagOptionsOutput" } } }
          },
          "480": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ProvisionProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Provisions the specified product.</p> <p>A provisioned product is a resourced instance of a product. For example, provisioning a product based on a CloudFormation template launches a CloudFormation stack and its underlying resources. You can check the status of this request using <a>DescribeRecord</a>.</p> <p>If the request contains a tag key with an empty list of values, there is a tag conflict for that key. Do not include conflicted keys as tags, or this causes the error \"Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>\".</p>",
        "operationId": "ProvisionProduct",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ProvisionProduct"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProvisionProductInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProvisionProductOutput" } } }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "DuplicateResourceException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateResourceException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.RejectPortfolioShare": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Rejects an offer to share the specified portfolio.",
        "operationId": "RejectPortfolioShare",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.RejectPortfolioShare"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RejectPortfolioShareInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RejectPortfolioShareOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.ScanProvisionedProducts": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the provisioned products that are available (not terminated).</p> <p>To use additional filtering, see <a>SearchProvisionedProducts</a>.</p>",
        "operationId": "ScanProvisionedProducts",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.ScanProvisionedProducts"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ScanProvisionedProductsInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ScanProvisionedProductsOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.SearchProducts": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the products to which the caller has access.",
        "operationId": "SearchProducts",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.SearchProducts"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SearchProductsInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SearchProductsOutput" } } }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.SearchProductsAsAdmin": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the products for the specified portfolio or all products.",
        "operationId": "SearchProductsAsAdmin",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.SearchProductsAsAdmin"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/SearchProductsAsAdminInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SearchProductsAsAdminOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.SearchProvisionedProducts": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets information about the provisioned products that meet the specified criteria.",
        "operationId": "SearchProvisionedProducts",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "PageSize",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "PageToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.SearchProvisionedProducts"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/SearchProvisionedProductsInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SearchProvisionedProductsOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.TerminateProvisionedProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Terminates the specified provisioned product.</p> <p>This operation does not delete any records associated with the provisioned product.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>",
        "operationId": "TerminateProvisionedProduct",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.TerminateProvisionedProduct"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/TerminateProvisionedProductInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TerminateProvisionedProductOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.UpdateConstraint": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates the specified constraint.",
        "operationId": "UpdateConstraint",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.UpdateConstraint"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateConstraintInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateConstraintOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolio": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the specified portfolio.</p> <p>You cannot update a product that was shared with you.</p>",
        "operationId": "UpdatePortfolio",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.UpdatePortfolio"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdatePortfolioInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdatePortfolioOutput" } } }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.UpdateProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates the specified product.",
        "operationId": "UpdateProduct",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.UpdateProduct"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProductInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProductOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "482": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProduct": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Requests updates to the configuration of the specified provisioned product.</p> <p>If there are tags associated with the object, they cannot be updated or added. Depending on the specific updates requested, this operation can update with no interruption, with some interruption, or replace the provisioned product entirely.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>",
        "operationId": "UpdateProvisionedProduct",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.UpdateProvisionedProduct"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProvisionedProductInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProvisionedProductOutput" } }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProductProperties": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Requests updates to the properties of the specified provisioned product.",
        "operationId": "UpdateProvisionedProductProperties",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.UpdateProvisionedProductProperties"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProvisionedProductPropertiesInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateProvisionedProductPropertiesOutput" }
              }
            }
          },
          "480": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidStateException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisioningArtifact": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot update a provisioning artifact for a product that was shared with you.</p>",
        "operationId": "UpdateProvisioningArtifact",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.UpdateProvisioningArtifact"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProvisioningArtifactInput" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProvisioningArtifactOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.UpdateServiceAction": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates a self-service action.",
        "operationId": "UpdateServiceAction",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.UpdateServiceAction"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateServiceActionInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateServiceActionOutput" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWS242ServiceCatalogService.UpdateTagOption": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates the specified TagOption.",
        "operationId": "UpdateTagOption",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWS242ServiceCatalogService.UpdateTagOption"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateTagOptionInput" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateTagOptionOutput" } } }
          },
          "480": {
            "description": "TagOptionNotMigratedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagOptionNotMigratedException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "DuplicateResourceException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateResourceException" } }
            }
          },
          "483": {
            "description": "InvalidParametersException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParametersException" } }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The AWS Service Catalog multi-region endpoint",
      "url": "http://servicecatalog.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS Service Catalog multi-region endpoint",
      "url": "https://servicecatalog.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS Service Catalog endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://servicecatalog.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The AWS Service Catalog endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://servicecatalog.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AcceptLanguage": { "maxLength": 100, "type": "string" },
      "AcceptPortfolioShareInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" },
          "PortfolioShareType": { "$ref": "#/components/schemas/PortfolioShareType" }
        },
        "required": ["PortfolioId"],
        "type": "object"
      },
      "AcceptPortfolioShareOutput": { "properties": {}, "type": "object" },
      "AccessLevelFilter": {
        "description": "The access level to use to filter results.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/AccessLevelFilterKey" },
          "Value": { "$ref": "#/components/schemas/AccessLevelFilterValue" }
        },
        "type": "object"
      },
      "AccessLevelFilterKey": { "enum": ["Account", "Role", "User"], "type": "string" },
      "AccessLevelFilterValue": { "type": "string" },
      "AccessStatus": { "enum": ["ENABLED", "UNDER_CHANGE", "DISABLED"], "type": "string" },
      "AccountId": { "pattern": "^[0-9]{12}$", "type": "string" },
      "AccountIds": { "items": { "$ref": "#/components/schemas/AccountId" }, "type": "array" },
      "AddTags": { "items": { "$ref": "#/components/schemas/Tag" }, "maxItems": 20, "type": "array" },
      "AllowedValue": { "type": "string" },
      "AllowedValues": { "items": { "$ref": "#/components/schemas/AllowedValue" }, "type": "array" },
      "ApproximateCount": { "type": "integer" },
      "AssociateBudgetWithResourceInput": {
        "properties": {
          "BudgetName": { "$ref": "#/components/schemas/BudgetName" },
          "ResourceId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["BudgetName", "ResourceId"],
        "type": "object"
      },
      "AssociateBudgetWithResourceOutput": { "properties": {}, "type": "object" },
      "AssociatePrincipalWithPortfolioInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" },
          "PrincipalARN": { "$ref": "#/components/schemas/PrincipalARN" },
          "PrincipalType": { "$ref": "#/components/schemas/PrincipalType" }
        },
        "required": ["PortfolioId", "PrincipalARN", "PrincipalType"],
        "type": "object"
      },
      "AssociatePrincipalWithPortfolioOutput": { "properties": {}, "type": "object" },
      "AssociateProductWithPortfolioInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "SourcePortfolioId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId", "PortfolioId"],
        "type": "object"
      },
      "AssociateProductWithPortfolioOutput": { "properties": {}, "type": "object" },
      "AssociateServiceActionWithProvisioningArtifactInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "ServiceActionId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId", "ProvisioningArtifactId", "ServiceActionId"],
        "type": "object"
      },
      "AssociateServiceActionWithProvisioningArtifactOutput": { "properties": {}, "type": "object" },
      "AssociateTagOptionWithResourceInput": {
        "properties": {
          "ResourceId": { "$ref": "#/components/schemas/ResourceId" },
          "TagOptionId": { "$ref": "#/components/schemas/TagOptionId" }
        },
        "required": ["ResourceId", "TagOptionId"],
        "type": "object"
      },
      "AssociateTagOptionWithResourceOutput": { "properties": {}, "type": "object" },
      "AttributeValue": { "type": "string" },
      "BatchAssociateServiceActionWithProvisioningArtifactInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "ServiceActionAssociations": { "$ref": "#/components/schemas/ServiceActionAssociations" }
        },
        "required": ["ServiceActionAssociations"],
        "type": "object"
      },
      "BatchAssociateServiceActionWithProvisioningArtifactOutput": {
        "properties": {
          "FailedServiceActionAssociations": { "$ref": "#/components/schemas/FailedServiceActionAssociations" }
        },
        "type": "object"
      },
      "BatchDisassociateServiceActionFromProvisioningArtifactInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "ServiceActionAssociations": { "$ref": "#/components/schemas/ServiceActionAssociations" }
        },
        "required": ["ServiceActionAssociations"],
        "type": "object"
      },
      "BatchDisassociateServiceActionFromProvisioningArtifactOutput": {
        "properties": {
          "FailedServiceActionAssociations": { "$ref": "#/components/schemas/FailedServiceActionAssociations" }
        },
        "type": "object"
      },
      "BudgetDetail": {
        "description": "Information about a budget.",
        "properties": { "BudgetName": { "$ref": "#/components/schemas/BudgetName" } },
        "type": "object"
      },
      "BudgetName": { "maxLength": 100, "minLength": 1, "type": "string" },
      "Budgets": { "items": { "$ref": "#/components/schemas/BudgetDetail" }, "type": "array" },
      "CausingEntity": { "type": "string" },
      "ChangeAction": { "enum": ["ADD", "MODIFY", "REMOVE"], "type": "string" },
      "CloudWatchDashboard": {
        "description": "Information about a CloudWatch dashboard.",
        "properties": { "Name": { "$ref": "#/components/schemas/CloudWatchDashboardName" } },
        "type": "object"
      },
      "CloudWatchDashboardName": { "type": "string" },
      "CloudWatchDashboards": { "items": { "$ref": "#/components/schemas/CloudWatchDashboard" }, "type": "array" },
      "ConstraintDescription": { "maxLength": 2000, "type": "string" },
      "ConstraintDetail": {
        "description": "Information about a constraint.",
        "properties": {
          "ConstraintId": { "$ref": "#/components/schemas/Id" },
          "Description": { "$ref": "#/components/schemas/ConstraintDescription" },
          "Owner": { "$ref": "#/components/schemas/AccountId" },
          "Type": { "$ref": "#/components/schemas/ConstraintType" }
        },
        "type": "object"
      },
      "ConstraintDetails": { "items": { "$ref": "#/components/schemas/ConstraintDetail" }, "type": "array" },
      "ConstraintParameters": { "type": "string" },
      "ConstraintSummaries": { "items": { "$ref": "#/components/schemas/ConstraintSummary" }, "type": "array" },
      "ConstraintSummary": {
        "description": "Summary information about a constraint.",
        "properties": {
          "Description": { "$ref": "#/components/schemas/ConstraintDescription" },
          "Type": { "$ref": "#/components/schemas/ConstraintType" }
        },
        "type": "object"
      },
      "ConstraintType": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "CopyOption": { "enum": ["CopyTags"], "type": "string" },
      "CopyOptions": { "items": { "$ref": "#/components/schemas/CopyOption" }, "type": "array" },
      "CopyProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "CopyOptions": { "$ref": "#/components/schemas/CopyOptions" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "SourceProductArn": { "$ref": "#/components/schemas/ProductArn" },
          "SourceProvisioningArtifactIdentifiers": {
            "$ref": "#/components/schemas/SourceProvisioningArtifactProperties"
          },
          "TargetProductId": { "$ref": "#/components/schemas/Id" },
          "TargetProductName": { "$ref": "#/components/schemas/ProductViewName" }
        },
        "required": ["SourceProductArn", "IdempotencyToken"],
        "type": "object"
      },
      "CopyProductOutput": {
        "properties": { "CopyProductToken": { "$ref": "#/components/schemas/Id" } },
        "type": "object"
      },
      "CopyProductStatus": { "enum": ["SUCCEEDED", "IN_PROGRESS", "FAILED"], "type": "string" },
      "CreateConstraintInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Description": { "$ref": "#/components/schemas/ConstraintDescription" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "Parameters": { "$ref": "#/components/schemas/ConstraintParameters" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "Type": { "$ref": "#/components/schemas/ConstraintType" }
        },
        "required": ["PortfolioId", "ProductId", "Parameters", "Type", "IdempotencyToken"],
        "type": "object"
      },
      "CreateConstraintOutput": {
        "properties": {
          "ConstraintDetail": { "$ref": "#/components/schemas/ConstraintDetail" },
          "ConstraintParameters": { "$ref": "#/components/schemas/ConstraintParameters" },
          "Status": { "$ref": "#/components/schemas/Status" }
        },
        "type": "object"
      },
      "CreatePortfolioInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Description": { "$ref": "#/components/schemas/PortfolioDescription" },
          "DisplayName": { "$ref": "#/components/schemas/PortfolioDisplayName" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "ProviderName": { "$ref": "#/components/schemas/ProviderName" },
          "Tags": { "$ref": "#/components/schemas/AddTags" }
        },
        "required": ["DisplayName", "ProviderName", "IdempotencyToken"],
        "type": "object"
      },
      "CreatePortfolioOutput": {
        "properties": {
          "PortfolioDetail": { "$ref": "#/components/schemas/PortfolioDetail" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "type": "object"
      },
      "CreatePortfolioShareInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "OrganizationNode": { "$ref": "#/components/schemas/OrganizationNode" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["PortfolioId"],
        "type": "object"
      },
      "CreatePortfolioShareOutput": {
        "properties": { "PortfolioShareToken": { "$ref": "#/components/schemas/Id" } },
        "type": "object"
      },
      "CreateProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Description": { "$ref": "#/components/schemas/ProductViewShortDescription" },
          "Distributor": { "$ref": "#/components/schemas/ProductViewOwner" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "Name": { "$ref": "#/components/schemas/ProductViewName" },
          "Owner": { "$ref": "#/components/schemas/ProductViewOwner" },
          "ProductType": { "$ref": "#/components/schemas/ProductType" },
          "ProvisioningArtifactParameters": { "$ref": "#/components/schemas/ProvisioningArtifactProperties" },
          "SupportDescription": { "$ref": "#/components/schemas/SupportDescription" },
          "SupportEmail": { "$ref": "#/components/schemas/SupportEmail" },
          "SupportUrl": { "$ref": "#/components/schemas/SupportUrl" },
          "Tags": { "$ref": "#/components/schemas/AddTags" }
        },
        "required": ["Name", "Owner", "ProductType", "ProvisioningArtifactParameters", "IdempotencyToken"],
        "type": "object"
      },
      "CreateProductOutput": {
        "properties": {
          "ProductViewDetail": { "$ref": "#/components/schemas/ProductViewDetail" },
          "ProvisioningArtifactDetail": { "$ref": "#/components/schemas/ProvisioningArtifactDetail" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "type": "object"
      },
      "CreateProvisionedProductPlanInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "NotificationArns": { "$ref": "#/components/schemas/NotificationArns" },
          "PathId": { "$ref": "#/components/schemas/Id" },
          "PlanName": { "$ref": "#/components/schemas/ProvisionedProductPlanName" },
          "PlanType": { "$ref": "#/components/schemas/ProvisionedProductPlanType" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionedProductName": { "$ref": "#/components/schemas/ProvisionedProductName" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningParameters": { "$ref": "#/components/schemas/UpdateProvisioningParameters" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "required": [
          "PlanName",
          "PlanType",
          "ProductId",
          "ProvisionedProductName",
          "ProvisioningArtifactId",
          "IdempotencyToken"
        ],
        "type": "object"
      },
      "CreateProvisionedProductPlanOutput": {
        "properties": {
          "PlanId": { "$ref": "#/components/schemas/Id" },
          "PlanName": { "$ref": "#/components/schemas/ProvisionedProductPlanName" },
          "ProvisionProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionedProductName": { "$ref": "#/components/schemas/ProvisionedProductName" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" }
        },
        "type": "object"
      },
      "CreateProvisioningArtifactInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "Parameters": { "$ref": "#/components/schemas/ProvisioningArtifactProperties" },
          "ProductId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId", "Parameters", "IdempotencyToken"],
        "type": "object"
      },
      "CreateProvisioningArtifactOutput": {
        "properties": {
          "Info": { "$ref": "#/components/schemas/ProvisioningArtifactInfo" },
          "ProvisioningArtifactDetail": { "$ref": "#/components/schemas/ProvisioningArtifactDetail" },
          "Status": { "$ref": "#/components/schemas/Status" }
        },
        "type": "object"
      },
      "CreateServiceActionInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Definition": { "$ref": "#/components/schemas/ServiceActionDefinitionMap" },
          "DefinitionType": { "$ref": "#/components/schemas/ServiceActionDefinitionType" },
          "Description": { "$ref": "#/components/schemas/ServiceActionDescription" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "Name": { "$ref": "#/components/schemas/ServiceActionName" }
        },
        "required": ["Name", "DefinitionType", "Definition", "IdempotencyToken"],
        "type": "object"
      },
      "CreateServiceActionOutput": {
        "properties": { "ServiceActionDetail": { "$ref": "#/components/schemas/ServiceActionDetail" } },
        "type": "object"
      },
      "CreateTagOptionInput": {
        "properties": {
          "Key": { "$ref": "#/components/schemas/TagOptionKey" },
          "Value": { "$ref": "#/components/schemas/TagOptionValue" }
        },
        "required": ["Key", "Value"],
        "type": "object"
      },
      "CreateTagOptionOutput": {
        "properties": { "TagOptionDetail": { "$ref": "#/components/schemas/TagOptionDetail" } },
        "type": "object"
      },
      "CreatedTime": { "format": "date-time", "type": "string" },
      "CreationTime": { "format": "date-time", "type": "string" },
      "DefaultValue": { "type": "string" },
      "DeleteConstraintInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DeleteConstraintOutput": { "properties": {}, "type": "object" },
      "DeletePortfolioInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DeletePortfolioOutput": { "properties": {}, "type": "object" },
      "DeletePortfolioShareInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "OrganizationNode": { "$ref": "#/components/schemas/OrganizationNode" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["PortfolioId"],
        "type": "object"
      },
      "DeletePortfolioShareOutput": {
        "properties": { "PortfolioShareToken": { "$ref": "#/components/schemas/Id" } },
        "type": "object"
      },
      "DeleteProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DeleteProductOutput": { "properties": {}, "type": "object" },
      "DeleteProvisionedProductPlanInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "IgnoreErrors": { "$ref": "#/components/schemas/IgnoreErrors" },
          "PlanId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["PlanId"],
        "type": "object"
      },
      "DeleteProvisionedProductPlanOutput": { "properties": {}, "type": "object" },
      "DeleteProvisioningArtifactInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId", "ProvisioningArtifactId"],
        "type": "object"
      },
      "DeleteProvisioningArtifactOutput": { "properties": {}, "type": "object" },
      "DeleteServiceActionInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DeleteServiceActionOutput": { "properties": {}, "type": "object" },
      "DeleteTagOptionInput": {
        "properties": { "Id": { "$ref": "#/components/schemas/TagOptionId" } },
        "required": ["Id"],
        "type": "object"
      },
      "DeleteTagOptionOutput": { "properties": {}, "type": "object" },
      "DescribeConstraintInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DescribeConstraintOutput": {
        "properties": {
          "ConstraintDetail": { "$ref": "#/components/schemas/ConstraintDetail" },
          "ConstraintParameters": { "$ref": "#/components/schemas/ConstraintParameters" },
          "Status": { "$ref": "#/components/schemas/Status" }
        },
        "type": "object"
      },
      "DescribeCopyProductStatusInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "CopyProductToken": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["CopyProductToken"],
        "type": "object"
      },
      "DescribeCopyProductStatusOutput": {
        "properties": {
          "CopyProductStatus": { "$ref": "#/components/schemas/CopyProductStatus" },
          "StatusDetail": { "$ref": "#/components/schemas/StatusDetail" },
          "TargetProductId": { "$ref": "#/components/schemas/Id" }
        },
        "type": "object"
      },
      "DescribePortfolioInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DescribePortfolioOutput": {
        "properties": {
          "Budgets": { "$ref": "#/components/schemas/Budgets" },
          "PortfolioDetail": { "$ref": "#/components/schemas/PortfolioDetail" },
          "TagOptions": { "$ref": "#/components/schemas/TagOptionDetails" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "type": "object"
      },
      "DescribePortfolioShareStatusInput": {
        "properties": { "PortfolioShareToken": { "$ref": "#/components/schemas/Id" } },
        "required": ["PortfolioShareToken"],
        "type": "object"
      },
      "DescribePortfolioShareStatusOutput": {
        "properties": {
          "OrganizationNodeValue": { "$ref": "#/components/schemas/OrganizationNodeValue" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" },
          "PortfolioShareToken": { "$ref": "#/components/schemas/Id" },
          "ShareDetails": { "$ref": "#/components/schemas/ShareDetails" },
          "Status": { "$ref": "#/components/schemas/ShareStatus" }
        },
        "type": "object"
      },
      "DescribeProductAsAdminInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DescribeProductAsAdminOutput": {
        "properties": {
          "Budgets": { "$ref": "#/components/schemas/Budgets" },
          "ProductViewDetail": { "$ref": "#/components/schemas/ProductViewDetail" },
          "ProvisioningArtifactSummaries": { "$ref": "#/components/schemas/ProvisioningArtifactSummaries" },
          "TagOptions": { "$ref": "#/components/schemas/TagOptionDetails" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "type": "object"
      },
      "DescribeProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DescribeProductOutput": {
        "properties": {
          "Budgets": { "$ref": "#/components/schemas/Budgets" },
          "ProductViewSummary": { "$ref": "#/components/schemas/ProductViewSummary" },
          "ProvisioningArtifacts": { "$ref": "#/components/schemas/ProvisioningArtifacts" }
        },
        "type": "object"
      },
      "DescribeProductViewInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DescribeProductViewOutput": {
        "properties": {
          "ProductViewSummary": { "$ref": "#/components/schemas/ProductViewSummary" },
          "ProvisioningArtifacts": { "$ref": "#/components/schemas/ProvisioningArtifacts" }
        },
        "type": "object"
      },
      "DescribeProvisionedProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DescribeProvisionedProductOutput": {
        "properties": {
          "CloudWatchDashboards": { "$ref": "#/components/schemas/CloudWatchDashboards" },
          "ProvisionedProductDetail": { "$ref": "#/components/schemas/ProvisionedProductDetail" }
        },
        "type": "object"
      },
      "DescribeProvisionedProductPlanInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "PlanId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["PlanId"],
        "type": "object"
      },
      "DescribeProvisionedProductPlanOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProvisionedProductPlanDetails": { "$ref": "#/components/schemas/ProvisionedProductPlanDetails" },
          "ResourceChanges": { "$ref": "#/components/schemas/ResourceChanges" }
        },
        "type": "object"
      },
      "DescribeProvisioningArtifactInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "Verbose": { "$ref": "#/components/schemas/Verbose" }
        },
        "required": ["ProvisioningArtifactId", "ProductId"],
        "type": "object"
      },
      "DescribeProvisioningArtifactOutput": {
        "properties": {
          "Info": { "$ref": "#/components/schemas/ProvisioningArtifactInfo" },
          "ProvisioningArtifactDetail": { "$ref": "#/components/schemas/ProvisioningArtifactDetail" },
          "Status": { "$ref": "#/components/schemas/Status" }
        },
        "type": "object"
      },
      "DescribeProvisioningParametersInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PathId": { "$ref": "#/components/schemas/Id" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId", "ProvisioningArtifactId"],
        "type": "object"
      },
      "DescribeProvisioningParametersOutput": {
        "properties": {
          "ConstraintSummaries": { "$ref": "#/components/schemas/ConstraintSummaries" },
          "ProvisioningArtifactParameters": { "$ref": "#/components/schemas/ProvisioningArtifactParameters" },
          "ProvisioningArtifactPreferences": { "$ref": "#/components/schemas/ProvisioningArtifactPreferences" },
          "TagOptions": { "$ref": "#/components/schemas/TagOptionSummaries" },
          "UsageInstructions": { "$ref": "#/components/schemas/UsageInstructions" }
        },
        "type": "object"
      },
      "DescribeRecordInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DescribeRecordOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "RecordDetail": { "$ref": "#/components/schemas/RecordDetail" },
          "RecordOutputs": { "$ref": "#/components/schemas/RecordOutputs" }
        },
        "type": "object"
      },
      "DescribeServiceActionExecutionParametersInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "ProvisionedProductId": { "$ref": "#/components/schemas/Id" },
          "ServiceActionId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProvisionedProductId", "ServiceActionId"],
        "type": "object"
      },
      "DescribeServiceActionExecutionParametersOutput": {
        "properties": { "ServiceActionParameters": { "$ref": "#/components/schemas/ExecutionParameters" } },
        "type": "object"
      },
      "DescribeServiceActionInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Id": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "DescribeServiceActionOutput": {
        "properties": { "ServiceActionDetail": { "$ref": "#/components/schemas/ServiceActionDetail" } },
        "type": "object"
      },
      "DescribeTagOptionInput": {
        "properties": { "Id": { "$ref": "#/components/schemas/TagOptionId" } },
        "required": ["Id"],
        "type": "object"
      },
      "DescribeTagOptionOutput": {
        "properties": { "TagOptionDetail": { "$ref": "#/components/schemas/TagOptionDetail" } },
        "type": "object"
      },
      "Description": { "type": "string" },
      "DisableAWSOrganizationsAccessInput": { "properties": {}, "type": "object" },
      "DisableAWSOrganizationsAccessOutput": { "properties": {}, "type": "object" },
      "DisableTemplateValidation": { "type": "boolean" },
      "DisassociateBudgetFromResourceInput": {
        "properties": {
          "BudgetName": { "$ref": "#/components/schemas/BudgetName" },
          "ResourceId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["BudgetName", "ResourceId"],
        "type": "object"
      },
      "DisassociateBudgetFromResourceOutput": { "properties": {}, "type": "object" },
      "DisassociatePrincipalFromPortfolioInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" },
          "PrincipalARN": { "$ref": "#/components/schemas/PrincipalARN" }
        },
        "required": ["PortfolioId", "PrincipalARN"],
        "type": "object"
      },
      "DisassociatePrincipalFromPortfolioOutput": { "properties": {}, "type": "object" },
      "DisassociateProductFromPortfolioInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" },
          "ProductId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId", "PortfolioId"],
        "type": "object"
      },
      "DisassociateProductFromPortfolioOutput": { "properties": {}, "type": "object" },
      "DisassociateServiceActionFromProvisioningArtifactInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "ServiceActionId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId", "ProvisioningArtifactId", "ServiceActionId"],
        "type": "object"
      },
      "DisassociateServiceActionFromProvisioningArtifactOutput": { "properties": {}, "type": "object" },
      "DisassociateTagOptionFromResourceInput": {
        "properties": {
          "ResourceId": { "$ref": "#/components/schemas/ResourceId" },
          "TagOptionId": { "$ref": "#/components/schemas/TagOptionId" }
        },
        "required": ["ResourceId", "TagOptionId"],
        "type": "object"
      },
      "DisassociateTagOptionFromResourceOutput": { "properties": {}, "type": "object" },
      "DuplicateResourceException": {},
      "EnableAWSOrganizationsAccessInput": { "properties": {}, "type": "object" },
      "EnableAWSOrganizationsAccessOutput": { "properties": {}, "type": "object" },
      "Error": { "type": "string" },
      "ErrorCode": { "type": "string" },
      "ErrorDescription": { "type": "string" },
      "EvaluationType": { "enum": ["STATIC", "DYNAMIC"], "type": "string" },
      "ExecuteProvisionedProductPlanInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "PlanId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["PlanId", "IdempotencyToken"],
        "type": "object"
      },
      "ExecuteProvisionedProductPlanOutput": {
        "properties": { "RecordDetail": { "$ref": "#/components/schemas/RecordDetail" } },
        "type": "object"
      },
      "ExecuteProvisionedProductServiceActionInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "ExecuteToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "Parameters": { "$ref": "#/components/schemas/ExecutionParameterMap" },
          "ProvisionedProductId": { "$ref": "#/components/schemas/Id" },
          "ServiceActionId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProvisionedProductId", "ServiceActionId", "ExecuteToken"],
        "type": "object"
      },
      "ExecuteProvisionedProductServiceActionOutput": {
        "properties": { "RecordDetail": { "$ref": "#/components/schemas/RecordDetail" } },
        "type": "object"
      },
      "ExecutionParameter": {
        "properties": {
          "DefaultValues": { "$ref": "#/components/schemas/ExecutionParameterValueList" },
          "Name": { "$ref": "#/components/schemas/ExecutionParameterKey" },
          "Type": { "$ref": "#/components/schemas/ExecutionParameterType" }
        },
        "type": "object"
      },
      "ExecutionParameterKey": { "maxLength": 50, "minLength": 1, "type": "string" },
      "ExecutionParameterMap": {
        "additionalProperties": { "$ref": "#/components/schemas/ExecutionParameterValueList" },
        "maxProperties": 200,
        "minProperties": 1,
        "type": "object"
      },
      "ExecutionParameterType": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "ExecutionParameterValue": { "maxLength": 512, "minLength": 0, "type": "string" },
      "ExecutionParameterValueList": {
        "items": { "$ref": "#/components/schemas/ExecutionParameterValue" },
        "maxItems": 25,
        "minItems": 0,
        "type": "array"
      },
      "ExecutionParameters": { "items": { "$ref": "#/components/schemas/ExecutionParameter" }, "type": "array" },
      "FailedServiceActionAssociation": {
        "description": "An object containing information about the error, along with identifying information about the self-service action and its associations.",
        "properties": {
          "ErrorCode": { "$ref": "#/components/schemas/ServiceActionAssociationErrorCode" },
          "ErrorMessage": { "$ref": "#/components/schemas/ServiceActionAssociationErrorMessage" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "ServiceActionId": { "$ref": "#/components/schemas/Id" }
        },
        "type": "object"
      },
      "FailedServiceActionAssociations": {
        "items": { "$ref": "#/components/schemas/FailedServiceActionAssociation" },
        "maxItems": 50,
        "type": "array"
      },
      "GetAWSOrganizationsAccessStatusInput": { "properties": {}, "type": "object" },
      "GetAWSOrganizationsAccessStatusOutput": {
        "properties": { "AccessStatus": { "$ref": "#/components/schemas/AccessStatus" } },
        "type": "object"
      },
      "HasDefaultPath": { "type": "boolean" },
      "Id": { "maxLength": 100, "minLength": 1, "pattern": "^[a-zA-Z0-9_\\-]*", "type": "string" },
      "IdempotencyToken": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
        "type": "string"
      },
      "IgnoreErrors": { "type": "boolean" },
      "InstructionType": { "type": "string" },
      "InstructionValue": { "type": "string" },
      "InvalidParametersException": {},
      "InvalidStateException": {},
      "LastRequestId": { "type": "string" },
      "LaunchPathSummaries": { "items": { "$ref": "#/components/schemas/LaunchPathSummary" }, "type": "array" },
      "LaunchPathSummary": {
        "description": "Summary information about a product path for a user.",
        "properties": {
          "ConstraintSummaries": { "$ref": "#/components/schemas/ConstraintSummaries" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "Name": { "$ref": "#/components/schemas/PortfolioName" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "type": "object"
      },
      "LimitExceededException": {},
      "ListAcceptedPortfolioSharesInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "PortfolioShareType": { "$ref": "#/components/schemas/PortfolioShareType" }
        },
        "type": "object"
      },
      "ListAcceptedPortfolioSharesOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "PortfolioDetails": { "$ref": "#/components/schemas/PortfolioDetails" }
        },
        "type": "object"
      },
      "ListBudgetsForResourceInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "ResourceId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ResourceId"],
        "type": "object"
      },
      "ListBudgetsForResourceOutput": {
        "properties": {
          "Budgets": { "$ref": "#/components/schemas/Budgets" },
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" }
        },
        "type": "object"
      },
      "ListConstraintsForPortfolioInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" },
          "ProductId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["PortfolioId"],
        "type": "object"
      },
      "ListConstraintsForPortfolioOutput": {
        "properties": {
          "ConstraintDetails": { "$ref": "#/components/schemas/ConstraintDetails" },
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" }
        },
        "type": "object"
      },
      "ListLaunchPathsInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProductId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId"],
        "type": "object"
      },
      "ListLaunchPathsOutput": {
        "properties": {
          "LaunchPathSummaries": { "$ref": "#/components/schemas/LaunchPathSummaries" },
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" }
        },
        "type": "object"
      },
      "ListOrganizationPortfolioAccessInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "OrganizationNodeType": { "$ref": "#/components/schemas/OrganizationNodeType" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["PortfolioId", "OrganizationNodeType"],
        "type": "object"
      },
      "ListOrganizationPortfolioAccessOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "OrganizationNodes": { "$ref": "#/components/schemas/OrganizationNodes" }
        },
        "type": "object"
      },
      "ListPortfolioAccessInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["PortfolioId"],
        "type": "object"
      },
      "ListPortfolioAccessOutput": {
        "properties": {
          "AccountIds": { "$ref": "#/components/schemas/AccountIds" },
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" }
        },
        "type": "object"
      },
      "ListPortfoliosForProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProductId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId"],
        "type": "object"
      },
      "ListPortfoliosForProductOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "PortfolioDetails": { "$ref": "#/components/schemas/PortfolioDetails" }
        },
        "type": "object"
      },
      "ListPortfoliosInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" }
        },
        "type": "object"
      },
      "ListPortfoliosOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "PortfolioDetails": { "$ref": "#/components/schemas/PortfolioDetails" }
        },
        "type": "object"
      },
      "ListPrincipalsForPortfolioInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["PortfolioId"],
        "type": "object"
      },
      "ListPrincipalsForPortfolioOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "Principals": { "$ref": "#/components/schemas/Principals" }
        },
        "type": "object"
      },
      "ListProvisionedProductPlansInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "AccessLevelFilter": { "$ref": "#/components/schemas/AccessLevelFilter" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProvisionProductId": { "$ref": "#/components/schemas/Id" }
        },
        "type": "object"
      },
      "ListProvisionedProductPlansOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProvisionedProductPlans": { "$ref": "#/components/schemas/ProvisionedProductPlans" }
        },
        "type": "object"
      },
      "ListProvisioningArtifactsForServiceActionInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "ServiceActionId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ServiceActionId"],
        "type": "object"
      },
      "ListProvisioningArtifactsForServiceActionOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProvisioningArtifactViews": { "$ref": "#/components/schemas/ProvisioningArtifactViews" }
        },
        "type": "object"
      },
      "ListProvisioningArtifactsInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "ProductId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId"],
        "type": "object"
      },
      "ListProvisioningArtifactsOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProvisioningArtifactDetails": { "$ref": "#/components/schemas/ProvisioningArtifactDetails" }
        },
        "type": "object"
      },
      "ListRecordHistoryInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "AccessLevelFilter": { "$ref": "#/components/schemas/AccessLevelFilter" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "SearchFilter": { "$ref": "#/components/schemas/ListRecordHistorySearchFilter" }
        },
        "type": "object"
      },
      "ListRecordHistoryOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "RecordDetails": { "$ref": "#/components/schemas/RecordDetails" }
        },
        "type": "object"
      },
      "ListRecordHistorySearchFilter": {
        "description": "The search filter to use when listing history records.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/SearchFilterKey" },
          "Value": { "$ref": "#/components/schemas/SearchFilterValue" }
        },
        "type": "object"
      },
      "ListResourcesForTagOptionInput": {
        "properties": {
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceType" },
          "TagOptionId": { "$ref": "#/components/schemas/TagOptionId" }
        },
        "required": ["TagOptionId"],
        "type": "object"
      },
      "ListResourcesForTagOptionOutput": {
        "properties": {
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "ResourceDetails": { "$ref": "#/components/schemas/ResourceDetails" }
        },
        "type": "object"
      },
      "ListServiceActionsForProvisioningArtifactInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId", "ProvisioningArtifactId"],
        "type": "object"
      },
      "ListServiceActionsForProvisioningArtifactOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "ServiceActionSummaries": { "$ref": "#/components/schemas/ServiceActionSummaries" }
        },
        "type": "object"
      },
      "ListServiceActionsInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" }
        },
        "type": "object"
      },
      "ListServiceActionsOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "ServiceActionSummaries": { "$ref": "#/components/schemas/ServiceActionSummaries" }
        },
        "type": "object"
      },
      "ListStackInstancesForProvisionedProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProvisionedProductId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProvisionedProductId"],
        "type": "object"
      },
      "ListStackInstancesForProvisionedProductOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "StackInstances": { "$ref": "#/components/schemas/StackInstances" }
        },
        "type": "object"
      },
      "ListTagOptionsFilters": {
        "description": "Filters to use when listing TagOptions.",
        "properties": {
          "Active": { "$ref": "#/components/schemas/TagOptionActive" },
          "Key": { "$ref": "#/components/schemas/TagOptionKey" },
          "Value": { "$ref": "#/components/schemas/TagOptionValue" }
        },
        "type": "object"
      },
      "ListTagOptionsInput": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/ListTagOptionsFilters" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" }
        },
        "type": "object"
      },
      "ListTagOptionsOutput": {
        "properties": {
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "TagOptionDetails": { "$ref": "#/components/schemas/TagOptionDetails" }
        },
        "type": "object"
      },
      "LogicalResourceId": { "type": "string" },
      "Message": { "type": "string" },
      "Namespaces": { "items": { "$ref": "#/components/schemas/AccountId" }, "type": "array" },
      "NoEcho": { "type": "boolean" },
      "NotificationArn": {
        "maxLength": 1224,
        "minLength": 1,
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "type": "string"
      },
      "NotificationArns": {
        "items": { "$ref": "#/components/schemas/NotificationArn" },
        "maxItems": 5,
        "type": "array"
      },
      "OperationNotSupportedException": {},
      "OrganizationNode": {
        "description": "Information about the organization node.",
        "properties": {
          "Type": { "$ref": "#/components/schemas/OrganizationNodeType" },
          "Value": { "$ref": "#/components/schemas/OrganizationNodeValue" }
        },
        "type": "object"
      },
      "OrganizationNodeType": { "enum": ["ORGANIZATION", "ORGANIZATIONAL_UNIT", "ACCOUNT"], "type": "string" },
      "OrganizationNodeValue": {
        "pattern": "(^[0-9]{12}$)|(^arn:aws:organizations::\\d{12}:organization\\/o-[a-z0-9]{10,32})|(^o-[a-z0-9]{10,32}$)|(^arn:aws:organizations::\\d{12}:ou\\/o-[a-z0-9]{10,32}\\/ou-[0-9a-z]{4,32}-[0-9a-z]{8,32}$)|(^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$)",
        "type": "string"
      },
      "OrganizationNodes": { "items": { "$ref": "#/components/schemas/OrganizationNode" }, "type": "array" },
      "OutputKey": { "type": "string" },
      "OutputValue": { "type": "string" },
      "PageSize": { "maximum": 20, "minimum": 0, "type": "integer" },
      "PageToken": {
        "maxLength": 2024,
        "pattern": "[\\u0009\\u000a\\u000d\\u0020-\\uD7FF\\uE000-\\uFFFD]*",
        "type": "string"
      },
      "ParameterConstraints": {
        "description": "The constraints that the administrator has put on the parameter.",
        "properties": { "AllowedValues": { "$ref": "#/components/schemas/AllowedValues" } },
        "type": "object"
      },
      "ParameterKey": { "maxLength": 1000, "minLength": 1, "type": "string" },
      "ParameterType": { "type": "string" },
      "ParameterValue": { "maxLength": 4096, "type": "string" },
      "PhysicalId": { "type": "string" },
      "PhysicalResourceId": { "type": "string" },
      "PlanResourceType": { "maxLength": 256, "minLength": 1, "type": "string" },
      "PortfolioDescription": { "maxLength": 2000, "type": "string" },
      "PortfolioDetail": {
        "description": "Information about a portfolio.",
        "properties": {
          "ARN": { "$ref": "#/components/schemas/ResourceARN" },
          "CreatedTime": { "$ref": "#/components/schemas/CreationTime" },
          "Description": { "$ref": "#/components/schemas/PortfolioDescription" },
          "DisplayName": { "$ref": "#/components/schemas/PortfolioDisplayName" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "ProviderName": { "$ref": "#/components/schemas/ProviderName" }
        },
        "type": "object"
      },
      "PortfolioDetails": { "items": { "$ref": "#/components/schemas/PortfolioDetail" }, "type": "array" },
      "PortfolioDisplayName": { "maxLength": 100, "minLength": 1, "type": "string" },
      "PortfolioName": { "type": "string" },
      "PortfolioShareType": { "enum": ["IMPORTED", "AWS_SERVICECATALOG", "AWS_ORGANIZATIONS"], "type": "string" },
      "Principal": {
        "description": "Information about a principal.",
        "properties": {
          "PrincipalARN": { "$ref": "#/components/schemas/PrincipalARN" },
          "PrincipalType": { "$ref": "#/components/schemas/PrincipalType" }
        },
        "type": "object"
      },
      "PrincipalARN": { "maxLength": 1000, "minLength": 1, "type": "string" },
      "PrincipalType": { "enum": ["IAM"], "type": "string" },
      "Principals": { "items": { "$ref": "#/components/schemas/Principal" }, "type": "array" },
      "ProductArn": {
        "maxLength": 1224,
        "minLength": 1,
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "type": "string"
      },
      "ProductSource": { "enum": ["ACCOUNT"], "type": "string" },
      "ProductType": { "enum": ["CLOUD_FORMATION_TEMPLATE", "MARKETPLACE"], "maxLength": 8191, "type": "string" },
      "ProductViewAggregationType": { "type": "string" },
      "ProductViewAggregationValue": {
        "description": "A single product view aggregation value/count pair, containing metadata about each product to which the calling user has access.",
        "properties": {
          "ApproximateCount": { "$ref": "#/components/schemas/ApproximateCount" },
          "Value": { "$ref": "#/components/schemas/AttributeValue" }
        },
        "type": "object"
      },
      "ProductViewAggregationValues": {
        "items": { "$ref": "#/components/schemas/ProductViewAggregationValue" },
        "type": "array"
      },
      "ProductViewAggregations": {
        "additionalProperties": { "$ref": "#/components/schemas/ProductViewAggregationValues" },
        "type": "object"
      },
      "ProductViewDetail": {
        "description": "Information about a product view.",
        "properties": {
          "CreatedTime": { "$ref": "#/components/schemas/CreatedTime" },
          "ProductARN": { "$ref": "#/components/schemas/ResourceARN" },
          "ProductViewSummary": { "$ref": "#/components/schemas/ProductViewSummary" },
          "Status": { "$ref": "#/components/schemas/Status" }
        },
        "type": "object"
      },
      "ProductViewDetails": { "items": { "$ref": "#/components/schemas/ProductViewDetail" }, "type": "array" },
      "ProductViewDistributor": { "type": "string" },
      "ProductViewFilterBy": {
        "enum": ["FullTextSearch", "Owner", "ProductType", "SourceProductId"],
        "type": "string"
      },
      "ProductViewFilterValue": { "type": "string" },
      "ProductViewFilterValues": {
        "items": { "$ref": "#/components/schemas/ProductViewFilterValue" },
        "type": "array"
      },
      "ProductViewFilters": {
        "additionalProperties": { "$ref": "#/components/schemas/ProductViewFilterValues" },
        "type": "object"
      },
      "ProductViewName": { "maxLength": 8191, "type": "string" },
      "ProductViewOwner": { "maxLength": 8191, "type": "string" },
      "ProductViewShortDescription": { "maxLength": 8191, "type": "string" },
      "ProductViewSortBy": { "enum": ["Title", "VersionCount", "CreationDate"], "type": "string" },
      "ProductViewSummaries": { "items": { "$ref": "#/components/schemas/ProductViewSummary" }, "type": "array" },
      "ProductViewSummary": {
        "description": "Summary information about a product view.",
        "properties": {
          "Distributor": { "$ref": "#/components/schemas/ProductViewDistributor" },
          "HasDefaultPath": { "$ref": "#/components/schemas/HasDefaultPath" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "Name": { "$ref": "#/components/schemas/ProductViewName" },
          "Owner": { "$ref": "#/components/schemas/ProductViewOwner" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ShortDescription": { "$ref": "#/components/schemas/ProductViewShortDescription" },
          "SupportDescription": { "$ref": "#/components/schemas/SupportDescription" },
          "SupportEmail": { "$ref": "#/components/schemas/SupportEmail" },
          "SupportUrl": { "$ref": "#/components/schemas/SupportUrl" },
          "Type": { "$ref": "#/components/schemas/ProductType" }
        },
        "type": "object"
      },
      "PropertyKey": { "enum": ["OWNER"], "maxLength": 128, "minLength": 1, "type": "string" },
      "PropertyName": { "type": "string" },
      "PropertyValue": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "ProviderName": { "maxLength": 50, "minLength": 1, "type": "string" },
      "ProvisionProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "NotificationArns": { "$ref": "#/components/schemas/NotificationArns" },
          "PathId": { "$ref": "#/components/schemas/Id" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "ProvisionedProductName": { "$ref": "#/components/schemas/ProvisionedProductName" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningParameters": { "$ref": "#/components/schemas/ProvisioningParameters" },
          "ProvisioningPreferences": { "$ref": "#/components/schemas/ProvisioningPreferences" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "required": ["ProductId", "ProvisioningArtifactId", "ProvisionedProductName", "ProvisionToken"],
        "type": "object"
      },
      "ProvisionProductOutput": {
        "properties": { "RecordDetail": { "$ref": "#/components/schemas/RecordDetail" } },
        "type": "object"
      },
      "ProvisionedProductAttribute": {
        "description": "Information about a provisioned product.",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/ProvisionedProductNameOrArn" },
          "CreatedTime": { "$ref": "#/components/schemas/CreatedTime" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "LastRecordId": { "$ref": "#/components/schemas/Id" },
          "Name": { "$ref": "#/components/schemas/ProvisionedProductNameOrArn" },
          "PhysicalId": { "$ref": "#/components/schemas/PhysicalId" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "Status": { "$ref": "#/components/schemas/ProvisionedProductStatus" },
          "StatusMessage": { "$ref": "#/components/schemas/ProvisionedProductStatusMessage" },
          "Tags": { "$ref": "#/components/schemas/Tags" },
          "Type": { "$ref": "#/components/schemas/ProvisionedProductType" },
          "UserArn": { "$ref": "#/components/schemas/UserArn" },
          "UserArnSession": { "$ref": "#/components/schemas/UserArnSession" }
        },
        "type": "object"
      },
      "ProvisionedProductAttributes": {
        "items": { "$ref": "#/components/schemas/ProvisionedProductAttribute" },
        "type": "array"
      },
      "ProvisionedProductDetail": {
        "description": "Information about a provisioned product.",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/ProvisionedProductNameOrArn" },
          "CreatedTime": { "$ref": "#/components/schemas/CreatedTime" },
          "Id": { "$ref": "#/components/schemas/ProvisionedProductId" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "LastRecordId": { "$ref": "#/components/schemas/LastRequestId" },
          "Name": { "$ref": "#/components/schemas/ProvisionedProductNameOrArn" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "Status": { "$ref": "#/components/schemas/ProvisionedProductStatus" },
          "StatusMessage": { "$ref": "#/components/schemas/ProvisionedProductStatusMessage" },
          "Type": { "$ref": "#/components/schemas/ProvisionedProductType" }
        },
        "type": "object"
      },
      "ProvisionedProductDetails": {
        "items": { "$ref": "#/components/schemas/ProvisionedProductDetail" },
        "type": "array"
      },
      "ProvisionedProductFilters": {
        "additionalProperties": { "$ref": "#/components/schemas/ProvisionedProductViewFilterValues" },
        "type": "object"
      },
      "ProvisionedProductId": { "type": "string" },
      "ProvisionedProductName": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9._-]*",
        "type": "string"
      },
      "ProvisionedProductNameOrArn": {
        "maxLength": 1224,
        "minLength": 1,
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9._-]{0,127}|arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "type": "string"
      },
      "ProvisionedProductPlanDetails": {
        "description": "Information about a plan.",
        "properties": {
          "CreatedTime": { "$ref": "#/components/schemas/CreatedTime" },
          "NotificationArns": { "$ref": "#/components/schemas/NotificationArns" },
          "PathId": { "$ref": "#/components/schemas/Id" },
          "PlanId": { "$ref": "#/components/schemas/Id" },
          "PlanName": { "$ref": "#/components/schemas/ProvisionedProductPlanName" },
          "PlanType": { "$ref": "#/components/schemas/ProvisionedProductPlanType" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionProductName": { "$ref": "#/components/schemas/ProvisionedProductName" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningParameters": { "$ref": "#/components/schemas/UpdateProvisioningParameters" },
          "Status": { "$ref": "#/components/schemas/ProvisionedProductPlanStatus" },
          "StatusMessage": { "$ref": "#/components/schemas/StatusMessage" },
          "Tags": { "$ref": "#/components/schemas/Tags" },
          "UpdatedTime": { "$ref": "#/components/schemas/UpdatedTime" }
        },
        "type": "object"
      },
      "ProvisionedProductPlanName": { "type": "string" },
      "ProvisionedProductPlanStatus": {
        "enum": [
          "CREATE_IN_PROGRESS",
          "CREATE_SUCCESS",
          "CREATE_FAILED",
          "EXECUTE_IN_PROGRESS",
          "EXECUTE_SUCCESS",
          "EXECUTE_FAILED"
        ],
        "type": "string"
      },
      "ProvisionedProductPlanSummary": {
        "description": "Summary information about a plan.",
        "properties": {
          "PlanId": { "$ref": "#/components/schemas/Id" },
          "PlanName": { "$ref": "#/components/schemas/ProvisionedProductPlanName" },
          "PlanType": { "$ref": "#/components/schemas/ProvisionedProductPlanType" },
          "ProvisionProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionProductName": { "$ref": "#/components/schemas/ProvisionedProductName" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" }
        },
        "type": "object"
      },
      "ProvisionedProductPlanType": { "enum": ["CLOUDFORMATION"], "type": "string" },
      "ProvisionedProductPlans": {
        "items": { "$ref": "#/components/schemas/ProvisionedProductPlanSummary" },
        "type": "array"
      },
      "ProvisionedProductProperties": {
        "additionalProperties": { "$ref": "#/components/schemas/PropertyValue" },
        "maxProperties": 100,
        "minProperties": 1,
        "type": "object"
      },
      "ProvisionedProductStatus": {
        "enum": ["AVAILABLE", "UNDER_CHANGE", "TAINTED", "ERROR", "PLAN_IN_PROGRESS"],
        "type": "string"
      },
      "ProvisionedProductStatusMessage": { "type": "string" },
      "ProvisionedProductType": { "type": "string" },
      "ProvisionedProductViewFilterBy": { "enum": ["SearchQuery"], "type": "string" },
      "ProvisionedProductViewFilterValue": { "type": "string" },
      "ProvisionedProductViewFilterValues": {
        "items": { "$ref": "#/components/schemas/ProvisionedProductViewFilterValue" },
        "type": "array"
      },
      "ProvisioningArtifact": {
        "description": "Information about a provisioning artifact. A provisioning artifact is also known as a product version.",
        "properties": {
          "CreatedTime": { "$ref": "#/components/schemas/ProvisioningArtifactCreatedTime" },
          "Description": { "$ref": "#/components/schemas/ProvisioningArtifactDescription" },
          "Guidance": { "$ref": "#/components/schemas/ProvisioningArtifactGuidance" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "Name": { "$ref": "#/components/schemas/ProvisioningArtifactName" }
        },
        "type": "object"
      },
      "ProvisioningArtifactActive": { "type": "boolean" },
      "ProvisioningArtifactCreatedTime": { "format": "date-time", "type": "string" },
      "ProvisioningArtifactDescription": { "type": "string" },
      "ProvisioningArtifactDetail": {
        "description": "Information about a provisioning artifact (also known as a version) for a product.",
        "properties": {
          "Active": { "$ref": "#/components/schemas/ProvisioningArtifactActive" },
          "CreatedTime": { "$ref": "#/components/schemas/CreationTime" },
          "Description": { "$ref": "#/components/schemas/ProvisioningArtifactName" },
          "Guidance": { "$ref": "#/components/schemas/ProvisioningArtifactGuidance" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "Name": { "$ref": "#/components/schemas/ProvisioningArtifactName" },
          "Type": { "$ref": "#/components/schemas/ProvisioningArtifactType" }
        },
        "type": "object"
      },
      "ProvisioningArtifactDetails": {
        "items": { "$ref": "#/components/schemas/ProvisioningArtifactDetail" },
        "type": "array"
      },
      "ProvisioningArtifactGuidance": { "enum": ["DEFAULT", "DEPRECATED"], "type": "string" },
      "ProvisioningArtifactInfo": {
        "additionalProperties": { "$ref": "#/components/schemas/ProvisioningArtifactInfoValue" },
        "maxProperties": 100,
        "minProperties": 1,
        "type": "object"
      },
      "ProvisioningArtifactInfoKey": { "type": "string" },
      "ProvisioningArtifactInfoValue": { "type": "string" },
      "ProvisioningArtifactName": { "type": "string" },
      "ProvisioningArtifactParameter": {
        "description": "Information about a parameter used to provision a product.",
        "properties": {
          "DefaultValue": { "$ref": "#/components/schemas/DefaultValue" },
          "Description": { "$ref": "#/components/schemas/Description" },
          "IsNoEcho": { "$ref": "#/components/schemas/NoEcho" },
          "ParameterConstraints": { "$ref": "#/components/schemas/ParameterConstraints" },
          "ParameterKey": { "$ref": "#/components/schemas/ParameterKey" },
          "ParameterType": { "$ref": "#/components/schemas/ParameterType" }
        },
        "type": "object"
      },
      "ProvisioningArtifactParameters": {
        "items": { "$ref": "#/components/schemas/ProvisioningArtifactParameter" },
        "type": "array"
      },
      "ProvisioningArtifactPreferences": {
        "description": "<p>The user-defined preferences that will be applied during product provisioning, unless overridden by <code>ProvisioningPreferences</code> or <code>UpdateProvisioningPreferences</code>.</p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options\">Stack set operation options</a> in the <i>AWS CloudFormation User Guide</i>.</p>",
        "properties": {
          "StackSetAccounts": { "$ref": "#/components/schemas/StackSetAccounts" },
          "StackSetRegions": { "$ref": "#/components/schemas/StackSetRegions" }
        },
        "type": "object"
      },
      "ProvisioningArtifactProperties": {
        "description": "Information about a provisioning artifact (also known as a version) for a product.",
        "properties": {
          "Description": { "$ref": "#/components/schemas/ProvisioningArtifactDescription" },
          "DisableTemplateValidation": { "$ref": "#/components/schemas/DisableTemplateValidation" },
          "Info": { "$ref": "#/components/schemas/ProvisioningArtifactInfo" },
          "Name": { "$ref": "#/components/schemas/ProvisioningArtifactName" },
          "Type": { "$ref": "#/components/schemas/ProvisioningArtifactType" }
        },
        "required": ["Info"],
        "type": "object"
      },
      "ProvisioningArtifactPropertyName": { "enum": ["Id"], "type": "string" },
      "ProvisioningArtifactPropertyValue": { "type": "string" },
      "ProvisioningArtifactSummaries": {
        "items": { "$ref": "#/components/schemas/ProvisioningArtifactSummary" },
        "type": "array"
      },
      "ProvisioningArtifactSummary": {
        "description": "Summary information about a provisioning artifact (also known as a version) for a product.",
        "properties": {
          "CreatedTime": { "$ref": "#/components/schemas/ProvisioningArtifactCreatedTime" },
          "Description": { "$ref": "#/components/schemas/ProvisioningArtifactDescription" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "Name": { "$ref": "#/components/schemas/ProvisioningArtifactName" },
          "ProvisioningArtifactMetadata": { "$ref": "#/components/schemas/ProvisioningArtifactInfo" }
        },
        "type": "object"
      },
      "ProvisioningArtifactType": {
        "enum": ["CLOUD_FORMATION_TEMPLATE", "MARKETPLACE_AMI", "MARKETPLACE_CAR"],
        "type": "string"
      },
      "ProvisioningArtifactView": {
        "description": "An object that contains summary information about a product view and a provisioning artifact.",
        "properties": {
          "ProductViewSummary": { "$ref": "#/components/schemas/ProductViewSummary" },
          "ProvisioningArtifact": { "$ref": "#/components/schemas/ProvisioningArtifact" }
        },
        "type": "object"
      },
      "ProvisioningArtifactViews": {
        "items": { "$ref": "#/components/schemas/ProvisioningArtifactView" },
        "type": "array"
      },
      "ProvisioningArtifacts": { "items": { "$ref": "#/components/schemas/ProvisioningArtifact" }, "type": "array" },
      "ProvisioningParameter": {
        "description": "Information about a parameter used to provision a product.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/ParameterKey" },
          "Value": { "$ref": "#/components/schemas/ParameterValue" }
        },
        "type": "object"
      },
      "ProvisioningParameters": { "items": { "$ref": "#/components/schemas/ProvisioningParameter" }, "type": "array" },
      "ProvisioningPreferences": {
        "description": "The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product types.",
        "properties": {
          "StackSetAccounts": { "$ref": "#/components/schemas/StackSetAccounts" },
          "StackSetFailureToleranceCount": { "$ref": "#/components/schemas/StackSetFailureToleranceCount" },
          "StackSetFailureTolerancePercentage": { "$ref": "#/components/schemas/StackSetFailureTolerancePercentage" },
          "StackSetMaxConcurrencyCount": { "$ref": "#/components/schemas/StackSetMaxConcurrencyCount" },
          "StackSetMaxConcurrencyPercentage": { "$ref": "#/components/schemas/StackSetMaxConcurrencyPercentage" },
          "StackSetRegions": { "$ref": "#/components/schemas/StackSetRegions" }
        },
        "type": "object"
      },
      "RecordDetail": {
        "description": "Information about a request operation.",
        "properties": {
          "CreatedTime": { "$ref": "#/components/schemas/CreatedTime" },
          "PathId": { "$ref": "#/components/schemas/Id" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionedProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionedProductName": { "$ref": "#/components/schemas/ProvisionedProductName" },
          "ProvisionedProductType": { "$ref": "#/components/schemas/ProvisionedProductType" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "RecordErrors": { "$ref": "#/components/schemas/RecordErrors" },
          "RecordId": { "$ref": "#/components/schemas/Id" },
          "RecordTags": { "$ref": "#/components/schemas/RecordTags" },
          "RecordType": { "$ref": "#/components/schemas/RecordType" },
          "Status": { "$ref": "#/components/schemas/RecordStatus" },
          "UpdatedTime": { "$ref": "#/components/schemas/UpdatedTime" }
        },
        "type": "object"
      },
      "RecordDetails": { "items": { "$ref": "#/components/schemas/RecordDetail" }, "type": "array" },
      "RecordError": {
        "description": "The error code and description resulting from an operation.",
        "properties": {
          "Code": { "$ref": "#/components/schemas/ErrorCode" },
          "Description": { "$ref": "#/components/schemas/ErrorDescription" }
        },
        "type": "object"
      },
      "RecordErrors": { "items": { "$ref": "#/components/schemas/RecordError" }, "type": "array" },
      "RecordOutput": {
        "description": "The output for the product created as the result of a request. For example, the output for a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL.",
        "properties": {
          "Description": { "$ref": "#/components/schemas/Description" },
          "OutputKey": { "$ref": "#/components/schemas/OutputKey" },
          "OutputValue": { "$ref": "#/components/schemas/OutputValue" }
        },
        "type": "object"
      },
      "RecordOutputs": { "items": { "$ref": "#/components/schemas/RecordOutput" }, "type": "array" },
      "RecordStatus": {
        "enum": ["CREATED", "IN_PROGRESS", "IN_PROGRESS_IN_ERROR", "SUCCEEDED", "FAILED"],
        "type": "string"
      },
      "RecordTag": {
        "description": "Information about a tag, which is a key-value pair.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/RecordTagKey" },
          "Value": { "$ref": "#/components/schemas/RecordTagValue" }
        },
        "type": "object"
      },
      "RecordTagKey": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$",
        "type": "string"
      },
      "RecordTagValue": {
        "maxLength": 256,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$",
        "type": "string"
      },
      "RecordTags": { "items": { "$ref": "#/components/schemas/RecordTag" }, "maxItems": 50, "type": "array" },
      "RecordType": { "type": "string" },
      "Region": { "type": "string" },
      "RejectPortfolioShareInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" },
          "PortfolioShareType": { "$ref": "#/components/schemas/PortfolioShareType" }
        },
        "required": ["PortfolioId"],
        "type": "object"
      },
      "RejectPortfolioShareOutput": { "properties": {}, "type": "object" },
      "Replacement": { "enum": ["TRUE", "FALSE", "CONDITIONAL"], "type": "string" },
      "RequiresRecreation": { "enum": ["NEVER", "CONDITIONALLY", "ALWAYS"], "type": "string" },
      "ResourceARN": { "maxLength": 150, "minLength": 1, "type": "string" },
      "ResourceAttribute": {
        "enum": ["PROPERTIES", "METADATA", "CREATIONPOLICY", "UPDATEPOLICY", "DELETIONPOLICY", "TAGS"],
        "type": "string"
      },
      "ResourceChange": {
        "description": "Information about a resource change that will occur when a plan is executed.",
        "properties": {
          "Action": { "$ref": "#/components/schemas/ChangeAction" },
          "Details": { "$ref": "#/components/schemas/ResourceChangeDetails" },
          "LogicalResourceId": { "$ref": "#/components/schemas/LogicalResourceId" },
          "PhysicalResourceId": { "$ref": "#/components/schemas/PhysicalResourceId" },
          "Replacement": { "$ref": "#/components/schemas/Replacement" },
          "ResourceType": { "$ref": "#/components/schemas/PlanResourceType" },
          "Scope": { "$ref": "#/components/schemas/Scope" }
        },
        "type": "object"
      },
      "ResourceChangeDetail": {
        "description": "Information about a change to a resource attribute.",
        "properties": {
          "CausingEntity": { "$ref": "#/components/schemas/CausingEntity" },
          "Evaluation": { "$ref": "#/components/schemas/EvaluationType" },
          "Target": { "$ref": "#/components/schemas/ResourceTargetDefinition" }
        },
        "type": "object"
      },
      "ResourceChangeDetails": { "items": { "$ref": "#/components/schemas/ResourceChangeDetail" }, "type": "array" },
      "ResourceChanges": { "items": { "$ref": "#/components/schemas/ResourceChange" }, "type": "array" },
      "ResourceDetail": {
        "description": "Information about a resource.",
        "properties": {
          "ARN": { "$ref": "#/components/schemas/ResourceDetailARN" },
          "CreatedTime": { "$ref": "#/components/schemas/ResourceDetailCreatedTime" },
          "Description": { "$ref": "#/components/schemas/ResourceDetailDescription" },
          "Id": { "$ref": "#/components/schemas/ResourceDetailId" },
          "Name": { "$ref": "#/components/schemas/ResourceDetailName" }
        },
        "type": "object"
      },
      "ResourceDetailARN": { "type": "string" },
      "ResourceDetailCreatedTime": { "format": "date-time", "type": "string" },
      "ResourceDetailDescription": { "type": "string" },
      "ResourceDetailId": { "type": "string" },
      "ResourceDetailName": { "type": "string" },
      "ResourceDetails": { "items": { "$ref": "#/components/schemas/ResourceDetail" }, "type": "array" },
      "ResourceId": { "type": "string" },
      "ResourceInUseException": {},
      "ResourceNotFoundException": {},
      "ResourceTargetDefinition": {
        "description": "Information about a change to a resource attribute.",
        "properties": {
          "Attribute": { "$ref": "#/components/schemas/ResourceAttribute" },
          "Name": { "$ref": "#/components/schemas/PropertyName" },
          "RequiresRecreation": { "$ref": "#/components/schemas/RequiresRecreation" }
        },
        "type": "object"
      },
      "ResourceType": { "type": "string" },
      "ScanProvisionedProductsInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "AccessLevelFilter": { "$ref": "#/components/schemas/AccessLevelFilter" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" }
        },
        "type": "object"
      },
      "ScanProvisionedProductsOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProvisionedProducts": { "$ref": "#/components/schemas/ProvisionedProductDetails" }
        },
        "type": "object"
      },
      "Scope": { "items": { "$ref": "#/components/schemas/ResourceAttribute" }, "type": "array" },
      "SearchFilterKey": { "type": "string" },
      "SearchFilterValue": { "type": "string" },
      "SearchProductsAsAdminInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Filters": { "$ref": "#/components/schemas/ProductViewFilters" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "PortfolioId": { "$ref": "#/components/schemas/Id" },
          "ProductSource": { "$ref": "#/components/schemas/ProductSource" },
          "SortBy": { "$ref": "#/components/schemas/ProductViewSortBy" },
          "SortOrder": { "$ref": "#/components/schemas/SortOrder" }
        },
        "type": "object"
      },
      "SearchProductsAsAdminOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProductViewDetails": { "$ref": "#/components/schemas/ProductViewDetails" }
        },
        "type": "object"
      },
      "SearchProductsInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Filters": { "$ref": "#/components/schemas/ProductViewFilters" },
          "PageSize": { "$ref": "#/components/schemas/PageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "SortBy": { "$ref": "#/components/schemas/ProductViewSortBy" },
          "SortOrder": { "$ref": "#/components/schemas/SortOrder" }
        },
        "type": "object"
      },
      "SearchProductsOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProductViewAggregations": { "$ref": "#/components/schemas/ProductViewAggregations" },
          "ProductViewSummaries": { "$ref": "#/components/schemas/ProductViewSummaries" }
        },
        "type": "object"
      },
      "SearchProvisionedProductsInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "AccessLevelFilter": { "$ref": "#/components/schemas/AccessLevelFilter" },
          "Filters": { "$ref": "#/components/schemas/ProvisionedProductFilters" },
          "PageSize": { "$ref": "#/components/schemas/SearchProvisionedProductsPageSize" },
          "PageToken": { "$ref": "#/components/schemas/PageToken" },
          "SortBy": { "$ref": "#/components/schemas/SortField" },
          "SortOrder": { "$ref": "#/components/schemas/SortOrder" }
        },
        "type": "object"
      },
      "SearchProvisionedProductsOutput": {
        "properties": {
          "NextPageToken": { "$ref": "#/components/schemas/PageToken" },
          "ProvisionedProducts": { "$ref": "#/components/schemas/ProvisionedProductAttributes" },
          "TotalResultsCount": { "$ref": "#/components/schemas/TotalResultsCount" }
        },
        "type": "object"
      },
      "SearchProvisionedProductsPageSize": { "maximum": 100, "minimum": 0, "type": "integer" },
      "ServiceActionAssociation": {
        "description": "A self-service action association consisting of the Action ID, the Product ID, and the Provisioning Artifact ID.",
        "properties": {
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "ServiceActionId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ServiceActionId", "ProductId", "ProvisioningArtifactId"],
        "type": "object"
      },
      "ServiceActionAssociationErrorCode": {
        "enum": ["DUPLICATE_RESOURCE", "INTERNAL_FAILURE", "LIMIT_EXCEEDED", "RESOURCE_NOT_FOUND", "THROTTLING"],
        "type": "string"
      },
      "ServiceActionAssociationErrorMessage": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "ServiceActionAssociations": {
        "items": { "$ref": "#/components/schemas/ServiceActionAssociation" },
        "maxItems": 50,
        "minItems": 1,
        "type": "array"
      },
      "ServiceActionDefinitionKey": { "enum": ["Name", "Version", "AssumeRole", "Parameters"], "type": "string" },
      "ServiceActionDefinitionMap": {
        "additionalProperties": { "$ref": "#/components/schemas/ServiceActionDefinitionValue" },
        "maxProperties": 100,
        "minProperties": 1,
        "type": "object"
      },
      "ServiceActionDefinitionType": { "enum": ["SSM_AUTOMATION"], "type": "string" },
      "ServiceActionDefinitionValue": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "ServiceActionDescription": { "maxLength": 1024, "type": "string" },
      "ServiceActionDetail": {
        "description": "An object containing detailed information about the self-service action.",
        "properties": {
          "Definition": { "$ref": "#/components/schemas/ServiceActionDefinitionMap" },
          "ServiceActionSummary": { "$ref": "#/components/schemas/ServiceActionSummary" }
        },
        "type": "object"
      },
      "ServiceActionName": { "maxLength": 256, "minLength": 1, "pattern": "^[a-zA-Z0-9_\\-.]*", "type": "string" },
      "ServiceActionSummaries": { "items": { "$ref": "#/components/schemas/ServiceActionSummary" }, "type": "array" },
      "ServiceActionSummary": {
        "description": "Detailed information about the self-service action.",
        "properties": {
          "DefinitionType": { "$ref": "#/components/schemas/ServiceActionDefinitionType" },
          "Description": { "$ref": "#/components/schemas/ServiceActionDescription" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "Name": { "$ref": "#/components/schemas/ServiceActionName" }
        },
        "type": "object"
      },
      "ShareDetails": {
        "description": "Information about the portfolio share operation.",
        "properties": {
          "ShareErrors": { "$ref": "#/components/schemas/ShareErrors" },
          "SuccessfulShares": { "$ref": "#/components/schemas/SuccessfulShares" }
        },
        "type": "object"
      },
      "ShareError": {
        "description": "Errors that occurred during the portfolio share operation.",
        "properties": {
          "Accounts": { "$ref": "#/components/schemas/Namespaces" },
          "Error": { "$ref": "#/components/schemas/Error" },
          "Message": { "$ref": "#/components/schemas/Message" }
        },
        "type": "object"
      },
      "ShareErrors": { "items": { "$ref": "#/components/schemas/ShareError" }, "type": "array" },
      "ShareStatus": {
        "enum": ["NOT_STARTED", "IN_PROGRESS", "COMPLETED", "COMPLETED_WITH_ERRORS", "ERROR"],
        "type": "string"
      },
      "SortField": { "type": "string" },
      "SortOrder": { "enum": ["ASCENDING", "DESCENDING"], "type": "string" },
      "SourceProvisioningArtifactProperties": {
        "items": { "$ref": "#/components/schemas/SourceProvisioningArtifactPropertiesMap" },
        "type": "array"
      },
      "SourceProvisioningArtifactPropertiesMap": {
        "additionalProperties": { "$ref": "#/components/schemas/ProvisioningArtifactPropertyValue" },
        "type": "object"
      },
      "StackInstance": {
        "description": "An AWS CloudFormation stack, in a specific account and region, that's part of a stack set operation. A stack instance is a reference to an attempted or actual stack in a given account within a given region. A stack instance can exist without a stack—for example, if the stack couldn't be created for some reason. A stack instance is associated with only one stack set. Each stack instance contains the ID of its associated stack set, as well as the ID of the actual stack and the stack status. ",
        "properties": {
          "Account": { "$ref": "#/components/schemas/AccountId" },
          "Region": { "$ref": "#/components/schemas/Region" },
          "StackInstanceStatus": { "$ref": "#/components/schemas/StackInstanceStatus" }
        },
        "type": "object"
      },
      "StackInstanceStatus": { "enum": ["CURRENT", "OUTDATED", "INOPERABLE"], "type": "string" },
      "StackInstances": { "items": { "$ref": "#/components/schemas/StackInstance" }, "type": "array" },
      "StackSetAccounts": { "items": { "$ref": "#/components/schemas/AccountId" }, "type": "array" },
      "StackSetFailureToleranceCount": { "minimum": 0, "type": "integer" },
      "StackSetFailureTolerancePercentage": { "maximum": 100, "minimum": 0, "type": "integer" },
      "StackSetMaxConcurrencyCount": { "minimum": 1, "type": "integer" },
      "StackSetMaxConcurrencyPercentage": { "maximum": 100, "minimum": 1, "type": "integer" },
      "StackSetOperationType": { "enum": ["CREATE", "UPDATE", "DELETE"], "type": "string" },
      "StackSetRegions": { "items": { "$ref": "#/components/schemas/Region" }, "type": "array" },
      "Status": { "enum": ["AVAILABLE", "CREATING", "FAILED"], "type": "string" },
      "StatusDetail": { "type": "string" },
      "StatusMessage": { "pattern": "[\\u0009\\u000a\\u000d\\u0020-\\uD7FF\\uE000-\\uFFFD]*", "type": "string" },
      "SuccessfulShares": { "items": { "$ref": "#/components/schemas/AccountId" }, "type": "array" },
      "SupportDescription": { "maxLength": 8191, "type": "string" },
      "SupportEmail": { "maxLength": 254, "type": "string" },
      "SupportUrl": { "maxLength": 2083, "type": "string" },
      "Tag": {
        "description": "Information about a tag. A tag is a key-value pair. Tags are propagated to the resources created when provisioning a product.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TagKey" },
          "Value": { "$ref": "#/components/schemas/TagValue" }
        },
        "required": ["Key", "Value"],
        "type": "object"
      },
      "TagKey": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "TagKeys": { "items": { "$ref": "#/components/schemas/TagKey" }, "type": "array" },
      "TagOptionActive": { "type": "boolean" },
      "TagOptionDetail": {
        "description": "Information about a TagOption.",
        "properties": {
          "Active": { "$ref": "#/components/schemas/TagOptionActive" },
          "Id": { "$ref": "#/components/schemas/TagOptionId" },
          "Key": { "$ref": "#/components/schemas/TagOptionKey" },
          "Value": { "$ref": "#/components/schemas/TagOptionValue" }
        },
        "type": "object"
      },
      "TagOptionDetails": { "items": { "$ref": "#/components/schemas/TagOptionDetail" }, "type": "array" },
      "TagOptionId": { "maxLength": 100, "minLength": 1, "type": "string" },
      "TagOptionKey": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "TagOptionNotMigratedException": {},
      "TagOptionSummaries": { "items": { "$ref": "#/components/schemas/TagOptionSummary" }, "type": "array" },
      "TagOptionSummary": {
        "description": "Summary information about a TagOption.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TagOptionKey" },
          "Values": { "$ref": "#/components/schemas/TagOptionValues" }
        },
        "type": "object"
      },
      "TagOptionValue": {
        "maxLength": 256,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "TagOptionValues": { "items": { "$ref": "#/components/schemas/TagOptionValue" }, "type": "array" },
      "TagValue": {
        "maxLength": 256,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "Tags": { "items": { "$ref": "#/components/schemas/Tag" }, "maxItems": 50, "type": "array" },
      "TerminateProvisionedProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "IgnoreErrors": { "$ref": "#/components/schemas/IgnoreErrors" },
          "ProvisionedProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionedProductName": { "$ref": "#/components/schemas/ProvisionedProductNameOrArn" },
          "TerminateToken": { "$ref": "#/components/schemas/IdempotencyToken" }
        },
        "required": ["TerminateToken"],
        "type": "object"
      },
      "TerminateProvisionedProductOutput": {
        "properties": { "RecordDetail": { "$ref": "#/components/schemas/RecordDetail" } },
        "type": "object"
      },
      "TotalResultsCount": { "type": "integer" },
      "UpdateConstraintInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Description": { "$ref": "#/components/schemas/ConstraintDescription" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "Parameters": { "$ref": "#/components/schemas/ConstraintParameters" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "UpdateConstraintOutput": {
        "properties": {
          "ConstraintDetail": { "$ref": "#/components/schemas/ConstraintDetail" },
          "ConstraintParameters": { "$ref": "#/components/schemas/ConstraintParameters" },
          "Status": { "$ref": "#/components/schemas/Status" }
        },
        "type": "object"
      },
      "UpdatePortfolioInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "AddTags": { "$ref": "#/components/schemas/AddTags" },
          "Description": { "$ref": "#/components/schemas/PortfolioDescription" },
          "DisplayName": { "$ref": "#/components/schemas/PortfolioDisplayName" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "ProviderName": { "$ref": "#/components/schemas/ProviderName" },
          "RemoveTags": { "$ref": "#/components/schemas/TagKeys" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "UpdatePortfolioOutput": {
        "properties": {
          "PortfolioDetail": { "$ref": "#/components/schemas/PortfolioDetail" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "type": "object"
      },
      "UpdateProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "AddTags": { "$ref": "#/components/schemas/AddTags" },
          "Description": { "$ref": "#/components/schemas/ProductViewShortDescription" },
          "Distributor": { "$ref": "#/components/schemas/ProductViewOwner" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "Name": { "$ref": "#/components/schemas/ProductViewName" },
          "Owner": { "$ref": "#/components/schemas/ProductViewOwner" },
          "RemoveTags": { "$ref": "#/components/schemas/TagKeys" },
          "SupportDescription": { "$ref": "#/components/schemas/SupportDescription" },
          "SupportEmail": { "$ref": "#/components/schemas/SupportEmail" },
          "SupportUrl": { "$ref": "#/components/schemas/SupportUrl" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "UpdateProductOutput": {
        "properties": {
          "ProductViewDetail": { "$ref": "#/components/schemas/ProductViewDetail" },
          "Tags": { "$ref": "#/components/schemas/Tags" }
        },
        "type": "object"
      },
      "UpdateProvisionedProductInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "PathId": { "$ref": "#/components/schemas/Id" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionedProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionedProductName": { "$ref": "#/components/schemas/ProvisionedProductNameOrArn" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningParameters": { "$ref": "#/components/schemas/UpdateProvisioningParameters" },
          "ProvisioningPreferences": { "$ref": "#/components/schemas/UpdateProvisioningPreferences" },
          "Tags": { "$ref": "#/components/schemas/Tags" },
          "UpdateToken": { "$ref": "#/components/schemas/IdempotencyToken" }
        },
        "required": ["UpdateToken"],
        "type": "object"
      },
      "UpdateProvisionedProductOutput": {
        "properties": { "RecordDetail": { "$ref": "#/components/schemas/RecordDetail" } },
        "type": "object"
      },
      "UpdateProvisionedProductPropertiesInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "IdempotencyToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "ProvisionedProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionedProductProperties": { "$ref": "#/components/schemas/ProvisionedProductProperties" }
        },
        "required": ["ProvisionedProductId", "ProvisionedProductProperties", "IdempotencyToken"],
        "type": "object"
      },
      "UpdateProvisionedProductPropertiesOutput": {
        "properties": {
          "ProvisionedProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisionedProductProperties": { "$ref": "#/components/schemas/ProvisionedProductProperties" },
          "RecordId": { "$ref": "#/components/schemas/Id" },
          "Status": { "$ref": "#/components/schemas/RecordStatus" }
        },
        "type": "object"
      },
      "UpdateProvisioningArtifactInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Active": { "$ref": "#/components/schemas/ProvisioningArtifactActive" },
          "Description": { "$ref": "#/components/schemas/ProvisioningArtifactDescription" },
          "Guidance": { "$ref": "#/components/schemas/ProvisioningArtifactGuidance" },
          "Name": { "$ref": "#/components/schemas/ProvisioningArtifactName" },
          "ProductId": { "$ref": "#/components/schemas/Id" },
          "ProvisioningArtifactId": { "$ref": "#/components/schemas/Id" }
        },
        "required": ["ProductId", "ProvisioningArtifactId"],
        "type": "object"
      },
      "UpdateProvisioningArtifactOutput": {
        "properties": {
          "Info": { "$ref": "#/components/schemas/ProvisioningArtifactInfo" },
          "ProvisioningArtifactDetail": { "$ref": "#/components/schemas/ProvisioningArtifactDetail" },
          "Status": { "$ref": "#/components/schemas/Status" }
        },
        "type": "object"
      },
      "UpdateProvisioningParameter": {
        "description": "The parameter key-value pair used to update a provisioned product.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/ParameterKey" },
          "UsePreviousValue": { "$ref": "#/components/schemas/UsePreviousValue" },
          "Value": { "$ref": "#/components/schemas/ParameterValue" }
        },
        "type": "object"
      },
      "UpdateProvisioningParameters": {
        "items": { "$ref": "#/components/schemas/UpdateProvisioningParameter" },
        "type": "array"
      },
      "UpdateProvisioningPreferences": {
        "description": "The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product types.",
        "properties": {
          "StackSetAccounts": { "$ref": "#/components/schemas/StackSetAccounts" },
          "StackSetFailureToleranceCount": { "$ref": "#/components/schemas/StackSetFailureToleranceCount" },
          "StackSetFailureTolerancePercentage": { "$ref": "#/components/schemas/StackSetFailureTolerancePercentage" },
          "StackSetMaxConcurrencyCount": { "$ref": "#/components/schemas/StackSetMaxConcurrencyCount" },
          "StackSetMaxConcurrencyPercentage": { "$ref": "#/components/schemas/StackSetMaxConcurrencyPercentage" },
          "StackSetOperationType": { "$ref": "#/components/schemas/StackSetOperationType" },
          "StackSetRegions": { "$ref": "#/components/schemas/StackSetRegions" }
        },
        "type": "object"
      },
      "UpdateServiceActionInput": {
        "properties": {
          "AcceptLanguage": { "$ref": "#/components/schemas/AcceptLanguage" },
          "Definition": { "$ref": "#/components/schemas/ServiceActionDefinitionMap" },
          "Description": { "$ref": "#/components/schemas/ServiceActionDescription" },
          "Id": { "$ref": "#/components/schemas/Id" },
          "Name": { "$ref": "#/components/schemas/ServiceActionName" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "UpdateServiceActionOutput": {
        "properties": { "ServiceActionDetail": { "$ref": "#/components/schemas/ServiceActionDetail" } },
        "type": "object"
      },
      "UpdateTagOptionInput": {
        "properties": {
          "Active": { "$ref": "#/components/schemas/TagOptionActive" },
          "Id": { "$ref": "#/components/schemas/TagOptionId" },
          "Value": { "$ref": "#/components/schemas/TagOptionValue" }
        },
        "required": ["Id"],
        "type": "object"
      },
      "UpdateTagOptionOutput": {
        "properties": { "TagOptionDetail": { "$ref": "#/components/schemas/TagOptionDetail" } },
        "type": "object"
      },
      "UpdatedTime": { "format": "date-time", "type": "string" },
      "UsageInstruction": {
        "description": "Additional information provided by the administrator.",
        "properties": {
          "Type": { "$ref": "#/components/schemas/InstructionType" },
          "Value": { "$ref": "#/components/schemas/InstructionValue" }
        },
        "type": "object"
      },
      "UsageInstructions": { "items": { "$ref": "#/components/schemas/UsageInstruction" }, "type": "array" },
      "UsePreviousValue": { "type": "boolean" },
      "UserArn": { "type": "string" },
      "UserArnSession": { "type": "string" },
      "Verbose": { "type": "boolean" }
    }
  }
}
