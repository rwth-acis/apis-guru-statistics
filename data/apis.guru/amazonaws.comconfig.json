{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Config</fullname> <p>AWS Config provides a way to keep track of the configurations of all the AWS resources associated with your AWS account. You can use AWS Config to get the current and historical configurations of each AWS resource and also to get information about the relationship between the resources. An AWS resource can be an Amazon Compute Cloud (Amazon EC2) instance, an Elastic Block Store (EBS) volume, an elastic network Interface (ENI), or a security group. For a complete list of resources currently supported by AWS Config, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources\">Supported AWS Resources</a>.</p> <p>You can access and manage AWS Config through the AWS Management Console, the AWS Command Line Interface (AWS CLI), the AWS Config API, or the AWS SDKs for AWS Config. This reference guide contains documentation for the AWS Config API and the AWS CLI commands that you can use to manage AWS Config. The AWS Config API uses the Signature Version 4 protocol for signing requests. For more information about how to sign a request with this protocol, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a>. For detailed information about AWS Config features and their associated actions or commands, as well as how to work with AWS Management Console, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html\">What Is AWS Config</a> in the <i>AWS Config Developer Guide</i>.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Config",
    "version": "2014-11-12",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/config-2014-11-12.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "config"
  },
  "externalDocs": { "description": "Amazon Web Services documentation", "url": "https://docs.aws.amazon.com/config/" },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=StarlingDoveService.BatchGetAggregateResourceConfig": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the current configuration items for resources that are present in your AWS Config aggregator. The operation also returns a list of resources that are not processed in the current request. If there are no unprocessed resources, the operation returns an empty <code>unprocessedResourceIdentifiers</code> list. </p> <note> <ul> <li> <p>The API does not return results for deleted resources.</p> </li> <li> <p> The API does not return tags and relationships.</p> </li> </ul> </note>",
        "operationId": "BatchGetAggregateResourceConfig",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.BatchGetAggregateResourceConfig"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/BatchGetAggregateResourceConfigRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BatchGetAggregateResourceConfigResponse" }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "NoSuchConfigurationAggregatorException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchConfigurationAggregatorException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.BatchGetResourceConfig": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the current configuration for one or more requested resources. The operation also returns a list of resources that are not processed in the current request. If there are no unprocessed resources, the operation returns an empty unprocessedResourceKeys list. </p> <note> <ul> <li> <p>The API does not return results for deleted resources.</p> </li> <li> <p> The API does not return any tags for the requested resources. This information is filtered out of the supplementaryConfiguration section of the API response.</p> </li> </ul> </note>",
        "operationId": "BatchGetResourceConfig",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.BatchGetResourceConfig"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/BatchGetResourceConfigRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchGetResourceConfigResponse" } }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "NoAvailableConfigurationRecorderException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoAvailableConfigurationRecorderException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeleteAggregationAuthorization": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the authorization granted to the specified configuration aggregator account in a specified region.",
        "operationId": "DeleteAggregationAuthorization",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeleteAggregationAuthorization"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteAggregationAuthorizationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeleteConfigRule": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified AWS Config rule and all of its evaluation results.</p> <p>AWS Config sets the state of a rule to <code>DELETING</code> until the deletion is complete. You cannot update a rule while it is in this state. If you make a <code>PutConfigRule</code> or <code>DeleteConfigRule</code> request for the rule, you will receive a <code>ResourceInUseException</code>.</p> <p>You can check the state of a rule by using the <code>DescribeConfigRules</code> request.</p>",
        "operationId": "DeleteConfigRule",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeleteConfigRule"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteConfigRuleRequest" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigRuleException" } }
            }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeleteConfigurationAggregator": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified configuration aggregator and the aggregated data associated with the aggregator.",
        "operationId": "DeleteConfigurationAggregator",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeleteConfigurationAggregator"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteConfigurationAggregatorRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchConfigurationAggregatorException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchConfigurationAggregatorException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeleteConfigurationRecorder": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the configuration recorder.</p> <p>After the configuration recorder is deleted, AWS Config will not record resource configuration changes until you create a new configuration recorder.</p> <p>This action does not delete the configuration information that was previously recorded. You will be able to access the previously recorded information by using the <code>GetResourceConfigHistory</code> action, but you will not be able to access this information in the AWS Config console until you create a new configuration recorder.</p>",
        "operationId": "DeleteConfigurationRecorder",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeleteConfigurationRecorder"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteConfigurationRecorderRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchConfigurationRecorderException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigurationRecorderException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeleteDeliveryChannel": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the delivery channel.</p> <p>Before you can delete the delivery channel, you must stop the configuration recorder by using the <a>StopConfigurationRecorder</a> action.</p>",
        "operationId": "DeleteDeliveryChannel",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeleteDeliveryChannel"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDeliveryChannelRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchDeliveryChannelException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchDeliveryChannelException" } }
            }
          },
          "481": {
            "description": "LastDeliveryChannelDeleteFailedException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LastDeliveryChannelDeleteFailedException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeleteEvaluationResults": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the evaluation results for the specified AWS Config rule. You can specify one AWS Config rule per request. After you delete the evaluation results, you can call the <a>StartConfigRulesEvaluation</a> API to start evaluating your AWS resources against the rule.",
        "operationId": "DeleteEvaluationResults",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeleteEvaluationResults"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteEvaluationResultsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteEvaluationResultsResponse" } }
            }
          },
          "480": {
            "description": "NoSuchConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigRuleException" } }
            }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeleteOrganizationConfigRule": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "",
        "operationId": "DeleteOrganizationConfigRule",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeleteOrganizationConfigRule"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteOrganizationConfigRuleRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchOrganizationConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchOrganizationConfigRuleException" } }
            }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "482": {
            "description": "OrganizationAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrganizationAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeletePendingAggregationRequest": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes pending authorization requests for a specified aggregator account in a specified region.",
        "operationId": "DeletePendingAggregationRequest",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeletePendingAggregationRequest"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeletePendingAggregationRequestRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeleteRemediationConfiguration": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the remediation configuration.",
        "operationId": "DeleteRemediationConfiguration",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeleteRemediationConfiguration"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteRemediationConfigurationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteRemediationConfigurationResponse" }
              }
            }
          },
          "480": {
            "description": "NoSuchRemediationConfigurationException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchRemediationConfigurationException" }
              }
            }
          },
          "481": {
            "description": "RemediationInProgressException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RemediationInProgressException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeleteRetentionConfiguration": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the retention configuration.",
        "operationId": "DeleteRetentionConfiguration",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeleteRetentionConfiguration"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteRetentionConfigurationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "NoSuchRetentionConfigurationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchRetentionConfigurationException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DeliverConfigSnapshot": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Schedules delivery of a configuration snapshot to the Amazon S3 bucket in the specified delivery channel. After the delivery has started, AWS Config sends the following notifications using an Amazon SNS topic that you have specified.</p> <ul> <li> <p>Notification of the start of the delivery.</p> </li> <li> <p>Notification of the completion of the delivery, if the delivery was successfully completed.</p> </li> <li> <p>Notification of delivery failure, if the delivery failed.</p> </li> </ul>",
        "operationId": "DeliverConfigSnapshot",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DeliverConfigSnapshot"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeliverConfigSnapshotRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeliverConfigSnapshotResponse" } }
            }
          },
          "480": {
            "description": "NoSuchDeliveryChannelException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchDeliveryChannelException" } }
            }
          },
          "481": {
            "description": "NoAvailableConfigurationRecorderException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoAvailableConfigurationRecorderException" }
              }
            }
          },
          "482": {
            "description": "NoRunningConfigurationRecorderException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoRunningConfigurationRecorderException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeAggregateComplianceByConfigRules": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns a list of compliant and noncompliant rules with the number of resources for compliant and noncompliant rules. </p> <note> <p>The results can return an empty result page, but if you have a nextToken, the results are displayed on the next page.</p> </note>",
        "operationId": "DescribeAggregateComplianceByConfigRules",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeAggregateComplianceByConfigRules"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeAggregateComplianceByConfigRulesRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeAggregateComplianceByConfigRulesResponse" }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "NoSuchConfigurationAggregatorException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchConfigurationAggregatorException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeAggregationAuthorizations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of authorizations granted to various aggregator accounts and regions.",
        "operationId": "DescribeAggregationAuthorizations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeAggregationAuthorizations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeAggregationAuthorizationsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeAggregationAuthorizationsResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "482": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeComplianceByConfigRule": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Indicates whether the specified AWS Config rules are compliant. If a rule is noncompliant, this action returns the number of AWS resources that do not comply with the rule.</p> <p>A rule is compliant if all of the evaluated resources comply with it. It is noncompliant if any of these resources do not comply.</p> <p>If AWS Config has no current evaluation results for the rule, it returns <code>INSUFFICIENT_DATA</code>. This result might indicate one of the following conditions:</p> <ul> <li> <p>AWS Config has never invoked an evaluation for the rule. To check whether it has, use the <code>DescribeConfigRuleEvaluationStatus</code> action to get the <code>LastSuccessfulInvocationTime</code> and <code>LastFailedInvocationTime</code>.</p> </li> <li> <p>The rule's AWS Lambda function is failing to send evaluation results to AWS Config. Verify that the role you assigned to your configuration recorder includes the <code>config:PutEvaluations</code> permission. If the rule is a custom rule, verify that the AWS Lambda execution role includes the <code>config:PutEvaluations</code> permission.</p> </li> <li> <p>The rule's AWS Lambda function has returned <code>NOT_APPLICABLE</code> for all evaluation results. This can occur if the resources were deleted or removed from the rule's scope.</p> </li> </ul>",
        "operationId": "DescribeComplianceByConfigRule",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeComplianceByConfigRule"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeComplianceByConfigRuleRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeComplianceByConfigRuleResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "NoSuchConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigRuleException" } }
            }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeComplianceByResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Indicates whether the specified AWS resources are compliant. If a resource is noncompliant, this action returns the number of AWS Config rules that the resource does not comply with.</p> <p>A resource is compliant if it complies with all the AWS Config rules that evaluate it. It is noncompliant if it does not comply with one or more of these rules.</p> <p>If AWS Config has no current evaluation results for the resource, it returns <code>INSUFFICIENT_DATA</code>. This result might indicate one of the following conditions about the rules that evaluate the resource:</p> <ul> <li> <p>AWS Config has never invoked an evaluation for the rule. To check whether it has, use the <code>DescribeConfigRuleEvaluationStatus</code> action to get the <code>LastSuccessfulInvocationTime</code> and <code>LastFailedInvocationTime</code>.</p> </li> <li> <p>The rule's AWS Lambda function is failing to send evaluation results to AWS Config. Verify that the role that you assigned to your configuration recorder includes the <code>config:PutEvaluations</code> permission. If the rule is a custom rule, verify that the AWS Lambda execution role includes the <code>config:PutEvaluations</code> permission.</p> </li> <li> <p>The rule's AWS Lambda function has returned <code>NOT_APPLICABLE</code> for all evaluation results. This can occur if the resources were deleted or removed from the rule's scope.</p> </li> </ul>",
        "operationId": "DescribeComplianceByResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeComplianceByResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeComplianceByResourceRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeComplianceByResourceResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeConfigRuleEvaluationStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns status information for each of your AWS managed Config rules. The status includes information such as the last time AWS Config invoked the rule, the last time AWS Config failed to invoke the rule, and the related error for the last failure.",
        "operationId": "DescribeConfigRuleEvaluationStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeConfigRuleEvaluationStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeConfigRuleEvaluationStatusRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeConfigRuleEvaluationStatusResponse" }
              }
            }
          },
          "480": {
            "description": "NoSuchConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigRuleException" } }
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeConfigRules": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns details about your AWS Config rules.",
        "operationId": "DescribeConfigRules",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeConfigRules"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeConfigRulesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeConfigRulesResponse" } }
            }
          },
          "480": {
            "description": "NoSuchConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigRuleException" } }
            }
          },
          "481": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeConfigurationAggregatorSourcesStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns status information for sources within an aggregator. The status includes information about the last time AWS Config verified authorization between the source account and an aggregator account. In case of a failure, the status contains the related error code or message. ",
        "operationId": "DescribeConfigurationAggregatorSourcesStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeConfigurationAggregatorSourcesStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeConfigurationAggregatorSourcesStatusRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeConfigurationAggregatorSourcesStatusResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "NoSuchConfigurationAggregatorException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchConfigurationAggregatorException" }
              }
            }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeConfigurationAggregators": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the details of one or more configuration aggregators. If the configuration aggregator is not specified, this action returns the details for all the configuration aggregators associated with the account. ",
        "operationId": "DescribeConfigurationAggregators",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeConfigurationAggregators"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeConfigurationAggregatorsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeConfigurationAggregatorsResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "NoSuchConfigurationAggregatorException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchConfigurationAggregatorException" }
              }
            }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeConfigurationRecorderStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the current status of the specified configuration recorder. If a configuration recorder is not specified, this action returns the status of all configuration recorders associated with the account.</p> <note> <p>Currently, you can specify only one configuration recorder per region in your account.</p> </note>",
        "operationId": "DescribeConfigurationRecorderStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeConfigurationRecorderStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeConfigurationRecorderStatusRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeConfigurationRecorderStatusResponse" }
              }
            }
          },
          "480": {
            "description": "NoSuchConfigurationRecorderException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigurationRecorderException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeConfigurationRecorders": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the details for the specified configuration recorders. If the configuration recorder is not specified, this action returns the details for all configuration recorders associated with the account.</p> <note> <p>Currently, you can specify only one configuration recorder per region in your account.</p> </note>",
        "operationId": "DescribeConfigurationRecorders",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeConfigurationRecorders"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeConfigurationRecordersRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeConfigurationRecordersResponse" }
              }
            }
          },
          "480": {
            "description": "NoSuchConfigurationRecorderException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigurationRecorderException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeDeliveryChannelStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the current status of the specified delivery channel. If a delivery channel is not specified, this action returns the current status of all delivery channels associated with the account.</p> <note> <p>Currently, you can specify only one delivery channel per region in your account.</p> </note>",
        "operationId": "DescribeDeliveryChannelStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeDeliveryChannelStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDeliveryChannelStatusRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDeliveryChannelStatusResponse" } }
            }
          },
          "480": {
            "description": "NoSuchDeliveryChannelException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchDeliveryChannelException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeDeliveryChannels": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns details about the specified delivery channel. If a delivery channel is not specified, this action returns the details of all delivery channels associated with the account.</p> <note> <p>Currently, you can specify only one delivery channel per region in your account.</p> </note>",
        "operationId": "DescribeDeliveryChannels",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeDeliveryChannels"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDeliveryChannelsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDeliveryChannelsResponse" } }
            }
          },
          "480": {
            "description": "NoSuchDeliveryChannelException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchDeliveryChannelException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeOrganizationConfigRuleStatuses": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "",
        "operationId": "DescribeOrganizationConfigRuleStatuses",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeOrganizationConfigRuleStatuses"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeOrganizationConfigRuleStatusesRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeOrganizationConfigRuleStatusesResponse" }
              }
            }
          },
          "480": {
            "description": "NoSuchOrganizationConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchOrganizationConfigRuleException" } }
            }
          },
          "481": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "OrganizationAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrganizationAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeOrganizationConfigRules": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "",
        "operationId": "DescribeOrganizationConfigRules",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeOrganizationConfigRules"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeOrganizationConfigRulesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeOrganizationConfigRulesResponse" }
              }
            }
          },
          "480": {
            "description": "NoSuchOrganizationConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchOrganizationConfigRuleException" } }
            }
          },
          "481": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "482": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "483": {
            "description": "OrganizationAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrganizationAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribePendingAggregationRequests": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of all pending aggregation requests.",
        "operationId": "DescribePendingAggregationRequests",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribePendingAggregationRequests"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribePendingAggregationRequestsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribePendingAggregationRequestsResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "482": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeRemediationConfigurations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the details of one or more remediation configurations.",
        "operationId": "DescribeRemediationConfigurations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeRemediationConfigurations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeRemediationConfigurationsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeRemediationConfigurationsResponse" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeRemediationExecutionStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Provides a detailed view of a Remediation Execution for a set of resources including state, timestamps for when steps for the remediation execution occur, and any error messages for steps that have failed. When you specify the limit and the next token, you receive a paginated response.",
        "operationId": "DescribeRemediationExecutionStatus",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "Limit",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeRemediationExecutionStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeRemediationExecutionStatusRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeRemediationExecutionStatusResponse" }
              }
            }
          },
          "480": {
            "description": "NoSuchRemediationConfigurationException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchRemediationConfigurationException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.DescribeRetentionConfigurations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the details of one or more retention configurations. If the retention configuration name is not specified, this action returns the details for all the retention configurations for that account.</p> <note> <p>Currently, AWS Config supports only one retention configuration per region in your account.</p> </note>",
        "operationId": "DescribeRetentionConfigurations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.DescribeRetentionConfigurations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeRetentionConfigurationsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeRetentionConfigurationsResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "NoSuchRetentionConfigurationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchRetentionConfigurationException" } }
            }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetAggregateComplianceDetailsByConfigRule": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the evaluation results for the specified AWS Config rule for a specific resource in a rule. The results indicate which AWS resources were evaluated by the rule, when each resource was last evaluated, and whether each resource complies with the rule. </p> <note> <p>The results can return an empty result page. But if you have a nextToken, the results are displayed on the next page.</p> </note>",
        "operationId": "GetAggregateComplianceDetailsByConfigRule",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetAggregateComplianceDetailsByConfigRule"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetAggregateComplianceDetailsByConfigRuleRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAggregateComplianceDetailsByConfigRuleResponse" }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "NoSuchConfigurationAggregatorException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchConfigurationAggregatorException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetAggregateConfigRuleComplianceSummary": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the number of compliant and noncompliant rules for one or more accounts and regions in an aggregator.</p> <note> <p>The results can return an empty result page, but if you have a nextToken, the results are displayed on the next page.</p> </note>",
        "operationId": "GetAggregateConfigRuleComplianceSummary",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetAggregateConfigRuleComplianceSummary"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetAggregateConfigRuleComplianceSummaryRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAggregateConfigRuleComplianceSummaryResponse" }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "NoSuchConfigurationAggregatorException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchConfigurationAggregatorException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetAggregateDiscoveredResourceCounts": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the resource counts across accounts and regions that are present in your AWS Config aggregator. You can request the resource counts by providing filters and GroupByKey.</p> <p>For example, if the input contains accountID 12345678910 and region us-east-1 in filters, the API returns the count of resources in account ID 12345678910 and region us-east-1. If the input contains ACCOUNT_ID as a GroupByKey, the API returns resource counts for all source accounts that are present in your aggregator.</p>",
        "operationId": "GetAggregateDiscoveredResourceCounts",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetAggregateDiscoveredResourceCounts"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetAggregateDiscoveredResourceCountsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAggregateDiscoveredResourceCountsResponse" }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "NoSuchConfigurationAggregatorException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchConfigurationAggregatorException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetAggregateResourceConfig": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns configuration item that is aggregated for your specific resource in a specific source account and region.",
        "operationId": "GetAggregateResourceConfig",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetAggregateResourceConfig"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetAggregateResourceConfigRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetAggregateResourceConfigResponse" } }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "NoSuchConfigurationAggregatorException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchConfigurationAggregatorException" }
              }
            }
          },
          "482": {
            "description": "OversizedConfigurationItemException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OversizedConfigurationItemException" } }
            }
          },
          "483": {
            "description": "ResourceNotDiscoveredException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotDiscoveredException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetComplianceDetailsByConfigRule": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the evaluation results for the specified AWS Config rule. The results indicate which AWS resources were evaluated by the rule, when each resource was last evaluated, and whether each resource complies with the rule.",
        "operationId": "GetComplianceDetailsByConfigRule",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetComplianceDetailsByConfigRule"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetComplianceDetailsByConfigRuleRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetComplianceDetailsByConfigRuleResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "482": {
            "description": "NoSuchConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigRuleException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetComplianceDetailsByResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the evaluation results for the specified AWS resource. The results indicate which AWS Config rules were used to evaluate the resource, when each rule was last used, and whether the resource complies with each rule.",
        "operationId": "GetComplianceDetailsByResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetComplianceDetailsByResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetComplianceDetailsByResourceRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetComplianceDetailsByResourceResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetComplianceSummaryByConfigRule": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the number of AWS Config rules that are compliant and noncompliant, up to a maximum of 25 for each.",
        "operationId": "GetComplianceSummaryByConfigRule",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetComplianceSummaryByConfigRule"] }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetComplianceSummaryByConfigRuleResponse" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetComplianceSummaryByResourceType": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns the number of resources that are compliant and the number that are noncompliant. You can specify one or more resource types to get these numbers for each resource type. The maximum number returned is 100.",
        "operationId": "GetComplianceSummaryByResourceType",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetComplianceSummaryByResourceType"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetComplianceSummaryByResourceTypeRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetComplianceSummaryByResourceTypeResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetDiscoveredResourceCounts": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the resource types, the number of each resource type, and the total number of resources that AWS Config is recording in this region for your AWS account. </p> <p class=\"title\"> <b>Example</b> </p> <ol> <li> <p>AWS Config is recording three resource types in the US East (Ohio) Region for your account: 25 EC2 instances, 20 IAM users, and 15 S3 buckets.</p> </li> <li> <p>You make a call to the <code>GetDiscoveredResourceCounts</code> action and specify that you want all resource types. </p> </li> <li> <p>AWS Config returns the following:</p> <ul> <li> <p>The resource types (EC2 instances, IAM users, and S3 buckets).</p> </li> <li> <p>The number of each resource type (25, 20, and 15).</p> </li> <li> <p>The total number of all resources (60).</p> </li> </ul> </li> </ol> <p>The response is paginated. By default, AWS Config lists 100 <a>ResourceCount</a> objects on each page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string. To get the next page of results, run the request again and specify the string for the <code>nextToken</code> parameter.</p> <note> <p>If you make a call to the <a>GetDiscoveredResourceCounts</a> action, you might not immediately receive resource counts in the following situations:</p> <ul> <li> <p>You are a new AWS Config customer.</p> </li> <li> <p>You just enabled resource recording.</p> </li> </ul> <p>It might take a few minutes for AWS Config to record and count your resources. Wait a few minutes and then retry the <a>GetDiscoveredResourceCounts</a> action. </p> </note>",
        "operationId": "GetDiscoveredResourceCounts",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetDiscoveredResourceCounts"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetDiscoveredResourceCountsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetDiscoveredResourceCountsResponse" } }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetOrganizationConfigRuleDetailedStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "",
        "operationId": "GetOrganizationConfigRuleDetailedStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetOrganizationConfigRuleDetailedStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetOrganizationConfigRuleDetailedStatusRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetOrganizationConfigRuleDetailedStatusResponse" }
              }
            }
          },
          "480": {
            "description": "NoSuchOrganizationConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchOrganizationConfigRuleException" } }
            }
          },
          "481": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "OrganizationAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrganizationAccessDeniedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.GetResourceConfigHistory": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns a list of configuration items for the specified resource. The list contains details about each state of the resource during the specified time interval. If you specified a retention period to retain your <code>ConfigurationItems</code> between a minimum of 30 days and a maximum of 7 years (2557 days), AWS Config returns the <code>ConfigurationItems</code> for the specified retention period. </p> <p>The response is paginated. By default, AWS Config returns a limit of 10 configuration items per page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string. To get the next page of results, run the request again and specify the string for the <code>nextToken</code> parameter.</p> <note> <p>Each call to the API is limited to span a duration of seven days. It is likely that the number of records returned is smaller than the specified <code>limit</code>. In such cases, you can make another call, using the <code>nextToken</code>.</p> </note>",
        "operationId": "GetResourceConfigHistory",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.GetResourceConfigHistory"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetResourceConfigHistoryRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetResourceConfigHistoryResponse" } }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InvalidTimeRangeException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTimeRangeException" } }
            }
          },
          "482": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "484": {
            "description": "NoAvailableConfigurationRecorderException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoAvailableConfigurationRecorderException" }
              }
            }
          },
          "485": {
            "description": "ResourceNotDiscoveredException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotDiscoveredException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.ListAggregateDiscoveredResources": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Accepts a resource type and returns a list of resource identifiers that are aggregated for a specific resource type across accounts and regions. A resource identifier includes the resource type, ID, (if available) the custom resource name, source account, and source region. You can narrow the results to include only resources that have specific resource IDs, or a resource name, or source account ID, or source region.</p> <p>For example, if the input consists of accountID 12345678910 and the region is us-east-1 for resource type <code>AWS::EC2::Instance</code> then the API returns all the EC2 instance identifiers of accountID 12345678910 and region us-east-1.</p>",
        "operationId": "ListAggregateDiscoveredResources",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.ListAggregateDiscoveredResources"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListAggregateDiscoveredResourcesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListAggregateDiscoveredResourcesResponse" }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "NoSuchConfigurationAggregatorException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchConfigurationAggregatorException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.ListDiscoveredResources": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Accepts a resource type and returns a list of resource identifiers for the resources of that type. A resource identifier includes the resource type, ID, and (if available) the custom resource name. The results consist of resources that AWS Config has discovered, including those that AWS Config is not currently recording. You can narrow the results to include only resources that have specific resource IDs or a resource name.</p> <note> <p>You can specify either resource IDs or a resource name, but not both, in the same request.</p> </note> <p>The response is paginated. By default, AWS Config lists 100 resource identifiers on each page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string. To get the next page of results, run the request again and specify the string for the <code>nextToken</code> parameter.</p>",
        "operationId": "ListDiscoveredResources",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.ListDiscoveredResources"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListDiscoveredResourcesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListDiscoveredResourcesResponse" } }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "NoAvailableConfigurationRecorderException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoAvailableConfigurationRecorderException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.ListTagsForResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "List the tags for AWS Config resource.",
        "operationId": "ListTagsForResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.ListTagsForResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsForResourceRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsForResourceResponse" } }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "482": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.PutAggregationAuthorization": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Authorizes the aggregator account and region to collect data from the source account and region. ",
        "operationId": "PutAggregationAuthorization",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.PutAggregationAuthorization"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PutAggregationAuthorizationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PutAggregationAuthorizationResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.PutConfigRule": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds or updates an AWS Config rule for evaluating whether your AWS resources comply with your desired configurations.</p> <p>You can use this action for custom AWS Config rules and AWS managed Config rules. A custom AWS Config rule is a rule that you develop and maintain. An AWS managed Config rule is a customizable, predefined rule that AWS Config provides.</p> <p>If you are adding a new custom AWS Config rule, you must first create the AWS Lambda function that the rule invokes to evaluate your resources. When you use the <code>PutConfigRule</code> action to add the rule to AWS Config, you must specify the Amazon Resource Name (ARN) that AWS Lambda assigns to the function. Specify the ARN for the <code>SourceIdentifier</code> key. This key is part of the <code>Source</code> object, which is part of the <code>ConfigRule</code> object. </p> <p>If you are adding an AWS managed Config rule, specify the rule's identifier for the <code>SourceIdentifier</code> key. To reference AWS managed Config rule identifiers, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html\">About AWS Managed Config Rules</a>.</p> <p>For any new rule that you add, specify the <code>ConfigRuleName</code> in the <code>ConfigRule</code> object. Do not specify the <code>ConfigRuleArn</code> or the <code>ConfigRuleId</code>. These values are generated by AWS Config for new rules.</p> <p>If you are updating a rule that you added previously, you can specify the rule by <code>ConfigRuleName</code>, <code>ConfigRuleId</code>, or <code>ConfigRuleArn</code> in the <code>ConfigRule</code> data type that you use in this request.</p> <p>The maximum number of rules that AWS Config supports is 150.</p> <p>For information about requesting a rule limit increase, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_config\">AWS Config Limits</a> in the <i>AWS General Reference Guide</i>.</p> <p>For more information about developing and using AWS Config rules, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html\">Evaluating AWS Resource Configurations with AWS Config</a> in the <i>AWS Config Developer Guide</i>.</p>",
        "operationId": "PutConfigRule",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.PutConfigRule"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PutConfigRuleRequest" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "MaxNumberOfConfigRulesExceededException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MaxNumberOfConfigRulesExceededException" }
              }
            }
          },
          "482": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "483": {
            "description": "InsufficientPermissionsException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InsufficientPermissionsException" } }
            }
          },
          "484": {
            "description": "NoAvailableConfigurationRecorderException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoAvailableConfigurationRecorderException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.PutConfigurationAggregator": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates and updates the configuration aggregator with the selected source accounts and regions. The source account can be individual account(s) or an organization.</p> <note> <p>AWS Config should be enabled in source accounts and regions you want to aggregate.</p> <p>If your source type is an organization, you must be signed in to the master account and all features must be enabled in your organization. AWS Config calls <code>EnableAwsServiceAccess</code> API to enable integration between AWS Config and AWS Organizations. </p> </note>",
        "operationId": "PutConfigurationAggregator",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.PutConfigurationAggregator"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PutConfigurationAggregatorRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PutConfigurationAggregatorResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidRoleException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRoleException" } } }
          },
          "483": {
            "description": "OrganizationAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrganizationAccessDeniedException" } }
            }
          },
          "484": {
            "description": "NoAvailableOrganizationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoAvailableOrganizationException" } }
            }
          },
          "485": {
            "description": "OrganizationAllFeaturesNotEnabledException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrganizationAllFeaturesNotEnabledException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.PutConfigurationRecorder": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a new configuration recorder to record the selected resource configurations.</p> <p>You can use this action to change the role <code>roleARN</code> or the <code>recordingGroup</code> of an existing recorder. To change the role, call the action on the existing configuration recorder and specify a role.</p> <note> <p>Currently, you can specify only one configuration recorder per region in your account.</p> <p>If <code>ConfigurationRecorder</code> does not have the <b>recordingGroup</b> parameter specified, the default is to record all supported resource types.</p> </note>",
        "operationId": "PutConfigurationRecorder",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.PutConfigurationRecorder"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PutConfigurationRecorderRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "MaxNumberOfConfigurationRecordersExceededException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MaxNumberOfConfigurationRecordersExceededException" }
              }
            }
          },
          "481": {
            "description": "InvalidConfigurationRecorderNameException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidConfigurationRecorderNameException" }
              }
            }
          },
          "482": {
            "description": "InvalidRoleException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRoleException" } } }
          },
          "483": {
            "description": "InvalidRecordingGroupException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRecordingGroupException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.PutDeliveryChannel": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a delivery channel object to deliver configuration information to an Amazon S3 bucket and Amazon SNS topic.</p> <p>Before you can create a delivery channel, you must create a configuration recorder.</p> <p>You can use this action to change the Amazon S3 bucket or an Amazon SNS topic of the existing delivery channel. To change the Amazon S3 bucket or an Amazon SNS topic, call this action and specify the changed values for the S3 bucket and the SNS topic. If you specify a different value for either the S3 bucket or the SNS topic, this action will keep the existing value for the parameter that is not changed.</p> <note> <p>You can have only one delivery channel per region in your account.</p> </note>",
        "operationId": "PutDeliveryChannel",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.PutDeliveryChannel"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PutDeliveryChannelRequest" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "MaxNumberOfDeliveryChannelsExceededException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MaxNumberOfDeliveryChannelsExceededException" }
              }
            }
          },
          "481": {
            "description": "NoAvailableConfigurationRecorderException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoAvailableConfigurationRecorderException" }
              }
            }
          },
          "482": {
            "description": "InvalidDeliveryChannelNameException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDeliveryChannelNameException" } }
            }
          },
          "483": {
            "description": "NoSuchBucketException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchBucketException" } } }
          },
          "484": {
            "description": "InvalidS3KeyPrefixException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidS3KeyPrefixException" } }
            }
          },
          "485": {
            "description": "InvalidSNSTopicARNException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidSNSTopicARNException" } }
            }
          },
          "486": {
            "description": "InsufficientDeliveryPolicyException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InsufficientDeliveryPolicyException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.PutEvaluations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Used by an AWS Lambda function to deliver evaluation results to AWS Config. This action is required in every AWS Lambda function that is invoked by an AWS Config rule.",
        "operationId": "PutEvaluations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.PutEvaluations"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PutEvaluationsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PutEvaluationsResponse" } } }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "InvalidResultTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResultTokenException" } }
            }
          },
          "482": {
            "description": "NoSuchConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigRuleException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.PutOrganizationConfigRule": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "",
        "operationId": "PutOrganizationConfigRule",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.PutOrganizationConfigRule"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PutOrganizationConfigRuleRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PutOrganizationConfigRuleResponse" } }
            }
          },
          "480": {
            "description": "MaxNumberOfOrganizationConfigRulesExceededException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MaxNumberOfOrganizationConfigRulesExceededException" }
              }
            }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "484": {
            "description": "OrganizationAccessDeniedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrganizationAccessDeniedException" } }
            }
          },
          "485": {
            "description": "NoAvailableOrganizationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoAvailableOrganizationException" } }
            }
          },
          "486": {
            "description": "OrganizationAllFeaturesNotEnabledException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrganizationAllFeaturesNotEnabledException" }
              }
            }
          },
          "487": {
            "description": "InsufficientPermissionsException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InsufficientPermissionsException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.PutRemediationConfigurations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Adds or updates the remediation configuration with a specific AWS Config rule with the selected target or action. The API creates the <code>RemediationConfiguration</code> object for the AWS Config rule. The AWS Config rule must already exist for you to add a remediation configuration. The target (SSM document) must exist and have permissions to use the target. ",
        "operationId": "PutRemediationConfigurations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.PutRemediationConfigurations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PutRemediationConfigurationsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PutRemediationConfigurationsResponse" } }
            }
          },
          "480": {
            "description": "InsufficientPermissionsException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InsufficientPermissionsException" } }
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.PutRetentionConfiguration": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates and updates the retention configuration with details about retention period (number of days) that AWS Config stores your historical information. The API creates the <code>RetentionConfiguration</code> object and names the object as <b>default</b>. When you have a <code>RetentionConfiguration</code> object named <b>default</b>, calling the API modifies the default object. </p> <note> <p>Currently, AWS Config supports only one retention configuration per region in your account.</p> </note>",
        "operationId": "PutRetentionConfiguration",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.PutRetentionConfiguration"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PutRetentionConfigurationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PutRetentionConfigurationResponse" } }
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "481": {
            "description": "MaxNumberOfRetentionConfigurationsExceededException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MaxNumberOfRetentionConfigurationsExceededException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.SelectResourceConfig": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Accepts a structured query language (SQL) <code>SELECT</code> command, performs the corresponding search, and returns resource configurations matching the properties.</p> <p>For more information about query components, see the <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/query-components.html\"> <b>Query Components</b> </a> section in the AWS Config Developer Guide.</p>",
        "operationId": "SelectResourceConfig",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.SelectResourceConfig"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/SelectResourceConfigRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SelectResourceConfigResponse" } }
            }
          },
          "480": {
            "description": "InvalidExpressionException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidExpressionException" } }
            }
          },
          "481": {
            "description": "InvalidLimitException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidLimitException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.StartConfigRulesEvaluation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Runs an on-demand evaluation for the specified AWS Config rules against the last known configuration state of the resources. Use <code>StartConfigRulesEvaluation</code> when you want to test that a rule you updated is working as expected. <code>StartConfigRulesEvaluation</code> does not re-record the latest configuration state for your resources. It re-runs an evaluation against the last known state of your resources. </p> <p>You can specify up to 25 AWS Config rules per request. </p> <p>An existing <code>StartConfigRulesEvaluation</code> call for the specified rules must complete before you can call the API again. If you chose to have AWS Config stream to an Amazon SNS topic, you will receive a <code>ConfigRuleEvaluationStarted</code> notification when the evaluation starts.</p> <note> <p>You don't need to call the <code>StartConfigRulesEvaluation</code> API to run an evaluation for a new rule. When you create a rule, AWS Config evaluates your resources against the rule automatically. </p> </note> <p>The <code>StartConfigRulesEvaluation</code> API is useful if you want to run on-demand evaluations, such as the following example:</p> <ol> <li> <p>You have a custom rule that evaluates your IAM resources every 24 hours.</p> </li> <li> <p>You update your Lambda function to add additional conditions to your rule.</p> </li> <li> <p>Instead of waiting for the next periodic evaluation, you call the <code>StartConfigRulesEvaluation</code> API.</p> </li> <li> <p>AWS Config invokes your Lambda function and evaluates your IAM resources.</p> </li> <li> <p>Your custom rule will still run periodic evaluations every 24 hours.</p> </li> </ol>",
        "operationId": "StartConfigRulesEvaluation",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.StartConfigRulesEvaluation"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartConfigRulesEvaluationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartConfigRulesEvaluationResponse" } }
            }
          },
          "480": {
            "description": "NoSuchConfigRuleException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigRuleException" } }
            }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.StartConfigurationRecorder": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Starts recording configurations of the AWS resources you have selected to record in your AWS account.</p> <p>You must have created at least one delivery channel to successfully start the configuration recorder.</p>",
        "operationId": "StartConfigurationRecorder",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.StartConfigurationRecorder"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartConfigurationRecorderRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchConfigurationRecorderException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigurationRecorderException" } }
            }
          },
          "481": {
            "description": "NoAvailableDeliveryChannelException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoAvailableDeliveryChannelException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.StartRemediationExecution": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Runs an on-demand remediation for the specified AWS Config rules against the last known remediation configuration. It runs an execution against the current state of your resources. Remediation execution is asynchronous.</p> <p>You can specify up to 100 resource keys per request. An existing StartRemediationExecution call for the specified resource keys must complete before you can call the API again.</p>",
        "operationId": "StartRemediationExecution",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.StartRemediationExecution"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartRemediationExecutionRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartRemediationExecutionResponse" } }
            }
          },
          "480": {
            "description": "InsufficientPermissionsException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InsufficientPermissionsException" } }
            }
          },
          "481": {
            "description": "NoSuchRemediationConfigurationException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NoSuchRemediationConfigurationException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.StopConfigurationRecorder": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Stops recording configurations of the AWS resources you have selected to record in your AWS account.",
        "operationId": "StopConfigurationRecorder",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.StopConfigurationRecorder"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopConfigurationRecorderRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchConfigurationRecorderException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/NoSuchConfigurationRecorderException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.TagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associates the specified tags to a resource with the specified resourceArn. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.",
        "operationId": "TagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.TagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "TooManyTagsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=StarlingDoveService.UntagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes specified tags from a resource.",
        "operationId": "UntagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["StarlingDoveService.UntagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ValidationException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The Config Service multi-region endpoint",
      "url": "http://config.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Config Service multi-region endpoint",
      "url": "https://config.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Config Service endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://config.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Config Service endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://config.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "ARN": { "type": "string" },
      "AccountAggregationSource": {
        "description": "A collection of accounts and regions.",
        "properties": {
          "AccountIds": { "$ref": "#/components/schemas/AccountAggregationSourceAccountList" },
          "AllAwsRegions": { "$ref": "#/components/schemas/Boolean" },
          "AwsRegions": { "$ref": "#/components/schemas/AggregatorRegionList" }
        },
        "required": ["AccountIds"],
        "type": "object"
      },
      "AccountAggregationSourceAccountList": {
        "items": { "$ref": "#/components/schemas/AccountId" },
        "minItems": 1,
        "type": "array"
      },
      "AccountAggregationSourceList": {
        "items": { "$ref": "#/components/schemas/AccountAggregationSource" },
        "maxItems": 1,
        "minItems": 0,
        "type": "array"
      },
      "AccountId": { "pattern": "\\d{12}", "type": "string" },
      "AggregateComplianceByConfigRule": {
        "description": "<p>Indicates whether an AWS Config rule is compliant based on account ID, region, compliance, and rule name.</p> <p>A rule is compliant if all of the resources that the rule evaluated comply with it. It is noncompliant if any of these resources do not comply.</p>",
        "properties": {
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "AwsRegion": { "$ref": "#/components/schemas/AwsRegion" },
          "Compliance": { "$ref": "#/components/schemas/Compliance" },
          "ConfigRuleName": { "$ref": "#/components/schemas/ConfigRuleName" }
        },
        "type": "object"
      },
      "AggregateComplianceByConfigRuleList": {
        "items": { "$ref": "#/components/schemas/AggregateComplianceByConfigRule" },
        "type": "array"
      },
      "AggregateComplianceCount": {
        "description": "Returns the number of compliant and noncompliant rules for one or more accounts and regions in an aggregator.",
        "properties": {
          "ComplianceSummary": { "$ref": "#/components/schemas/ComplianceSummary" },
          "GroupName": { "$ref": "#/components/schemas/StringWithCharLimit256" }
        },
        "type": "object"
      },
      "AggregateComplianceCountList": {
        "items": { "$ref": "#/components/schemas/AggregateComplianceCount" },
        "type": "array"
      },
      "AggregateEvaluationResult": {
        "description": "The details of an AWS Config evaluation for an account ID and region in an aggregator. Provides the AWS resource that was evaluated, the compliance of the resource, related time stamps, and supplementary information. ",
        "properties": {
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "Annotation": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "AwsRegion": { "$ref": "#/components/schemas/AwsRegion" },
          "ComplianceType": { "$ref": "#/components/schemas/ComplianceType" },
          "ConfigRuleInvokedTime": { "$ref": "#/components/schemas/Date" },
          "EvaluationResultIdentifier": { "$ref": "#/components/schemas/EvaluationResultIdentifier" },
          "ResultRecordedTime": { "$ref": "#/components/schemas/Date" }
        },
        "type": "object"
      },
      "AggregateEvaluationResultList": {
        "items": { "$ref": "#/components/schemas/AggregateEvaluationResult" },
        "type": "array"
      },
      "AggregateResourceIdentifier": {
        "description": "The details that identify a resource that is collected by AWS Config aggregator, including the resource type, ID, (if available) the custom resource name, the source account, and source region.",
        "properties": {
          "ResourceId": { "$ref": "#/components/schemas/ResourceId" },
          "ResourceName": { "$ref": "#/components/schemas/ResourceName" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceType" },
          "SourceAccountId": { "$ref": "#/components/schemas/AccountId" },
          "SourceRegion": { "$ref": "#/components/schemas/AwsRegion" }
        },
        "required": ["SourceAccountId", "SourceRegion", "ResourceId", "ResourceType"],
        "type": "object"
      },
      "AggregatedSourceStatus": {
        "description": "The current sync status between the source and the aggregator account.",
        "properties": {
          "AwsRegion": { "$ref": "#/components/schemas/AwsRegion" },
          "LastErrorCode": { "$ref": "#/components/schemas/String" },
          "LastErrorMessage": { "$ref": "#/components/schemas/String" },
          "LastUpdateStatus": { "$ref": "#/components/schemas/AggregatedSourceStatusType" },
          "LastUpdateTime": { "$ref": "#/components/schemas/Date" },
          "SourceId": { "$ref": "#/components/schemas/String" },
          "SourceType": { "$ref": "#/components/schemas/AggregatedSourceType" }
        },
        "type": "object"
      },
      "AggregatedSourceStatusList": {
        "items": { "$ref": "#/components/schemas/AggregatedSourceStatus" },
        "type": "array"
      },
      "AggregatedSourceStatusType": { "enum": ["FAILED", "SUCCEEDED", "OUTDATED"], "type": "string" },
      "AggregatedSourceStatusTypeList": {
        "items": { "$ref": "#/components/schemas/AggregatedSourceStatusType" },
        "minItems": 1,
        "type": "array"
      },
      "AggregatedSourceType": { "enum": ["ACCOUNT", "ORGANIZATION"], "type": "string" },
      "AggregationAuthorization": {
        "description": "An object that represents the authorizations granted to aggregator accounts and regions.",
        "properties": {
          "AggregationAuthorizationArn": { "$ref": "#/components/schemas/String" },
          "AuthorizedAccountId": { "$ref": "#/components/schemas/AccountId" },
          "AuthorizedAwsRegion": { "$ref": "#/components/schemas/AwsRegion" },
          "CreationTime": { "$ref": "#/components/schemas/Date" }
        },
        "type": "object"
      },
      "AggregationAuthorizationList": {
        "items": { "$ref": "#/components/schemas/AggregationAuthorization" },
        "type": "array"
      },
      "AggregatorRegionList": { "items": { "$ref": "#/components/schemas/String" }, "minItems": 1, "type": "array" },
      "AllSupported": { "type": "boolean" },
      "AmazonResourceName": { "maxLength": 256, "minLength": 1, "type": "string" },
      "AvailabilityZone": { "type": "string" },
      "AwsRegion": { "maxLength": 64, "minLength": 1, "type": "string" },
      "BaseConfigurationItem": {
        "description": "The detailed configuration of a specified resource.",
        "properties": {
          "accountId": { "$ref": "#/components/schemas/AccountId" },
          "arn": { "$ref": "#/components/schemas/ARN" },
          "availabilityZone": { "$ref": "#/components/schemas/AvailabilityZone" },
          "awsRegion": { "$ref": "#/components/schemas/AwsRegion" },
          "configuration": { "$ref": "#/components/schemas/Configuration" },
          "configurationItemCaptureTime": { "$ref": "#/components/schemas/ConfigurationItemCaptureTime" },
          "configurationItemStatus": { "$ref": "#/components/schemas/ConfigurationItemStatus" },
          "configurationStateId": { "$ref": "#/components/schemas/ConfigurationStateId" },
          "resourceCreationTime": { "$ref": "#/components/schemas/ResourceCreationTime" },
          "resourceId": { "$ref": "#/components/schemas/ResourceId" },
          "resourceName": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "supplementaryConfiguration": { "$ref": "#/components/schemas/SupplementaryConfiguration" },
          "version": { "$ref": "#/components/schemas/Version" }
        },
        "type": "object"
      },
      "BaseConfigurationItems": { "items": { "$ref": "#/components/schemas/BaseConfigurationItem" }, "type": "array" },
      "BaseResourceId": { "maxLength": 768, "minLength": 1, "type": "string" },
      "BatchGetAggregateResourceConfigRequest": {
        "properties": {
          "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
          "ResourceIdentifiers": { "$ref": "#/components/schemas/ResourceIdentifiersList" }
        },
        "required": ["ConfigurationAggregatorName", "ResourceIdentifiers"],
        "type": "object"
      },
      "BatchGetAggregateResourceConfigResponse": {
        "properties": {
          "BaseConfigurationItems": { "$ref": "#/components/schemas/BaseConfigurationItems" },
          "UnprocessedResourceIdentifiers": { "$ref": "#/components/schemas/UnprocessedResourceIdentifierList" }
        },
        "type": "object"
      },
      "BatchGetResourceConfigRequest": {
        "properties": { "resourceKeys": { "$ref": "#/components/schemas/ResourceKeys" } },
        "required": ["resourceKeys"],
        "type": "object"
      },
      "BatchGetResourceConfigResponse": {
        "properties": {
          "baseConfigurationItems": { "$ref": "#/components/schemas/BaseConfigurationItems" },
          "unprocessedResourceKeys": { "$ref": "#/components/schemas/ResourceKeys" }
        },
        "type": "object"
      },
      "Boolean": { "type": "boolean" },
      "ChannelName": { "maxLength": 256, "minLength": 1, "type": "string" },
      "ChronologicalOrder": { "enum": ["Reverse", "Forward"], "type": "string" },
      "Compliance": {
        "description": "Indicates whether an AWS resource or AWS Config rule is compliant and provides the number of contributors that affect the compliance.",
        "properties": {
          "ComplianceContributorCount": { "$ref": "#/components/schemas/ComplianceContributorCount" },
          "ComplianceType": { "$ref": "#/components/schemas/ComplianceType" }
        },
        "type": "object"
      },
      "ComplianceByConfigRule": {
        "description": "Indicates whether an AWS Config rule is compliant. A rule is compliant if all of the resources that the rule evaluated comply with it. A rule is noncompliant if any of these resources do not comply.",
        "properties": {
          "Compliance": { "$ref": "#/components/schemas/Compliance" },
          "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" }
        },
        "type": "object"
      },
      "ComplianceByConfigRules": {
        "items": { "$ref": "#/components/schemas/ComplianceByConfigRule" },
        "type": "array"
      },
      "ComplianceByResource": {
        "description": "Indicates whether an AWS resource that is evaluated according to one or more AWS Config rules is compliant. A resource is compliant if it complies with all of the rules that evaluate it. A resource is noncompliant if it does not comply with one or more of these rules.",
        "properties": {
          "Compliance": { "$ref": "#/components/schemas/Compliance" },
          "ResourceId": { "$ref": "#/components/schemas/BaseResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/StringWithCharLimit256" }
        },
        "type": "object"
      },
      "ComplianceByResources": { "items": { "$ref": "#/components/schemas/ComplianceByResource" }, "type": "array" },
      "ComplianceContributorCount": {
        "description": "The number of AWS resources or AWS Config rules responsible for the current compliance of the item, up to a maximum number.",
        "properties": {
          "CapExceeded": { "$ref": "#/components/schemas/Boolean" },
          "CappedCount": { "$ref": "#/components/schemas/Integer" }
        },
        "type": "object"
      },
      "ComplianceResourceTypes": {
        "items": { "$ref": "#/components/schemas/StringWithCharLimit256" },
        "maxItems": 100,
        "minItems": 0,
        "type": "array"
      },
      "ComplianceSummariesByResourceType": {
        "items": { "$ref": "#/components/schemas/ComplianceSummaryByResourceType" },
        "type": "array"
      },
      "ComplianceSummary": {
        "description": "The number of AWS Config rules or AWS resources that are compliant and noncompliant.",
        "properties": {
          "ComplianceSummaryTimestamp": { "$ref": "#/components/schemas/Date" },
          "CompliantResourceCount": { "$ref": "#/components/schemas/ComplianceContributorCount" },
          "NonCompliantResourceCount": { "$ref": "#/components/schemas/ComplianceContributorCount" }
        },
        "type": "object"
      },
      "ComplianceSummaryByResourceType": {
        "description": "The number of AWS resources of a specific type that are compliant or noncompliant, up to a maximum of 100 for each.",
        "properties": {
          "ComplianceSummary": { "$ref": "#/components/schemas/ComplianceSummary" },
          "ResourceType": { "$ref": "#/components/schemas/StringWithCharLimit256" }
        },
        "type": "object"
      },
      "ComplianceType": {
        "enum": ["COMPLIANT", "NON_COMPLIANT", "NOT_APPLICABLE", "INSUFFICIENT_DATA"],
        "type": "string"
      },
      "ComplianceTypes": {
        "items": { "$ref": "#/components/schemas/ComplianceType" },
        "maxItems": 3,
        "minItems": 0,
        "type": "array"
      },
      "ConfigExportDeliveryInfo": {
        "description": "Provides status of the delivery of the snapshot or the configuration history to the specified Amazon S3 bucket. Also provides the status of notifications about the Amazon S3 delivery to the specified Amazon SNS topic.",
        "properties": {
          "lastAttemptTime": { "$ref": "#/components/schemas/Date" },
          "lastErrorCode": { "$ref": "#/components/schemas/String" },
          "lastErrorMessage": { "$ref": "#/components/schemas/String" },
          "lastStatus": { "$ref": "#/components/schemas/DeliveryStatus" },
          "lastSuccessfulTime": { "$ref": "#/components/schemas/Date" },
          "nextDeliveryTime": { "$ref": "#/components/schemas/Date" }
        },
        "type": "object"
      },
      "ConfigRule": {
        "description": "<p>An AWS Config rule represents an AWS Lambda function that you create for a custom rule or a predefined function for an AWS managed rule. The function evaluates configuration items to assess whether your AWS resources comply with your desired configurations. This function can run when AWS Config detects a configuration change to an AWS resource and at a periodic frequency that you choose (for example, every 24 hours).</p> <note> <p>You can use the AWS CLI and AWS SDKs if you want to create a rule that triggers evaluations for your resources when AWS Config delivers the configuration snapshot. For more information, see <a>ConfigSnapshotDeliveryProperties</a>.</p> </note> <p>For more information about developing and using AWS Config rules, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html\">Evaluating AWS Resource Configurations with AWS Config</a> in the <i>AWS Config Developer Guide</i>.</p>",
        "properties": {
          "ConfigRuleArn": { "$ref": "#/components/schemas/String" },
          "ConfigRuleId": { "$ref": "#/components/schemas/String" },
          "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "ConfigRuleState": { "$ref": "#/components/schemas/ConfigRuleState" },
          "CreatedBy": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "Description": { "$ref": "#/components/schemas/EmptiableStringWithCharLimit256" },
          "InputParameters": { "$ref": "#/components/schemas/StringWithCharLimit1024" },
          "MaximumExecutionFrequency": { "$ref": "#/components/schemas/MaximumExecutionFrequency" },
          "Scope": { "$ref": "#/components/schemas/Scope" },
          "Source": { "$ref": "#/components/schemas/Source" }
        },
        "required": ["Source"],
        "type": "object"
      },
      "ConfigRuleComplianceFilters": {
        "description": "Filters the compliance results based on account ID, region, compliance type, and rule name.",
        "properties": {
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "AwsRegion": { "$ref": "#/components/schemas/AwsRegion" },
          "ComplianceType": { "$ref": "#/components/schemas/ComplianceType" },
          "ConfigRuleName": { "$ref": "#/components/schemas/ConfigRuleName" }
        },
        "type": "object"
      },
      "ConfigRuleComplianceSummaryFilters": {
        "description": "Filters the results based on the account IDs and regions.",
        "properties": {
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "AwsRegion": { "$ref": "#/components/schemas/AwsRegion" }
        },
        "type": "object"
      },
      "ConfigRuleComplianceSummaryGroupKey": { "enum": ["ACCOUNT_ID", "AWS_REGION"], "type": "string" },
      "ConfigRuleEvaluationStatus": {
        "description": "<p>Status information for your AWS managed Config rules. The status includes information such as the last time the rule ran, the last time it failed, and the related error for the last failure.</p> <p>This action does not return status information about custom AWS Config rules.</p>",
        "properties": {
          "ConfigRuleArn": { "$ref": "#/components/schemas/String" },
          "ConfigRuleId": { "$ref": "#/components/schemas/String" },
          "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "FirstActivatedTime": { "$ref": "#/components/schemas/Date" },
          "FirstEvaluationStarted": { "$ref": "#/components/schemas/Boolean" },
          "LastErrorCode": { "$ref": "#/components/schemas/String" },
          "LastErrorMessage": { "$ref": "#/components/schemas/String" },
          "LastFailedEvaluationTime": { "$ref": "#/components/schemas/Date" },
          "LastFailedInvocationTime": { "$ref": "#/components/schemas/Date" },
          "LastSuccessfulEvaluationTime": { "$ref": "#/components/schemas/Date" },
          "LastSuccessfulInvocationTime": { "$ref": "#/components/schemas/Date" }
        },
        "type": "object"
      },
      "ConfigRuleEvaluationStatusList": {
        "items": { "$ref": "#/components/schemas/ConfigRuleEvaluationStatus" },
        "type": "array"
      },
      "ConfigRuleName": { "maxLength": 64, "minLength": 1, "type": "string" },
      "ConfigRuleNames": {
        "items": { "$ref": "#/components/schemas/StringWithCharLimit64" },
        "maxItems": 25,
        "minItems": 0,
        "type": "array"
      },
      "ConfigRuleState": { "enum": ["ACTIVE", "DELETING", "DELETING_RESULTS", "EVALUATING"], "type": "string" },
      "ConfigRules": { "items": { "$ref": "#/components/schemas/ConfigRule" }, "type": "array" },
      "ConfigSnapshotDeliveryProperties": {
        "description": "<p>Provides options for how often AWS Config delivers configuration snapshots to the Amazon S3 bucket in your delivery channel.</p> <p>The frequency for a rule that triggers evaluations for your resources when AWS Config delivers the configuration snapshot is set by one of two values, depending on which is less frequent:</p> <ul> <li> <p>The value for the <code>deliveryFrequency</code> parameter within the delivery channel configuration, which sets how often AWS Config delivers configuration snapshots. This value also sets how often AWS Config invokes evaluations for AWS Config rules.</p> </li> <li> <p>The value for the <code>MaximumExecutionFrequency</code> parameter, which sets the maximum frequency with which AWS Config invokes evaluations for the rule. For more information, see <a>ConfigRule</a>.</p> </li> </ul> <p>If the <code>deliveryFrequency</code> value is less frequent than the <code>MaximumExecutionFrequency</code> value for a rule, AWS Config invokes the rule only as often as the <code>deliveryFrequency</code> value.</p> <ol> <li> <p>For example, you want your rule to run evaluations when AWS Config delivers the configuration snapshot.</p> </li> <li> <p>You specify the <code>MaximumExecutionFrequency</code> value for <code>Six_Hours</code>. </p> </li> <li> <p>You then specify the delivery channel <code>deliveryFrequency</code> value for <code>TwentyFour_Hours</code>.</p> </li> <li> <p>Because the value for <code>deliveryFrequency</code> is less frequent than <code>MaximumExecutionFrequency</code>, AWS Config invokes evaluations for the rule every 24 hours. </p> </li> </ol> <p>You should set the <code>MaximumExecutionFrequency</code> value to be at least as frequent as the <code>deliveryFrequency</code> value. You can view the <code>deliveryFrequency</code> value by using the <code>DescribeDeliveryChannnels</code> action.</p> <p>To update the <code>deliveryFrequency</code> with which AWS Config delivers your configuration snapshots, use the <code>PutDeliveryChannel</code> action.</p>",
        "properties": { "deliveryFrequency": { "$ref": "#/components/schemas/MaximumExecutionFrequency" } },
        "type": "object"
      },
      "ConfigStreamDeliveryInfo": {
        "description": "A list that contains the status of the delivery of the configuration stream notification to the Amazon SNS topic.",
        "properties": {
          "lastErrorCode": { "$ref": "#/components/schemas/String" },
          "lastErrorMessage": { "$ref": "#/components/schemas/String" },
          "lastStatus": { "$ref": "#/components/schemas/DeliveryStatus" },
          "lastStatusChangeTime": { "$ref": "#/components/schemas/Date" }
        },
        "type": "object"
      },
      "Configuration": { "type": "string" },
      "ConfigurationAggregator": {
        "description": "The details about the configuration aggregator, including information about source accounts, regions, and metadata of the aggregator. ",
        "properties": {
          "AccountAggregationSources": { "$ref": "#/components/schemas/AccountAggregationSourceList" },
          "ConfigurationAggregatorArn": { "$ref": "#/components/schemas/ConfigurationAggregatorArn" },
          "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
          "CreationTime": { "$ref": "#/components/schemas/Date" },
          "LastUpdatedTime": { "$ref": "#/components/schemas/Date" },
          "OrganizationAggregationSource": { "$ref": "#/components/schemas/OrganizationAggregationSource" }
        },
        "type": "object"
      },
      "ConfigurationAggregatorArn": {
        "pattern": "arn:aws[a-z\\-]*:config:[a-z\\-\\d]+:\\d+:config-aggregator/config-aggregator-[a-z\\d]+",
        "type": "string"
      },
      "ConfigurationAggregatorList": {
        "items": { "$ref": "#/components/schemas/ConfigurationAggregator" },
        "type": "array"
      },
      "ConfigurationAggregatorName": { "maxLength": 256, "minLength": 1, "pattern": "[\\w\\-]+", "type": "string" },
      "ConfigurationAggregatorNameList": {
        "items": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
        "maxItems": 10,
        "minItems": 0,
        "type": "array"
      },
      "ConfigurationItem": {
        "description": "A list that contains detailed configurations of a specified resource.",
        "properties": {
          "accountId": { "$ref": "#/components/schemas/AccountId" },
          "arn": { "$ref": "#/components/schemas/ARN" },
          "availabilityZone": { "$ref": "#/components/schemas/AvailabilityZone" },
          "awsRegion": { "$ref": "#/components/schemas/AwsRegion" },
          "configuration": { "$ref": "#/components/schemas/Configuration" },
          "configurationItemCaptureTime": { "$ref": "#/components/schemas/ConfigurationItemCaptureTime" },
          "configurationItemMD5Hash": { "$ref": "#/components/schemas/ConfigurationItemMD5Hash" },
          "configurationItemStatus": { "$ref": "#/components/schemas/ConfigurationItemStatus" },
          "configurationStateId": { "$ref": "#/components/schemas/ConfigurationStateId" },
          "relatedEvents": { "$ref": "#/components/schemas/RelatedEventList" },
          "relationships": { "$ref": "#/components/schemas/RelationshipList" },
          "resourceCreationTime": { "$ref": "#/components/schemas/ResourceCreationTime" },
          "resourceId": { "$ref": "#/components/schemas/ResourceId" },
          "resourceName": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" },
          "supplementaryConfiguration": { "$ref": "#/components/schemas/SupplementaryConfiguration" },
          "tags": { "$ref": "#/components/schemas/Tags" },
          "version": { "$ref": "#/components/schemas/Version" }
        },
        "type": "object"
      },
      "ConfigurationItemCaptureTime": { "format": "date-time", "type": "string" },
      "ConfigurationItemList": { "items": { "$ref": "#/components/schemas/ConfigurationItem" }, "type": "array" },
      "ConfigurationItemMD5Hash": { "type": "string" },
      "ConfigurationItemStatus": {
        "enum": ["OK", "ResourceDiscovered", "ResourceNotRecorded", "ResourceDeleted", "ResourceDeletedNotRecorded"],
        "type": "string"
      },
      "ConfigurationRecorder": {
        "description": "An object that represents the recording of configuration changes of an AWS resource.",
        "properties": {
          "name": { "$ref": "#/components/schemas/RecorderName" },
          "recordingGroup": { "$ref": "#/components/schemas/RecordingGroup" },
          "roleARN": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ConfigurationRecorderList": {
        "items": { "$ref": "#/components/schemas/ConfigurationRecorder" },
        "type": "array"
      },
      "ConfigurationRecorderNameList": { "items": { "$ref": "#/components/schemas/RecorderName" }, "type": "array" },
      "ConfigurationRecorderStatus": {
        "description": "The current status of the configuration recorder.",
        "properties": {
          "lastErrorCode": { "$ref": "#/components/schemas/String" },
          "lastErrorMessage": { "$ref": "#/components/schemas/String" },
          "lastStartTime": { "$ref": "#/components/schemas/Date" },
          "lastStatus": { "$ref": "#/components/schemas/RecorderStatus" },
          "lastStatusChangeTime": { "$ref": "#/components/schemas/Date" },
          "lastStopTime": { "$ref": "#/components/schemas/Date" },
          "name": { "$ref": "#/components/schemas/String" },
          "recording": { "$ref": "#/components/schemas/Boolean" }
        },
        "type": "object"
      },
      "ConfigurationRecorderStatusList": {
        "items": { "$ref": "#/components/schemas/ConfigurationRecorderStatus" },
        "type": "array"
      },
      "ConfigurationStateId": { "type": "string" },
      "CosmosPageLimit": { "maximum": 100, "minimum": 0, "type": "integer" },
      "Date": { "format": "date-time", "type": "string" },
      "DeleteAggregationAuthorizationRequest": {
        "properties": {
          "AuthorizedAccountId": { "$ref": "#/components/schemas/AccountId" },
          "AuthorizedAwsRegion": { "$ref": "#/components/schemas/AwsRegion" }
        },
        "required": ["AuthorizedAccountId", "AuthorizedAwsRegion"],
        "type": "object"
      },
      "DeleteConfigRuleRequest": {
        "description": "<p/>",
        "properties": { "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" } },
        "required": ["ConfigRuleName"],
        "type": "object"
      },
      "DeleteConfigurationAggregatorRequest": {
        "properties": { "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" } },
        "required": ["ConfigurationAggregatorName"],
        "type": "object"
      },
      "DeleteConfigurationRecorderRequest": {
        "description": "The request object for the <code>DeleteConfigurationRecorder</code> action.",
        "properties": { "ConfigurationRecorderName": { "$ref": "#/components/schemas/RecorderName" } },
        "required": ["ConfigurationRecorderName"],
        "type": "object"
      },
      "DeleteDeliveryChannelRequest": {
        "description": "The input for the <a>DeleteDeliveryChannel</a> action. The action accepts the following data, in JSON format. ",
        "properties": { "DeliveryChannelName": { "$ref": "#/components/schemas/ChannelName" } },
        "required": ["DeliveryChannelName"],
        "type": "object"
      },
      "DeleteEvaluationResultsRequest": {
        "description": "<p/>",
        "properties": { "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" } },
        "required": ["ConfigRuleName"],
        "type": "object"
      },
      "DeleteEvaluationResultsResponse": {
        "description": "The output when you delete the evaluation results for the specified AWS Config rule.",
        "properties": {},
        "type": "object"
      },
      "DeleteOrganizationConfigRuleRequest": {
        "properties": { "OrganizationConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" } },
        "required": ["OrganizationConfigRuleName"],
        "type": "object"
      },
      "DeletePendingAggregationRequestRequest": {
        "properties": {
          "RequesterAccountId": { "$ref": "#/components/schemas/AccountId" },
          "RequesterAwsRegion": { "$ref": "#/components/schemas/AwsRegion" }
        },
        "required": ["RequesterAccountId", "RequesterAwsRegion"],
        "type": "object"
      },
      "DeleteRemediationConfigurationRequest": {
        "properties": {
          "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "ResourceType": { "$ref": "#/components/schemas/String" }
        },
        "required": ["ConfigRuleName"],
        "type": "object"
      },
      "DeleteRemediationConfigurationResponse": { "properties": {}, "type": "object" },
      "DeleteRetentionConfigurationRequest": {
        "properties": { "RetentionConfigurationName": { "$ref": "#/components/schemas/RetentionConfigurationName" } },
        "required": ["RetentionConfigurationName"],
        "type": "object"
      },
      "DeliverConfigSnapshotRequest": {
        "description": "The input for the <a>DeliverConfigSnapshot</a> action.",
        "properties": { "deliveryChannelName": { "$ref": "#/components/schemas/ChannelName" } },
        "required": ["deliveryChannelName"],
        "type": "object"
      },
      "DeliverConfigSnapshotResponse": {
        "description": "The output for the <a>DeliverConfigSnapshot</a> action, in JSON format.",
        "properties": { "configSnapshotId": { "$ref": "#/components/schemas/String" } },
        "type": "object"
      },
      "DeliveryChannel": {
        "description": "The channel through which AWS Config delivers notifications and updated configuration states.",
        "properties": {
          "configSnapshotDeliveryProperties": { "$ref": "#/components/schemas/ConfigSnapshotDeliveryProperties" },
          "name": { "$ref": "#/components/schemas/ChannelName" },
          "s3BucketName": { "$ref": "#/components/schemas/String" },
          "s3KeyPrefix": { "$ref": "#/components/schemas/String" },
          "snsTopicARN": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DeliveryChannelList": { "items": { "$ref": "#/components/schemas/DeliveryChannel" }, "type": "array" },
      "DeliveryChannelNameList": { "items": { "$ref": "#/components/schemas/ChannelName" }, "type": "array" },
      "DeliveryChannelStatus": {
        "description": "<p>The status of a specified delivery channel.</p> <p>Valid values: <code>Success</code> | <code>Failure</code> </p>",
        "properties": {
          "configHistoryDeliveryInfo": { "$ref": "#/components/schemas/ConfigExportDeliveryInfo" },
          "configSnapshotDeliveryInfo": { "$ref": "#/components/schemas/ConfigExportDeliveryInfo" },
          "configStreamDeliveryInfo": { "$ref": "#/components/schemas/ConfigStreamDeliveryInfo" },
          "name": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DeliveryChannelStatusList": {
        "items": { "$ref": "#/components/schemas/DeliveryChannelStatus" },
        "type": "array"
      },
      "DeliveryStatus": { "enum": ["Success", "Failure", "Not_Applicable"], "type": "string" },
      "DescribeAggregateComplianceByConfigRulesRequest": {
        "properties": {
          "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
          "Filters": { "$ref": "#/components/schemas/ConfigRuleComplianceFilters" },
          "Limit": { "$ref": "#/components/schemas/GroupByAPILimit" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["ConfigurationAggregatorName"],
        "type": "object"
      },
      "DescribeAggregateComplianceByConfigRulesResponse": {
        "properties": {
          "AggregateComplianceByConfigRules": { "$ref": "#/components/schemas/AggregateComplianceByConfigRuleList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeAggregationAuthorizationsRequest": {
        "properties": {
          "Limit": { "$ref": "#/components/schemas/Limit" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeAggregationAuthorizationsResponse": {
        "properties": {
          "AggregationAuthorizations": { "$ref": "#/components/schemas/AggregationAuthorizationList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeComplianceByConfigRuleRequest": {
        "description": "<p/>",
        "properties": {
          "ComplianceTypes": { "$ref": "#/components/schemas/ComplianceTypes" },
          "ConfigRuleNames": { "$ref": "#/components/schemas/ConfigRuleNames" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeComplianceByConfigRuleResponse": {
        "description": "<p/>",
        "properties": {
          "ComplianceByConfigRules": { "$ref": "#/components/schemas/ComplianceByConfigRules" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeComplianceByResourceRequest": {
        "description": "<p/>",
        "properties": {
          "ComplianceTypes": { "$ref": "#/components/schemas/ComplianceTypes" },
          "Limit": { "$ref": "#/components/schemas/Limit" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResourceId": { "$ref": "#/components/schemas/BaseResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/StringWithCharLimit256" }
        },
        "type": "object"
      },
      "DescribeComplianceByResourceResponse": {
        "description": "<p/>",
        "properties": {
          "ComplianceByResources": { "$ref": "#/components/schemas/ComplianceByResources" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeConfigRuleEvaluationStatusRequest": {
        "description": "<p/>",
        "properties": {
          "ConfigRuleNames": { "$ref": "#/components/schemas/ConfigRuleNames" },
          "Limit": { "$ref": "#/components/schemas/RuleLimit" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeConfigRuleEvaluationStatusResponse": {
        "description": "<p/>",
        "properties": {
          "ConfigRulesEvaluationStatus": { "$ref": "#/components/schemas/ConfigRuleEvaluationStatusList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeConfigRulesRequest": {
        "description": "<p/>",
        "properties": {
          "ConfigRuleNames": { "$ref": "#/components/schemas/ConfigRuleNames" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeConfigRulesResponse": {
        "description": "<p/>",
        "properties": {
          "ConfigRules": { "$ref": "#/components/schemas/ConfigRules" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeConfigurationAggregatorSourcesStatusRequest": {
        "properties": {
          "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
          "Limit": { "$ref": "#/components/schemas/Limit" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "UpdateStatus": { "$ref": "#/components/schemas/AggregatedSourceStatusTypeList" }
        },
        "required": ["ConfigurationAggregatorName"],
        "type": "object"
      },
      "DescribeConfigurationAggregatorSourcesStatusResponse": {
        "properties": {
          "AggregatedSourceStatusList": { "$ref": "#/components/schemas/AggregatedSourceStatusList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeConfigurationAggregatorsRequest": {
        "properties": {
          "ConfigurationAggregatorNames": { "$ref": "#/components/schemas/ConfigurationAggregatorNameList" },
          "Limit": { "$ref": "#/components/schemas/Limit" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeConfigurationAggregatorsResponse": {
        "properties": {
          "ConfigurationAggregators": { "$ref": "#/components/schemas/ConfigurationAggregatorList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribeConfigurationRecorderStatusRequest": {
        "description": "The input for the <a>DescribeConfigurationRecorderStatus</a> action.",
        "properties": {
          "ConfigurationRecorderNames": { "$ref": "#/components/schemas/ConfigurationRecorderNameList" }
        },
        "type": "object"
      },
      "DescribeConfigurationRecorderStatusResponse": {
        "description": "The output for the <a>DescribeConfigurationRecorderStatus</a> action, in JSON format.",
        "properties": {
          "ConfigurationRecordersStatus": { "$ref": "#/components/schemas/ConfigurationRecorderStatusList" }
        },
        "type": "object"
      },
      "DescribeConfigurationRecordersRequest": {
        "description": "The input for the <a>DescribeConfigurationRecorders</a> action.",
        "properties": {
          "ConfigurationRecorderNames": { "$ref": "#/components/schemas/ConfigurationRecorderNameList" }
        },
        "type": "object"
      },
      "DescribeConfigurationRecordersResponse": {
        "description": "The output for the <a>DescribeConfigurationRecorders</a> action.",
        "properties": { "ConfigurationRecorders": { "$ref": "#/components/schemas/ConfigurationRecorderList" } },
        "type": "object"
      },
      "DescribeDeliveryChannelStatusRequest": {
        "description": "The input for the <a>DeliveryChannelStatus</a> action.",
        "properties": { "DeliveryChannelNames": { "$ref": "#/components/schemas/DeliveryChannelNameList" } },
        "type": "object"
      },
      "DescribeDeliveryChannelStatusResponse": {
        "description": "The output for the <a>DescribeDeliveryChannelStatus</a> action.",
        "properties": { "DeliveryChannelsStatus": { "$ref": "#/components/schemas/DeliveryChannelStatusList" } },
        "type": "object"
      },
      "DescribeDeliveryChannelsRequest": {
        "description": "The input for the <a>DescribeDeliveryChannels</a> action.",
        "properties": { "DeliveryChannelNames": { "$ref": "#/components/schemas/DeliveryChannelNameList" } },
        "type": "object"
      },
      "DescribeDeliveryChannelsResponse": {
        "description": "The output for the <a>DescribeDeliveryChannels</a> action.",
        "properties": { "DeliveryChannels": { "$ref": "#/components/schemas/DeliveryChannelList" } },
        "type": "object"
      },
      "DescribeOrganizationConfigRuleStatusesRequest": {
        "properties": {
          "Limit": { "$ref": "#/components/schemas/CosmosPageLimit" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "OrganizationConfigRuleNames": { "$ref": "#/components/schemas/OrganizationConfigRuleNames" }
        },
        "type": "object"
      },
      "DescribeOrganizationConfigRuleStatusesResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "OrganizationConfigRuleStatuses": { "$ref": "#/components/schemas/OrganizationConfigRuleStatuses" }
        },
        "type": "object"
      },
      "DescribeOrganizationConfigRulesRequest": {
        "properties": {
          "Limit": { "$ref": "#/components/schemas/CosmosPageLimit" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "OrganizationConfigRuleNames": { "$ref": "#/components/schemas/OrganizationConfigRuleNames" }
        },
        "type": "object"
      },
      "DescribeOrganizationConfigRulesResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "OrganizationConfigRules": { "$ref": "#/components/schemas/OrganizationConfigRules" }
        },
        "type": "object"
      },
      "DescribePendingAggregationRequestsLimit": { "maximum": 20, "minimum": 0, "type": "integer" },
      "DescribePendingAggregationRequestsRequest": {
        "properties": {
          "Limit": { "$ref": "#/components/schemas/DescribePendingAggregationRequestsLimit" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "DescribePendingAggregationRequestsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "PendingAggregationRequests": { "$ref": "#/components/schemas/PendingAggregationRequestList" }
        },
        "type": "object"
      },
      "DescribeRemediationConfigurationsRequest": {
        "properties": { "ConfigRuleNames": { "$ref": "#/components/schemas/ConfigRuleNames" } },
        "required": ["ConfigRuleNames"],
        "type": "object"
      },
      "DescribeRemediationConfigurationsResponse": {
        "properties": { "RemediationConfigurations": { "$ref": "#/components/schemas/RemediationConfigurations" } },
        "type": "object"
      },
      "DescribeRemediationExecutionStatusRequest": {
        "properties": {
          "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "Limit": { "$ref": "#/components/schemas/Limit" },
          "NextToken": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "ResourceKeys": { "$ref": "#/components/schemas/ResourceKeys" }
        },
        "required": ["ConfigRuleName"],
        "type": "object"
      },
      "DescribeRemediationExecutionStatusResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "RemediationExecutionStatuses": { "$ref": "#/components/schemas/RemediationExecutionStatuses" }
        },
        "type": "object"
      },
      "DescribeRetentionConfigurationsRequest": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "RetentionConfigurationNames": { "$ref": "#/components/schemas/RetentionConfigurationNameList" }
        },
        "type": "object"
      },
      "DescribeRetentionConfigurationsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "RetentionConfigurations": { "$ref": "#/components/schemas/RetentionConfigurationList" }
        },
        "type": "object"
      },
      "DiscoveredResourceIdentifierList": {
        "items": { "$ref": "#/components/schemas/AggregateResourceIdentifier" },
        "type": "array"
      },
      "EarlierTime": { "format": "date-time", "type": "string" },
      "EmptiableStringWithCharLimit256": { "maxLength": 256, "minLength": 0, "type": "string" },
      "Evaluation": {
        "description": "Identifies an AWS resource and indicates whether it complies with the AWS Config rule that it was evaluated against.",
        "properties": {
          "Annotation": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "ComplianceResourceId": { "$ref": "#/components/schemas/BaseResourceId" },
          "ComplianceResourceType": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "ComplianceType": { "$ref": "#/components/schemas/ComplianceType" },
          "OrderingTimestamp": { "$ref": "#/components/schemas/OrderingTimestamp" }
        },
        "required": ["ComplianceResourceType", "ComplianceResourceId", "ComplianceType", "OrderingTimestamp"],
        "type": "object"
      },
      "EvaluationResult": {
        "description": "The details of an AWS Config evaluation. Provides the AWS resource that was evaluated, the compliance of the resource, related time stamps, and supplementary information.",
        "properties": {
          "Annotation": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "ComplianceType": { "$ref": "#/components/schemas/ComplianceType" },
          "ConfigRuleInvokedTime": { "$ref": "#/components/schemas/Date" },
          "EvaluationResultIdentifier": { "$ref": "#/components/schemas/EvaluationResultIdentifier" },
          "ResultRecordedTime": { "$ref": "#/components/schemas/Date" },
          "ResultToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "EvaluationResultIdentifier": {
        "description": "Uniquely identifies an evaluation result.",
        "properties": {
          "EvaluationResultQualifier": { "$ref": "#/components/schemas/EvaluationResultQualifier" },
          "OrderingTimestamp": { "$ref": "#/components/schemas/Date" }
        },
        "type": "object"
      },
      "EvaluationResultQualifier": {
        "description": "Identifies an AWS Config rule that evaluated an AWS resource, and provides the type and ID of the resource that the rule evaluated.",
        "properties": {
          "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "ResourceId": { "$ref": "#/components/schemas/BaseResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/StringWithCharLimit256" }
        },
        "type": "object"
      },
      "EvaluationResults": { "items": { "$ref": "#/components/schemas/EvaluationResult" }, "type": "array" },
      "Evaluations": {
        "items": { "$ref": "#/components/schemas/Evaluation" },
        "maxItems": 100,
        "minItems": 0,
        "type": "array"
      },
      "EventSource": { "enum": ["aws.config"], "type": "string" },
      "ExcludedAccounts": {
        "items": { "$ref": "#/components/schemas/AccountId" },
        "maxItems": 1000,
        "minItems": 0,
        "type": "array"
      },
      "Expression": { "maxLength": 4096, "minLength": 1, "type": "string" },
      "FailedRemediationBatch": {
        "description": "List of each of the failed remediations with specific reasons.",
        "properties": {
          "FailedItems": { "$ref": "#/components/schemas/RemediationConfigurations" },
          "FailureMessage": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "FailedRemediationBatches": {
        "items": { "$ref": "#/components/schemas/FailedRemediationBatch" },
        "type": "array"
      },
      "FieldInfo": {
        "description": "Details about the fields such as name of the field.",
        "properties": { "Name": { "$ref": "#/components/schemas/FieldName" } },
        "type": "object"
      },
      "FieldInfoList": { "items": { "$ref": "#/components/schemas/FieldInfo" }, "type": "array" },
      "FieldName": { "type": "string" },
      "GetAggregateComplianceDetailsByConfigRuleRequest": {
        "properties": {
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "AwsRegion": { "$ref": "#/components/schemas/AwsRegion" },
          "ComplianceType": { "$ref": "#/components/schemas/ComplianceType" },
          "ConfigRuleName": { "$ref": "#/components/schemas/ConfigRuleName" },
          "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
          "Limit": { "$ref": "#/components/schemas/Limit" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["ConfigurationAggregatorName", "ConfigRuleName", "AccountId", "AwsRegion"],
        "type": "object"
      },
      "GetAggregateComplianceDetailsByConfigRuleResponse": {
        "properties": {
          "AggregateEvaluationResults": { "$ref": "#/components/schemas/AggregateEvaluationResultList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "GetAggregateConfigRuleComplianceSummaryRequest": {
        "properties": {
          "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
          "Filters": { "$ref": "#/components/schemas/ConfigRuleComplianceSummaryFilters" },
          "GroupByKey": { "$ref": "#/components/schemas/ConfigRuleComplianceSummaryGroupKey" },
          "Limit": { "$ref": "#/components/schemas/GroupByAPILimit" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["ConfigurationAggregatorName"],
        "type": "object"
      },
      "GetAggregateConfigRuleComplianceSummaryResponse": {
        "properties": {
          "AggregateComplianceCounts": { "$ref": "#/components/schemas/AggregateComplianceCountList" },
          "GroupByKey": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "GetAggregateDiscoveredResourceCountsRequest": {
        "properties": {
          "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
          "Filters": { "$ref": "#/components/schemas/ResourceCountFilters" },
          "GroupByKey": { "$ref": "#/components/schemas/ResourceCountGroupKey" },
          "Limit": { "$ref": "#/components/schemas/GroupByAPILimit" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["ConfigurationAggregatorName"],
        "type": "object"
      },
      "GetAggregateDiscoveredResourceCountsResponse": {
        "properties": {
          "GroupByKey": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "GroupedResourceCounts": { "$ref": "#/components/schemas/GroupedResourceCountList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "TotalDiscoveredResources": { "$ref": "#/components/schemas/Long" }
        },
        "required": ["TotalDiscoveredResources"],
        "type": "object"
      },
      "GetAggregateResourceConfigRequest": {
        "properties": {
          "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
          "ResourceIdentifier": { "$ref": "#/components/schemas/AggregateResourceIdentifier" }
        },
        "required": ["ConfigurationAggregatorName", "ResourceIdentifier"],
        "type": "object"
      },
      "GetAggregateResourceConfigResponse": {
        "properties": { "ConfigurationItem": { "$ref": "#/components/schemas/ConfigurationItem" } },
        "type": "object"
      },
      "GetComplianceDetailsByConfigRuleRequest": {
        "description": "<p/>",
        "properties": {
          "ComplianceTypes": { "$ref": "#/components/schemas/ComplianceTypes" },
          "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "Limit": { "$ref": "#/components/schemas/Limit" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["ConfigRuleName"],
        "type": "object"
      },
      "GetComplianceDetailsByConfigRuleResponse": {
        "description": "<p/>",
        "properties": {
          "EvaluationResults": { "$ref": "#/components/schemas/EvaluationResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "GetComplianceDetailsByResourceRequest": {
        "description": "<p/>",
        "properties": {
          "ComplianceTypes": { "$ref": "#/components/schemas/ComplianceTypes" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "ResourceId": { "$ref": "#/components/schemas/BaseResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/StringWithCharLimit256" }
        },
        "required": ["ResourceType", "ResourceId"],
        "type": "object"
      },
      "GetComplianceDetailsByResourceResponse": {
        "description": "<p/>",
        "properties": {
          "EvaluationResults": { "$ref": "#/components/schemas/EvaluationResults" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "GetComplianceSummaryByConfigRuleResponse": {
        "description": "<p/>",
        "properties": { "ComplianceSummary": { "$ref": "#/components/schemas/ComplianceSummary" } },
        "type": "object"
      },
      "GetComplianceSummaryByResourceTypeRequest": {
        "description": "<p/>",
        "properties": { "ResourceTypes": { "$ref": "#/components/schemas/ResourceTypes" } },
        "type": "object"
      },
      "GetComplianceSummaryByResourceTypeResponse": {
        "description": "<p/>",
        "properties": {
          "ComplianceSummariesByResourceType": { "$ref": "#/components/schemas/ComplianceSummariesByResourceType" }
        },
        "type": "object"
      },
      "GetDiscoveredResourceCountsRequest": {
        "properties": {
          "limit": { "$ref": "#/components/schemas/Limit" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" },
          "resourceTypes": { "$ref": "#/components/schemas/ResourceTypes" }
        },
        "type": "object"
      },
      "GetDiscoveredResourceCountsResponse": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/NextToken" },
          "resourceCounts": { "$ref": "#/components/schemas/ResourceCounts" },
          "totalDiscoveredResources": { "$ref": "#/components/schemas/Long" }
        },
        "type": "object"
      },
      "GetOrganizationConfigRuleDetailedStatusRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/StatusDetailFilters" },
          "Limit": { "$ref": "#/components/schemas/CosmosPageLimit" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "OrganizationConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" }
        },
        "required": ["OrganizationConfigRuleName"],
        "type": "object"
      },
      "GetOrganizationConfigRuleDetailedStatusResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "OrganizationConfigRuleDetailedStatus": {
            "$ref": "#/components/schemas/OrganizationConfigRuleDetailedStatus"
          }
        },
        "type": "object"
      },
      "GetResourceConfigHistoryRequest": {
        "description": "The input for the <a>GetResourceConfigHistory</a> action.",
        "properties": {
          "chronologicalOrder": { "$ref": "#/components/schemas/ChronologicalOrder" },
          "earlierTime": { "$ref": "#/components/schemas/EarlierTime" },
          "laterTime": { "$ref": "#/components/schemas/LaterTime" },
          "limit": { "$ref": "#/components/schemas/Limit" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" },
          "resourceId": { "$ref": "#/components/schemas/ResourceId" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "required": ["resourceType", "resourceId"],
        "type": "object"
      },
      "GetResourceConfigHistoryResponse": {
        "description": "The output for the <a>GetResourceConfigHistory</a> action.",
        "properties": {
          "configurationItems": { "$ref": "#/components/schemas/ConfigurationItemList" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "GroupByAPILimit": { "maximum": 1000, "minimum": 0, "type": "integer" },
      "GroupedResourceCount": {
        "description": "The count of resources that are grouped by the group name.",
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "ResourceCount": { "$ref": "#/components/schemas/Long" }
        },
        "required": ["GroupName", "ResourceCount"],
        "type": "object"
      },
      "GroupedResourceCountList": { "items": { "$ref": "#/components/schemas/GroupedResourceCount" }, "type": "array" },
      "IncludeGlobalResourceTypes": { "type": "boolean" },
      "InsufficientDeliveryPolicyException": {},
      "InsufficientPermissionsException": {},
      "Integer": { "type": "integer" },
      "InvalidConfigurationRecorderNameException": {},
      "InvalidDeliveryChannelNameException": {},
      "InvalidExpressionException": {},
      "InvalidLimitException": {},
      "InvalidNextTokenException": {},
      "InvalidParameterValueException": {},
      "InvalidRecordingGroupException": {},
      "InvalidResultTokenException": {},
      "InvalidRoleException": {},
      "InvalidS3KeyPrefixException": {},
      "InvalidSNSTopicARNException": {},
      "InvalidTimeRangeException": {},
      "LastDeliveryChannelDeleteFailedException": {},
      "LaterTime": { "format": "date-time", "type": "string" },
      "Limit": { "maximum": 100, "minimum": 0, "type": "integer" },
      "LimitExceededException": {},
      "ListAggregateDiscoveredResourcesRequest": {
        "properties": {
          "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
          "Filters": { "$ref": "#/components/schemas/ResourceFilters" },
          "Limit": { "$ref": "#/components/schemas/Limit" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "required": ["ConfigurationAggregatorName", "ResourceType"],
        "type": "object"
      },
      "ListAggregateDiscoveredResourcesResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResourceIdentifiers": { "$ref": "#/components/schemas/DiscoveredResourceIdentifierList" }
        },
        "type": "object"
      },
      "ListDiscoveredResourcesRequest": {
        "description": "<p/>",
        "properties": {
          "includeDeletedResources": { "$ref": "#/components/schemas/Boolean" },
          "limit": { "$ref": "#/components/schemas/Limit" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" },
          "resourceIds": { "$ref": "#/components/schemas/ResourceIdList" },
          "resourceName": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "required": ["resourceType"],
        "type": "object"
      },
      "ListDiscoveredResourcesResponse": {
        "description": "<p/>",
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/NextToken" },
          "resourceIdentifiers": { "$ref": "#/components/schemas/ResourceIdentifierList" }
        },
        "type": "object"
      },
      "ListTagsForResourceRequest": {
        "properties": {
          "Limit": { "$ref": "#/components/schemas/Limit" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResourceArn": { "$ref": "#/components/schemas/AmazonResourceName" }
        },
        "required": ["ResourceArn"],
        "type": "object"
      },
      "ListTagsForResourceResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "Long": { "type": "integer" },
      "MaxNumberOfConfigRulesExceededException": {},
      "MaxNumberOfConfigurationRecordersExceededException": {},
      "MaxNumberOfDeliveryChannelsExceededException": {},
      "MaxNumberOfOrganizationConfigRulesExceededException": {},
      "MaxNumberOfRetentionConfigurationsExceededException": {},
      "MaximumExecutionFrequency": {
        "enum": ["One_Hour", "Three_Hours", "Six_Hours", "Twelve_Hours", "TwentyFour_Hours"],
        "type": "string"
      },
      "MemberAccountRuleStatus": {
        "enum": [
          "CREATE_SUCCESSFUL",
          "CREATE_IN_PROGRESS",
          "CREATE_FAILED",
          "UPDATE_SUCCESSFUL",
          "UPDATE_FAILED",
          "UPDATE_IN_PROGRESS",
          "DELETE_SUCCESSFUL",
          "DELETE_FAILED",
          "DELETE_IN_PROGRESS"
        ],
        "type": "string"
      },
      "MemberAccountStatus": {
        "properties": {
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "ErrorCode": { "$ref": "#/components/schemas/String" },
          "ErrorMessage": { "$ref": "#/components/schemas/String" },
          "LastUpdateTime": { "$ref": "#/components/schemas/Date" },
          "MemberAccountRuleStatus": { "$ref": "#/components/schemas/MemberAccountRuleStatus" }
        },
        "required": ["AccountId", "ConfigRuleName", "MemberAccountRuleStatus"],
        "type": "object"
      },
      "MessageType": {
        "enum": [
          "ConfigurationItemChangeNotification",
          "ConfigurationSnapshotDeliveryCompleted",
          "ScheduledNotification",
          "OversizedConfigurationItemChangeNotification"
        ],
        "type": "string"
      },
      "Name": { "type": "string" },
      "NextToken": { "type": "string" },
      "NoAvailableConfigurationRecorderException": {},
      "NoAvailableDeliveryChannelException": {},
      "NoAvailableOrganizationException": {},
      "NoRunningConfigurationRecorderException": {},
      "NoSuchBucketException": {},
      "NoSuchConfigRuleException": {},
      "NoSuchConfigurationAggregatorException": {},
      "NoSuchConfigurationRecorderException": {},
      "NoSuchDeliveryChannelException": {},
      "NoSuchOrganizationConfigRuleException": {},
      "NoSuchRemediationConfigurationException": {},
      "NoSuchRetentionConfigurationException": {},
      "OrderingTimestamp": { "format": "date-time", "type": "string" },
      "OrganizationAccessDeniedException": {},
      "OrganizationAggregationSource": {
        "description": "This object contains regions to set up the aggregator and an IAM role to retrieve organization details.",
        "properties": {
          "AllAwsRegions": { "$ref": "#/components/schemas/Boolean" },
          "AwsRegions": { "$ref": "#/components/schemas/AggregatorRegionList" },
          "RoleArn": { "$ref": "#/components/schemas/String" }
        },
        "required": ["RoleArn"],
        "type": "object"
      },
      "OrganizationAllFeaturesNotEnabledException": {},
      "OrganizationConfigRule": {
        "properties": {
          "ExcludedAccounts": { "$ref": "#/components/schemas/ExcludedAccounts" },
          "LastUpdateTime": { "$ref": "#/components/schemas/Date" },
          "OrganizationConfigRuleArn": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "OrganizationConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "OrganizationCustomRuleMetadata": { "$ref": "#/components/schemas/OrganizationCustomRuleMetadata" },
          "OrganizationManagedRuleMetadata": { "$ref": "#/components/schemas/OrganizationManagedRuleMetadata" }
        },
        "required": ["OrganizationConfigRuleName", "OrganizationConfigRuleArn"],
        "type": "object"
      },
      "OrganizationConfigRuleDetailedStatus": {
        "items": { "$ref": "#/components/schemas/MemberAccountStatus" },
        "type": "array"
      },
      "OrganizationConfigRuleNames": {
        "items": { "$ref": "#/components/schemas/StringWithCharLimit64" },
        "maxItems": 25,
        "minItems": 0,
        "type": "array"
      },
      "OrganizationConfigRuleStatus": {
        "properties": {
          "ErrorCode": { "$ref": "#/components/schemas/String" },
          "ErrorMessage": { "$ref": "#/components/schemas/String" },
          "LastUpdateTime": { "$ref": "#/components/schemas/Date" },
          "OrganizationConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "OrganizationRuleStatus": { "$ref": "#/components/schemas/OrganizationRuleStatus" }
        },
        "required": ["OrganizationConfigRuleName", "OrganizationRuleStatus"],
        "type": "object"
      },
      "OrganizationConfigRuleStatuses": {
        "items": { "$ref": "#/components/schemas/OrganizationConfigRuleStatus" },
        "type": "array"
      },
      "OrganizationConfigRuleTriggerType": {
        "enum": [
          "ConfigurationItemChangeNotification",
          "OversizedConfigurationItemChangeNotification",
          "ScheduledNotification"
        ],
        "type": "string"
      },
      "OrganizationConfigRuleTriggerTypes": {
        "items": { "$ref": "#/components/schemas/OrganizationConfigRuleTriggerType" },
        "type": "array"
      },
      "OrganizationConfigRules": {
        "items": { "$ref": "#/components/schemas/OrganizationConfigRule" },
        "type": "array"
      },
      "OrganizationCustomRuleMetadata": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/StringWithCharLimit256Min0" },
          "InputParameters": { "$ref": "#/components/schemas/StringWithCharLimit2048" },
          "LambdaFunctionArn": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "MaximumExecutionFrequency": { "$ref": "#/components/schemas/MaximumExecutionFrequency" },
          "OrganizationConfigRuleTriggerTypes": { "$ref": "#/components/schemas/OrganizationConfigRuleTriggerTypes" },
          "ResourceIdScope": { "$ref": "#/components/schemas/StringWithCharLimit768" },
          "ResourceTypesScope": { "$ref": "#/components/schemas/ResourceTypesScope" },
          "TagKeyScope": { "$ref": "#/components/schemas/StringWithCharLimit128" },
          "TagValueScope": { "$ref": "#/components/schemas/StringWithCharLimit256" }
        },
        "required": ["LambdaFunctionArn", "OrganizationConfigRuleTriggerTypes"],
        "type": "object"
      },
      "OrganizationManagedRuleMetadata": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/StringWithCharLimit256Min0" },
          "InputParameters": { "$ref": "#/components/schemas/StringWithCharLimit2048" },
          "MaximumExecutionFrequency": { "$ref": "#/components/schemas/MaximumExecutionFrequency" },
          "ResourceIdScope": { "$ref": "#/components/schemas/StringWithCharLimit768" },
          "ResourceTypesScope": { "$ref": "#/components/schemas/ResourceTypesScope" },
          "RuleIdentifier": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "TagKeyScope": { "$ref": "#/components/schemas/StringWithCharLimit128" },
          "TagValueScope": { "$ref": "#/components/schemas/StringWithCharLimit256" }
        },
        "required": ["RuleIdentifier"],
        "type": "object"
      },
      "OrganizationRuleStatus": {
        "enum": [
          "CREATE_SUCCESSFUL",
          "CREATE_IN_PROGRESS",
          "CREATE_FAILED",
          "UPDATE_SUCCESSFUL",
          "UPDATE_FAILED",
          "UPDATE_IN_PROGRESS",
          "DELETE_SUCCESSFUL",
          "DELETE_FAILED",
          "DELETE_IN_PROGRESS"
        ],
        "type": "string"
      },
      "OversizedConfigurationItemException": {},
      "Owner": { "enum": ["CUSTOM_LAMBDA", "AWS"], "type": "string" },
      "PendingAggregationRequest": {
        "description": "An object that represents the account ID and region of an aggregator account that is requesting authorization but is not yet authorized.",
        "properties": {
          "RequesterAccountId": { "$ref": "#/components/schemas/AccountId" },
          "RequesterAwsRegion": { "$ref": "#/components/schemas/AwsRegion" }
        },
        "type": "object"
      },
      "PendingAggregationRequestList": {
        "items": { "$ref": "#/components/schemas/PendingAggregationRequest" },
        "type": "array"
      },
      "PutAggregationAuthorizationRequest": {
        "properties": {
          "AuthorizedAccountId": { "$ref": "#/components/schemas/AccountId" },
          "AuthorizedAwsRegion": { "$ref": "#/components/schemas/AwsRegion" },
          "Tags": { "$ref": "#/components/schemas/TagsList" }
        },
        "required": ["AuthorizedAccountId", "AuthorizedAwsRegion"],
        "type": "object"
      },
      "PutAggregationAuthorizationResponse": {
        "properties": { "AggregationAuthorization": { "$ref": "#/components/schemas/AggregationAuthorization" } },
        "type": "object"
      },
      "PutConfigRuleRequest": {
        "properties": {
          "ConfigRule": { "$ref": "#/components/schemas/ConfigRule" },
          "Tags": { "$ref": "#/components/schemas/TagsList" }
        },
        "required": ["ConfigRule"],
        "type": "object"
      },
      "PutConfigurationAggregatorRequest": {
        "properties": {
          "AccountAggregationSources": { "$ref": "#/components/schemas/AccountAggregationSourceList" },
          "ConfigurationAggregatorName": { "$ref": "#/components/schemas/ConfigurationAggregatorName" },
          "OrganizationAggregationSource": { "$ref": "#/components/schemas/OrganizationAggregationSource" },
          "Tags": { "$ref": "#/components/schemas/TagsList" }
        },
        "required": ["ConfigurationAggregatorName"],
        "type": "object"
      },
      "PutConfigurationAggregatorResponse": {
        "properties": { "ConfigurationAggregator": { "$ref": "#/components/schemas/ConfigurationAggregator" } },
        "type": "object"
      },
      "PutConfigurationRecorderRequest": {
        "description": "The input for the <a>PutConfigurationRecorder</a> action.",
        "properties": { "ConfigurationRecorder": { "$ref": "#/components/schemas/ConfigurationRecorder" } },
        "required": ["ConfigurationRecorder"],
        "type": "object"
      },
      "PutDeliveryChannelRequest": {
        "description": "The input for the <a>PutDeliveryChannel</a> action.",
        "properties": { "DeliveryChannel": { "$ref": "#/components/schemas/DeliveryChannel" } },
        "required": ["DeliveryChannel"],
        "type": "object"
      },
      "PutEvaluationsRequest": {
        "description": "<p/>",
        "properties": {
          "Evaluations": { "$ref": "#/components/schemas/Evaluations" },
          "ResultToken": { "$ref": "#/components/schemas/String" },
          "TestMode": { "$ref": "#/components/schemas/Boolean" }
        },
        "required": ["ResultToken"],
        "type": "object"
      },
      "PutEvaluationsResponse": {
        "description": "<p/>",
        "properties": { "FailedEvaluations": { "$ref": "#/components/schemas/Evaluations" } },
        "type": "object"
      },
      "PutOrganizationConfigRuleRequest": {
        "properties": {
          "ExcludedAccounts": { "$ref": "#/components/schemas/ExcludedAccounts" },
          "OrganizationConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "OrganizationCustomRuleMetadata": { "$ref": "#/components/schemas/OrganizationCustomRuleMetadata" },
          "OrganizationManagedRuleMetadata": { "$ref": "#/components/schemas/OrganizationManagedRuleMetadata" }
        },
        "required": ["OrganizationConfigRuleName"],
        "type": "object"
      },
      "PutOrganizationConfigRuleResponse": {
        "properties": { "OrganizationConfigRuleArn": { "$ref": "#/components/schemas/StringWithCharLimit256" } },
        "type": "object"
      },
      "PutRemediationConfigurationsRequest": {
        "properties": { "RemediationConfigurations": { "$ref": "#/components/schemas/RemediationConfigurations" } },
        "required": ["RemediationConfigurations"],
        "type": "object"
      },
      "PutRemediationConfigurationsResponse": {
        "properties": { "FailedBatches": { "$ref": "#/components/schemas/FailedRemediationBatches" } },
        "type": "object"
      },
      "PutRetentionConfigurationRequest": {
        "properties": { "RetentionPeriodInDays": { "$ref": "#/components/schemas/RetentionPeriodInDays" } },
        "required": ["RetentionPeriodInDays"],
        "type": "object"
      },
      "PutRetentionConfigurationResponse": {
        "properties": { "RetentionConfiguration": { "$ref": "#/components/schemas/RetentionConfiguration" } },
        "type": "object"
      },
      "QueryInfo": {
        "description": "Details about the query.",
        "properties": { "SelectFields": { "$ref": "#/components/schemas/FieldInfoList" } },
        "type": "object"
      },
      "RecorderName": { "maxLength": 256, "minLength": 1, "type": "string" },
      "RecorderStatus": { "enum": ["Pending", "Success", "Failure"], "type": "string" },
      "RecordingGroup": {
        "description": "<p>Specifies the types of AWS resource for which AWS Config records configuration changes.</p> <p>In the recording group, you specify whether all supported types or specific types of resources are recorded.</p> <p>By default, AWS Config records configuration changes for all supported types of regional resources that AWS Config discovers in the region in which it is running. Regional resources are tied to a region and can be used only in that region. Examples of regional resources are EC2 instances and EBS volumes.</p> <p>You can also have AWS Config record configuration changes for supported types of global resources (for example, IAM resources). Global resources are not tied to an individual region and can be used in all regions.</p> <important> <p>The configuration details for any global resource are the same in all regions. If you customize AWS Config in multiple regions to record global resources, it will create multiple configuration items each time a global resource changes: one configuration item for each region. These configuration items will contain identical data. To prevent duplicate configuration items, you should consider customizing AWS Config in only one region to record global resources, unless you want the configuration items to be available in multiple regions.</p> </important> <p>If you don't want AWS Config to record all resources, you can specify which types of resources it will record with the <code>resourceTypes</code> parameter.</p> <p>For a list of supported resource types, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources\">Supported Resource Types</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html\">Selecting Which Resources AWS Config Records</a>.</p>",
        "properties": {
          "allSupported": { "$ref": "#/components/schemas/AllSupported" },
          "includeGlobalResourceTypes": { "$ref": "#/components/schemas/IncludeGlobalResourceTypes" },
          "resourceTypes": { "$ref": "#/components/schemas/ResourceTypeList" }
        },
        "type": "object"
      },
      "ReevaluateConfigRuleNames": {
        "items": { "$ref": "#/components/schemas/StringWithCharLimit64" },
        "maxItems": 25,
        "minItems": 1,
        "type": "array"
      },
      "RelatedEvent": { "type": "string" },
      "RelatedEventList": { "items": { "$ref": "#/components/schemas/RelatedEvent" }, "type": "array" },
      "Relationship": {
        "description": "The relationship of the related resource to the main resource.",
        "properties": {
          "relationshipName": { "$ref": "#/components/schemas/RelationshipName" },
          "resourceId": { "$ref": "#/components/schemas/ResourceId" },
          "resourceName": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "type": "object"
      },
      "RelationshipList": { "items": { "$ref": "#/components/schemas/Relationship" }, "type": "array" },
      "RelationshipName": { "type": "string" },
      "RemediationConfiguration": {
        "description": "An object that represents the details about the remediation configuration that includes the remediation action, parameters, and data to execute the action.",
        "properties": {
          "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "Parameters": { "$ref": "#/components/schemas/RemediationParameters" },
          "ResourceType": { "$ref": "#/components/schemas/String" },
          "TargetId": { "$ref": "#/components/schemas/StringWithCharLimit256" },
          "TargetType": { "$ref": "#/components/schemas/RemediationTargetType" },
          "TargetVersion": { "$ref": "#/components/schemas/String" }
        },
        "required": ["ConfigRuleName", "TargetType", "TargetId"],
        "type": "object"
      },
      "RemediationConfigurations": {
        "items": { "$ref": "#/components/schemas/RemediationConfiguration" },
        "maxItems": 25,
        "minItems": 0,
        "type": "array"
      },
      "RemediationExecutionState": { "enum": ["QUEUED", "IN_PROGRESS", "SUCCEEDED", "FAILED"], "type": "string" },
      "RemediationExecutionStatus": {
        "description": "Provides details of the current status of the invoked remediation action for that resource.",
        "properties": {
          "InvocationTime": { "$ref": "#/components/schemas/Date" },
          "LastUpdatedTime": { "$ref": "#/components/schemas/Date" },
          "ResourceKey": { "$ref": "#/components/schemas/ResourceKey" },
          "State": { "$ref": "#/components/schemas/RemediationExecutionState" },
          "StepDetails": { "$ref": "#/components/schemas/RemediationExecutionSteps" }
        },
        "type": "object"
      },
      "RemediationExecutionStatuses": {
        "items": { "$ref": "#/components/schemas/RemediationExecutionStatus" },
        "type": "array"
      },
      "RemediationExecutionStep": {
        "description": "Name of the step from the SSM document.",
        "properties": {
          "ErrorMessage": { "$ref": "#/components/schemas/String" },
          "Name": { "$ref": "#/components/schemas/String" },
          "StartTime": { "$ref": "#/components/schemas/Date" },
          "State": { "$ref": "#/components/schemas/RemediationExecutionStepState" },
          "StopTime": { "$ref": "#/components/schemas/Date" }
        },
        "type": "object"
      },
      "RemediationExecutionStepState": { "enum": ["SUCCEEDED", "PENDING", "FAILED"], "type": "string" },
      "RemediationExecutionSteps": {
        "items": { "$ref": "#/components/schemas/RemediationExecutionStep" },
        "type": "array"
      },
      "RemediationInProgressException": {},
      "RemediationParameterValue": {
        "description": "The value is either a dynamic (resource) value or a static value. You must select either a dynamic value or a static value.",
        "properties": {
          "ResourceValue": { "$ref": "#/components/schemas/ResourceValue" },
          "StaticValue": { "$ref": "#/components/schemas/StaticValue" }
        },
        "type": "object"
      },
      "RemediationParameters": {
        "additionalProperties": { "$ref": "#/components/schemas/RemediationParameterValue" },
        "maxProperties": 25,
        "minProperties": 0,
        "type": "object"
      },
      "RemediationTargetType": { "enum": ["SSM_DOCUMENT"], "type": "string" },
      "ResourceCount": {
        "description": "An object that contains the resource type and the number of resources.",
        "properties": {
          "count": { "$ref": "#/components/schemas/Long" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "type": "object"
      },
      "ResourceCountFilters": {
        "description": "Filters the resource count based on account ID, region, and resource type.",
        "properties": {
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "Region": { "$ref": "#/components/schemas/AwsRegion" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "type": "object"
      },
      "ResourceCountGroupKey": { "enum": ["RESOURCE_TYPE", "ACCOUNT_ID", "AWS_REGION"], "type": "string" },
      "ResourceCounts": { "items": { "$ref": "#/components/schemas/ResourceCount" }, "type": "array" },
      "ResourceCreationTime": { "format": "date-time", "type": "string" },
      "ResourceDeletionTime": { "format": "date-time", "type": "string" },
      "ResourceFilters": {
        "description": "Filters the results by resource account ID, region, resource ID, and resource name.",
        "properties": {
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "Region": { "$ref": "#/components/schemas/AwsRegion" },
          "ResourceId": { "$ref": "#/components/schemas/ResourceId" },
          "ResourceName": { "$ref": "#/components/schemas/ResourceName" }
        },
        "type": "object"
      },
      "ResourceId": { "maxLength": 768, "minLength": 1, "type": "string" },
      "ResourceIdList": { "items": { "$ref": "#/components/schemas/ResourceId" }, "type": "array" },
      "ResourceIdentifier": {
        "description": "The details that identify a resource that is discovered by AWS Config, including the resource type, ID, and (if available) the custom resource name.",
        "properties": {
          "resourceDeletionTime": { "$ref": "#/components/schemas/ResourceDeletionTime" },
          "resourceId": { "$ref": "#/components/schemas/ResourceId" },
          "resourceName": { "$ref": "#/components/schemas/ResourceName" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "type": "object"
      },
      "ResourceIdentifierList": { "items": { "$ref": "#/components/schemas/ResourceIdentifier" }, "type": "array" },
      "ResourceIdentifiersList": {
        "items": { "$ref": "#/components/schemas/AggregateResourceIdentifier" },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "ResourceInUseException": {},
      "ResourceKey": {
        "description": "The details that identify a resource within AWS Config, including the resource type and resource ID.",
        "properties": {
          "resourceId": { "$ref": "#/components/schemas/ResourceId" },
          "resourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "required": ["resourceType", "resourceId"],
        "type": "object"
      },
      "ResourceKeys": {
        "items": { "$ref": "#/components/schemas/ResourceKey" },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "ResourceName": { "type": "string" },
      "ResourceNotDiscoveredException": {},
      "ResourceNotFoundException": {},
      "ResourceType": {
        "enum": [
          "AWS::EC2::CustomerGateway",
          "AWS::EC2::EIP",
          "AWS::EC2::Host",
          "AWS::EC2::Instance",
          "AWS::EC2::InternetGateway",
          "AWS::EC2::NetworkAcl",
          "AWS::EC2::NetworkInterface",
          "AWS::EC2::RouteTable",
          "AWS::EC2::SecurityGroup",
          "AWS::EC2::Subnet",
          "AWS::CloudTrail::Trail",
          "AWS::EC2::Volume",
          "AWS::EC2::VPC",
          "AWS::EC2::VPNConnection",
          "AWS::EC2::VPNGateway",
          "AWS::IAM::Group",
          "AWS::IAM::Policy",
          "AWS::IAM::Role",
          "AWS::IAM::User",
          "AWS::ACM::Certificate",
          "AWS::RDS::DBInstance",
          "AWS::RDS::DBSubnetGroup",
          "AWS::RDS::DBSecurityGroup",
          "AWS::RDS::DBSnapshot",
          "AWS::RDS::EventSubscription",
          "AWS::ElasticLoadBalancingV2::LoadBalancer",
          "AWS::S3::Bucket",
          "AWS::SSM::ManagedInstanceInventory",
          "AWS::Redshift::Cluster",
          "AWS::Redshift::ClusterSnapshot",
          "AWS::Redshift::ClusterParameterGroup",
          "AWS::Redshift::ClusterSecurityGroup",
          "AWS::Redshift::ClusterSubnetGroup",
          "AWS::Redshift::EventSubscription",
          "AWS::CloudWatch::Alarm",
          "AWS::CloudFormation::Stack",
          "AWS::DynamoDB::Table",
          "AWS::AutoScaling::AutoScalingGroup",
          "AWS::AutoScaling::LaunchConfiguration",
          "AWS::AutoScaling::ScalingPolicy",
          "AWS::AutoScaling::ScheduledAction",
          "AWS::CodeBuild::Project",
          "AWS::WAF::RateBasedRule",
          "AWS::WAF::Rule",
          "AWS::WAF::WebACL",
          "AWS::WAFRegional::RateBasedRule",
          "AWS::WAFRegional::Rule",
          "AWS::WAFRegional::WebACL",
          "AWS::CloudFront::Distribution",
          "AWS::CloudFront::StreamingDistribution",
          "AWS::WAF::RuleGroup",
          "AWS::WAFRegional::RuleGroup",
          "AWS::Lambda::Function",
          "AWS::ElasticBeanstalk::Application",
          "AWS::ElasticBeanstalk::ApplicationVersion",
          "AWS::ElasticBeanstalk::Environment",
          "AWS::ElasticLoadBalancing::LoadBalancer",
          "AWS::XRay::EncryptionConfig",
          "AWS::SSM::AssociationCompliance",
          "AWS::SSM::PatchCompliance",
          "AWS::Shield::Protection",
          "AWS::ShieldRegional::Protection",
          "AWS::Config::ResourceCompliance",
          "AWS::CodePipeline::Pipeline"
        ],
        "type": "string"
      },
      "ResourceTypeList": { "items": { "$ref": "#/components/schemas/ResourceType" }, "type": "array" },
      "ResourceTypes": {
        "items": { "$ref": "#/components/schemas/StringWithCharLimit256" },
        "maxItems": 20,
        "minItems": 0,
        "type": "array"
      },
      "ResourceTypesScope": {
        "items": { "$ref": "#/components/schemas/StringWithCharLimit256" },
        "maxItems": 100,
        "minItems": 0,
        "type": "array"
      },
      "ResourceValue": {
        "description": "The dynamic value of the resource.",
        "properties": { "Value": { "$ref": "#/components/schemas/ResourceValueType" } },
        "type": "object"
      },
      "ResourceValueType": { "enum": ["RESOURCE_ID"], "type": "string" },
      "Results": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "RetentionConfiguration": {
        "description": "An object with the name of the retention configuration and the retention period in days. The object stores the configuration for data retention in AWS Config.",
        "properties": {
          "Name": { "$ref": "#/components/schemas/RetentionConfigurationName" },
          "RetentionPeriodInDays": { "$ref": "#/components/schemas/RetentionPeriodInDays" }
        },
        "required": ["Name", "RetentionPeriodInDays"],
        "type": "object"
      },
      "RetentionConfigurationList": {
        "items": { "$ref": "#/components/schemas/RetentionConfiguration" },
        "type": "array"
      },
      "RetentionConfigurationName": { "maxLength": 256, "minLength": 1, "pattern": "[\\w\\-]+", "type": "string" },
      "RetentionConfigurationNameList": {
        "items": { "$ref": "#/components/schemas/RetentionConfigurationName" },
        "maxItems": 1,
        "minItems": 0,
        "type": "array"
      },
      "RetentionPeriodInDays": { "maximum": 2557, "minimum": 30, "type": "integer" },
      "RuleLimit": { "maximum": 50, "minimum": 0, "type": "integer" },
      "Scope": {
        "description": "Defines which resources trigger an evaluation for an AWS Config rule. The scope can include one or more resource types, a combination of a tag key and value, or a combination of one resource type and one resource ID. Specify a scope to constrain which resources trigger an evaluation for a rule. Otherwise, evaluations for the rule are triggered when any resource in your recording group changes in configuration.",
        "properties": {
          "ComplianceResourceId": { "$ref": "#/components/schemas/BaseResourceId" },
          "ComplianceResourceTypes": { "$ref": "#/components/schemas/ComplianceResourceTypes" },
          "TagKey": { "$ref": "#/components/schemas/StringWithCharLimit128" },
          "TagValue": { "$ref": "#/components/schemas/StringWithCharLimit256" }
        },
        "type": "object"
      },
      "SelectResourceConfigRequest": {
        "properties": {
          "Expression": { "$ref": "#/components/schemas/Expression" },
          "Limit": { "$ref": "#/components/schemas/Limit" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["Expression"],
        "type": "object"
      },
      "SelectResourceConfigResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "QueryInfo": { "$ref": "#/components/schemas/QueryInfo" },
          "Results": { "$ref": "#/components/schemas/Results" }
        },
        "type": "object"
      },
      "Source": {
        "description": "Provides the AWS Config rule owner (AWS or customer), the rule identifier, and the events that trigger the evaluation of your AWS resources.",
        "properties": {
          "Owner": { "$ref": "#/components/schemas/Owner" },
          "SourceDetails": { "$ref": "#/components/schemas/SourceDetails" },
          "SourceIdentifier": { "$ref": "#/components/schemas/StringWithCharLimit256" }
        },
        "required": ["Owner", "SourceIdentifier"],
        "type": "object"
      },
      "SourceDetail": {
        "description": "Provides the source and the message types that trigger AWS Config to evaluate your AWS resources against a rule. It also provides the frequency with which you want AWS Config to run evaluations for the rule if the trigger type is periodic. You can specify the parameter values for <code>SourceDetail</code> only for custom rules. ",
        "properties": {
          "EventSource": { "$ref": "#/components/schemas/EventSource" },
          "MaximumExecutionFrequency": { "$ref": "#/components/schemas/MaximumExecutionFrequency" },
          "MessageType": { "$ref": "#/components/schemas/MessageType" }
        },
        "type": "object"
      },
      "SourceDetails": {
        "items": { "$ref": "#/components/schemas/SourceDetail" },
        "maxItems": 25,
        "minItems": 0,
        "type": "array"
      },
      "StartConfigRulesEvaluationRequest": {
        "description": "<p/>",
        "properties": { "ConfigRuleNames": { "$ref": "#/components/schemas/ReevaluateConfigRuleNames" } },
        "type": "object"
      },
      "StartConfigRulesEvaluationResponse": {
        "description": "The output when you start the evaluation for the specified AWS Config rule.",
        "properties": {},
        "type": "object"
      },
      "StartConfigurationRecorderRequest": {
        "description": "The input for the <a>StartConfigurationRecorder</a> action.",
        "properties": { "ConfigurationRecorderName": { "$ref": "#/components/schemas/RecorderName" } },
        "required": ["ConfigurationRecorderName"],
        "type": "object"
      },
      "StartRemediationExecutionRequest": {
        "properties": {
          "ConfigRuleName": { "$ref": "#/components/schemas/StringWithCharLimit64" },
          "ResourceKeys": { "$ref": "#/components/schemas/ResourceKeys" }
        },
        "required": ["ConfigRuleName", "ResourceKeys"],
        "type": "object"
      },
      "StartRemediationExecutionResponse": {
        "properties": {
          "FailedItems": { "$ref": "#/components/schemas/ResourceKeys" },
          "FailureMessage": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "StaticParameterValues": {
        "items": { "$ref": "#/components/schemas/StringWithCharLimit256" },
        "maxItems": 25,
        "minItems": 0,
        "type": "array"
      },
      "StaticValue": {
        "description": "The static value of the resource.",
        "properties": { "Values": { "$ref": "#/components/schemas/StaticParameterValues" } },
        "type": "object"
      },
      "StatusDetailFilters": {
        "properties": {
          "AccountId": { "$ref": "#/components/schemas/AccountId" },
          "MemberAccountRuleStatus": { "$ref": "#/components/schemas/MemberAccountRuleStatus" }
        },
        "type": "object"
      },
      "StopConfigurationRecorderRequest": {
        "description": "The input for the <a>StopConfigurationRecorder</a> action.",
        "properties": { "ConfigurationRecorderName": { "$ref": "#/components/schemas/RecorderName" } },
        "required": ["ConfigurationRecorderName"],
        "type": "object"
      },
      "String": { "type": "string" },
      "StringWithCharLimit1024": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "StringWithCharLimit128": { "maxLength": 128, "minLength": 1, "type": "string" },
      "StringWithCharLimit2048": { "maxLength": 2048, "minLength": 1, "type": "string" },
      "StringWithCharLimit256": { "maxLength": 256, "minLength": 1, "type": "string" },
      "StringWithCharLimit256Min0": { "maxLength": 256, "minLength": 0, "type": "string" },
      "StringWithCharLimit64": { "maxLength": 64, "minLength": 1, "type": "string" },
      "StringWithCharLimit768": { "maxLength": 768, "minLength": 1, "type": "string" },
      "SupplementaryConfiguration": {
        "additionalProperties": { "$ref": "#/components/schemas/SupplementaryConfigurationValue" },
        "type": "object"
      },
      "SupplementaryConfigurationName": { "type": "string" },
      "SupplementaryConfigurationValue": { "type": "string" },
      "Tag": {
        "description": "The tags for the resource. The metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TagKey" },
          "Value": { "$ref": "#/components/schemas/TagValue" }
        },
        "type": "object"
      },
      "TagKey": { "maxLength": 128, "minLength": 1, "type": "string" },
      "TagKeyList": {
        "items": { "$ref": "#/components/schemas/TagKey" },
        "maxItems": 50,
        "minItems": 1,
        "type": "array"
      },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "maxItems": 50, "minItems": 1, "type": "array" },
      "TagResourceRequest": {
        "properties": {
          "ResourceArn": { "$ref": "#/components/schemas/AmazonResourceName" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["ResourceArn", "Tags"],
        "type": "object"
      },
      "TagValue": { "maxLength": 256, "minLength": 0, "type": "string" },
      "Tags": { "additionalProperties": { "$ref": "#/components/schemas/Value" }, "type": "object" },
      "TagsList": { "items": { "$ref": "#/components/schemas/Tag" }, "maxItems": 50, "minItems": 0, "type": "array" },
      "TooManyTagsException": {},
      "UnprocessedResourceIdentifierList": {
        "items": { "$ref": "#/components/schemas/AggregateResourceIdentifier" },
        "type": "array"
      },
      "UntagResourceRequest": {
        "properties": {
          "ResourceArn": { "$ref": "#/components/schemas/AmazonResourceName" },
          "TagKeys": { "$ref": "#/components/schemas/TagKeyList" }
        },
        "required": ["ResourceArn", "TagKeys"],
        "type": "object"
      },
      "ValidationException": {},
      "Value": { "type": "string" },
      "Version": { "type": "string" }
    }
  }
}
