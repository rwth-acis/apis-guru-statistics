{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>Use AWS Resource Access Manager to share AWS resources between AWS accounts. To share a resource, you create a resource share, associate the resource with the resource share, and specify the principals that can access the resource. The following principals are supported:</p> <ul> <li> <p>The ID of an AWS account</p> </li> <li> <p>The Amazon Resource Name (ARN) of an OU from AWS Organizations</p> </li> <li> <p>The Amazon Resource Name (ARN) of an organization from AWS Organizations</p> </li> </ul> <p>If you specify an AWS account that doesn't exist in the same organization as the account that owns the resource share, the owner of the specified account receives an invitation to accept the resource share. After the owner accepts the invitation, they can access the resources in the resource share. An administrator of the specified account can use IAM policies to restrict access resources in the resource share.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Resource Access Manager",
    "version": "2018-01-04",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ram-2018-01-04.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "ram"
  },
  "externalDocs": { "description": "Amazon Web Services documentation", "url": "https://docs.aws.amazon.com/ram/" },
  "security": [{ "hmac": [] }],
  "paths": {
    "/acceptresourceshareinvitation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Accepts an invitation to a resource share from another AWS account.",
        "operationId": "AcceptResourceShareInvitation",
        "requestBody": { "$ref": "#/components/requestBodies/AcceptResourceShareInvitationBody" },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AcceptResourceShareInvitationResponse" } }
            }
          },
          "480": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "482": {
            "description": "ResourceShareInvitationArnNotFoundException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceShareInvitationArnNotFoundException" }
              }
            }
          },
          "483": {
            "description": "ResourceShareInvitationAlreadyAcceptedException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceShareInvitationAlreadyAcceptedException" }
              }
            }
          },
          "484": {
            "description": "ResourceShareInvitationAlreadyRejectedException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceShareInvitationAlreadyRejectedException" }
              }
            }
          },
          "485": {
            "description": "ResourceShareInvitationExpiredException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceShareInvitationExpiredException" }
              }
            }
          },
          "486": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/associateresourceshare": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associates the specified resource share with the specified principals and resources.",
        "operationId": "AssociateResourceShare",
        "requestBody": { "$ref": "#/components/requestBodies/AssociateResourceShareBody" },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AssociateResourceShareResponse" } }
            }
          },
          "480": {
            "description": "IdempotentParameterMismatchException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IdempotentParameterMismatchException" } }
            }
          },
          "481": {
            "description": "UnknownResourceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnknownResourceException" } } }
          },
          "482": {
            "description": "InvalidStateTransitionException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateTransitionException" } }
            }
          },
          "483": {
            "description": "ResourceShareLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceShareLimitExceededException" } }
            }
          },
          "484": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "485": {
            "description": "InvalidStateTransitionException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateTransitionException" } }
            }
          },
          "486": {
            "description": "InvalidClientTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClientTokenException" } }
            }
          },
          "487": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "488": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "489": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "490": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          },
          "491": {
            "description": "UnknownResourceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnknownResourceException" } } }
          }
        }
      }
    },
    "/createresourceshare": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a resource share.",
        "operationId": "CreateResourceShare",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "allowExternalPrincipals": {
                    "description": "Indicates whether principals outside your organization can be associated with a resource share.",
                    "type": "boolean"
                  },
                  "clientToken": {
                    "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
                    "type": "string"
                  },
                  "name": { "description": "The name of the resource share.", "type": "string" },
                  "principals": {
                    "description": "The principals to associate with the resource share. The possible values are IDs of AWS accounts, the ARN of an OU or organization from AWS Organizations.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  },
                  "resourceArns": {
                    "description": "The Amazon Resource Names (ARN) of the resources to associate with the resource share.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  },
                  "tags": {
                    "description": "One or more tags.",
                    "items": { "$ref": "#/components/schemas/Tag" },
                    "type": "array"
                  }
                },
                "required": ["name"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateResourceShareResponse" } }
            }
          },
          "480": {
            "description": "IdempotentParameterMismatchException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IdempotentParameterMismatchException" } }
            }
          },
          "481": {
            "description": "InvalidStateTransitionException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateTransitionException" } }
            }
          },
          "482": {
            "description": "UnknownResourceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnknownResourceException" } } }
          },
          "483": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "484": {
            "description": "InvalidClientTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClientTokenException" } }
            }
          },
          "485": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "486": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "487": {
            "description": "ResourceShareLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceShareLimitExceededException" } }
            }
          },
          "488": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "489": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/deleteresourceshare#resourceShareArn": {
      "delete": {
        "description": "Deletes the specified resource share.",
        "operationId": "DeleteResourceShare",
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the resource share.",
            "in": "query",
            "name": "resourceShareArn",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
            "in": "query",
            "name": "clientToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteResourceShareResponse" } }
            }
          },
          "480": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "481": {
            "description": "IdempotentParameterMismatchException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IdempotentParameterMismatchException" } }
            }
          },
          "482": {
            "description": "InvalidStateTransitionException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateTransitionException" } }
            }
          },
          "483": {
            "description": "UnknownResourceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnknownResourceException" } } }
          },
          "484": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "485": {
            "description": "InvalidClientTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClientTokenException" } }
            }
          },
          "486": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "487": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "488": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ]
    },
    "/disassociateresourceshare": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Disassociates the specified principals or resources from the specified resource share.",
        "operationId": "DisassociateResourceShare",
        "requestBody": { "$ref": "#/components/requestBodies/AssociateResourceShareBody" },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DisassociateResourceShareResponse" } }
            }
          },
          "480": {
            "description": "IdempotentParameterMismatchException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IdempotentParameterMismatchException" } }
            }
          },
          "481": {
            "description": "ResourceShareLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceShareLimitExceededException" } }
            }
          },
          "482": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "483": {
            "description": "InvalidStateTransitionException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidStateTransitionException" } }
            }
          },
          "484": {
            "description": "InvalidClientTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClientTokenException" } }
            }
          },
          "485": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "486": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "487": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "488": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          },
          "489": {
            "description": "UnknownResourceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnknownResourceException" } } }
          }
        }
      }
    },
    "/enablesharingwithawsorganization": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Enables resource sharing within your organization.",
        "operationId": "EnableSharingWithAwsOrganization",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EnableSharingWithAwsOrganizationResponse" }
              }
            }
          },
          "480": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/getresourcepolicies": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the policies for the specifies resources.",
        "operationId": "GetResourcePolicies",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "maxResults": {
                    "description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.",
                    "maximum": 500,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "nextToken": { "description": "The token for the next page of results.", "type": "string" },
                  "principal": { "description": "The principal.", "type": "string" },
                  "resourceArns": {
                    "description": "The Amazon Resource Names (ARN) of the resources.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  }
                },
                "required": ["resourceArns"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetResourcePoliciesResponse" } }
            }
          },
          "480": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "481": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "483": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/getresourceshareassociations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the associations for the specified resource share.",
        "operationId": "GetResourceShareAssociations",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "associationStatus": {
                    "description": "The status of the association.",
                    "enum": ["ASSOCIATING", "ASSOCIATED", "FAILED", "DISASSOCIATING", "DISASSOCIATED"],
                    "type": "string"
                  },
                  "associationType": {
                    "description": "The association type.",
                    "enum": ["PRINCIPAL", "RESOURCE"],
                    "type": "string"
                  },
                  "maxResults": {
                    "description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.",
                    "maximum": 500,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "nextToken": { "description": "The token for the next page of results.", "type": "string" },
                  "principal": { "description": "The principal.", "type": "string" },
                  "resourceArn": { "description": "The Amazon Resource Name (ARN) of the resource.", "type": "string" },
                  "resourceShareArns": {
                    "description": "The Amazon Resource Names (ARN) of the resource shares.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  }
                },
                "required": ["associationType"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetResourceShareAssociationsResponse" } }
            }
          },
          "480": {
            "description": "UnknownResourceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnknownResourceException" } } }
          },
          "481": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "485": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/getresourceshareinvitations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the specified invitations for resource sharing.",
        "operationId": "GetResourceShareInvitations",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "maxResults": {
                    "description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.",
                    "maximum": 500,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "nextToken": { "description": "The token for the next page of results.", "type": "string" },
                  "resourceShareArns": {
                    "description": "The Amazon Resource Names (ARN) of the resource shares.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  },
                  "resourceShareInvitationArns": {
                    "description": "The Amazon Resource Names (ARN) of the invitations.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetResourceShareInvitationsResponse" } }
            }
          },
          "480": {
            "description": "ResourceShareInvitationArnNotFoundException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceShareInvitationArnNotFoundException" }
              }
            }
          },
          "481": {
            "description": "InvalidMaxResultsException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidMaxResultsException" } }
            }
          },
          "482": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "484": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "485": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/getresourceshares": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the specified resource shares or all of your resource shares.",
        "operationId": "GetResourceShares",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "maxResults": {
                    "description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.",
                    "maximum": 500,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "name": { "description": "The name of the resource share.", "type": "string" },
                  "nextToken": { "description": "The token for the next page of results.", "type": "string" },
                  "resourceOwner": {
                    "description": "The type of owner.",
                    "enum": ["SELF", "OTHER-ACCOUNTS"],
                    "type": "string"
                  },
                  "resourceShareArns": {
                    "description": "The Amazon Resource Names (ARN) of the resource shares.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  },
                  "resourceShareStatus": {
                    "description": "The status of the resource share.",
                    "enum": ["PENDING", "ACTIVE", "FAILED", "DELETING", "DELETED"],
                    "type": "string"
                  },
                  "tagFilters": {
                    "description": "One or more tag filters.",
                    "items": { "$ref": "#/components/schemas/TagFilter" },
                    "type": "array"
                  }
                },
                "required": ["resourceOwner"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetResourceSharesResponse" } }
            }
          },
          "480": {
            "description": "UnknownResourceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnknownResourceException" } } }
          },
          "481": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "484": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/listprincipals": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the principals with access to the specified resource.",
        "operationId": "ListPrincipals",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "maxResults": {
                    "description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.",
                    "maximum": 500,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "nextToken": { "description": "The token for the next page of results.", "type": "string" },
                  "principals": {
                    "description": "The principals.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  },
                  "resourceArn": { "description": "The Amazon Resource Name (ARN) of the resource.", "type": "string" },
                  "resourceOwner": {
                    "description": "The type of owner.",
                    "enum": ["SELF", "OTHER-ACCOUNTS"],
                    "type": "string"
                  },
                  "resourceShareArns": {
                    "description": "The Amazon Resource Names (ARN) of the resource shares.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  },
                  "resourceType": { "description": "The resource type.", "type": "string" }
                },
                "required": ["resourceOwner"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListPrincipalsResponse" } } }
          },
          "480": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "481": {
            "description": "UnknownResourceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnknownResourceException" } } }
          },
          "482": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "484": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/listresources": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the resources that the specified principal can access.",
        "operationId": "ListResources",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "maxResults": {
                    "description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.",
                    "maximum": 500,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "nextToken": { "description": "The token for the next page of results.", "type": "string" },
                  "principal": { "description": "The principal.", "type": "string" },
                  "resourceArns": {
                    "description": "The Amazon Resource Names (ARN) of the resources.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  },
                  "resourceOwner": {
                    "description": "The type of owner.",
                    "enum": ["SELF", "OTHER-ACCOUNTS"],
                    "type": "string"
                  },
                  "resourceShareArns": {
                    "description": "The Amazon Resource Names (ARN) of the resource shares.",
                    "items": { "$ref": "#/components/schemas/String" },
                    "type": "array"
                  },
                  "resourceType": { "description": "The resource type.", "type": "string" }
                },
                "required": ["resourceOwner"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListResourcesResponse" } } }
          },
          "480": {
            "description": "InvalidResourceTypeException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceTypeException" } }
            }
          },
          "481": {
            "description": "UnknownResourceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnknownResourceException" } } }
          },
          "482": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextTokenException" } }
            }
          },
          "484": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "485": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/rejectresourceshareinvitation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Rejects an invitation to a resource share from another AWS account.",
        "operationId": "RejectResourceShareInvitation",
        "requestBody": { "$ref": "#/components/requestBodies/AcceptResourceShareInvitationBody" },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RejectResourceShareInvitationResponse" } }
            }
          },
          "480": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "482": {
            "description": "ResourceShareInvitationArnNotFoundException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceShareInvitationArnNotFoundException" }
              }
            }
          },
          "483": {
            "description": "ResourceShareInvitationAlreadyAcceptedException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceShareInvitationAlreadyAcceptedException" }
              }
            }
          },
          "484": {
            "description": "ResourceShareInvitationAlreadyRejectedException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceShareInvitationAlreadyRejectedException" }
              }
            }
          },
          "485": {
            "description": "ResourceShareInvitationExpiredException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceShareInvitationExpiredException" }
              }
            }
          },
          "486": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/tagresource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Adds the specified tags to the specified resource share.",
        "operationId": "TagResource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resourceShareArn": {
                    "description": "The Amazon Resource Name (ARN) of the resource share.",
                    "type": "string"
                  },
                  "tags": {
                    "description": "One or more tags.",
                    "items": { "$ref": "#/components/schemas/Tag" },
                    "type": "array"
                  }
                },
                "required": ["resourceShareArn", "tags"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceResponse" } } }
          },
          "480": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "481": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "482": {
            "description": "TagLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TagLimitExceededException" } }
            }
          },
          "483": {
            "description": "ResourceArnNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceArnNotFoundException" } }
            }
          },
          "484": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/untagresource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes the specified tags from the specified resource share.",
        "operationId": "UntagResource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resourceShareArn": {
                    "description": "The Amazon Resource Name (ARN) of the resource share.",
                    "type": "string"
                  },
                  "tagKeys": {
                    "description": "The tag keys of the tags to remove.",
                    "items": { "$ref": "#/components/schemas/TagKey" },
                    "type": "array"
                  }
                },
                "required": ["resourceShareArn", "tagKeys"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceResponse" } } }
          },
          "480": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "481": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "482": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    },
    "/updateresourceshare": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates the specified resource share.",
        "operationId": "UpdateResourceShare",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "allowExternalPrincipals": {
                    "description": "Indicates whether principals outside your organization can be associated with a resource share.",
                    "type": "boolean"
                  },
                  "clientToken": {
                    "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
                    "type": "string"
                  },
                  "name": { "description": "The name of the resource share.", "type": "string" },
                  "resourceShareArn": {
                    "description": "The Amazon Resource Name (ARN) of the resource share.",
                    "type": "string"
                  }
                },
                "required": ["resourceShareArn"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateResourceShareResponse" } }
            }
          },
          "480": {
            "description": "IdempotentParameterMismatchException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IdempotentParameterMismatchException" } }
            }
          },
          "481": {
            "description": "MissingRequiredParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/MissingRequiredParameterException" } }
            }
          },
          "482": {
            "description": "UnknownResourceException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnknownResourceException" } } }
          },
          "483": {
            "description": "MalformedArnException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MalformedArnException" } } }
          },
          "484": {
            "description": "InvalidClientTokenException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidClientTokenException" } }
            }
          },
          "485": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "486": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "487": {
            "description": "ServerInternalException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalException" } } }
          },
          "488": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServiceUnavailableException" } }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The RAM multi-region endpoint",
      "url": "http://ram.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The RAM multi-region endpoint",
      "url": "https://ram.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The RAM endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://ram.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The RAM endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://ram.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "requestBodies": {
      "AcceptResourceShareInvitationBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "clientToken": {
                  "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
                  "type": "string"
                },
                "resourceShareInvitationArn": {
                  "description": "The Amazon Resource Name (ARN) of the invitation.",
                  "type": "string"
                }
              },
              "required": ["resourceShareInvitationArn"],
              "type": "object"
            }
          }
        },
        "required": true
      },
      "AssociateResourceShareBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "clientToken": {
                  "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
                  "type": "string"
                },
                "principals": {
                  "description": "The principals.",
                  "items": { "$ref": "#/components/schemas/String" },
                  "type": "array"
                },
                "resourceArns": {
                  "description": "The Amazon Resource Names (ARN) of the resources.",
                  "items": { "$ref": "#/components/schemas/String" },
                  "type": "array"
                },
                "resourceShareArn": {
                  "description": "The Amazon Resource Name (ARN) of the resource share.",
                  "type": "string"
                }
              },
              "required": ["resourceShareArn"],
              "type": "object"
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AcceptResourceShareInvitationRequest": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "resourceShareInvitationArn": { "$ref": "#/components/schemas/String" }
        },
        "required": ["resourceShareInvitationArn"],
        "type": "object"
      },
      "AcceptResourceShareInvitationResponse": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "resourceShareInvitation": { "$ref": "#/components/schemas/ResourceShareInvitation" }
        },
        "type": "object"
      },
      "AssociateResourceShareRequest": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "principals": { "$ref": "#/components/schemas/PrincipalArnOrIdList" },
          "resourceArns": { "$ref": "#/components/schemas/ResourceArnList" },
          "resourceShareArn": { "$ref": "#/components/schemas/String" }
        },
        "required": ["resourceShareArn"],
        "type": "object"
      },
      "AssociateResourceShareResponse": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "resourceShareAssociations": { "$ref": "#/components/schemas/ResourceShareAssociationList" }
        },
        "type": "object"
      },
      "Boolean": { "type": "boolean" },
      "CreateResourceShareRequest": {
        "properties": {
          "allowExternalPrincipals": { "$ref": "#/components/schemas/Boolean" },
          "clientToken": { "$ref": "#/components/schemas/String" },
          "name": { "$ref": "#/components/schemas/String" },
          "principals": { "$ref": "#/components/schemas/PrincipalArnOrIdList" },
          "resourceArns": { "$ref": "#/components/schemas/ResourceArnList" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["name"],
        "type": "object"
      },
      "CreateResourceShareResponse": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "resourceShare": { "$ref": "#/components/schemas/ResourceShare" }
        },
        "type": "object"
      },
      "DateTime": { "format": "date-time", "type": "string" },
      "DeleteResourceShareRequest": { "properties": {}, "type": "object" },
      "DeleteResourceShareResponse": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "returnValue": { "$ref": "#/components/schemas/Boolean" }
        },
        "type": "object"
      },
      "DisassociateResourceShareRequest": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "principals": { "$ref": "#/components/schemas/PrincipalArnOrIdList" },
          "resourceArns": { "$ref": "#/components/schemas/ResourceArnList" },
          "resourceShareArn": { "$ref": "#/components/schemas/String" }
        },
        "required": ["resourceShareArn"],
        "type": "object"
      },
      "DisassociateResourceShareResponse": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "resourceShareAssociations": { "$ref": "#/components/schemas/ResourceShareAssociationList" }
        },
        "type": "object"
      },
      "EnableSharingWithAwsOrganizationRequest": { "properties": {}, "type": "object" },
      "EnableSharingWithAwsOrganizationResponse": {
        "properties": { "returnValue": { "$ref": "#/components/schemas/Boolean" } },
        "type": "object"
      },
      "GetResourcePoliciesRequest": {
        "properties": {
          "maxResults": { "$ref": "#/components/schemas/MaxResults" },
          "nextToken": { "$ref": "#/components/schemas/String" },
          "principal": { "$ref": "#/components/schemas/String" },
          "resourceArns": { "$ref": "#/components/schemas/ResourceArnList" }
        },
        "required": ["resourceArns"],
        "type": "object"
      },
      "GetResourcePoliciesResponse": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/String" },
          "policies": { "$ref": "#/components/schemas/PolicyList" }
        },
        "type": "object"
      },
      "GetResourceShareAssociationsRequest": {
        "properties": {
          "associationStatus": { "$ref": "#/components/schemas/ResourceShareAssociationStatus" },
          "associationType": { "$ref": "#/components/schemas/ResourceShareAssociationType" },
          "maxResults": { "$ref": "#/components/schemas/MaxResults" },
          "nextToken": { "$ref": "#/components/schemas/String" },
          "principal": { "$ref": "#/components/schemas/String" },
          "resourceArn": { "$ref": "#/components/schemas/String" },
          "resourceShareArns": { "$ref": "#/components/schemas/ResourceShareArnList" }
        },
        "required": ["associationType"],
        "type": "object"
      },
      "GetResourceShareAssociationsResponse": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/String" },
          "resourceShareAssociations": { "$ref": "#/components/schemas/ResourceShareAssociationList" }
        },
        "type": "object"
      },
      "GetResourceShareInvitationsRequest": {
        "properties": {
          "maxResults": { "$ref": "#/components/schemas/MaxResults" },
          "nextToken": { "$ref": "#/components/schemas/String" },
          "resourceShareArns": { "$ref": "#/components/schemas/ResourceShareArnList" },
          "resourceShareInvitationArns": { "$ref": "#/components/schemas/ResourceShareInvitationArnList" }
        },
        "type": "object"
      },
      "GetResourceShareInvitationsResponse": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/String" },
          "resourceShareInvitations": { "$ref": "#/components/schemas/ResourceShareInvitationList" }
        },
        "type": "object"
      },
      "GetResourceSharesRequest": {
        "properties": {
          "maxResults": { "$ref": "#/components/schemas/MaxResults" },
          "name": { "$ref": "#/components/schemas/String" },
          "nextToken": { "$ref": "#/components/schemas/String" },
          "resourceOwner": { "$ref": "#/components/schemas/ResourceOwner" },
          "resourceShareArns": { "$ref": "#/components/schemas/ResourceShareArnList" },
          "resourceShareStatus": { "$ref": "#/components/schemas/ResourceShareStatus" },
          "tagFilters": { "$ref": "#/components/schemas/TagFilters" }
        },
        "required": ["resourceOwner"],
        "type": "object"
      },
      "GetResourceSharesResponse": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/String" },
          "resourceShares": { "$ref": "#/components/schemas/ResourceShareList" }
        },
        "type": "object"
      },
      "IdempotentParameterMismatchException": {},
      "InvalidClientTokenException": {},
      "InvalidMaxResultsException": {},
      "InvalidNextTokenException": {},
      "InvalidParameterException": {},
      "InvalidResourceTypeException": {},
      "InvalidStateTransitionException": {},
      "ListPrincipalsRequest": {
        "properties": {
          "maxResults": { "$ref": "#/components/schemas/MaxResults" },
          "nextToken": { "$ref": "#/components/schemas/String" },
          "principals": { "$ref": "#/components/schemas/PrincipalArnOrIdList" },
          "resourceArn": { "$ref": "#/components/schemas/String" },
          "resourceOwner": { "$ref": "#/components/schemas/ResourceOwner" },
          "resourceShareArns": { "$ref": "#/components/schemas/ResourceShareArnList" },
          "resourceType": { "$ref": "#/components/schemas/String" }
        },
        "required": ["resourceOwner"],
        "type": "object"
      },
      "ListPrincipalsResponse": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/String" },
          "principals": { "$ref": "#/components/schemas/PrincipalList" }
        },
        "type": "object"
      },
      "ListResourcesRequest": {
        "properties": {
          "maxResults": { "$ref": "#/components/schemas/MaxResults" },
          "nextToken": { "$ref": "#/components/schemas/String" },
          "principal": { "$ref": "#/components/schemas/String" },
          "resourceArns": { "$ref": "#/components/schemas/ResourceArnList" },
          "resourceOwner": { "$ref": "#/components/schemas/ResourceOwner" },
          "resourceShareArns": { "$ref": "#/components/schemas/ResourceShareArnList" },
          "resourceType": { "$ref": "#/components/schemas/String" }
        },
        "required": ["resourceOwner"],
        "type": "object"
      },
      "ListResourcesResponse": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/String" },
          "resources": { "$ref": "#/components/schemas/ResourceList" }
        },
        "type": "object"
      },
      "MalformedArnException": {},
      "MaxResults": { "maximum": 500, "minimum": 1, "type": "integer" },
      "MissingRequiredParameterException": {},
      "OperationNotPermittedException": {},
      "Policy": { "type": "string" },
      "PolicyList": { "items": { "$ref": "#/components/schemas/Policy" }, "type": "array" },
      "Principal": {
        "description": "Describes a principal for use with AWS Resource Access Manager.",
        "properties": {
          "creationTime": { "$ref": "#/components/schemas/DateTime" },
          "external": { "$ref": "#/components/schemas/Boolean" },
          "id": { "$ref": "#/components/schemas/String" },
          "lastUpdatedTime": { "$ref": "#/components/schemas/DateTime" },
          "resourceShareArn": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "PrincipalArnOrIdList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "PrincipalList": { "items": { "$ref": "#/components/schemas/Principal" }, "type": "array" },
      "RejectResourceShareInvitationRequest": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "resourceShareInvitationArn": { "$ref": "#/components/schemas/String" }
        },
        "required": ["resourceShareInvitationArn"],
        "type": "object"
      },
      "RejectResourceShareInvitationResponse": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "resourceShareInvitation": { "$ref": "#/components/schemas/ResourceShareInvitation" }
        },
        "type": "object"
      },
      "Resource": {
        "description": "Describes a resource associated with a resource share.",
        "properties": {
          "arn": { "$ref": "#/components/schemas/String" },
          "creationTime": { "$ref": "#/components/schemas/DateTime" },
          "lastUpdatedTime": { "$ref": "#/components/schemas/DateTime" },
          "resourceShareArn": { "$ref": "#/components/schemas/String" },
          "status": { "$ref": "#/components/schemas/ResourceStatus" },
          "statusMessage": { "$ref": "#/components/schemas/String" },
          "type": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ResourceArnList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "ResourceArnNotFoundException": {},
      "ResourceList": { "items": { "$ref": "#/components/schemas/Resource" }, "type": "array" },
      "ResourceOwner": { "enum": ["SELF", "OTHER-ACCOUNTS"], "type": "string" },
      "ResourceShare": {
        "description": "Describes a resource share.",
        "properties": {
          "allowExternalPrincipals": { "$ref": "#/components/schemas/Boolean" },
          "creationTime": { "$ref": "#/components/schemas/DateTime" },
          "lastUpdatedTime": { "$ref": "#/components/schemas/DateTime" },
          "name": { "$ref": "#/components/schemas/String" },
          "owningAccountId": { "$ref": "#/components/schemas/String" },
          "resourceShareArn": { "$ref": "#/components/schemas/String" },
          "status": { "$ref": "#/components/schemas/ResourceShareStatus" },
          "statusMessage": { "$ref": "#/components/schemas/String" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "ResourceShareArnList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "ResourceShareAssociation": {
        "description": "Describes an association with a resource share.",
        "properties": {
          "associatedEntity": { "$ref": "#/components/schemas/String" },
          "associationType": { "$ref": "#/components/schemas/ResourceShareAssociationType" },
          "creationTime": { "$ref": "#/components/schemas/DateTime" },
          "external": { "$ref": "#/components/schemas/Boolean" },
          "lastUpdatedTime": { "$ref": "#/components/schemas/DateTime" },
          "resourceShareArn": { "$ref": "#/components/schemas/String" },
          "status": { "$ref": "#/components/schemas/ResourceShareAssociationStatus" },
          "statusMessage": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ResourceShareAssociationList": {
        "items": { "$ref": "#/components/schemas/ResourceShareAssociation" },
        "type": "array"
      },
      "ResourceShareAssociationStatus": {
        "enum": ["ASSOCIATING", "ASSOCIATED", "FAILED", "DISASSOCIATING", "DISASSOCIATED"],
        "type": "string"
      },
      "ResourceShareAssociationType": { "enum": ["PRINCIPAL", "RESOURCE"], "type": "string" },
      "ResourceShareInvitation": {
        "description": "Describes an invitation to join a resource share.",
        "properties": {
          "invitationTimestamp": { "$ref": "#/components/schemas/DateTime" },
          "receiverAccountId": { "$ref": "#/components/schemas/String" },
          "resourceShareArn": { "$ref": "#/components/schemas/String" },
          "resourceShareAssociations": { "$ref": "#/components/schemas/ResourceShareAssociationList" },
          "resourceShareInvitationArn": { "$ref": "#/components/schemas/String" },
          "resourceShareName": { "$ref": "#/components/schemas/String" },
          "senderAccountId": { "$ref": "#/components/schemas/String" },
          "status": { "$ref": "#/components/schemas/ResourceShareInvitationStatus" }
        },
        "type": "object"
      },
      "ResourceShareInvitationAlreadyAcceptedException": {},
      "ResourceShareInvitationAlreadyRejectedException": {},
      "ResourceShareInvitationArnList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "ResourceShareInvitationArnNotFoundException": {},
      "ResourceShareInvitationExpiredException": {},
      "ResourceShareInvitationList": {
        "items": { "$ref": "#/components/schemas/ResourceShareInvitation" },
        "type": "array"
      },
      "ResourceShareInvitationStatus": { "enum": ["PENDING", "ACCEPTED", "REJECTED", "EXPIRED"], "type": "string" },
      "ResourceShareLimitExceededException": {},
      "ResourceShareList": { "items": { "$ref": "#/components/schemas/ResourceShare" }, "type": "array" },
      "ResourceShareStatus": { "enum": ["PENDING", "ACTIVE", "FAILED", "DELETING", "DELETED"], "type": "string" },
      "ResourceStatus": {
        "enum": ["AVAILABLE", "ZONAL_RESOURCE_INACCESSIBLE", "LIMIT_EXCEEDED", "UNAVAILABLE"],
        "type": "string"
      },
      "ServerInternalException": {},
      "ServiceUnavailableException": {},
      "String": { "type": "string" },
      "Tag": {
        "description": "Information about a tag.",
        "properties": {
          "key": { "$ref": "#/components/schemas/TagKey" },
          "value": { "$ref": "#/components/schemas/TagValue" }
        },
        "type": "object"
      },
      "TagFilter": {
        "description": "Used to filter information based on tags.",
        "properties": {
          "tagKey": { "$ref": "#/components/schemas/TagKey" },
          "tagValues": { "$ref": "#/components/schemas/TagValueList" }
        },
        "type": "object"
      },
      "TagFilters": { "items": { "$ref": "#/components/schemas/TagFilter" }, "type": "array" },
      "TagKey": { "type": "string" },
      "TagKeyList": { "items": { "$ref": "#/components/schemas/TagKey" }, "type": "array" },
      "TagLimitExceededException": {},
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "type": "array" },
      "TagResourceRequest": {
        "properties": {
          "resourceShareArn": { "$ref": "#/components/schemas/String" },
          "tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["resourceShareArn", "tags"],
        "type": "object"
      },
      "TagResourceResponse": { "properties": {}, "type": "object" },
      "TagValue": { "type": "string" },
      "TagValueList": { "items": { "$ref": "#/components/schemas/TagValue" }, "type": "array" },
      "UnknownResourceException": {},
      "UntagResourceRequest": {
        "properties": {
          "resourceShareArn": { "$ref": "#/components/schemas/String" },
          "tagKeys": { "$ref": "#/components/schemas/TagKeyList" }
        },
        "required": ["resourceShareArn", "tagKeys"],
        "type": "object"
      },
      "UntagResourceResponse": { "properties": {}, "type": "object" },
      "UpdateResourceShareRequest": {
        "properties": {
          "allowExternalPrincipals": { "$ref": "#/components/schemas/Boolean" },
          "clientToken": { "$ref": "#/components/schemas/String" },
          "name": { "$ref": "#/components/schemas/String" },
          "resourceShareArn": { "$ref": "#/components/schemas/String" }
        },
        "required": ["resourceShareArn"],
        "type": "object"
      },
      "UpdateResourceShareResponse": {
        "properties": {
          "clientToken": { "$ref": "#/components/schemas/String" },
          "resourceShare": { "$ref": "#/components/schemas/ResourceShare" }
        },
        "type": "object"
      }
    }
  }
}
