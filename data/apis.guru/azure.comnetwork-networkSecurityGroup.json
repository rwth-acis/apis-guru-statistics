{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "title": "NetworkManagementClient",
    "version": "2018-12-01",
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2018-12-01/networkSecurityGroup.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "azure.com",
    "x-serviceName": "network-networkSecurityGroup",
    "x-tags": ["Azure", "Microsoft"]
  },
  "security": [{ "azure_auth": ["user_impersonation"] }],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups": {
      "get": {
        "description": "Gets all network security groups in a subscription.",
        "operationId": "NetworkSecurityGroups_ListAll",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List all network security groups": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List all network security groups": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkSecurityGroup resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NetworkSecurityGroupListResult" },
                "examples": {
                  "List all network security groups": {
                    "$ref": "#/components/examples/List_all_network_security_groups"
                  }
                }
              }
            }
          }
        },
        "tags": ["NetworkSecurityGroups"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups": {
      "get": {
        "description": "Gets all network security groups in a resource group.",
        "operationId": "NetworkSecurityGroups_List",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List network security groups in resource group": { "value": "rg1" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List network security groups in resource group": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List network security groups in resource group": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkSecurityGroup resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NetworkSecurityGroupListResult" },
                "examples": {
                  "List network security groups in resource group": {
                    "$ref": "#/components/examples/List_network_security_groups_in_resource_group"
                  }
                }
              }
            }
          }
        },
        "tags": ["NetworkSecurityGroups"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}": {
      "delete": {
        "description": "Deletes the specified network security group.",
        "operationId": "NetworkSecurityGroups_Delete",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete network security group": { "value": "rg1" } }
          },
          {
            "description": "The name of the network security group.",
            "in": "path",
            "name": "networkSecurityGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete network security group": { "value": "testnsg" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete network security group": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete network security group": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": { "description": "Delete successful." },
          "202": { "description": "Accepted and the operation will complete asynchronously." },
          "204": { "description": "Request successful. Resource does not exist." }
        },
        "tags": ["NetworkSecurityGroups"],
        "x-ms-long-running-operation": true
      },
      "get": {
        "description": "Gets the specified network security group.",
        "operationId": "NetworkSecurityGroups_Get",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get network security group": { "value": "rg1" } }
          },
          {
            "description": "The name of the network security group.",
            "in": "path",
            "name": "networkSecurityGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get network security group": { "value": "testnsg" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get network security group": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get network security group": { "value": "subid" } }
          },
          {
            "description": "Expands referenced resources.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting NetworkSecurityGroup resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NetworkSecurityGroup" },
                "examples": {
                  "Get network security group": { "$ref": "#/components/examples/Get_network_security_group" }
                }
              }
            }
          }
        },
        "tags": ["NetworkSecurityGroups"]
      },
      "patch": {
        "description": "Updates a network security group tags.",
        "operationId": "NetworkSecurityGroups_UpdateTags",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Update network security group tags": { "value": "rg1" } }
          },
          {
            "description": "The name of the network security group.",
            "in": "path",
            "name": "networkSecurityGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Update network security group tags": { "value": "testnsg" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Update network security group tags": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Update network security group tags": { "value": "subid" } }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Tags object for patch operations.",
                "properties": {
                  "tags": {
                    "additionalProperties": { "type": "string" },
                    "description": "Resource tags.",
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "Parameters supplied to update network security group tags.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting NetworkSecurityGroup resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NetworkSecurityGroup" },
                "examples": {
                  "Update network security group tags": {
                    "$ref": "#/components/examples/Update_network_security_group_tags"
                  }
                }
              }
            }
          }
        },
        "tags": ["NetworkSecurityGroups"],
        "x-ms-long-running-operation": true
      },
      "put": {
        "description": "Creates or updates a network security group in the specified resource group.",
        "operationId": "NetworkSecurityGroups_CreateOrUpdate",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Create network security group": { "value": "rg1" },
              "Create network security group with rule": { "value": "rg1" }
            }
          },
          {
            "description": "The name of the network security group.",
            "in": "path",
            "name": "networkSecurityGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Create network security group": { "value": "testnsg" },
              "Create network security group with rule": { "value": "testnsg" }
            }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Create network security group": { "value": "2018-12-01" },
              "Create network security group with rule": { "value": "2018-12-01" }
            }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Create network security group": { "value": "subid" },
              "Create network security group with rule": { "value": "subid" }
            }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NetworkSecurityGroup" } } },
          "description": "Parameters supplied to the create or update network security group operation.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting NetworkSecurityGroup resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NetworkSecurityGroup" },
                "examples": {
                  "Create network security group": { "$ref": "#/components/examples/Create_network_security_group" },
                  "Create network security group with rule": {
                    "$ref": "#/components/examples/Create_network_security_group_with_rule"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting NetworkSecurityGroup resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NetworkSecurityGroup" },
                "examples": {
                  "Create network security group": { "$ref": "#/components/examples/Create_network_security_group" },
                  "Create network security group with rule": {
                    "$ref": "#/components/examples/Create_network_security_group_with_rule"
                  }
                }
              }
            }
          }
        },
        "tags": ["NetworkSecurityGroups"],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/defaultSecurityRules": {
      "get": {
        "description": "Gets all default security rules in a network security group.",
        "operationId": "DefaultSecurityRules_List",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "DefaultSecurityRuleList": { "value": "testrg" } }
          },
          {
            "description": "The name of the network security group.",
            "in": "path",
            "name": "networkSecurityGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "DefaultSecurityRuleList": { "value": "nsg1" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "DefaultSecurityRuleList": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "DefaultSecurityRuleList": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of SecurityRule resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SecurityRuleListResult" },
                "examples": { "DefaultSecurityRuleList": { "$ref": "#/components/examples/DefaultSecurityRuleList" } }
              }
            }
          }
        },
        "tags": ["SecurityRules"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/defaultSecurityRules/{defaultSecurityRuleName}": {
      "get": {
        "description": "Get the specified default network security rule.",
        "operationId": "DefaultSecurityRules_Get",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "DefaultSecurityRuleGet": { "value": "testrg" } }
          },
          {
            "description": "The name of the network security group.",
            "in": "path",
            "name": "networkSecurityGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "DefaultSecurityRuleGet": { "value": "nsg1" } }
          },
          {
            "description": "The name of the default security rule.",
            "in": "path",
            "name": "defaultSecurityRuleName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "DefaultSecurityRuleGet": { "value": "AllowVnetInBound" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "DefaultSecurityRuleGet": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "DefaultSecurityRuleGet": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting SecurityRule resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SecurityRule" },
                "examples": { "DefaultSecurityRuleGet": { "$ref": "#/components/examples/DefaultSecurityRuleGet" } }
              }
            }
          }
        },
        "tags": ["SecurityRules"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules": {
      "get": {
        "description": "Gets all security rules in a network security group.",
        "operationId": "SecurityRules_List",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List network security rules in network security group": { "value": "rg1" } }
          },
          {
            "description": "The name of the network security group.",
            "in": "path",
            "name": "networkSecurityGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List network security rules in network security group": { "value": "testnsg" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List network security rules in network security group": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List network security rules in network security group": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of SecurityRule resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SecurityRuleListResult" },
                "examples": {
                  "List network security rules in network security group": {
                    "$ref": "#/components/examples/List_network_security_rules_in_network_security_group"
                  }
                }
              }
            }
          }
        },
        "tags": ["SecurityRules"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}": {
      "delete": {
        "description": "Deletes the specified network security rule.",
        "operationId": "SecurityRules_Delete",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete network security rule from network security group": { "value": "rg1" } }
          },
          {
            "description": "The name of the network security group.",
            "in": "path",
            "name": "networkSecurityGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete network security rule from network security group": { "value": "testnsg" } }
          },
          {
            "description": "The name of the security rule.",
            "in": "path",
            "name": "securityRuleName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete network security rule from network security group": { "value": "rule1" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete network security rule from network security group": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete network security rule from network security group": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": { "description": "Delete successful." },
          "202": { "description": "Accepted and the operation will complete asynchronously." },
          "204": { "description": "Request successful. Resource does not exist." }
        },
        "tags": ["SecurityRules"],
        "x-ms-long-running-operation": true
      },
      "get": {
        "description": "Get the specified network security rule.",
        "operationId": "SecurityRules_Get",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get network security rule in network security group": { "value": "rg1" } }
          },
          {
            "description": "The name of the network security group.",
            "in": "path",
            "name": "networkSecurityGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get network security rule in network security group": { "value": "testnsg" } }
          },
          {
            "description": "The name of the security rule.",
            "in": "path",
            "name": "securityRuleName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get network security rule in network security group": { "value": "rule1" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get network security rule in network security group": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get network security rule in network security group": { "value": "subid" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting SecurityRule resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SecurityRule" },
                "examples": {
                  "Get network security rule in network security group": {
                    "$ref": "#/components/examples/Get_network_security_rule_in_network_security_group"
                  }
                }
              }
            }
          }
        },
        "tags": ["SecurityRules"]
      },
      "put": {
        "description": "Creates or updates a security rule in the specified network security group.",
        "operationId": "SecurityRules_CreateOrUpdate",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Create security rule": { "value": "rg1" } }
          },
          {
            "description": "The name of the network security group.",
            "in": "path",
            "name": "networkSecurityGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Create security rule": { "value": "testnsg" } }
          },
          {
            "description": "The name of the security rule.",
            "in": "path",
            "name": "securityRuleName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Create security rule": { "value": "rule1" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Create security rule": { "value": "2018-12-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Create security rule": { "value": "subid" } }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SecurityRule" } } },
          "description": "Parameters supplied to the create or update network security rule operation.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting SecurityRule resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SecurityRule" },
                "examples": { "Create security rule": { "$ref": "#/components/examples/Create_security_rule" } }
              }
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting SecurityRule resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SecurityRule" },
                "examples": { "Create security rule": { "$ref": "#/components/examples/Create_security_rule" } }
              }
            }
          }
        },
        "tags": ["SecurityRules"],
        "x-ms-long-running-operation": true
      }
    }
  },
  "servers": [{ "url": "https://management.azure.com" }],
  "components": {
    "examples": {
      "List_all_network_security_groups": {
        "value": {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1",
              "location": "westus",
              "name": "nsg1",
              "properties": {
                "defaultSecurityRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowVnetInBound",
                    "name": "AllowVnetInBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow inbound traffic from all VMs in VNET",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65000,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                    "name": "AllowAzureLoadBalancerInBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow inbound traffic from azure load balancer",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65001,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/DenyAllInBound",
                    "name": "DenyAllInBound",
                    "properties": {
                      "access": "Deny",
                      "description": "Deny all inbound traffic",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65500,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowVnetOutBound",
                    "name": "AllowVnetOutBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65000,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowInternetOutBound",
                    "name": "AllowInternetOutBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow outbound traffic from all VMs to Internet",
                      "destinationAddressPrefix": "Internet",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65001,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/DenyAllOutBound",
                    "name": "DenyAllOutBound",
                    "properties": {
                      "access": "Deny",
                      "description": "Deny all outbound traffic",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65500,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "securityRules": []
              },
              "type": "Microsoft.Network/networkSecurityGroups"
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkSecurityGroups/nsg3",
              "location": "westus",
              "name": "nsg3",
              "properties": {
                "defaultSecurityRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowVnetInBound",
                    "name": "AllowVnetInBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow inbound traffic from all VMs in VNET",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65000,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                    "name": "AllowAzureLoadBalancerInBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow inbound traffic from azure load balancer",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65001,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/DenyAllInBound",
                    "name": "DenyAllInBound",
                    "properties": {
                      "access": "Deny",
                      "description": "Deny all inbound traffic",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65500,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowVnetOutBound",
                    "name": "AllowVnetOutBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65000,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowInternetOutBound",
                    "name": "AllowInternetOutBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow outbound traffic from all VMs to Internet",
                      "destinationAddressPrefix": "Internet",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65001,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/DenyAllOutBound",
                    "name": "DenyAllOutBound",
                    "properties": {
                      "access": "Deny",
                      "description": "Deny all outbound traffic",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65500,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "securityRules": []
              },
              "type": "Microsoft.Network/networkSecurityGroups"
            }
          ]
        }
      },
      "List_network_security_groups_in_resource_group": {
        "value": {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1",
              "location": "westus",
              "name": "nsg1",
              "properties": {
                "defaultSecurityRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowVnetInBound",
                    "name": "AllowVnetInBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow inbound traffic from all VMs in VNET",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65000,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                    "name": "AllowAzureLoadBalancerInBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow inbound traffic from azure load balancer",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65001,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/DenyAllInBound",
                    "name": "DenyAllInBound",
                    "properties": {
                      "access": "Deny",
                      "description": "Deny all inbound traffic",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65500,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowVnetOutBound",
                    "name": "AllowVnetOutBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65000,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowInternetOutBound",
                    "name": "AllowInternetOutBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow outbound traffic from all VMs to Internet",
                      "destinationAddressPrefix": "Internet",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65001,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/DenyAllOutBound",
                    "name": "DenyAllOutBound",
                    "properties": {
                      "access": "Deny",
                      "description": "Deny all outbound traffic",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65500,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "securityRules": []
              },
              "type": "Microsoft.Network/networkSecurityGroups"
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3",
              "location": "westus",
              "name": "nsg3",
              "properties": {
                "defaultSecurityRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowVnetInBound",
                    "name": "AllowVnetInBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow inbound traffic from all VMs in VNET",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65000,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                    "name": "AllowAzureLoadBalancerInBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow inbound traffic from azure load balancer",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65001,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/DenyAllInBound",
                    "name": "DenyAllInBound",
                    "properties": {
                      "access": "Deny",
                      "description": "Deny all inbound traffic",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Inbound",
                      "priority": 65500,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowVnetOutBound",
                    "name": "AllowVnetOutBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65000,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowInternetOutBound",
                    "name": "AllowInternetOutBound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow outbound traffic from all VMs to Internet",
                      "destinationAddressPrefix": "Internet",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65001,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/DenyAllOutBound",
                    "name": "DenyAllOutBound",
                    "properties": {
                      "access": "Deny",
                      "description": "Deny all outbound traffic",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "direction": "Outbound",
                      "priority": 65500,
                      "protocol": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*"
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "securityRules": []
              },
              "type": "Microsoft.Network/networkSecurityGroups"
            }
          ]
        }
      },
      "Get_network_security_group": {
        "value": {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg",
          "location": "westus",
          "name": "testnsg",
          "properties": {
            "defaultSecurityRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetInBound",
                "name": "AllowVnetInBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow inbound traffic from all VMs in VNET",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65000,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                "name": "AllowAzureLoadBalancerInBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow inbound traffic from azure load balancer",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65001,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "AzureLoadBalancer",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllInBound",
                "name": "DenyAllInBound",
                "properties": {
                  "access": "Deny",
                  "description": "Deny all inbound traffic",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65500,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetOutBound",
                "name": "AllowVnetOutBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65000,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowInternetOutBound",
                "name": "AllowInternetOutBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow outbound traffic from all VMs to Internet",
                  "destinationAddressPrefix": "Internet",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65001,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllOutBound",
                "name": "DenyAllOutBound",
                "properties": {
                  "access": "Deny",
                  "description": "Deny all outbound traffic",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65500,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              }
            ],
            "provisioningState": "Succeeded",
            "securityRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/securityRules/rule1",
                "name": "rule1",
                "properties": {
                  "access": "Allow",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "80",
                  "direction": "Inbound",
                  "priority": 130,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              }
            ]
          },
          "type": "Microsoft.Network/networkSecurityGroups"
        }
      },
      "Update_network_security_group_tags": {
        "value": {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg",
          "location": "westus",
          "name": "testnsg",
          "properties": {
            "defaultSecurityRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetInBound",
                "name": "AllowVnetInBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow inbound traffic from all VMs in VNET",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65000,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                "name": "AllowAzureLoadBalancerInBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow inbound traffic from azure load balancer",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65001,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "AzureLoadBalancer",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllInBound",
                "name": "DenyAllInBound",
                "properties": {
                  "access": "Deny",
                  "description": "Deny all inbound traffic",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65500,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetOutBound",
                "name": "AllowVnetOutBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65000,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowInternetOutBound",
                "name": "AllowInternetOutBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow outbound traffic from all VMs to Internet",
                  "destinationAddressPrefix": "Internet",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65001,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllOutBound",
                "name": "DenyAllOutBound",
                "properties": {
                  "access": "Deny",
                  "description": "Deny all outbound traffic",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65500,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              }
            ],
            "provisioningState": "Succeeded",
            "securityRules": []
          },
          "tags": { "tag1": "value1", "tag2": "value2" },
          "type": "Microsoft.Network/networkSecurityGroups"
        }
      },
      "Create_network_security_group": {
        "value": {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg",
          "location": "eastus",
          "name": "testnsg",
          "properties": {
            "defaultSecurityRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetInBound",
                "name": "AllowVnetInBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow inbound traffic from all VMs in VNET",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65000,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                "name": "AllowAzureLoadBalancerInBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow inbound traffic from azure load balancer",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65001,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "AzureLoadBalancer",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllInBound",
                "name": "DenyAllInBound",
                "properties": {
                  "access": "Deny",
                  "description": "Deny all inbound traffic",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65500,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetOutBound",
                "name": "AllowVnetOutBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65000,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowInternetOutBound",
                "name": "AllowInternetOutBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow outbound traffic from all VMs to Internet",
                  "destinationAddressPrefix": "Internet",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65001,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllOutBound",
                "name": "DenyAllOutBound",
                "properties": {
                  "access": "Deny",
                  "description": "Deny all outbound traffic",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65500,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              }
            ],
            "provisioningState": "Succeeded",
            "securityRules": []
          },
          "type": "Microsoft.Network/networkSecurityGroups"
        }
      },
      "Create_network_security_group_with_rule": {
        "value": {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg",
          "location": "eastus",
          "name": "testnsg",
          "properties": {
            "defaultSecurityRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetInBound",
                "name": "AllowVnetInBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow inbound traffic from all VMs in VNET",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65000,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                "name": "AllowAzureLoadBalancerInBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow inbound traffic from azure load balancer",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65001,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "AzureLoadBalancer",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllInBound",
                "name": "DenyAllInBound",
                "properties": {
                  "access": "Deny",
                  "description": "Deny all inbound traffic",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Inbound",
                  "priority": 65500,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetOutBound",
                "name": "AllowVnetOutBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65000,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "VirtualNetwork",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowInternetOutBound",
                "name": "AllowInternetOutBound",
                "properties": {
                  "access": "Allow",
                  "description": "Allow outbound traffic from all VMs to Internet",
                  "destinationAddressPrefix": "Internet",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65001,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllOutBound",
                "name": "DenyAllOutBound",
                "properties": {
                  "access": "Deny",
                  "description": "Deny all outbound traffic",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "*",
                  "direction": "Outbound",
                  "priority": 65500,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              }
            ],
            "provisioningState": "Succeeded",
            "securityRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/securityRules/rule1",
                "name": "rule1",
                "properties": {
                  "access": "Allow",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "80",
                  "direction": "Inbound",
                  "priority": 130,
                  "protocol": "*",
                  "provisioningState": "Succeeded",
                  "sourceAddressPrefix": "*",
                  "sourcePortRange": "*"
                }
              }
            ]
          },
          "type": "Microsoft.Network/networkSecurityGroups"
        }
      },
      "DefaultSecurityRuleList": {
        "value": {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowVnetInBound",
              "name": "AllowVnetInBound",
              "properties": {
                "access": "Allow",
                "description": "Allow inbound traffic from all VMs in VNET",
                "destinationAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefixes": [],
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 65000,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "VirtualNetwork",
                "sourceAddressPrefixes": [],
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowAzureLoadBalancerInBound",
              "name": "AllowAzureLoadBalancerInBound",
              "properties": {
                "access": "Allow",
                "description": "Allow inbound traffic from azure load balancer",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 65001,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "sourceAddressPrefixes": [],
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/DenyAllInBound",
              "name": "DenyAllInBound",
              "properties": {
                "access": "Deny",
                "description": "Deny all inbound traffic",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 65500,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "*",
                "sourceAddressPrefixes": [],
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowVnetOutBound",
              "name": "AllowVnetOutBound",
              "properties": {
                "access": "Allow",
                "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                "destinationAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefixes": [],
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Outbound",
                "priority": 65000,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "VirtualNetwork",
                "sourceAddressPrefixes": [],
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowInternetOutBound",
              "name": "AllowInternetOutBound",
              "properties": {
                "access": "Allow",
                "description": "Allow outbound traffic from all VMs to Internet",
                "destinationAddressPrefix": "Internet",
                "destinationAddressPrefixes": [],
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Outbound",
                "priority": 65001,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "*",
                "sourceAddressPrefixes": [],
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/DenyAllOutBound",
              "name": "DenyAllOutBound",
              "properties": {
                "access": "Deny",
                "description": "Deny all outbound traffic",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Outbound",
                "priority": 65500,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "*",
                "sourceAddressPrefixes": [],
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            }
          ]
        }
      },
      "DefaultSecurityRuleGet": {
        "value": {
          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowVnetInBound",
          "name": "AllowVnetInBound",
          "properties": {
            "access": "Allow",
            "description": "Allow inbound traffic from all VMs in VNET",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "priority": 65000,
            "protocol": "*",
            "provisioningState": "Succeeded",
            "sourceAddressPrefix": "VirtualNetwork",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          }
        }
      },
      "List_network_security_rules_in_network_security_group": {
        "value": {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/securityRules/rule1",
              "name": "rule1",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "80",
                "direction": "Inbound",
                "priority": 130,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              }
            }
          ]
        }
      },
      "Get_network_security_rule_in_network_security_group": {
        "value": {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/securityRules/rule1",
          "name": "rule1",
          "properties": {
            "access": "Allow",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "80",
            "direction": "Inbound",
            "priority": 130,
            "protocol": "*",
            "provisioningState": "Succeeded",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*"
          }
        }
      },
      "Create_security_rule": {
        "value": {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/securityRules/rule1",
          "name": "rule1",
          "properties": {
            "access": "Deny",
            "destinationAddressPrefix": "11.0.0.0/8",
            "destinationPortRange": "8080",
            "direction": "Outbound",
            "priority": 100,
            "protocol": "*",
            "provisioningState": "Succeeded",
            "sourceAddressPrefix": "10.0.0.0/8",
            "sourcePortRange": "*"
          }
        }
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": { "user_impersonation": "impersonate your user account" }
          }
        }
      }
    },
    "schemas": {
      "NetworkSecurityGroup": {
        "allOf": [
          {
            "description": "Common resource representation.",
            "properties": {
              "id": { "description": "Resource ID.", "type": "string" },
              "location": { "description": "Resource location.", "type": "string" },
              "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
              "tags": {
                "additionalProperties": { "type": "string" },
                "description": "Resource tags.",
                "type": "object"
              },
              "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
            },
            "x-ms-azure-resource": true
          }
        ],
        "description": "NetworkSecurityGroup resource.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/NetworkSecurityGroupPropertiesFormat" }
        }
      },
      "NetworkSecurityGroupListResult": {
        "description": "Response for ListNetworkSecurityGroups API service call.",
        "properties": {
          "nextLink": { "description": "The URL to get the next set of results.", "type": "string" },
          "value": {
            "description": "A list of NetworkSecurityGroup resources.",
            "items": { "$ref": "#/components/schemas/NetworkSecurityGroup" },
            "type": "array"
          }
        }
      },
      "NetworkSecurityGroupPropertiesFormat": {
        "description": "Network Security Group resource.",
        "properties": {
          "defaultSecurityRules": {
            "description": "The default security rules of network security group.",
            "items": {
              "allOf": [
                {
                  "description": "Reference to another subresource.",
                  "properties": { "id": { "description": "Resource ID.", "type": "string" } },
                  "x-ms-azure-resource": true
                }
              ],
              "description": "Network security rule.",
              "properties": {
                "etag": {
                  "description": "A unique read-only string that changes whenever the resource is updated.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                  "type": "string"
                },
                "properties": {
                  "description": "Security rule resource.",
                  "properties": {
                    "access": {
                      "description": "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
                      "enum": ["Allow", "Deny"],
                      "type": "string",
                      "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleAccess" }
                    },
                    "description": {
                      "description": "A description for this rule. Restricted to 140 chars.",
                      "type": "string"
                    },
                    "destinationAddressPrefix": {
                      "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
                      "type": "string"
                    },
                    "destinationAddressPrefixes": {
                      "description": "The destination address prefixes. CIDR or destination IP ranges.",
                      "items": { "type": "string" },
                      "type": "array"
                    },
                    "destinationApplicationSecurityGroups": {
                      "description": "The application security group specified as destination.",
                      "items": {
                        "allOf": [
                          {
                            "description": "Common resource representation.",
                            "properties": {
                              "id": { "description": "Resource ID.", "type": "string" },
                              "location": { "description": "Resource location.", "type": "string" },
                              "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
                              "tags": {
                                "additionalProperties": { "type": "string" },
                                "description": "Resource tags.",
                                "type": "object"
                              },
                              "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
                            },
                            "x-ms-azure-resource": true
                          }
                        ],
                        "description": "An application security group in a resource group.",
                        "properties": {
                          "etag": {
                            "description": "A unique read-only string that changes whenever the resource is updated.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "properties": {
                            "description": "Application security group properties.",
                            "properties": {
                              "provisioningState": {
                                "description": "The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "resourceGuid": {
                                "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
                                "readOnly": true,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "type": "array"
                    },
                    "destinationPortRange": {
                      "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
                      "type": "string"
                    },
                    "destinationPortRanges": {
                      "description": "The destination port ranges.",
                      "items": { "description": "The destination port.", "type": "string" },
                      "type": "array"
                    },
                    "direction": {
                      "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.",
                      "enum": ["Inbound", "Outbound"],
                      "type": "string",
                      "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleDirection" }
                    },
                    "priority": {
                      "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "protocol": {
                      "description": "Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.",
                      "enum": ["Tcp", "Udp", "*"],
                      "type": "string",
                      "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleProtocol" }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
                      "type": "string"
                    },
                    "sourceAddressPrefix": {
                      "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                      "type": "string"
                    },
                    "sourceAddressPrefixes": {
                      "description": "The CIDR or source IP ranges.",
                      "items": { "type": "string" },
                      "type": "array"
                    },
                    "sourceApplicationSecurityGroups": {
                      "description": "The application security group specified as source.",
                      "items": {
                        "allOf": [
                          {
                            "description": "Common resource representation.",
                            "properties": {
                              "id": { "description": "Resource ID.", "type": "string" },
                              "location": { "description": "Resource location.", "type": "string" },
                              "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
                              "tags": {
                                "additionalProperties": { "type": "string" },
                                "description": "Resource tags.",
                                "type": "object"
                              },
                              "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
                            },
                            "x-ms-azure-resource": true
                          }
                        ],
                        "description": "An application security group in a resource group.",
                        "properties": {
                          "etag": {
                            "description": "A unique read-only string that changes whenever the resource is updated.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "properties": {
                            "description": "Application security group properties.",
                            "properties": {
                              "provisioningState": {
                                "description": "The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "resourceGuid": {
                                "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
                                "readOnly": true,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "type": "array"
                    },
                    "sourcePortRange": {
                      "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
                      "type": "string"
                    },
                    "sourcePortRanges": {
                      "description": "The source port ranges.",
                      "items": { "description": "The source port.", "type": "string" },
                      "type": "array"
                    }
                  },
                  "required": ["protocol", "access", "direction"]
                }
              }
            },
            "type": "array"
          },
          "networkInterfaces": {
            "description": "A collection of references to network interfaces.",
            "items": { "$ref": "./networkInterface.json#/definitions/NetworkInterface" },
            "readOnly": true,
            "type": "array"
          },
          "provisioningState": {
            "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "resourceGuid": {
            "description": "The resource GUID property of the network security group resource.",
            "type": "string"
          },
          "securityRules": {
            "description": "A collection of security rules of the network security group.",
            "items": {
              "allOf": [
                {
                  "description": "Reference to another subresource.",
                  "properties": { "id": { "description": "Resource ID.", "type": "string" } },
                  "x-ms-azure-resource": true
                }
              ],
              "description": "Network security rule.",
              "properties": {
                "etag": {
                  "description": "A unique read-only string that changes whenever the resource is updated.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                  "type": "string"
                },
                "properties": {
                  "description": "Security rule resource.",
                  "properties": {
                    "access": {
                      "description": "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
                      "enum": ["Allow", "Deny"],
                      "type": "string",
                      "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleAccess" }
                    },
                    "description": {
                      "description": "A description for this rule. Restricted to 140 chars.",
                      "type": "string"
                    },
                    "destinationAddressPrefix": {
                      "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
                      "type": "string"
                    },
                    "destinationAddressPrefixes": {
                      "description": "The destination address prefixes. CIDR or destination IP ranges.",
                      "items": { "type": "string" },
                      "type": "array"
                    },
                    "destinationApplicationSecurityGroups": {
                      "description": "The application security group specified as destination.",
                      "items": {
                        "allOf": [
                          {
                            "description": "Common resource representation.",
                            "properties": {
                              "id": { "description": "Resource ID.", "type": "string" },
                              "location": { "description": "Resource location.", "type": "string" },
                              "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
                              "tags": {
                                "additionalProperties": { "type": "string" },
                                "description": "Resource tags.",
                                "type": "object"
                              },
                              "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
                            },
                            "x-ms-azure-resource": true
                          }
                        ],
                        "description": "An application security group in a resource group.",
                        "properties": {
                          "etag": {
                            "description": "A unique read-only string that changes whenever the resource is updated.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "properties": {
                            "description": "Application security group properties.",
                            "properties": {
                              "provisioningState": {
                                "description": "The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "resourceGuid": {
                                "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
                                "readOnly": true,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "type": "array"
                    },
                    "destinationPortRange": {
                      "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
                      "type": "string"
                    },
                    "destinationPortRanges": {
                      "description": "The destination port ranges.",
                      "items": { "description": "The destination port.", "type": "string" },
                      "type": "array"
                    },
                    "direction": {
                      "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.",
                      "enum": ["Inbound", "Outbound"],
                      "type": "string",
                      "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleDirection" }
                    },
                    "priority": {
                      "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "protocol": {
                      "description": "Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.",
                      "enum": ["Tcp", "Udp", "*"],
                      "type": "string",
                      "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleProtocol" }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
                      "type": "string"
                    },
                    "sourceAddressPrefix": {
                      "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                      "type": "string"
                    },
                    "sourceAddressPrefixes": {
                      "description": "The CIDR or source IP ranges.",
                      "items": { "type": "string" },
                      "type": "array"
                    },
                    "sourceApplicationSecurityGroups": {
                      "description": "The application security group specified as source.",
                      "items": {
                        "allOf": [
                          {
                            "description": "Common resource representation.",
                            "properties": {
                              "id": { "description": "Resource ID.", "type": "string" },
                              "location": { "description": "Resource location.", "type": "string" },
                              "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
                              "tags": {
                                "additionalProperties": { "type": "string" },
                                "description": "Resource tags.",
                                "type": "object"
                              },
                              "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
                            },
                            "x-ms-azure-resource": true
                          }
                        ],
                        "description": "An application security group in a resource group.",
                        "properties": {
                          "etag": {
                            "description": "A unique read-only string that changes whenever the resource is updated.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "properties": {
                            "description": "Application security group properties.",
                            "properties": {
                              "provisioningState": {
                                "description": "The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "resourceGuid": {
                                "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
                                "readOnly": true,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "type": "array"
                    },
                    "sourcePortRange": {
                      "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
                      "type": "string"
                    },
                    "sourcePortRanges": {
                      "description": "The source port ranges.",
                      "items": { "description": "The source port.", "type": "string" },
                      "type": "array"
                    }
                  },
                  "required": ["protocol", "access", "direction"]
                }
              }
            },
            "type": "array"
          },
          "subnets": {
            "description": "A collection of references to subnets.",
            "items": { "$ref": "./virtualNetwork.json#/definitions/Subnet" },
            "readOnly": true,
            "type": "array"
          }
        }
      },
      "SecurityRule": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Network security rule.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "type": "string"
          },
          "properties": {
            "description": "Security rule resource.",
            "properties": {
              "access": {
                "description": "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
                "enum": ["Allow", "Deny"],
                "type": "string",
                "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleAccess" }
              },
              "description": {
                "description": "A description for this rule. Restricted to 140 chars.",
                "type": "string"
              },
              "destinationAddressPrefix": {
                "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
                "type": "string"
              },
              "destinationAddressPrefixes": {
                "description": "The destination address prefixes. CIDR or destination IP ranges.",
                "items": { "type": "string" },
                "type": "array"
              },
              "destinationApplicationSecurityGroups": {
                "description": "The application security group specified as destination.",
                "items": {
                  "allOf": [
                    {
                      "description": "Common resource representation.",
                      "properties": {
                        "id": { "description": "Resource ID.", "type": "string" },
                        "location": { "description": "Resource location.", "type": "string" },
                        "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
                        "tags": {
                          "additionalProperties": { "type": "string" },
                          "description": "Resource tags.",
                          "type": "object"
                        },
                        "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
                      },
                      "x-ms-azure-resource": true
                    }
                  ],
                  "description": "An application security group in a resource group.",
                  "properties": {
                    "etag": {
                      "description": "A unique read-only string that changes whenever the resource is updated.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "properties": {
                      "description": "Application security group properties.",
                      "properties": {
                        "provisioningState": {
                          "description": "The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "resourceGuid": {
                          "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "type": "array"
              },
              "destinationPortRange": {
                "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
                "type": "string"
              },
              "destinationPortRanges": {
                "description": "The destination port ranges.",
                "items": { "description": "The destination port.", "type": "string" },
                "type": "array"
              },
              "direction": {
                "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.",
                "enum": ["Inbound", "Outbound"],
                "type": "string",
                "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleDirection" }
              },
              "priority": {
                "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                "format": "int32",
                "type": "integer"
              },
              "protocol": {
                "description": "Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.",
                "enum": ["Tcp", "Udp", "*"],
                "type": "string",
                "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleProtocol" }
              },
              "provisioningState": {
                "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
                "type": "string"
              },
              "sourceAddressPrefix": {
                "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                "type": "string"
              },
              "sourceAddressPrefixes": {
                "description": "The CIDR or source IP ranges.",
                "items": { "type": "string" },
                "type": "array"
              },
              "sourceApplicationSecurityGroups": {
                "description": "The application security group specified as source.",
                "items": {
                  "allOf": [
                    {
                      "description": "Common resource representation.",
                      "properties": {
                        "id": { "description": "Resource ID.", "type": "string" },
                        "location": { "description": "Resource location.", "type": "string" },
                        "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
                        "tags": {
                          "additionalProperties": { "type": "string" },
                          "description": "Resource tags.",
                          "type": "object"
                        },
                        "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
                      },
                      "x-ms-azure-resource": true
                    }
                  ],
                  "description": "An application security group in a resource group.",
                  "properties": {
                    "etag": {
                      "description": "A unique read-only string that changes whenever the resource is updated.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "properties": {
                      "description": "Application security group properties.",
                      "properties": {
                        "provisioningState": {
                          "description": "The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "resourceGuid": {
                          "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "type": "array"
              },
              "sourcePortRange": {
                "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
                "type": "string"
              },
              "sourcePortRanges": {
                "description": "The source port ranges.",
                "items": { "description": "The source port.", "type": "string" },
                "type": "array"
              }
            },
            "required": ["protocol", "access", "direction"]
          }
        }
      },
      "SecurityRuleListResult": {
        "description": "Response for ListSecurityRule API service call. Retrieves all security rules that belongs to a network security group.",
        "properties": {
          "nextLink": { "description": "The URL to get the next set of results.", "type": "string" },
          "value": {
            "description": "The security rules in a network security group.",
            "items": { "$ref": "#/components/schemas/SecurityRule" },
            "type": "array"
          }
        }
      },
      "SecurityRulePropertiesFormat": {
        "description": "Security rule resource.",
        "properties": {
          "access": {
            "description": "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
            "enum": ["Allow", "Deny"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleAccess" }
          },
          "description": { "description": "A description for this rule. Restricted to 140 chars.", "type": "string" },
          "destinationAddressPrefix": {
            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
            "type": "string"
          },
          "destinationAddressPrefixes": {
            "description": "The destination address prefixes. CIDR or destination IP ranges.",
            "items": { "type": "string" },
            "type": "array"
          },
          "destinationApplicationSecurityGroups": {
            "description": "The application security group specified as destination.",
            "items": {
              "allOf": [
                {
                  "description": "Common resource representation.",
                  "properties": {
                    "id": { "description": "Resource ID.", "type": "string" },
                    "location": { "description": "Resource location.", "type": "string" },
                    "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
                    "tags": {
                      "additionalProperties": { "type": "string" },
                      "description": "Resource tags.",
                      "type": "object"
                    },
                    "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
                  },
                  "x-ms-azure-resource": true
                }
              ],
              "description": "An application security group in a resource group.",
              "properties": {
                "etag": {
                  "description": "A unique read-only string that changes whenever the resource is updated.",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "description": "Application security group properties.",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "resourceGuid": {
                      "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
                      "readOnly": true,
                      "type": "string"
                    }
                  }
                }
              }
            },
            "type": "array"
          },
          "destinationPortRange": {
            "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
            "type": "string"
          },
          "destinationPortRanges": {
            "description": "The destination port ranges.",
            "items": { "description": "The destination port.", "type": "string" },
            "type": "array"
          },
          "direction": {
            "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.",
            "enum": ["Inbound", "Outbound"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleDirection" }
          },
          "priority": {
            "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "description": "Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.",
            "enum": ["Tcp", "Udp", "*"],
            "type": "string",
            "x-ms-enum": { "modelAsString": true, "name": "SecurityRuleProtocol" }
          },
          "provisioningState": {
            "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "sourceAddressPrefix": {
            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
            "type": "string"
          },
          "sourceAddressPrefixes": {
            "description": "The CIDR or source IP ranges.",
            "items": { "type": "string" },
            "type": "array"
          },
          "sourceApplicationSecurityGroups": {
            "description": "The application security group specified as source.",
            "items": {
              "allOf": [
                {
                  "description": "Common resource representation.",
                  "properties": {
                    "id": { "description": "Resource ID.", "type": "string" },
                    "location": { "description": "Resource location.", "type": "string" },
                    "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
                    "tags": {
                      "additionalProperties": { "type": "string" },
                      "description": "Resource tags.",
                      "type": "object"
                    },
                    "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
                  },
                  "x-ms-azure-resource": true
                }
              ],
              "description": "An application security group in a resource group.",
              "properties": {
                "etag": {
                  "description": "A unique read-only string that changes whenever the resource is updated.",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "description": "Application security group properties.",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "resourceGuid": {
                      "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.",
                      "readOnly": true,
                      "type": "string"
                    }
                  }
                }
              }
            },
            "type": "array"
          },
          "sourcePortRange": {
            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
            "type": "string"
          },
          "sourcePortRanges": {
            "description": "The source port ranges.",
            "items": { "description": "The source port.", "type": "string" },
            "type": "array"
          }
        },
        "required": ["protocol", "access", "direction"]
      }
    }
  }
}
