{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Marketplace Entitlement Service</fullname> <p>This reference provides descriptions of the AWS Marketplace Entitlement Service API.</p> <p>AWS Marketplace Entitlement Service is used to determine the entitlement of a customer to a given product. An entitlement represents capacity in a product owned by the customer. For example, a customer might own some number of users or seats in an SaaS application or some amount of data capacity in a multi-tenant database.</p> <p> <b>Getting Entitlement Records</b> </p> <ul> <li> <p> <i>GetEntitlements</i>- Gets the entitlements for a Marketplace product.</p> </li> </ul>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Marketplace Entitlement Service",
    "version": "2017-01-11",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/entitlement.marketplace-2017-01-11.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "entitlement.marketplace"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/marketplace/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=AWSMPEntitlementService.GetEntitlements": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "GetEntitlements retrieves entitlement values for a given product. The results can be filtered based on customer identifier or product dimensions.",
        "operationId": "GetEntitlements",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSMPEntitlementService.GetEntitlements"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetEntitlementsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetEntitlementsResult" } } }
          },
          "480": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "481": {
            "description": "ThrottlingException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ThrottlingException" } } }
          },
          "482": {
            "description": "InternalServiceErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InternalServiceErrorException" } }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The AWS Marketplace Entitlement Service multi-region endpoint",
      "url": "http://entitlement.marketplace.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS Marketplace Entitlement Service multi-region endpoint",
      "url": "https://entitlement.marketplace.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS Marketplace Entitlement Service endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://entitlement.marketplace.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The AWS Marketplace Entitlement Service endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://entitlement.marketplace.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "Boolean": { "type": "boolean" },
      "Double": { "format": "double", "type": "number" },
      "Entitlement": {
        "description": "An entitlement represents capacity in a product owned by the customer. For example, a customer might own some number of users or seats in an SaaS application or some amount of data capacity in a multi-tenant database.",
        "properties": {
          "CustomerIdentifier": { "$ref": "#/components/schemas/NonEmptyString" },
          "Dimension": { "$ref": "#/components/schemas/NonEmptyString" },
          "ExpirationDate": { "$ref": "#/components/schemas/Timestamp" },
          "ProductCode": { "$ref": "#/components/schemas/ProductCode" },
          "Value": { "$ref": "#/components/schemas/EntitlementValue" }
        },
        "type": "object"
      },
      "EntitlementList": { "items": { "$ref": "#/components/schemas/Entitlement" }, "minItems": 0, "type": "array" },
      "EntitlementValue": {
        "description": "The EntitlementValue represents the amount of capacity that the customer is entitled to for the product.",
        "properties": {
          "BooleanValue": { "$ref": "#/components/schemas/Boolean" },
          "DoubleValue": { "$ref": "#/components/schemas/Double" },
          "IntegerValue": { "$ref": "#/components/schemas/Integer" },
          "StringValue": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ErrorMessage": { "type": "string" },
      "FilterValue": { "type": "string" },
      "FilterValueList": { "items": { "$ref": "#/components/schemas/FilterValue" }, "minItems": 1, "type": "array" },
      "GetEntitlementFilterName": { "enum": ["CUSTOMER_IDENTIFIER", "DIMENSION"], "type": "string" },
      "GetEntitlementFilters": {
        "additionalProperties": { "$ref": "#/components/schemas/FilterValueList" },
        "type": "object"
      },
      "GetEntitlementsRequest": {
        "description": "The GetEntitlementsRequest contains parameters for the GetEntitlements operation.",
        "properties": {
          "Filter": { "$ref": "#/components/schemas/GetEntitlementFilters" },
          "MaxResults": { "$ref": "#/components/schemas/Integer" },
          "NextToken": { "$ref": "#/components/schemas/NonEmptyString" },
          "ProductCode": { "$ref": "#/components/schemas/ProductCode" }
        },
        "required": ["ProductCode"],
        "type": "object"
      },
      "GetEntitlementsResult": {
        "description": "The GetEntitlementsRequest contains results from the GetEntitlements operation.",
        "properties": {
          "Entitlements": { "$ref": "#/components/schemas/EntitlementList" },
          "NextToken": { "$ref": "#/components/schemas/NonEmptyString" }
        },
        "type": "object"
      },
      "Integer": { "type": "integer" },
      "InternalServiceErrorException": {
        "description": "An internal error has occurred. Retry your request. If the problem persists, post a message with details on the AWS forums.",
        "properties": { "message": { "$ref": "#/components/schemas/ErrorMessage" } },
        "type": "object"
      },
      "InvalidParameterException": {
        "description": "One or more parameters in your request was invalid.",
        "properties": { "message": { "$ref": "#/components/schemas/ErrorMessage" } },
        "type": "object"
      },
      "NonEmptyString": { "pattern": "\\S+", "type": "string" },
      "ProductCode": { "maxLength": 255, "minLength": 1, "type": "string" },
      "String": { "type": "string" },
      "ThrottlingException": {
        "description": "The calls to the GetEntitlements API are throttled.",
        "properties": { "message": { "$ref": "#/components/schemas/ErrorMessage" } },
        "type": "object"
      },
      "Timestamp": { "format": "date-time", "type": "string" }
    }
  }
}
