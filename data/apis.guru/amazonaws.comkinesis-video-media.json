{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p/>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Kinesis Video Streams Media",
    "version": "2017-09-30",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kinesis-video-media-2017-09-30.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "kinesis-video-media"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/kinesisvideo/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/getMedia": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p> Use this API to retrieve media content from a Kinesis video stream. In the request, you identify the stream name or stream Amazon Resource Name (ARN), and the starting chunk. Kinesis Video Streams then returns a stream of chunks in order by fragment number.</p> <note> <p>You must first call the <code>GetDataEndpoint</code> API to get an endpoint. Then send the <code>GetMedia</code> requests to this endpoint using the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/\">--endpoint-url parameter</a>. </p> </note> <p>When you put media data (fragments) on a stream, Kinesis Video Streams stores each incoming fragment and related metadata in what is called a \"chunk.\" For more information, see <a href=\"https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_dataplane_PutMedia.html\">PutMedia</a>. The <code>GetMedia</code> API returns a stream of these chunks starting from the chunk that you specify in the request. </p> <p>The following limits apply when using the <code>GetMedia</code> API:</p> <ul> <li> <p>A client can call <code>GetMedia</code> up to five times per second per stream. </p> </li> <li> <p>Kinesis Video Streams sends media data at a rate of up to 25 megabytes per second (or 200 megabits per second) during a <code>GetMedia</code> session. </p> </li> </ul> <note> <p>If an error is thrown after invoking a Kinesis Video Streams media API, in addition to the HTTP status code and the response body, it includes the following pieces of information: </p> <ul> <li> <p> <code>x-amz-ErrorType</code> HTTP header – contains a more specific error type in addition to what the HTTP status code provides. </p> </li> <li> <p> <code>x-amz-RequestId</code> HTTP header – if you want to report an issue to AWS, the support team can better diagnose the problem if given the Request Id.</p> </li> </ul> <p>Both the HTTP status code and the ErrorType header can be utilized to make programmatic decisions about whether errors are retry-able and under what conditions, as well as provide information on what actions the client programmer might need to take in order to successfully try again.</p> <p>For more information, see the <b>Errors</b> section at the bottom of this topic, as well as <a href=\"https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/CommonErrors.html\">Common Errors</a>. </p> </note>",
        "operationId": "GetMedia",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "StartSelector": {
                    "description": "<p>Identifies the chunk on the Kinesis video stream where you want the <code>GetMedia</code> API to start returning media data. You have the following options to identify the starting chunk: </p> <ul> <li> <p>Choose the latest (or oldest) chunk.</p> </li> <li> <p>Identify a specific chunk. You can identify a specific chunk either by providing a fragment number or timestamp (server or producer). </p> </li> <li> <p>Each chunk's metadata includes a continuation token as a Matroska (MKV) tag (<code>AWS_KINESISVIDEO_CONTINUATION_TOKEN</code>). If your previous <code>GetMedia</code> request terminated, you can use this tag value in your next <code>GetMedia</code> request. The API then starts returning chunks starting where the last API ended.</p> </li> </ul>",
                    "properties": {
                      "AfterFragmentNumber": { "$ref": "#/components/schemas/FragmentNumberString" },
                      "ContinuationToken": { "$ref": "#/components/schemas/ContinuationToken" },
                      "StartSelectorType": { "$ref": "#/components/schemas/StartSelectorType" },
                      "StartTimestamp": { "$ref": "#/components/schemas/Timestamp" }
                    },
                    "type": "object"
                  },
                  "StreamARN": {
                    "description": "The ARN of the stream from where you want to get the media content. If you don't specify the <code>streamARN</code>, you must specify the <code>streamName</code>.",
                    "maxLength": 1024,
                    "minLength": 1,
                    "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                    "type": "string"
                  },
                  "StreamName": {
                    "description": "The Kinesis video stream name from where you want to get the media content. If you don't specify the <code>streamName</code>, you must specify the <code>streamARN</code>.",
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_.-]+",
                    "type": "string"
                  }
                },
                "required": ["StartSelector"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetMediaOutput" } } }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "481": {
            "description": "NotAuthorizedException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotAuthorizedException" } } }
          },
          "482": {
            "description": "InvalidEndpointException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidEndpointException" } } }
          },
          "483": {
            "description": "ClientLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ClientLimitExceededException" } }
            }
          },
          "484": {
            "description": "ConnectionLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ConnectionLimitExceededException" } }
            }
          },
          "485": {
            "description": "InvalidArgumentException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidArgumentException" } } }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The Kinesis Video Media multi-region endpoint",
      "url": "http://kinesisvideo.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Kinesis Video Media multi-region endpoint",
      "url": "https://kinesisvideo.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Kinesis Video Media endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://kinesisvideo.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Kinesis Video Media endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://kinesisvideo.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "ClientLimitExceededException": {},
      "ConnectionLimitExceededException": {},
      "ContentType": { "maxLength": 128, "minLength": 1, "pattern": "^[a-zA-Z0-9_\\.\\-]+$", "type": "string" },
      "ContinuationToken": { "maxLength": 128, "minLength": 1, "pattern": "^[a-zA-Z0-9_\\.\\-]+$", "type": "string" },
      "FragmentNumberString": { "maxLength": 128, "minLength": 1, "pattern": "^[0-9]+$", "type": "string" },
      "GetMediaInput": {
        "properties": {
          "StartSelector": { "$ref": "#/components/schemas/StartSelector" },
          "StreamARN": { "$ref": "#/components/schemas/ResourceARN" },
          "StreamName": { "$ref": "#/components/schemas/StreamName" }
        },
        "required": ["StartSelector"],
        "type": "object"
      },
      "GetMediaOutput": { "properties": { "Payload": { "$ref": "#/components/schemas/Payload" } }, "type": "object" },
      "InvalidArgumentException": {},
      "InvalidEndpointException": {},
      "NotAuthorizedException": {},
      "Payload": { "type": "string" },
      "ResourceARN": {
        "maxLength": 1024,
        "minLength": 1,
        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
        "type": "string"
      },
      "ResourceNotFoundException": {},
      "StartSelector": {
        "description": "<p>Identifies the chunk on the Kinesis video stream where you want the <code>GetMedia</code> API to start returning media data. You have the following options to identify the starting chunk: </p> <ul> <li> <p>Choose the latest (or oldest) chunk.</p> </li> <li> <p>Identify a specific chunk. You can identify a specific chunk either by providing a fragment number or timestamp (server or producer). </p> </li> <li> <p>Each chunk's metadata includes a continuation token as a Matroska (MKV) tag (<code>AWS_KINESISVIDEO_CONTINUATION_TOKEN</code>). If your previous <code>GetMedia</code> request terminated, you can use this tag value in your next <code>GetMedia</code> request. The API then starts returning chunks starting where the last API ended.</p> </li> </ul>",
        "properties": {
          "AfterFragmentNumber": { "$ref": "#/components/schemas/FragmentNumberString" },
          "ContinuationToken": { "$ref": "#/components/schemas/ContinuationToken" },
          "StartSelectorType": { "$ref": "#/components/schemas/StartSelectorType" },
          "StartTimestamp": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["StartSelectorType"],
        "type": "object"
      },
      "StartSelectorType": {
        "enum": ["FRAGMENT_NUMBER", "SERVER_TIMESTAMP", "PRODUCER_TIMESTAMP", "NOW", "EARLIEST", "CONTINUATION_TOKEN"],
        "type": "string"
      },
      "StreamName": { "maxLength": 256, "minLength": 1, "pattern": "[a-zA-Z0-9_.-]+", "type": "string" },
      "Timestamp": { "format": "date-time", "type": "string" }
    }
  }
}
