{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "title": "NetworkManagementClient",
    "version": "2019-06-01",
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2019-06-01/privateEndpoint.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "azure.com",
    "x-serviceName": "network-privateEndpoint",
    "x-tags": ["Azure", "Microsoft"]
  },
  "security": [{ "azure_auth": ["user_impersonation"] }],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availablePrivateEndpointTypes": {
      "get": {
        "description": "Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.",
        "operationId": "AvailablePrivateEndpointTypes_List",
        "parameters": [
          {
            "description": "The location of the domain name.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get available PrivateEndpoint types": { "value": "regionName" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get available PrivateEndpoint types": { "value": "2019-06-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get available PrivateEndpoint types": { "value": "subId" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AvailablePrivateEndpointTypesResult" },
                "examples": {
                  "Get available PrivateEndpoint types": {
                    "$ref": "#/components/examples/Get_available_PrivateEndpoint_types"
                  }
                }
              }
            }
          }
        },
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateEndpoints": {
      "get": {
        "description": "Gets all private endpoints in a subscription.",
        "operationId": "PrivateEndpoints_ListBySubscription",
        "parameters": [
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List all private endpoints": { "value": "2019-06-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List all private endpoints": { "value": "subId" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of private endpoint resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PrivateEndpointListResult" },
                "examples": {
                  "List all private endpoints": { "$ref": "#/components/examples/List_all_private_endpoints" }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Common error representation.",
                  "properties": {
                    "code": { "description": "Error code.", "type": "string" },
                    "details": {
                      "description": "Error details.",
                      "items": {
                        "description": "Common error details representation.",
                        "properties": {
                          "code": { "description": "Error code.", "type": "string" },
                          "message": { "description": "Error message.", "type": "string" },
                          "target": { "description": "Error target.", "type": "string" }
                        }
                      },
                      "type": "array"
                    },
                    "innerError": { "description": "Inner error message.", "type": "string" },
                    "message": { "description": "Error message.", "type": "string" },
                    "target": { "description": "Error target.", "type": "string" }
                  }
                }
              }
            }
          }
        },
        "tags": ["PrivateEndpoints"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availablePrivateEndpointTypes": {
      "get": {
        "description": "Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.",
        "operationId": "AvailablePrivateEndpointTypes_ListByResourceGroup",
        "parameters": [
          {
            "description": "The location of the domain name.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get available PrivateEndpoint types in the resource group": { "value": "regionName" } }
          },
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get available PrivateEndpoint types in the resource group": { "value": "rg1" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get available PrivateEndpoint types in the resource group": { "value": "subId" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Get available PrivateEndpoint types in the resource group": { "value": "2019-06-01" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AvailablePrivateEndpointTypesResult" },
                "examples": {
                  "Get available PrivateEndpoint types in the resource group": {
                    "$ref": "#/components/examples/Get_available_PrivateEndpoint_types_in_the_resource_group"
                  }
                }
              }
            }
          }
        },
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints": {
      "get": {
        "description": "Gets all private endpoints in a resource group.",
        "operationId": "PrivateEndpoints_List",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List private endpoints in resource group": { "value": "rg1" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List private endpoints in resource group": { "value": "2019-06-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "List private endpoints in resource group": { "value": "subId" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of private endpoint resources.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PrivateEndpointListResult" },
                "examples": {
                  "List private endpoints in resource group": {
                    "$ref": "#/components/examples/List_private_endpoints_in_resource_group"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Common error representation.",
                  "properties": {
                    "code": { "description": "Error code.", "type": "string" },
                    "details": {
                      "description": "Error details.",
                      "items": {
                        "description": "Common error details representation.",
                        "properties": {
                          "code": { "description": "Error code.", "type": "string" },
                          "message": { "description": "Error message.", "type": "string" },
                          "target": { "description": "Error target.", "type": "string" }
                        }
                      },
                      "type": "array"
                    },
                    "innerError": { "description": "Inner error message.", "type": "string" },
                    "message": { "description": "Error message.", "type": "string" },
                    "target": { "description": "Error target.", "type": "string" }
                  }
                }
              }
            }
          }
        },
        "tags": ["PrivateEndpoints"],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}": {
      "delete": {
        "description": "Deletes the specified private endpoint.",
        "operationId": "PrivateEndpoints_Delete",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete private endpoint": { "value": "rg1" } }
          },
          {
            "description": "The name of the private endpoint.",
            "in": "path",
            "name": "privateEndpointName",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete private endpoint": { "value": "testPe" } }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete private endpoint": { "value": "2019-06-01" } }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": { "Delete private endpoint": { "value": "subId" } }
          }
        ],
        "responses": {
          "200": { "description": "Delete successful." },
          "202": { "description": "Accepted and the operation will complete asynchronously." },
          "204": { "description": "Delete successful." },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Common error representation.",
                  "properties": {
                    "code": { "description": "Error code.", "type": "string" },
                    "details": {
                      "description": "Error details.",
                      "items": {
                        "description": "Common error details representation.",
                        "properties": {
                          "code": { "description": "Error code.", "type": "string" },
                          "message": { "description": "Error message.", "type": "string" },
                          "target": { "description": "Error target.", "type": "string" }
                        }
                      },
                      "type": "array"
                    },
                    "innerError": { "description": "Inner error message.", "type": "string" },
                    "message": { "description": "Error message.", "type": "string" },
                    "target": { "description": "Error target.", "type": "string" }
                  }
                }
              }
            }
          }
        },
        "tags": ["PrivateEndpoints"],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": { "final-state-via": "location" }
      },
      "get": {
        "description": "Gets the specified private endpoint by resource group.",
        "operationId": "PrivateEndpoints_Get",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Get private endpoint": { "value": "rg1" },
              "Get private endpoint with manual approval connection": { "value": "rg1" }
            }
          },
          {
            "description": "The name of the private endpoint.",
            "in": "path",
            "name": "privateEndpointName",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Get private endpoint": { "value": "testPe" },
              "Get private endpoint with manual approval connection": { "value": "testPe" }
            }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Get private endpoint": { "value": "2019-06-01" },
              "Get private endpoint with manual approval connection": { "value": "2019-06-01" }
            }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Get private endpoint": { "value": "subId" },
              "Get private endpoint with manual approval connection": { "value": "subId" }
            }
          },
          {
            "description": "Expands referenced resources.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting private endpoint resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PrivateEndpoint" },
                "examples": {
                  "Get private endpoint": { "$ref": "#/components/examples/Get_private_endpoint" },
                  "Get private endpoint with manual approval connection": {
                    "$ref": "#/components/examples/Get_private_endpoint_with_manual_approval_connection"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Common error representation.",
                  "properties": {
                    "code": { "description": "Error code.", "type": "string" },
                    "details": {
                      "description": "Error details.",
                      "items": {
                        "description": "Common error details representation.",
                        "properties": {
                          "code": { "description": "Error code.", "type": "string" },
                          "message": { "description": "Error message.", "type": "string" },
                          "target": { "description": "Error target.", "type": "string" }
                        }
                      },
                      "type": "array"
                    },
                    "innerError": { "description": "Inner error message.", "type": "string" },
                    "message": { "description": "Error message.", "type": "string" },
                    "target": { "description": "Error target.", "type": "string" }
                  }
                }
              }
            }
          }
        },
        "tags": ["PrivateEndpoints"]
      },
      "put": {
        "description": "Creates or updates an private endpoint in the specified resource group.",
        "operationId": "PrivateEndpoints_CreateOrUpdate",
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Create private endpoint": { "value": "rg1" },
              "Create private endpoint with manual approval connection": { "value": "rg1" }
            }
          },
          {
            "description": "The name of the private endpoint.",
            "in": "path",
            "name": "privateEndpointName",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Create private endpoint": { "value": "testPe" },
              "Create private endpoint with manual approval connection": { "value": "testPe" }
            }
          },
          {
            "description": "Client API version.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Create private endpoint": { "value": "2019-06-01" },
              "Create private endpoint with manual approval connection": { "value": "2019-06-01" }
            }
          },
          {
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": { "type": "string" },
            "examples": {
              "Create private endpoint": { "value": "subId" },
              "Create private endpoint with manual approval connection": { "value": "subId" }
            }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PrivateEndpoint" } } },
          "description": "Parameters supplied to the create or update private endpoint operation.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting private endpoint resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PrivateEndpoint" },
                "examples": {
                  "Create private endpoint": { "$ref": "#/components/examples/Create_private_endpoint" },
                  "Create private endpoint with manual approval connection": {
                    "$ref": "#/components/examples/Create_private_endpoint_with_manual_approval_connection"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting private endpoint resource.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PrivateEndpoint" },
                "examples": {
                  "Create private endpoint": { "$ref": "#/components/examples/Create_private_endpoint" },
                  "Create private endpoint with manual approval connection": {
                    "$ref": "#/components/examples/Create_private_endpoint_with_manual_approval_connection"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Common error representation.",
                  "properties": {
                    "code": { "description": "Error code.", "type": "string" },
                    "details": {
                      "description": "Error details.",
                      "items": {
                        "description": "Common error details representation.",
                        "properties": {
                          "code": { "description": "Error code.", "type": "string" },
                          "message": { "description": "Error message.", "type": "string" },
                          "target": { "description": "Error target.", "type": "string" }
                        }
                      },
                      "type": "array"
                    },
                    "innerError": { "description": "Inner error message.", "type": "string" },
                    "message": { "description": "Error message.", "type": "string" },
                    "target": { "description": "Error target.", "type": "string" }
                  }
                }
              }
            }
          }
        },
        "tags": ["PrivateEndpoints"],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": { "final-state-via": "azure-async-operation" }
      }
    }
  },
  "servers": [{ "url": "https://management.azure.com" }],
  "components": {
    "examples": {
      "Get_available_PrivateEndpoint_types": {
        "value": {
          "value": [
            {
              "id": "/subscriptions/subId/providers/Microsoft.Network/availablePrivateEndpointTypes/Microsoft.Provider.resourceType",
              "resourceName": "Microsoft.Provider/resourceType",
              "type": "Microsoft.Network/availablePrivateEndpointTypes"
            }
          ]
        }
      },
      "List_all_private_endpoints": {
        "value": {
          "value": [
            {
              "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/pe1",
              "location": "eastus",
              "name": "pe1",
              "properties": {
                "networkInterfaces": [
                  {
                    "id": "/subscriptions/subId/resourceGroups/rg1/provders/Microsoft.Network/networkInterfaces/pe1.nic.abcd1234"
                  }
                ],
                "privateLinkServiceConnections": [
                  {
                    "properties": {
                      "groupIds": ["groupIdFromResource"],
                      "privateLinkServiceConnectionState": {
                        "actionRequired": "None",
                        "description": "Auto-approved",
                        "status": "Approved"
                      },
                      "privateLinkServiceId": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/testPls1",
                      "requestMessage": "Please approve my connection for pe1."
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "subnet": {
                  "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet"
                }
              },
              "type": "Microsoft.Network/privateEndpoints"
            },
            {
              "id": "/subscriptions/subId/resourceGroups/rg2/providers/Microsoft.Network/privateEndpoints/pe2",
              "location": "eastus",
              "name": "pe2",
              "properties": {
                "manualPrivateLinkServiceConnections": [
                  {
                    "properties": {
                      "groupIds": ["groupIdFromResource"],
                      "privateLinkServiceConnectionState": {
                        "actionRequired": "None",
                        "description": "Awaiting approval",
                        "status": "Pending"
                      },
                      "privateLinkServiceId": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/testPls2",
                      "requestMessage": "Please manually approve my connection for pe2."
                    }
                  }
                ],
                "networkInterfaces": [
                  {
                    "id": "/subscriptions/subId/resourceGroups/rg2/provders/Microsoft.Network/networkInterfaces/pe2.nic.zyxw9876"
                  }
                ],
                "privateLinkServiceConnections": [],
                "provisioningState": "Succeeded",
                "subnet": {
                  "id": "/subscriptions/subId/resourceGroups/rg2/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet2"
                }
              },
              "type": "Microsoft.Network/privateEndpoints"
            },
            {
              "id": "/subscriptions/subId/resourceGroups/rg3/providers/Microsoft.Network/privateEndpoints/pe3",
              "location": "eastus",
              "name": "pe3",
              "properties": {
                "networkInterfaces": [
                  {
                    "id": "/subscriptions/subId/resourceGroups/rg3/provders/Microsoft.Network/networkInterfaces/pe3.nic.efgh5463"
                  }
                ],
                "privateLinkServiceConnections": [
                  {
                    "properties": {
                      "groupIds": ["groupIdFromResource"],
                      "privateLinkServiceConnectionState": {
                        "actionRequired": "None",
                        "description": "Auto-approved",
                        "status": "Approved"
                      },
                      "privateLinkServiceId": "/subscriptions/subId/resourceGroups/rg3/providers/Microsoft.Network/privateLinkServices/testPls3",
                      "requestMessage": "Please approve my connection for pe3."
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "subnet": {
                  "id": "/subscriptions/subId/resourceGroups/rg3/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet3"
                }
              },
              "type": "Microsoft.Network/privateEndpoints"
            }
          ]
        }
      },
      "Get_available_PrivateEndpoint_types_in_the_resource_group": {
        "value": {
          "value": [
            {
              "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/availablePrivateEndpointTypes/Microsoft.Provider.resourceType",
              "resourceName": "Microsoft.Provider/resourceType",
              "type": "Microsoft.Network/availablePrivateEndpointTypes"
            }
          ]
        }
      },
      "List_private_endpoints_in_resource_group": {
        "value": {
          "value": [
            {
              "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/pe1",
              "location": "eastus",
              "name": "pe1",
              "properties": {
                "manualPrivateLinkServiceConnections": [],
                "networkInterfaces": [
                  {
                    "id": "/subscriptions/subId/resourceGroups/rg1/provders/Microsoft.Network/networkInterfaces/pe1.nic.abcd1234"
                  }
                ],
                "privateLinkServiceConnections": [
                  {
                    "properties": {
                      "groupIds": ["groupIdFromResource"],
                      "privateLinkServiceConnectionState": {
                        "actionRequired": "None",
                        "description": "Auto-approved",
                        "status": "Approved"
                      },
                      "privateLinkServiceId": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/testPls1",
                      "requestMessage": "Please approve my connection for pe1."
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "subnet": {
                  "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet"
                }
              },
              "type": "Microsoft.Network/privateEndpoints"
            },
            {
              "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/pe2",
              "location": "eastus",
              "name": "pe2",
              "properties": {
                "manualPrivateLinkServiceConnections": [
                  {
                    "properties": {
                      "groupIds": ["groupIdFromResource"],
                      "privateLinkServiceConnectionState": {
                        "actionRequired": "None",
                        "description": "Awaiting approval",
                        "status": "Pending"
                      },
                      "privateLinkServiceId": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/testPls2",
                      "requestMessage": "Please manually approve my connection for pe2."
                    }
                  }
                ],
                "networkInterfaces": [
                  {
                    "id": "/subscriptions/subId/resourceGroups/rg1/provders/Microsoft.Network/networkInterfaces/pe2.nic.zyxw9876"
                  }
                ],
                "privateLinkServiceConnections": [],
                "provisioningState": "Succeeded",
                "subnet": {
                  "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet2"
                }
              },
              "type": "Microsoft.Network/privateEndpoints"
            }
          ]
        }
      },
      "Get_private_endpoint": {
        "value": {
          "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/testPe",
          "location": "eastus",
          "name": "testPe",
          "properties": {
            "manualPrivateLinkServiceConnections": [],
            "networkInterfaces": [
              {
                "id": "/subscriptions/subId/resourceGroups/rg1/provders/Microsoft.Network/networkInterfaces/testPe.nic.abcd1234"
              }
            ],
            "privateLinkServiceConnections": [
              {
                "properties": {
                  "groupIds": ["groupIdFromResource"],
                  "privateLinkServiceConnectionState": {
                    "actionRequired": "None",
                    "description": "Auto-approved",
                    "status": "Approved"
                  },
                  "privateLinkServiceId": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/testPls",
                  "requestMessage": "Please approve my connection."
                }
              }
            ],
            "provisioningState": "Succeeded",
            "subnet": {
              "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet"
            }
          },
          "type": "Microsoft.Network/privateEndpoints"
        }
      },
      "Get_private_endpoint_with_manual_approval_connection": {
        "value": {
          "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/testPe",
          "location": "eastus",
          "name": "testPe",
          "properties": {
            "manualPrivateLinkServiceConnections": [
              {
                "properties": {
                  "groupIds": ["groupIdFromResource"],
                  "privateLinkServiceConnectionState": {
                    "actionRequired": "None",
                    "description": "Awaiting approval",
                    "status": "Pending"
                  },
                  "privateLinkServiceId": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/testPls",
                  "requestMessage": "Please manually approve my connection."
                }
              }
            ],
            "networkInterfaces": [
              {
                "id": "/subscriptions/subId/resourceGroups/rg1/provders/Microsoft.Network/networkInterfaces/testPe.nic.abcd1234"
              }
            ],
            "privateLinkServiceConnections": [],
            "provisioningState": "Succeeded",
            "subnet": {
              "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet"
            }
          },
          "type": "Microsoft.Network/privateEndpoints"
        }
      },
      "Create_private_endpoint": {
        "value": {
          "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/testPe",
          "location": "eastus2euap",
          "name": "testPe",
          "properties": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/subId/resourceGroups/rg1/provders/Microsoft.Network/networkInterfaces/testPe.nic.abcd1234"
              }
            ],
            "privateLinkServiceConnections": [
              {
                "properties": {
                  "groupIds": ["groupIdFromResource"],
                  "privateLinkServiceConnectionState": {
                    "actionRequired": "None",
                    "description": "Auto-approved",
                    "status": "Approved"
                  },
                  "privateLinkServiceId": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/testPls",
                  "requestMessage": "Please approve my connection."
                }
              }
            ],
            "provisioningState": "Succeeded",
            "subnet": {
              "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet"
            }
          }
        }
      },
      "Create_private_endpoint_with_manual_approval_connection": {
        "value": {
          "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/testPe",
          "location": "eastus",
          "name": "testPe",
          "properties": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/subId/resourceGroups/rg1/provders/Microsoft.Network/networkInterfaces/testPe.nic.abcd1234"
              }
            ],
            "privateLinkServiceConnections": [
              {
                "properties": {
                  "groupIds": ["groupIdFromResource"],
                  "privateLinkServiceConnectionState": {
                    "actionRequired": "None",
                    "description": "Auto-approved",
                    "status": "Approved"
                  },
                  "privateLinkServiceId": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/testPls",
                  "requestMessage": "Please approve my connection."
                }
              }
            ],
            "provisioningState": "Succeeded",
            "subnet": {
              "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": { "user_impersonation": "impersonate your user account" }
          }
        }
      }
    },
    "schemas": {
      "AvailablePrivateEndpointType": {
        "description": "The information of an AvailablePrivateEndpointType.",
        "properties": {
          "id": {
            "description": "A unique identifier of the AvailablePrivateEndpoint Type resource.",
            "type": "string"
          },
          "name": { "description": "The name of the service and resource.", "type": "string" },
          "resourceName": { "description": "The name of the service and resource.", "type": "string" },
          "type": { "description": "Resource type.", "type": "string" }
        }
      },
      "AvailablePrivateEndpointTypesResult": {
        "description": "An array of available PrivateEndpoint types.",
        "properties": {
          "nextLink": { "description": "The URL to get the next set of results.", "readOnly": true, "type": "string" },
          "value": {
            "description": "An array of available privateEndpoint type.",
            "items": { "$ref": "#/components/schemas/AvailablePrivateEndpointType" },
            "type": "array"
          }
        }
      },
      "PrivateEndpoint": {
        "allOf": [
          {
            "description": "Common resource representation.",
            "properties": {
              "id": { "description": "Resource ID.", "type": "string" },
              "location": { "description": "Resource location.", "type": "string" },
              "name": { "description": "Resource name.", "readOnly": true, "type": "string" },
              "tags": {
                "additionalProperties": { "type": "string" },
                "description": "Resource tags.",
                "type": "object"
              },
              "type": { "description": "Resource type.", "readOnly": true, "type": "string" }
            },
            "x-ms-azure-resource": true
          }
        ],
        "description": "Private endpoint resource.",
        "properties": {
          "etag": {
            "description": "Gets a unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "properties": { "$ref": "#/components/schemas/PrivateEndpointProperties" }
        }
      },
      "PrivateEndpointListResult": {
        "description": "Response for the ListPrivateEndpoints API service call.",
        "properties": {
          "nextLink": { "description": "The URL to get the next set of results.", "readOnly": true, "type": "string" },
          "value": {
            "description": "Gets a list of private endpoint resources in a resource group.",
            "items": { "$ref": "#/components/schemas/PrivateEndpoint" },
            "type": "array"
          }
        }
      },
      "PrivateEndpointProperties": {
        "description": "Properties of the private endpoint.",
        "properties": {
          "manualPrivateLinkServiceConnections": {
            "description": "A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.",
            "items": {
              "allOf": [
                {
                  "description": "Reference to another subresource.",
                  "properties": { "id": { "description": "Resource ID.", "type": "string" } },
                  "x-ms-azure-resource": true
                }
              ],
              "description": "PrivateLinkServiceConnection resource.",
              "properties": {
                "name": {
                  "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the PrivateLinkServiceConnection.",
                  "properties": {
                    "groupIds": {
                      "description": "The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                      "items": { "type": "string" },
                      "type": "array"
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "properties": {
                        "actionRequired": {
                          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The reason for approval/rejection of the connection.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceId": {
                      "description": "The resource id of private link service.",
                      "type": "string"
                    },
                    "requestMessage": {
                      "description": "A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "type": "array"
          },
          "networkInterfaces": {
            "description": "Gets an array of references to the network interfaces created for this private endpoint.",
            "items": { "$ref": "./networkInterface.json#/definitions/NetworkInterface" },
            "readOnly": true,
            "type": "array"
          },
          "privateLinkServiceConnections": {
            "description": "A grouping of information about the connection to the remote resource.",
            "items": {
              "allOf": [
                {
                  "description": "Reference to another subresource.",
                  "properties": { "id": { "description": "Resource ID.", "type": "string" } },
                  "x-ms-azure-resource": true
                }
              ],
              "description": "PrivateLinkServiceConnection resource.",
              "properties": {
                "name": {
                  "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the PrivateLinkServiceConnection.",
                  "properties": {
                    "groupIds": {
                      "description": "The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                      "items": { "type": "string" },
                      "type": "array"
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "properties": {
                        "actionRequired": {
                          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The reason for approval/rejection of the connection.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceId": {
                      "description": "The resource id of private link service.",
                      "type": "string"
                    },
                    "requestMessage": {
                      "description": "A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "type": "array"
          },
          "provisioningState": {
            "description": "The provisioning state of the private endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "readOnly": true,
            "type": "string"
          },
          "subnet": { "$ref": "./virtualNetwork.json#/definitions/Subnet" }
        }
      },
      "PrivateLinkServiceConnection": {
        "allOf": [
          {
            "description": "Reference to another subresource.",
            "properties": { "id": { "description": "Resource ID.", "type": "string" } },
            "x-ms-azure-resource": true
          }
        ],
        "description": "PrivateLinkServiceConnection resource.",
        "properties": {
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "type": "string"
          },
          "properties": {
            "description": "Properties of the PrivateLinkServiceConnection.",
            "properties": {
              "groupIds": {
                "description": "The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                "items": { "type": "string" },
                "type": "array"
              },
              "privateLinkServiceConnectionState": {
                "description": "A collection of information about the state of the connection between service consumer and provider.",
                "properties": {
                  "actionRequired": {
                    "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                    "type": "string"
                  },
                  "description": {
                    "description": "The reason for approval/rejection of the connection.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                    "type": "string"
                  }
                }
              },
              "privateLinkServiceId": { "description": "The resource id of private link service.", "type": "string" },
              "requestMessage": {
                "description": "A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.",
                "type": "string"
              }
            }
          }
        }
      },
      "PrivateLinkServiceConnectionProperties": {
        "description": "Properties of the PrivateLinkServiceConnection.",
        "properties": {
          "groupIds": {
            "description": "The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
            "items": { "type": "string" },
            "type": "array"
          },
          "privateLinkServiceConnectionState": {
            "description": "A collection of information about the state of the connection between service consumer and provider.",
            "properties": {
              "actionRequired": {
                "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                "type": "string"
              },
              "description": {
                "description": "The reason for approval/rejection of the connection.",
                "type": "string"
              },
              "status": {
                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                "type": "string"
              }
            }
          },
          "privateLinkServiceId": { "description": "The resource id of private link service.", "type": "string" },
          "requestMessage": {
            "description": "A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.",
            "type": "string"
          }
        }
      }
    }
  }
}
