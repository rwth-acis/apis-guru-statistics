{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Application Discovery Service</fullname> <p>AWS Application Discovery Service helps you plan application migration projects by automatically identifying servers, virtual machines (VMs), software, and software dependencies running in your on-premises data centers. Application Discovery Service also collects application performance data, which can help you assess the outcome of your migration. The data collected by Application Discovery Service is securely retained in an AWS-hosted and managed database in the cloud. You can export the data as a CSV or XML file into your preferred visualization tool or cloud-migration solution to plan your migration. For more information, see <a href=\"http://aws.amazon.com/application-discovery/faqs/\">AWS Application Discovery Service FAQ</a>.</p> <p>Application Discovery Service offers two modes of operation:</p> <ul> <li> <p> <b>Agentless discovery</b> mode is recommended for environments that use VMware vCenter Server. This mode doesn't require you to install an agent on each host. Agentless discovery gathers server information regardless of the operating systems, which minimizes the time required for initial on-premises infrastructure assessment. Agentless discovery doesn't collect information about software and software dependencies. It also doesn't work in non-VMware environments. </p> </li> <li> <p> <b>Agent-based discovery</b> mode collects a richer set of data than agentless discovery by using the AWS Application Discovery Agent, which you install on one or more hosts in your data center. The agent captures infrastructure and application information, including an inventory of installed software applications, system and process performance, resource utilization, and network dependencies between workloads. The information collected by agents is secured at rest and in transit to the Application Discovery Service database in the cloud. </p> </li> </ul> <p>We recommend that you use agent-based discovery for non-VMware environments and to collect information about software and software dependencies. You can also run agent-based and agentless discovery simultaneously. Use agentless discovery to quickly complete the initial infrastructure assessment and then install agents on select hosts.</p> <p>Application Discovery Service integrates with application discovery solutions from AWS Partner Network (APN) partners. Third-party application discovery tools can query Application Discovery Service and write to the Application Discovery Service database using a public API. You can then import the data into either a visualization tool or cloud-migration solution.</p> <important> <p>Application Discovery Service doesn't gather sensitive information. All data is handled according to the <a href=\"http://aws.amazon.com/privacy/\">AWS Privacy Policy</a>. You can operate Application Discovery Service offline to inspect collected data before it is shared with the service.</p> </important> <p>This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for Application Discovery Service. The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p> <p>This guide is intended for use with the <a href=\"http://docs.aws.amazon.com/application-discovery/latest/userguide/\"> <i>AWS Application Discovery Service User Guide</i> </a>.</p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Application Discovery Service",
    "version": "2015-11-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/discovery-2015-11-01.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "discovery"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/discovery/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.AssociateConfigurationItemsToApplication": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associates one or more configuration items with an application.",
        "operationId": "AssociateConfigurationItemsToApplication",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSPoseidonService_V2015_11_01.AssociateConfigurationItemsToApplication"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AssociateConfigurationItemsToApplicationRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AssociateConfigurationItemsToApplicationResponse" }
              }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.BatchDeleteImportData": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes one or more import tasks, each identified by their import ID. Each import task has a number of records that can identify servers or applications. </p> <p>AWS Application Discovery Service has built-in matching logic that will identify when discovered servers match existing entries that you've previously discovered, the information for the already-existing discovered server is updated. When you delete an import task that contains records that were used to match, the information in those matched records that comes from the deleted records will also be deleted.</p>",
        "operationId": "BatchDeleteImportData",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.BatchDeleteImportData"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/BatchDeleteImportDataRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchDeleteImportDataResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "482": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.CreateApplication": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates an application with the given name and description.",
        "operationId": "CreateApplication",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.CreateApplication"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateApplicationRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateApplicationResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.CreateTags": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates one or more tags for configuration items. Tags are metadata that help you categorize IT assets. This API accepts a list of multiple configuration items.",
        "operationId": "CreateTags",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.CreateTags"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateTagsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateTagsResponse" } } }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "484": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DeleteApplications": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes a list of applications and their associations with configuration items.",
        "operationId": "DeleteApplications",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.DeleteApplications"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteApplicationsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteApplicationsResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DeleteTags": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the association between configuration items and one or more tags. This API accepts a list of multiple configuration items.",
        "operationId": "DeleteTags",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.DeleteTags"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteTagsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteTagsResponse" } } }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "484": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeAgents": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists agents or connectors as specified by ID or other filters. All agents/connectors associated with your user account can be listed if you call <code>DescribeAgents</code> as is without passing any parameters.",
        "operationId": "DescribeAgents",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.DescribeAgents"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAgentsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAgentsResponse" } } }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeConfigurations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves attributes for a list of configuration item IDs.</p> <note> <p>All of the supplied IDs must be for the same asset type from one of the following:</p> <ul> <li> <p>server</p> </li> <li> <p>application</p> </li> <li> <p>process</p> </li> <li> <p>connection</p> </li> </ul> <p>Output fields are specific to the asset type specified. For example, the output for a <i>server</i> configuration item includes a list of attributes about the server, such as host name, operating system, number of network cards, etc.</p> <p>For a complete list of outputs for each asset type, see <a href=\"http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html#DescribeConfigurations\">Using the DescribeConfigurations Action</a>.</p> </note>",
        "operationId": "DescribeConfigurations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.DescribeConfigurations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeConfigurationsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeConfigurationsResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeContinuousExports": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists exports as specified by ID. All continuous exports associated with your user account can be listed if you call <code>DescribeContinuousExports</code> as is without passing any parameters.",
        "operationId": "DescribeContinuousExports",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.DescribeContinuousExports"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeContinuousExportsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeContinuousExportsResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "485": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeExportConfigurations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "deprecated": true,
        "description": " <code>DescribeExportConfigurations</code> is deprecated. Use <a href=\"https://docs.aws.amazon.com/application-discovery/latest/APIReference/API_DescribeExportTasks.html\">DescribeImportTasks</a>, instead.",
        "operationId": "DescribeExportConfigurations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.DescribeExportConfigurations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeExportConfigurationsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeExportConfigurationsResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "484": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeExportTasks": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieve status of one or more export tasks. You can retrieve the status of up to 100 export tasks.",
        "operationId": "DescribeExportTasks",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.DescribeExportTasks"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeExportTasksRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeExportTasksResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeImportTasks": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns an array of import tasks for your account, including status information, times, IDs, the Amazon S3 Object URL for the import file, and more.",
        "operationId": "DescribeImportTasks",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.DescribeImportTasks"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeImportTasksRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeImportTasksResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "482": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeTags": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves a list of configuration items that have tags as specified by the key-value pairs, name and value, passed to the optional parameter <code>filters</code>.</p> <p>There are three valid tag filter names:</p> <ul> <li> <p>tagKey</p> </li> <li> <p>tagValue</p> </li> <li> <p>configurationId</p> </li> </ul> <p>Also, all configuration items associated with your user account that have tags can be listed if you call <code>DescribeTags</code> as is without passing any parameters.</p>",
        "operationId": "DescribeTags",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.DescribeTags"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeTagsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeTagsResponse" } } }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "484": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.DisassociateConfigurationItemsFromApplication": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Disassociates one or more configuration items from an application.",
        "operationId": "DisassociateConfigurationItemsFromApplication",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AWSPoseidonService_V2015_11_01.DisassociateConfigurationItemsFromApplication"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DisassociateConfigurationItemsFromApplicationRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DisassociateConfigurationItemsFromApplicationResponse" }
              }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.ExportConfigurations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "deprecated": true,
        "description": "<p>Deprecated. Use <code>StartExportTask</code> instead.</p> <p>Exports all discovered configuration data to an Amazon S3 bucket or an application that enables you to view and evaluate the data. Data includes tags and tag associations, processes, connections, servers, and system performance. This API returns an export ID that you can query using the <i>DescribeExportConfigurations</i> API. The system imposes a limit of two configuration exports in six hours.</p>",
        "operationId": "ExportConfigurations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.ExportConfigurations"] }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ExportConfigurationsResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.GetDiscoverySummary": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves a short summary of discovered assets.</p> <p>This API operation takes no request parameters and is called as is at the command prompt as shown in the example.</p>",
        "operationId": "GetDiscoverySummary",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.GetDiscoverySummary"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetDiscoverySummaryRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetDiscoverySummaryResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.ListConfigurations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves a list of configuration items as specified by the value passed to the required paramater <code>configurationType</code>. Optional filtering may be applied to refine search results.",
        "operationId": "ListConfigurations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.ListConfigurations"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListConfigurationsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListConfigurationsResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "484": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.ListServerNeighbors": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves a list of servers that are one network hop away from a specified server.",
        "operationId": "ListServerNeighbors",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.ListServerNeighbors"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListServerNeighborsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListServerNeighborsResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartContinuousExport": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Start the continuous flow of agent's discovered data into Amazon Athena.",
        "operationId": "StartContinuousExport",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.StartContinuousExport"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartContinuousExportRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartContinuousExportResponse" } }
            }
          },
          "480": {
            "description": "ConflictErrorException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ConflictErrorException" } } }
          },
          "481": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "484": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          },
          "485": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "486": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartDataCollectionByAgentIds": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Instructs the specified agents or connectors to start collecting data.",
        "operationId": "StartDataCollectionByAgentIds",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.StartDataCollectionByAgentIds"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartDataCollectionByAgentIdsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartDataCollectionByAgentIdsResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartExportTask": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p> Begins the export of discovered data to an S3 bucket.</p> <p> If you specify <code>agentIds</code> in a filter, the task exports up to 72 hours of detailed data collected by the identified Application Discovery Agent, including network, process, and performance details. A time range for exported agent data may be set by using <code>startTime</code> and <code>endTime</code>. Export of detailed agent data is limited to five concurrently running exports. </p> <p> If you do not include an <code>agentIds</code> filter, summary data is exported that includes both AWS Agentless Discovery Connector data and summary data from AWS Discovery Agents. Export of summary data is limited to two exports per day. </p>",
        "operationId": "StartExportTask",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.StartExportTask"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartExportTaskRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartExportTaskResponse" } } }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartImportTask": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Starts an import task, which allows you to import details of your on-premises environment directly into AWS without having to use the Application Discovery Service (ADS) tools such as the Discovery Connector or Discovery Agent. This gives you the option to perform migration assessment and planning directly from your imported data, including the ability to group your devices as applications and track their migration status.</p> <p>To start an import request, do this:</p> <ol> <li> <p>Download the specially formatted comma separated value (CSV) import template, which you can find here: <a href=\"https://s3-us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv\">https://s3-us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv</a>.</p> </li> <li> <p>Fill out the template with your server and application data.</p> </li> <li> <p>Upload your import file to an Amazon S3 bucket, and make a note of it's Object URL. Your import file must be in the CSV format.</p> </li> <li> <p>Use the console or the <code>StartImportTask</code> command with the AWS CLI or one of the AWS SDKs to import the records from your file.</p> </li> </ol> <p>For more information, including step-by-step procedures, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-import.html\">Migration Hub Import</a> in the <i>AWS Application Discovery Service User Guide</i>.</p> <note> <p>There are limits to the number of import tasks you can create (and delete) in an AWS account. For more information, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/ads_service_limits.html\">AWS Application Discovery Service Limits</a> in the <i>AWS Application Discovery Service User Guide</i>.</p> </note>",
        "operationId": "StartImportTask",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.StartImportTask"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartImportTaskRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartImportTaskResponse" } } }
          },
          "480": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "481": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StopContinuousExport": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Stop the continuous flow of agent's discovered data into Amazon Athena.",
        "operationId": "StopContinuousExport",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.StopContinuousExport"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopContinuousExportRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StopContinuousExportResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OperationNotPermittedException" } }
            }
          },
          "485": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "486": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.StopDataCollectionByAgentIds": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Instructs the specified agents or connectors to stop collecting data.",
        "operationId": "StopDataCollectionByAgentIds",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.StopDataCollectionByAgentIds"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopDataCollectionByAgentIdsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StopDataCollectionByAgentIdsResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AWSPoseidonService_V2015_11_01.UpdateApplication": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates metadata about an application.",
        "operationId": "UpdateApplication",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AWSPoseidonService_V2015_11_01.UpdateApplication"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateApplicationRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateApplicationResponse" } }
            }
          },
          "480": {
            "description": "AuthorizationErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthorizationErrorException" } }
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterException" } }
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameterValueException" } }
            }
          },
          "483": {
            "description": "ServerInternalErrorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ServerInternalErrorException" } }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The AWS Application Discovery Service multi-region endpoint",
      "url": "http://discovery.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS Application Discovery Service multi-region endpoint",
      "url": "https://discovery.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The AWS Application Discovery Service endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://discovery.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The AWS Application Discovery Service endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://discovery.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AgentConfigurationStatus": {
        "description": "Information about agents or connectors that were instructed to start collecting data. Information includes the agent/connector ID, a description of the operation, and whether the agent/connector configuration was updated.",
        "properties": {
          "agentId": { "$ref": "#/components/schemas/String" },
          "description": { "$ref": "#/components/schemas/String" },
          "operationSucceeded": { "$ref": "#/components/schemas/Boolean" }
        },
        "type": "object"
      },
      "AgentConfigurationStatusList": {
        "items": { "$ref": "#/components/schemas/AgentConfigurationStatus" },
        "type": "array"
      },
      "AgentId": { "type": "string" },
      "AgentIds": { "items": { "$ref": "#/components/schemas/AgentId" }, "type": "array" },
      "AgentInfo": {
        "description": "Information about agents or connectors associated with the user’s AWS account. Information includes agent or connector IDs, IP addresses, media access control (MAC) addresses, agent or connector health, hostname where the agent or connector resides, and agent version for each agent.",
        "properties": {
          "agentId": { "$ref": "#/components/schemas/AgentId" },
          "agentNetworkInfoList": { "$ref": "#/components/schemas/AgentNetworkInfoList" },
          "agentType": { "$ref": "#/components/schemas/String" },
          "collectionStatus": { "$ref": "#/components/schemas/String" },
          "connectorId": { "$ref": "#/components/schemas/String" },
          "health": { "$ref": "#/components/schemas/AgentStatus" },
          "hostName": { "$ref": "#/components/schemas/String" },
          "lastHealthPingTime": { "$ref": "#/components/schemas/String" },
          "registeredTime": { "$ref": "#/components/schemas/String" },
          "version": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "AgentNetworkInfo": {
        "description": "Network details about the host where the agent/connector resides.",
        "properties": {
          "ipAddress": { "$ref": "#/components/schemas/String" },
          "macAddress": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "AgentNetworkInfoList": { "items": { "$ref": "#/components/schemas/AgentNetworkInfo" }, "type": "array" },
      "AgentStatus": {
        "enum": ["HEALTHY", "UNHEALTHY", "RUNNING", "UNKNOWN", "BLACKLISTED", "SHUTDOWN"],
        "type": "string"
      },
      "AgentsInfo": { "items": { "$ref": "#/components/schemas/AgentInfo" }, "type": "array" },
      "ApplicationId": { "type": "string" },
      "ApplicationIdsList": { "items": { "$ref": "#/components/schemas/ApplicationId" }, "type": "array" },
      "AssociateConfigurationItemsToApplicationRequest": {
        "properties": {
          "applicationConfigurationId": { "$ref": "#/components/schemas/ApplicationId" },
          "configurationIds": { "$ref": "#/components/schemas/ConfigurationIdList" }
        },
        "required": ["applicationConfigurationId", "configurationIds"],
        "type": "object"
      },
      "AssociateConfigurationItemsToApplicationResponse": { "properties": {}, "type": "object" },
      "AuthorizationErrorException": {},
      "BatchDeleteImportDataError": {
        "description": "Error messages returned for each import task that you deleted as a response for this command.",
        "properties": {
          "errorCode": { "$ref": "#/components/schemas/BatchDeleteImportDataErrorCode" },
          "errorDescription": { "$ref": "#/components/schemas/BatchDeleteImportDataErrorDescription" },
          "importTaskId": { "$ref": "#/components/schemas/ImportTaskIdentifier" }
        },
        "type": "object"
      },
      "BatchDeleteImportDataErrorCode": {
        "enum": ["NOT_FOUND", "INTERNAL_SERVER_ERROR", "OVER_LIMIT"],
        "type": "string"
      },
      "BatchDeleteImportDataErrorDescription": { "type": "string" },
      "BatchDeleteImportDataErrorList": {
        "items": { "$ref": "#/components/schemas/BatchDeleteImportDataError" },
        "type": "array"
      },
      "BatchDeleteImportDataRequest": {
        "properties": { "importTaskIds": { "$ref": "#/components/schemas/ToDeleteIdentifierList" } },
        "required": ["importTaskIds"],
        "type": "object"
      },
      "BatchDeleteImportDataResponse": {
        "properties": { "errors": { "$ref": "#/components/schemas/BatchDeleteImportDataErrorList" } },
        "type": "object"
      },
      "Boolean": { "type": "boolean" },
      "BoxedInteger": { "type": "integer" },
      "ClientRequestToken": { "maxLength": 100, "minLength": 1, "type": "string" },
      "Condition": { "type": "string" },
      "Configuration": { "additionalProperties": { "$ref": "#/components/schemas/String" }, "type": "object" },
      "ConfigurationId": { "type": "string" },
      "ConfigurationIdList": { "items": { "$ref": "#/components/schemas/ConfigurationId" }, "type": "array" },
      "ConfigurationItemType": { "enum": ["SERVER", "PROCESS", "CONNECTION", "APPLICATION"], "type": "string" },
      "ConfigurationTag": {
        "description": "Tags for a configuration item. Tags are metadata that help you categorize IT assets.",
        "properties": {
          "configurationId": { "$ref": "#/components/schemas/ConfigurationId" },
          "configurationType": { "$ref": "#/components/schemas/ConfigurationItemType" },
          "key": { "$ref": "#/components/schemas/TagKey" },
          "timeOfCreation": { "$ref": "#/components/schemas/TimeStamp" },
          "value": { "$ref": "#/components/schemas/TagValue" }
        },
        "type": "object"
      },
      "ConfigurationTagSet": { "items": { "$ref": "#/components/schemas/ConfigurationTag" }, "type": "array" },
      "Configurations": { "items": { "$ref": "#/components/schemas/Configuration" }, "type": "array" },
      "ConfigurationsDownloadUrl": { "type": "string" },
      "ConfigurationsExportId": { "type": "string" },
      "ConflictErrorException": {},
      "ContinuousExportDescription": {
        "description": "A list of continuous export descriptions.",
        "properties": {
          "dataSource": { "$ref": "#/components/schemas/DataSource" },
          "exportId": { "$ref": "#/components/schemas/ConfigurationsExportId" },
          "s3Bucket": { "$ref": "#/components/schemas/S3Bucket" },
          "schemaStorageConfig": { "$ref": "#/components/schemas/SchemaStorageConfig" },
          "startTime": { "$ref": "#/components/schemas/TimeStamp" },
          "status": { "$ref": "#/components/schemas/ContinuousExportStatus" },
          "statusDetail": { "$ref": "#/components/schemas/StringMax255" },
          "stopTime": { "$ref": "#/components/schemas/TimeStamp" }
        },
        "type": "object"
      },
      "ContinuousExportDescriptions": {
        "items": { "$ref": "#/components/schemas/ContinuousExportDescription" },
        "type": "array"
      },
      "ContinuousExportIds": { "items": { "$ref": "#/components/schemas/ConfigurationsExportId" }, "type": "array" },
      "ContinuousExportStatus": {
        "enum": ["START_IN_PROGRESS", "START_FAILED", "ACTIVE", "ERROR", "STOP_IN_PROGRESS", "STOP_FAILED", "INACTIVE"],
        "type": "string"
      },
      "CreateApplicationRequest": {
        "properties": {
          "description": { "$ref": "#/components/schemas/String" },
          "name": { "$ref": "#/components/schemas/String" }
        },
        "required": ["name"],
        "type": "object"
      },
      "CreateApplicationResponse": {
        "properties": { "configurationId": { "$ref": "#/components/schemas/String" } },
        "type": "object"
      },
      "CreateTagsRequest": {
        "properties": {
          "configurationIds": { "$ref": "#/components/schemas/ConfigurationIdList" },
          "tags": { "$ref": "#/components/schemas/TagSet" }
        },
        "required": ["configurationIds", "tags"],
        "type": "object"
      },
      "CreateTagsResponse": { "properties": {}, "type": "object" },
      "CustomerAgentInfo": {
        "description": "Inventory data for installed discovery agents.",
        "properties": {
          "activeAgents": { "$ref": "#/components/schemas/Integer" },
          "blackListedAgents": { "$ref": "#/components/schemas/Integer" },
          "healthyAgents": { "$ref": "#/components/schemas/Integer" },
          "shutdownAgents": { "$ref": "#/components/schemas/Integer" },
          "totalAgents": { "$ref": "#/components/schemas/Integer" },
          "unhealthyAgents": { "$ref": "#/components/schemas/Integer" },
          "unknownAgents": { "$ref": "#/components/schemas/Integer" }
        },
        "required": [
          "activeAgents",
          "healthyAgents",
          "blackListedAgents",
          "shutdownAgents",
          "unhealthyAgents",
          "totalAgents",
          "unknownAgents"
        ],
        "type": "object"
      },
      "CustomerConnectorInfo": {
        "description": "Inventory data for installed discovery connectors.",
        "properties": {
          "activeConnectors": { "$ref": "#/components/schemas/Integer" },
          "blackListedConnectors": { "$ref": "#/components/schemas/Integer" },
          "healthyConnectors": { "$ref": "#/components/schemas/Integer" },
          "shutdownConnectors": { "$ref": "#/components/schemas/Integer" },
          "totalConnectors": { "$ref": "#/components/schemas/Integer" },
          "unhealthyConnectors": { "$ref": "#/components/schemas/Integer" },
          "unknownConnectors": { "$ref": "#/components/schemas/Integer" }
        },
        "required": [
          "activeConnectors",
          "healthyConnectors",
          "blackListedConnectors",
          "shutdownConnectors",
          "unhealthyConnectors",
          "totalConnectors",
          "unknownConnectors"
        ],
        "type": "object"
      },
      "DataSource": { "enum": ["AGENT"], "type": "string" },
      "DatabaseName": { "maxLength": 252, "minLength": 1, "type": "string" },
      "DeleteApplicationsRequest": {
        "properties": { "configurationIds": { "$ref": "#/components/schemas/ApplicationIdsList" } },
        "required": ["configurationIds"],
        "type": "object"
      },
      "DeleteApplicationsResponse": { "properties": {}, "type": "object" },
      "DeleteTagsRequest": {
        "properties": {
          "configurationIds": { "$ref": "#/components/schemas/ConfigurationIdList" },
          "tags": { "$ref": "#/components/schemas/TagSet" }
        },
        "required": ["configurationIds"],
        "type": "object"
      },
      "DeleteTagsResponse": { "properties": {}, "type": "object" },
      "DescribeAgentsRequest": {
        "properties": {
          "agentIds": { "$ref": "#/components/schemas/AgentIds" },
          "filters": { "$ref": "#/components/schemas/Filters" },
          "maxResults": { "$ref": "#/components/schemas/Integer" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeAgentsResponse": {
        "properties": {
          "agentsInfo": { "$ref": "#/components/schemas/AgentsInfo" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeConfigurationsAttribute": {
        "additionalProperties": { "$ref": "#/components/schemas/String" },
        "type": "object"
      },
      "DescribeConfigurationsAttributes": {
        "items": { "$ref": "#/components/schemas/DescribeConfigurationsAttribute" },
        "type": "array"
      },
      "DescribeConfigurationsRequest": {
        "properties": { "configurationIds": { "$ref": "#/components/schemas/ConfigurationIdList" } },
        "required": ["configurationIds"],
        "type": "object"
      },
      "DescribeConfigurationsResponse": {
        "properties": { "configurations": { "$ref": "#/components/schemas/DescribeConfigurationsAttributes" } },
        "type": "object"
      },
      "DescribeContinuousExportsMaxResults": { "maximum": 100, "minimum": 1, "type": "integer" },
      "DescribeContinuousExportsRequest": {
        "properties": {
          "exportIds": { "$ref": "#/components/schemas/ContinuousExportIds" },
          "maxResults": { "$ref": "#/components/schemas/DescribeContinuousExportsMaxResults" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeContinuousExportsResponse": {
        "properties": {
          "descriptions": { "$ref": "#/components/schemas/ContinuousExportDescriptions" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeExportConfigurationsRequest": {
        "properties": {
          "exportIds": { "$ref": "#/components/schemas/ExportIds" },
          "maxResults": { "$ref": "#/components/schemas/Integer" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeExportConfigurationsResponse": {
        "properties": {
          "exportsInfo": { "$ref": "#/components/schemas/ExportsInfo" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeExportTasksRequest": {
        "properties": {
          "exportIds": { "$ref": "#/components/schemas/ExportIds" },
          "filters": { "$ref": "#/components/schemas/ExportFilters" },
          "maxResults": { "$ref": "#/components/schemas/Integer" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeExportTasksResponse": {
        "properties": {
          "exportsInfo": { "$ref": "#/components/schemas/ExportsInfo" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeImportTasksFilterList": {
        "items": { "$ref": "#/components/schemas/ImportTaskFilter" },
        "type": "array"
      },
      "DescribeImportTasksMaxResults": { "maximum": 100, "minimum": 1, "type": "integer" },
      "DescribeImportTasksRequest": {
        "properties": {
          "filters": { "$ref": "#/components/schemas/DescribeImportTasksFilterList" },
          "maxResults": { "$ref": "#/components/schemas/DescribeImportTasksMaxResults" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeImportTasksResponse": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/NextToken" },
          "tasks": { "$ref": "#/components/schemas/ImportTaskList" }
        },
        "type": "object"
      },
      "DescribeTagsRequest": {
        "properties": {
          "filters": { "$ref": "#/components/schemas/TagFilters" },
          "maxResults": { "$ref": "#/components/schemas/Integer" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeTagsResponse": {
        "properties": {
          "nextToken": { "$ref": "#/components/schemas/NextToken" },
          "tags": { "$ref": "#/components/schemas/ConfigurationTagSet" }
        },
        "type": "object"
      },
      "DisassociateConfigurationItemsFromApplicationRequest": {
        "properties": {
          "applicationConfigurationId": { "$ref": "#/components/schemas/ApplicationId" },
          "configurationIds": { "$ref": "#/components/schemas/ConfigurationIdList" }
        },
        "required": ["applicationConfigurationId", "configurationIds"],
        "type": "object"
      },
      "DisassociateConfigurationItemsFromApplicationResponse": { "properties": {}, "type": "object" },
      "ExportConfigurationsResponse": {
        "properties": { "exportId": { "$ref": "#/components/schemas/ConfigurationsExportId" } },
        "type": "object"
      },
      "ExportDataFormat": { "enum": ["CSV", "GRAPHML"], "type": "string" },
      "ExportDataFormats": { "items": { "$ref": "#/components/schemas/ExportDataFormat" }, "type": "array" },
      "ExportFilter": {
        "description": "Used to select which agent's data is to be exported. A single agent ID may be selected for export using the <a href=\"http://docs.aws.amazon.com/application-discovery/latest/APIReference/API_StartExportTask.html\">StartExportTask</a> action.",
        "properties": {
          "condition": { "$ref": "#/components/schemas/Condition" },
          "name": { "$ref": "#/components/schemas/FilterName" },
          "values": { "$ref": "#/components/schemas/FilterValues" }
        },
        "required": ["name", "values", "condition"],
        "type": "object"
      },
      "ExportFilters": { "items": { "$ref": "#/components/schemas/ExportFilter" }, "type": "array" },
      "ExportIds": { "items": { "$ref": "#/components/schemas/ConfigurationsExportId" }, "type": "array" },
      "ExportInfo": {
        "description": "Information regarding the export status of discovered data. The value is an array of objects.",
        "properties": {
          "configurationsDownloadUrl": { "$ref": "#/components/schemas/ConfigurationsDownloadUrl" },
          "exportId": { "$ref": "#/components/schemas/ConfigurationsExportId" },
          "exportRequestTime": { "$ref": "#/components/schemas/ExportRequestTime" },
          "exportStatus": { "$ref": "#/components/schemas/ExportStatus" },
          "isTruncated": { "$ref": "#/components/schemas/Boolean" },
          "requestedEndTime": { "$ref": "#/components/schemas/TimeStamp" },
          "requestedStartTime": { "$ref": "#/components/schemas/TimeStamp" },
          "statusMessage": { "$ref": "#/components/schemas/ExportStatusMessage" }
        },
        "required": ["exportId", "exportStatus", "statusMessage", "exportRequestTime"],
        "type": "object"
      },
      "ExportRequestTime": { "format": "date-time", "type": "string" },
      "ExportStatus": { "enum": ["FAILED", "SUCCEEDED", "IN_PROGRESS"], "type": "string" },
      "ExportStatusMessage": { "type": "string" },
      "ExportsInfo": { "items": { "$ref": "#/components/schemas/ExportInfo" }, "type": "array" },
      "Filter": {
        "description": "<p>A filter that can use conditional operators.</p> <p>For more information about filters, see <a href=\"http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html\">Querying Discovered Configuration Items</a>. </p>",
        "properties": {
          "condition": { "$ref": "#/components/schemas/Condition" },
          "name": { "$ref": "#/components/schemas/String" },
          "values": { "$ref": "#/components/schemas/FilterValues" }
        },
        "required": ["name", "values", "condition"],
        "type": "object"
      },
      "FilterName": { "type": "string" },
      "FilterValue": { "type": "string" },
      "FilterValues": { "items": { "$ref": "#/components/schemas/FilterValue" }, "type": "array" },
      "Filters": { "items": { "$ref": "#/components/schemas/Filter" }, "type": "array" },
      "GetDiscoverySummaryRequest": { "properties": {}, "type": "object" },
      "GetDiscoverySummaryResponse": {
        "properties": {
          "agentSummary": { "$ref": "#/components/schemas/CustomerAgentInfo" },
          "applications": { "$ref": "#/components/schemas/Long" },
          "connectorSummary": { "$ref": "#/components/schemas/CustomerConnectorInfo" },
          "servers": { "$ref": "#/components/schemas/Long" },
          "serversMappedToApplications": { "$ref": "#/components/schemas/Long" },
          "serversMappedtoTags": { "$ref": "#/components/schemas/Long" }
        },
        "type": "object"
      },
      "ImportStatus": {
        "enum": [
          "IMPORT_IN_PROGRESS",
          "IMPORT_COMPLETE",
          "IMPORT_COMPLETE_WITH_ERRORS",
          "IMPORT_FAILED",
          "IMPORT_FAILED_SERVER_LIMIT_EXCEEDED",
          "IMPORT_FAILED_RECORD_LIMIT_EXCEEDED",
          "DELETE_IN_PROGRESS",
          "DELETE_COMPLETE",
          "DELETE_FAILED",
          "DELETE_FAILED_LIMIT_EXCEEDED",
          "INTERNAL_ERROR"
        ],
        "type": "string"
      },
      "ImportTask": {
        "description": "An array of information related to the import task request that includes status information, times, IDs, the Amazon S3 Object URL for the import file, and more.",
        "properties": {
          "applicationImportFailure": { "$ref": "#/components/schemas/Integer" },
          "applicationImportSuccess": { "$ref": "#/components/schemas/Integer" },
          "clientRequestToken": { "$ref": "#/components/schemas/ClientRequestToken" },
          "errorsAndFailedEntriesZip": { "$ref": "#/components/schemas/S3PresignedUrl" },
          "importCompletionTime": { "$ref": "#/components/schemas/TimeStamp" },
          "importDeletedTime": { "$ref": "#/components/schemas/TimeStamp" },
          "importRequestTime": { "$ref": "#/components/schemas/TimeStamp" },
          "importTaskId": { "$ref": "#/components/schemas/ImportTaskIdentifier" },
          "importUrl": { "$ref": "#/components/schemas/ImportURL" },
          "name": { "$ref": "#/components/schemas/ImportTaskName" },
          "serverImportFailure": { "$ref": "#/components/schemas/Integer" },
          "serverImportSuccess": { "$ref": "#/components/schemas/Integer" },
          "status": { "$ref": "#/components/schemas/ImportStatus" }
        },
        "type": "object"
      },
      "ImportTaskFilter": {
        "description": "<p>A name-values pair of elements you can use to filter the results when querying your import tasks. Currently, wildcards are not supported for filters.</p> <note> <p>When filtering by import status, all other filter values are ignored.</p> </note>",
        "properties": {
          "name": { "$ref": "#/components/schemas/ImportTaskFilterName" },
          "values": { "$ref": "#/components/schemas/ImportTaskFilterValueList" }
        },
        "type": "object"
      },
      "ImportTaskFilterName": { "enum": ["IMPORT_TASK_ID", "STATUS", "NAME"], "type": "string" },
      "ImportTaskFilterValue": { "maxLength": 100, "minLength": 1, "type": "string" },
      "ImportTaskFilterValueList": {
        "items": { "$ref": "#/components/schemas/ImportTaskFilterValue" },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "ImportTaskIdentifier": { "type": "string" },
      "ImportTaskList": { "items": { "$ref": "#/components/schemas/ImportTask" }, "type": "array" },
      "ImportTaskName": { "maxLength": 100, "minLength": 1, "type": "string" },
      "ImportURL": { "maxLength": 4000, "minLength": 1, "type": "string" },
      "Integer": { "type": "integer" },
      "InvalidParameterException": {},
      "InvalidParameterValueException": {},
      "ListConfigurationsRequest": {
        "properties": {
          "configurationType": { "$ref": "#/components/schemas/ConfigurationItemType" },
          "filters": { "$ref": "#/components/schemas/Filters" },
          "maxResults": { "$ref": "#/components/schemas/Integer" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" },
          "orderBy": { "$ref": "#/components/schemas/OrderByList" }
        },
        "required": ["configurationType"],
        "type": "object"
      },
      "ListConfigurationsResponse": {
        "properties": {
          "configurations": { "$ref": "#/components/schemas/Configurations" },
          "nextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListServerNeighborsRequest": {
        "properties": {
          "configurationId": { "$ref": "#/components/schemas/ConfigurationId" },
          "maxResults": { "$ref": "#/components/schemas/Integer" },
          "neighborConfigurationIds": { "$ref": "#/components/schemas/ConfigurationIdList" },
          "nextToken": { "$ref": "#/components/schemas/String" },
          "portInformationNeeded": { "$ref": "#/components/schemas/Boolean" }
        },
        "required": ["configurationId"],
        "type": "object"
      },
      "ListServerNeighborsResponse": {
        "properties": {
          "knownDependencyCount": { "$ref": "#/components/schemas/Long" },
          "neighbors": { "$ref": "#/components/schemas/NeighborDetailsList" },
          "nextToken": { "$ref": "#/components/schemas/String" }
        },
        "required": ["neighbors"],
        "type": "object"
      },
      "Long": { "type": "integer" },
      "NeighborConnectionDetail": {
        "description": "Details about neighboring servers.",
        "properties": {
          "connectionsCount": { "$ref": "#/components/schemas/Long" },
          "destinationPort": { "$ref": "#/components/schemas/BoxedInteger" },
          "destinationServerId": { "$ref": "#/components/schemas/ConfigurationId" },
          "sourceServerId": { "$ref": "#/components/schemas/ConfigurationId" },
          "transportProtocol": { "$ref": "#/components/schemas/String" }
        },
        "required": ["sourceServerId", "destinationServerId", "connectionsCount"],
        "type": "object"
      },
      "NeighborDetailsList": { "items": { "$ref": "#/components/schemas/NeighborConnectionDetail" }, "type": "array" },
      "NextToken": { "type": "string" },
      "OperationNotPermittedException": {},
      "OrderByElement": {
        "description": "A field and direction for ordered output.",
        "properties": {
          "fieldName": { "$ref": "#/components/schemas/String" },
          "sortOrder": { "$ref": "#/components/schemas/orderString" }
        },
        "required": ["fieldName"],
        "type": "object"
      },
      "OrderByList": { "items": { "$ref": "#/components/schemas/OrderByElement" }, "type": "array" },
      "ResourceInUseException": {},
      "ResourceNotFoundException": {},
      "S3Bucket": { "type": "string" },
      "S3PresignedUrl": { "type": "string" },
      "SchemaStorageConfig": { "additionalProperties": { "$ref": "#/components/schemas/String" }, "type": "object" },
      "ServerInternalErrorException": {},
      "StartContinuousExportRequest": { "properties": {}, "type": "object" },
      "StartContinuousExportResponse": {
        "properties": {
          "dataSource": { "$ref": "#/components/schemas/DataSource" },
          "exportId": { "$ref": "#/components/schemas/ConfigurationsExportId" },
          "s3Bucket": { "$ref": "#/components/schemas/S3Bucket" },
          "schemaStorageConfig": { "$ref": "#/components/schemas/SchemaStorageConfig" },
          "startTime": { "$ref": "#/components/schemas/TimeStamp" }
        },
        "type": "object"
      },
      "StartDataCollectionByAgentIdsRequest": {
        "properties": { "agentIds": { "$ref": "#/components/schemas/AgentIds" } },
        "required": ["agentIds"],
        "type": "object"
      },
      "StartDataCollectionByAgentIdsResponse": {
        "properties": { "agentsConfigurationStatus": { "$ref": "#/components/schemas/AgentConfigurationStatusList" } },
        "type": "object"
      },
      "StartExportTaskRequest": {
        "properties": {
          "endTime": { "$ref": "#/components/schemas/TimeStamp" },
          "exportDataFormat": { "$ref": "#/components/schemas/ExportDataFormats" },
          "filters": { "$ref": "#/components/schemas/ExportFilters" },
          "startTime": { "$ref": "#/components/schemas/TimeStamp" }
        },
        "type": "object"
      },
      "StartExportTaskResponse": {
        "properties": { "exportId": { "$ref": "#/components/schemas/ConfigurationsExportId" } },
        "type": "object"
      },
      "StartImportTaskRequest": {
        "properties": {
          "clientRequestToken": { "$ref": "#/components/schemas/ClientRequestToken" },
          "importUrl": { "$ref": "#/components/schemas/ImportURL" },
          "name": { "$ref": "#/components/schemas/ImportTaskName" }
        },
        "required": ["name", "importUrl"],
        "type": "object"
      },
      "StartImportTaskResponse": {
        "properties": { "task": { "$ref": "#/components/schemas/ImportTask" } },
        "type": "object"
      },
      "StopContinuousExportRequest": {
        "properties": { "exportId": { "$ref": "#/components/schemas/ConfigurationsExportId" } },
        "required": ["exportId"],
        "type": "object"
      },
      "StopContinuousExportResponse": {
        "properties": {
          "startTime": { "$ref": "#/components/schemas/TimeStamp" },
          "stopTime": { "$ref": "#/components/schemas/TimeStamp" }
        },
        "type": "object"
      },
      "StopDataCollectionByAgentIdsRequest": {
        "properties": { "agentIds": { "$ref": "#/components/schemas/AgentIds" } },
        "required": ["agentIds"],
        "type": "object"
      },
      "StopDataCollectionByAgentIdsResponse": {
        "properties": { "agentsConfigurationStatus": { "$ref": "#/components/schemas/AgentConfigurationStatusList" } },
        "type": "object"
      },
      "String": { "type": "string" },
      "StringMax255": { "maxLength": 255, "minLength": 1, "type": "string" },
      "Tag": {
        "description": "Metadata that help you categorize IT assets.",
        "properties": {
          "key": { "$ref": "#/components/schemas/TagKey" },
          "value": { "$ref": "#/components/schemas/TagValue" }
        },
        "required": ["key", "value"],
        "type": "object"
      },
      "TagFilter": {
        "description": "The tag filter. Valid names are: <code>tagKey</code>, <code>tagValue</code>, <code>configurationId</code>.",
        "properties": {
          "name": { "$ref": "#/components/schemas/FilterName" },
          "values": { "$ref": "#/components/schemas/FilterValues" }
        },
        "required": ["name", "values"],
        "type": "object"
      },
      "TagFilters": { "items": { "$ref": "#/components/schemas/TagFilter" }, "type": "array" },
      "TagKey": { "type": "string" },
      "TagSet": { "items": { "$ref": "#/components/schemas/Tag" }, "type": "array" },
      "TagValue": { "type": "string" },
      "TimeStamp": { "format": "date-time", "type": "string" },
      "ToDeleteIdentifierList": {
        "items": { "$ref": "#/components/schemas/ImportTaskIdentifier" },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "UpdateApplicationRequest": {
        "properties": {
          "configurationId": { "$ref": "#/components/schemas/ApplicationId" },
          "description": { "$ref": "#/components/schemas/String" },
          "name": { "$ref": "#/components/schemas/String" }
        },
        "required": ["configurationId"],
        "type": "object"
      },
      "UpdateApplicationResponse": { "properties": {}, "type": "object" },
      "orderString": { "enum": ["ASC", "DESC"], "type": "string" }
    }
  }
}
