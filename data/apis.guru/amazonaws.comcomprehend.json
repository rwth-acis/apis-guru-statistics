{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "Amazon Comprehend is an AWS service for gaining insight into the content of documents. Use these actions to determine the topics contained in your documents, the topics they discuss, the predominant sentiment expressed in them, the predominant language used, and more.",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Comprehend",
    "version": "2017-11-27",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/comprehend-2017-11-27.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "comprehend"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/comprehend/"
  },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=Comprehend_20171127.BatchDetectDominantLanguage": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Determines the dominant language of the input text for a batch of documents. For a list of languages that Amazon Comprehend can detect, see <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/how-languages.html\">Amazon Comprehend Supported Languages</a>. ",
        "operationId": "BatchDetectDominantLanguage",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.BatchDetectDominantLanguage"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/BatchDetectDominantLanguageRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchDetectDominantLanguageResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TextSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TextSizeLimitExceededException" } }
            }
          },
          "482": {
            "description": "BatchSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchSizeLimitExceededException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.BatchDetectEntities": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Inspects the text of a batch of documents for named entities and returns information about them. For more information about named entities, see <a>how-entities</a> ",
        "operationId": "BatchDetectEntities",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.BatchDetectEntities"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/BatchDetectEntitiesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchDetectEntitiesResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TextSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TextSizeLimitExceededException" } }
            }
          },
          "482": {
            "description": "UnsupportedLanguageException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedLanguageException" } }
            }
          },
          "483": {
            "description": "BatchSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchSizeLimitExceededException" } }
            }
          },
          "484": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.BatchDetectKeyPhrases": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Detects the key noun phrases found in a batch of documents.",
        "operationId": "BatchDetectKeyPhrases",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.BatchDetectKeyPhrases"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/BatchDetectKeyPhrasesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchDetectKeyPhrasesResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TextSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TextSizeLimitExceededException" } }
            }
          },
          "482": {
            "description": "UnsupportedLanguageException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedLanguageException" } }
            }
          },
          "483": {
            "description": "BatchSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchSizeLimitExceededException" } }
            }
          },
          "484": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.BatchDetectSentiment": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Inspects a batch of documents and returns an inference of the prevailing sentiment, <code>POSITIVE</code>, <code>NEUTRAL</code>, <code>MIXED</code>, or <code>NEGATIVE</code>, in each one.",
        "operationId": "BatchDetectSentiment",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.BatchDetectSentiment"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/BatchDetectSentimentRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchDetectSentimentResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TextSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TextSizeLimitExceededException" } }
            }
          },
          "482": {
            "description": "UnsupportedLanguageException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedLanguageException" } }
            }
          },
          "483": {
            "description": "BatchSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchSizeLimitExceededException" } }
            }
          },
          "484": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.BatchDetectSyntax": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Inspects the text of a batch of documents for the syntax and part of speech of the words in the document and returns information about them. For more information, see <a>how-syntax</a>.",
        "operationId": "BatchDetectSyntax",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.BatchDetectSyntax"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BatchDetectSyntaxRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchDetectSyntaxResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TextSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TextSizeLimitExceededException" } }
            }
          },
          "482": {
            "description": "UnsupportedLanguageException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedLanguageException" } }
            }
          },
          "483": {
            "description": "BatchSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BatchSizeLimitExceededException" } }
            }
          },
          "484": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.CreateDocumentClassifier": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a new document classifier that you can use to categorize documents. To create a classifier you provide a set of training documents that labeled with the categories that you want to use. After the classifier is trained you can use it to categorize a set of labeled documents into the categories. For more information, see <a>how-document-classification</a>.",
        "operationId": "CreateDocumentClassifier",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.CreateDocumentClassifier"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateDocumentClassifierRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateDocumentClassifierResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "482": {
            "description": "TooManyTagsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "483": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceLimitExceededException" } }
            }
          },
          "485": {
            "description": "UnsupportedLanguageException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedLanguageException" } }
            }
          },
          "486": {
            "description": "KmsKeyValidationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/KmsKeyValidationException" } }
            }
          },
          "487": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.CreateEntityRecognizer": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates an entity recognizer using submitted files. After your <code>CreateEntityRecognizer</code> request is submitted, you can check job status using the API. ",
        "operationId": "CreateEntityRecognizer",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.CreateEntityRecognizer"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateEntityRecognizerRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateEntityRecognizerResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "482": {
            "description": "TooManyTagsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "483": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceLimitExceededException" } }
            }
          },
          "485": {
            "description": "UnsupportedLanguageException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedLanguageException" } }
            }
          },
          "486": {
            "description": "KmsKeyValidationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/KmsKeyValidationException" } }
            }
          },
          "487": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DeleteDocumentClassifier": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a previously created document classifier</p> <p>Only those classifiers that are in terminated states (IN_ERROR, TRAINED) will be deleted. If an active inference job is using the model, a <code>ResourceInUseException</code> will be returned.</p> <p>This is an asynchronous action that puts the classifier into a DELETING state, and it is then removed by a background job. Once removed, the classifier disappears from your account and is no longer available for use. </p>",
        "operationId": "DeleteDocumentClassifier",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DeleteDocumentClassifier"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDocumentClassifierRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDocumentClassifierResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "ResourceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceUnavailableException" } }
            }
          },
          "484": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "485": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DeleteEntityRecognizer": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes an entity recognizer.</p> <p>Only those recognizers that are in terminated states (IN_ERROR, TRAINED) will be deleted. If an active inference job is using the model, a <code>ResourceInUseException</code> will be returned.</p> <p>This is an asynchronous action that puts the recognizer into a DELETING state, and it is then removed by a background job. Once removed, the recognizer disappears from your account and is no longer available for use. </p>",
        "operationId": "DeleteEntityRecognizer",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DeleteEntityRecognizer"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteEntityRecognizerRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteEntityRecognizerResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "ResourceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceUnavailableException" } }
            }
          },
          "484": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "485": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DescribeDocumentClassificationJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the properties associated with a document classification job. Use this operation to get the status of a classification job.",
        "operationId": "DescribeDocumentClassificationJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DescribeDocumentClassificationJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeDocumentClassificationJobRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeDocumentClassificationJobResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "JobNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobNotFoundException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DescribeDocumentClassifier": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the properties associated with a document classifier.",
        "operationId": "DescribeDocumentClassifier",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DescribeDocumentClassifier"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDocumentClassifierRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDocumentClassifierResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DescribeDominantLanguageDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the properties associated with a dominant language detection job. Use this operation to get the status of a detection job.",
        "operationId": "DescribeDominantLanguageDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DescribeDominantLanguageDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeDominantLanguageDetectionJobRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeDominantLanguageDetectionJobResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "JobNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobNotFoundException" } } }
          },
          "482": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DescribeEntitiesDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the properties associated with an entities detection job. Use this operation to get the status of a detection job.",
        "operationId": "DescribeEntitiesDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DescribeEntitiesDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeEntitiesDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeEntitiesDetectionJobResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "JobNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobNotFoundException" } } }
          },
          "482": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DescribeEntityRecognizer": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Provides details about an entity recognizer including status, S3 buckets containing training data, recognizer metadata, metrics, and so on.",
        "operationId": "DescribeEntityRecognizer",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DescribeEntityRecognizer"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeEntityRecognizerRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeEntityRecognizerResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DescribeKeyPhrasesDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the properties associated with a key phrases detection job. Use this operation to get the status of a detection job.",
        "operationId": "DescribeKeyPhrasesDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DescribeKeyPhrasesDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeKeyPhrasesDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeKeyPhrasesDetectionJobResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "JobNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobNotFoundException" } } }
          },
          "482": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DescribeSentimentDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the properties associated with a sentiment detection job. Use this operation to get the status of a detection job.",
        "operationId": "DescribeSentimentDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DescribeSentimentDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeSentimentDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeSentimentDetectionJobResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "JobNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobNotFoundException" } } }
          },
          "482": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DescribeTopicsDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the properties associated with a topic detection job. Use this operation to get the status of a detection job.",
        "operationId": "DescribeTopicsDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DescribeTopicsDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeTopicsDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeTopicsDetectionJobResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "JobNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobNotFoundException" } } }
          },
          "482": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DetectDominantLanguage": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Determines the dominant language of the input text. For a list of languages that Amazon Comprehend can detect, see <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/how-languages.html\">Amazon Comprehend Supported Languages</a>. ",
        "operationId": "DetectDominantLanguage",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DetectDominantLanguage"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DetectDominantLanguageRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DetectDominantLanguageResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TextSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TextSizeLimitExceededException" } }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DetectEntities": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Inspects text for named entities, and returns information about them. For more information, about named entities, see <a>how-entities</a>. ",
        "operationId": "DetectEntities",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DetectEntities"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetectEntitiesRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetectEntitiesResponse" } } }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TextSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TextSizeLimitExceededException" } }
            }
          },
          "482": {
            "description": "UnsupportedLanguageException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedLanguageException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DetectKeyPhrases": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Detects the key noun phrases found in the text. ",
        "operationId": "DetectKeyPhrases",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DetectKeyPhrases"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetectKeyPhrasesRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetectKeyPhrasesResponse" } } }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TextSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TextSizeLimitExceededException" } }
            }
          },
          "482": {
            "description": "UnsupportedLanguageException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedLanguageException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DetectSentiment": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Inspects text and returns an inference of the prevailing sentiment (<code>POSITIVE</code>, <code>NEUTRAL</code>, <code>MIXED</code>, or <code>NEGATIVE</code>). ",
        "operationId": "DetectSentiment",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DetectSentiment"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetectSentimentRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetectSentimentResponse" } } }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TextSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TextSizeLimitExceededException" } }
            }
          },
          "482": {
            "description": "UnsupportedLanguageException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedLanguageException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.DetectSyntax": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Inspects text for syntax and the part of speech of words in the document. For more information, <a>how-syntax</a>.",
        "operationId": "DetectSyntax",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.DetectSyntax"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetectSyntaxRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DetectSyntaxResponse" } } }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TextSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TextSizeLimitExceededException" } }
            }
          },
          "482": {
            "description": "UnsupportedLanguageException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedLanguageException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.ListDocumentClassificationJobs": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets a list of the documentation classification jobs that you have submitted.",
        "operationId": "ListDocumentClassificationJobs",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.ListDocumentClassificationJobs"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListDocumentClassificationJobsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListDocumentClassificationJobsResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "InvalidFilterException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.ListDocumentClassifiers": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets a list of the document classifiers that you have created.",
        "operationId": "ListDocumentClassifiers",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.ListDocumentClassifiers"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListDocumentClassifiersRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListDocumentClassifiersResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "InvalidFilterException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.ListDominantLanguageDetectionJobs": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets a list of the dominant language detection jobs that you have submitted.",
        "operationId": "ListDominantLanguageDetectionJobs",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.ListDominantLanguageDetectionJobs"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ListDominantLanguageDetectionJobsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListDominantLanguageDetectionJobsResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "InvalidFilterException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.ListEntitiesDetectionJobs": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets a list of the entity detection jobs that you have submitted.",
        "operationId": "ListEntitiesDetectionJobs",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.ListEntitiesDetectionJobs"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListEntitiesDetectionJobsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListEntitiesDetectionJobsResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "InvalidFilterException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.ListEntityRecognizers": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Gets a list of the properties of all entity recognizers that you created, including recognizers currently in training. Allows you to filter the list of recognizers based on criteria such as status and submission time. This call returns up to 500 entity recognizers in the list, with a default number of 100 recognizers in the list.</p> <p>The results of this list are not in any particular order. Please get the list and sort locally if needed.</p>",
        "operationId": "ListEntityRecognizers",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.ListEntityRecognizers"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListEntityRecognizersRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListEntityRecognizersResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "InvalidFilterException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.ListKeyPhrasesDetectionJobs": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Get a list of key phrase detection jobs that you have submitted.",
        "operationId": "ListKeyPhrasesDetectionJobs",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.ListKeyPhrasesDetectionJobs"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListKeyPhrasesDetectionJobsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListKeyPhrasesDetectionJobsResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "InvalidFilterException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.ListSentimentDetectionJobs": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets a list of sentiment detection jobs that you have submitted.",
        "operationId": "ListSentimentDetectionJobs",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.ListSentimentDetectionJobs"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListSentimentDetectionJobsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListSentimentDetectionJobsResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "InvalidFilterException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.ListTagsForResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all tags associated with a given Amazon Comprehend resource. ",
        "operationId": "ListTagsForResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.ListTagsForResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsForResourceRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsForResourceResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.ListTopicsDetectionJobs": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets a list of the topic detection jobs that you have submitted.",
        "operationId": "ListTopicsDetectionJobs",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.ListTopicsDetectionJobs"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListTopicsDetectionJobsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListTopicsDetectionJobsResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "InvalidFilterException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterException" } } }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StartDocumentClassificationJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Starts an asynchronous document classification job. Use the operation to track the progress of the job.",
        "operationId": "StartDocumentClassificationJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StartDocumentClassificationJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartDocumentClassificationJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StartDocumentClassificationJobResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "ResourceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceUnavailableException" } }
            }
          },
          "484": {
            "description": "KmsKeyValidationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/KmsKeyValidationException" } }
            }
          },
          "485": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StartDominantLanguageDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Starts an asynchronous dominant language detection job for a collection of documents. Use the operation to track the status of a job.",
        "operationId": "StartDominantLanguageDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StartDominantLanguageDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StartDominantLanguageDetectionJobRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StartDominantLanguageDetectionJobResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "KmsKeyValidationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/KmsKeyValidationException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StartEntitiesDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Starts an asynchronous entity detection job for a collection of documents. Use the operation to track the status of a job.</p> <p>This API can be used for either standard entity detection or custom entity recognition. In order to be used for custom entity recognition, the optional <code>EntityRecognizerArn</code> must be used in order to provide access to the recognizer being used to detect the custom entity.</p>",
        "operationId": "StartEntitiesDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StartEntitiesDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartEntitiesDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartEntitiesDetectionJobResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "ResourceUnavailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceUnavailableException" } }
            }
          },
          "484": {
            "description": "KmsKeyValidationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/KmsKeyValidationException" } }
            }
          },
          "485": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StartKeyPhrasesDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Starts an asynchronous key phrase detection job for a collection of documents. Use the operation to track the status of a job.",
        "operationId": "StartKeyPhrasesDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StartKeyPhrasesDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartKeyPhrasesDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartKeyPhrasesDetectionJobResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "KmsKeyValidationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/KmsKeyValidationException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StartSentimentDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Starts an asynchronous sentiment detection job for a collection of documents. use the operation to track the status of a job.",
        "operationId": "StartSentimentDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StartSentimentDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartSentimentDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartSentimentDetectionJobResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "KmsKeyValidationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/KmsKeyValidationException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StartTopicsDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Starts an asynchronous topic detection job. Use the <code>DescribeTopicDetectionJob</code> operation to track the status of a job.",
        "operationId": "StartTopicsDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StartTopicsDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartTopicsDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartTopicsDetectionJobResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "KmsKeyValidationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/KmsKeyValidationException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StopDominantLanguageDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Stops a dominant language detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>",
        "operationId": "StopDominantLanguageDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StopDominantLanguageDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopDominantLanguageDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StopDominantLanguageDetectionJobResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "JobNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobNotFoundException" } } }
          },
          "482": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StopEntitiesDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Stops an entities detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>",
        "operationId": "StopEntitiesDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StopEntitiesDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopEntitiesDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StopEntitiesDetectionJobResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "JobNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobNotFoundException" } } }
          },
          "482": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StopKeyPhrasesDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Stops a key phrases detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>",
        "operationId": "StopKeyPhrasesDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StopKeyPhrasesDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopKeyPhrasesDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StopKeyPhrasesDetectionJobResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "JobNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobNotFoundException" } } }
          },
          "482": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StopSentimentDetectionJob": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Stops a sentiment detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is be stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>",
        "operationId": "StopSentimentDetectionJob",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StopSentimentDetectionJob"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopSentimentDetectionJobRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StopSentimentDetectionJobResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "JobNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobNotFoundException" } } }
          },
          "482": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StopTrainingDocumentClassifier": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Stops a document classifier training job while in progress.</p> <p>If the training job state is <code>TRAINING</code>, the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the training job completes before it can be stopped, it is put into the <code>TRAINED</code>; otherwise the training job is stopped and put into the <code>STOPPED</code> state and the service sends back an HTTP 200 response with an empty HTTP body. </p>",
        "operationId": "StopTrainingDocumentClassifier",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StopTrainingDocumentClassifier"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopTrainingDocumentClassifierRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StopTrainingDocumentClassifierResponse" }
              }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.StopTrainingEntityRecognizer": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Stops an entity recognizer training job while in progress.</p> <p>If the training job state is <code>TRAINING</code>, the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the training job completes before it can be stopped, it is put into the <code>TRAINED</code>; otherwise the training job is stopped and putted into the <code>STOPPED</code> state and the service sends back an HTTP 200 response with an empty HTTP body.</p>",
        "operationId": "StopTrainingEntityRecognizer",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.StopTrainingEntityRecognizer"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopTrainingEntityRecognizerRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StopTrainingEntityRecognizerResponse" } }
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "TooManyRequestsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyRequestsException" } } }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.TagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Associates a specific tag with an Amazon Comprehend resource. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with \"Sales\" as the key might be added to a resource to indicate its use by the sales department. ",
        "operationId": "TagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.TagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TagResourceResponse" } } }
          },
          "480": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } }
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "483": {
            "description": "TooManyTagsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyTagsException" } } }
          },
          "484": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=Comprehend_20171127.UntagResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes a specific tag associated with an Amazon Comprehend resource. ",
        "operationId": "UntagResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["Comprehend_20171127.UntagResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UntagResourceResponse" } } }
          },
          "480": {
            "description": "TooManyTagKeysException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyTagKeysException" } } }
          },
          "481": {
            "description": "InvalidRequestException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRequestException" } } }
          },
          "482": {
            "description": "ConcurrentModificationException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } }
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceNotFoundException" } }
            }
          },
          "484": {
            "description": "InternalServerException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerException" } } }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The Amazon Comprehend multi-region endpoint",
      "url": "http://comprehend.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon Comprehend multi-region endpoint",
      "url": "https://comprehend.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon Comprehend endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://comprehend.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Amazon Comprehend endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://comprehend.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AnyLengthString": { "type": "string" },
      "BatchDetectDominantLanguageItemResult": {
        "description": "The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.",
        "properties": {
          "Index": { "$ref": "#/components/schemas/Integer" },
          "Languages": { "$ref": "#/components/schemas/ListOfDominantLanguages" }
        },
        "type": "object"
      },
      "BatchDetectDominantLanguageRequest": {
        "properties": { "TextList": { "$ref": "#/components/schemas/StringList" } },
        "required": ["TextList"],
        "type": "object"
      },
      "BatchDetectDominantLanguageResponse": {
        "properties": {
          "ErrorList": { "$ref": "#/components/schemas/BatchItemErrorList" },
          "ResultList": { "$ref": "#/components/schemas/ListOfDetectDominantLanguageResult" }
        },
        "required": ["ResultList", "ErrorList"],
        "type": "object"
      },
      "BatchDetectEntitiesItemResult": {
        "description": "The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.",
        "properties": {
          "Entities": { "$ref": "#/components/schemas/ListOfEntities" },
          "Index": { "$ref": "#/components/schemas/Integer" }
        },
        "type": "object"
      },
      "BatchDetectEntitiesRequest": {
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "TextList": { "$ref": "#/components/schemas/StringList" }
        },
        "required": ["TextList", "LanguageCode"],
        "type": "object"
      },
      "BatchDetectEntitiesResponse": {
        "properties": {
          "ErrorList": { "$ref": "#/components/schemas/BatchItemErrorList" },
          "ResultList": { "$ref": "#/components/schemas/ListOfDetectEntitiesResult" }
        },
        "required": ["ResultList", "ErrorList"],
        "type": "object"
      },
      "BatchDetectKeyPhrasesItemResult": {
        "description": "The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.",
        "properties": {
          "Index": { "$ref": "#/components/schemas/Integer" },
          "KeyPhrases": { "$ref": "#/components/schemas/ListOfKeyPhrases" }
        },
        "type": "object"
      },
      "BatchDetectKeyPhrasesRequest": {
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "TextList": { "$ref": "#/components/schemas/StringList" }
        },
        "required": ["TextList", "LanguageCode"],
        "type": "object"
      },
      "BatchDetectKeyPhrasesResponse": {
        "properties": {
          "ErrorList": { "$ref": "#/components/schemas/BatchItemErrorList" },
          "ResultList": { "$ref": "#/components/schemas/ListOfDetectKeyPhrasesResult" }
        },
        "required": ["ResultList", "ErrorList"],
        "type": "object"
      },
      "BatchDetectSentimentItemResult": {
        "description": "The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.",
        "properties": {
          "Index": { "$ref": "#/components/schemas/Integer" },
          "Sentiment": { "$ref": "#/components/schemas/SentimentType" },
          "SentimentScore": { "$ref": "#/components/schemas/SentimentScore" }
        },
        "type": "object"
      },
      "BatchDetectSentimentRequest": {
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "TextList": { "$ref": "#/components/schemas/StringList" }
        },
        "required": ["TextList", "LanguageCode"],
        "type": "object"
      },
      "BatchDetectSentimentResponse": {
        "properties": {
          "ErrorList": { "$ref": "#/components/schemas/BatchItemErrorList" },
          "ResultList": { "$ref": "#/components/schemas/ListOfDetectSentimentResult" }
        },
        "required": ["ResultList", "ErrorList"],
        "type": "object"
      },
      "BatchDetectSyntaxItemResult": {
        "description": "The result of calling the operation. The operation returns one object that is successfully processed by the operation.",
        "properties": {
          "Index": { "$ref": "#/components/schemas/Integer" },
          "SyntaxTokens": { "$ref": "#/components/schemas/ListOfSyntaxTokens" }
        },
        "type": "object"
      },
      "BatchDetectSyntaxRequest": {
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/SyntaxLanguageCode" },
          "TextList": { "$ref": "#/components/schemas/StringList" }
        },
        "required": ["TextList", "LanguageCode"],
        "type": "object"
      },
      "BatchDetectSyntaxResponse": {
        "properties": {
          "ErrorList": { "$ref": "#/components/schemas/BatchItemErrorList" },
          "ResultList": { "$ref": "#/components/schemas/ListOfDetectSyntaxResult" }
        },
        "required": ["ResultList", "ErrorList"],
        "type": "object"
      },
      "BatchItemError": {
        "description": "Describes an error that occurred while processing a document in a batch. The operation returns on <code>BatchItemError</code> object for each document that contained an error.",
        "properties": {
          "ErrorCode": { "$ref": "#/components/schemas/String" },
          "ErrorMessage": { "$ref": "#/components/schemas/String" },
          "Index": { "$ref": "#/components/schemas/Integer" }
        },
        "type": "object"
      },
      "BatchItemErrorList": { "items": { "$ref": "#/components/schemas/BatchItemError" }, "type": "array" },
      "BatchSizeLimitExceededException": {},
      "ClassifierEvaluationMetrics": {
        "description": "Describes the result metrics for the test data associated with an documentation classifier.",
        "properties": {
          "Accuracy": { "$ref": "#/components/schemas/Double" },
          "F1Score": { "$ref": "#/components/schemas/Double" },
          "Precision": { "$ref": "#/components/schemas/Double" },
          "Recall": { "$ref": "#/components/schemas/Double" }
        },
        "type": "object"
      },
      "ClassifierMetadata": {
        "description": "Provides information about a document classifier.",
        "properties": {
          "EvaluationMetrics": { "$ref": "#/components/schemas/ClassifierEvaluationMetrics" },
          "NumberOfLabels": { "$ref": "#/components/schemas/Integer" },
          "NumberOfTestDocuments": { "$ref": "#/components/schemas/Integer" },
          "NumberOfTrainedDocuments": { "$ref": "#/components/schemas/Integer" }
        },
        "type": "object"
      },
      "ClientRequestTokenString": { "maxLength": 64, "minLength": 1, "pattern": "^[a-zA-Z0-9-]+$", "type": "string" },
      "ComprehendArn": {
        "maxLength": 256,
        "pattern": "arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:[a-zA-Z0-9-]{1,64}/[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "type": "string"
      },
      "ComprehendArnName": { "maxLength": 63, "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*", "type": "string" },
      "ConcurrentModificationException": {},
      "CreateDocumentClassifierRequest": {
        "properties": {
          "ClientRequestToken": { "$ref": "#/components/schemas/ClientRequestTokenString" },
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "DocumentClassifierName": { "$ref": "#/components/schemas/ComprehendArnName" },
          "InputDataConfig": { "$ref": "#/components/schemas/DocumentClassifierInputDataConfig" },
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "OutputDataConfig": { "$ref": "#/components/schemas/DocumentClassifierOutputDataConfig" },
          "Tags": { "$ref": "#/components/schemas/TagList" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "required": ["DocumentClassifierName", "DataAccessRoleArn", "InputDataConfig", "LanguageCode"],
        "type": "object"
      },
      "CreateDocumentClassifierResponse": {
        "properties": { "DocumentClassifierArn": { "$ref": "#/components/schemas/DocumentClassifierArn" } },
        "type": "object"
      },
      "CreateEntityRecognizerRequest": {
        "properties": {
          "ClientRequestToken": { "$ref": "#/components/schemas/ClientRequestTokenString" },
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "InputDataConfig": { "$ref": "#/components/schemas/EntityRecognizerInputDataConfig" },
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "RecognizerName": { "$ref": "#/components/schemas/ComprehendArnName" },
          "Tags": { "$ref": "#/components/schemas/TagList" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "required": ["RecognizerName", "DataAccessRoleArn", "InputDataConfig", "LanguageCode"],
        "type": "object"
      },
      "CreateEntityRecognizerResponse": {
        "properties": { "EntityRecognizerArn": { "$ref": "#/components/schemas/EntityRecognizerArn" } },
        "type": "object"
      },
      "DeleteDocumentClassifierRequest": {
        "properties": { "DocumentClassifierArn": { "$ref": "#/components/schemas/DocumentClassifierArn" } },
        "required": ["DocumentClassifierArn"],
        "type": "object"
      },
      "DeleteDocumentClassifierResponse": { "properties": {}, "type": "object" },
      "DeleteEntityRecognizerRequest": {
        "properties": { "EntityRecognizerArn": { "$ref": "#/components/schemas/EntityRecognizerArn" } },
        "required": ["EntityRecognizerArn"],
        "type": "object"
      },
      "DeleteEntityRecognizerResponse": { "properties": {}, "type": "object" },
      "DescribeDocumentClassificationJobRequest": {
        "properties": { "JobId": { "$ref": "#/components/schemas/JobId" } },
        "required": ["JobId"],
        "type": "object"
      },
      "DescribeDocumentClassificationJobResponse": {
        "properties": {
          "DocumentClassificationJobProperties": { "$ref": "#/components/schemas/DocumentClassificationJobProperties" }
        },
        "type": "object"
      },
      "DescribeDocumentClassifierRequest": {
        "properties": { "DocumentClassifierArn": { "$ref": "#/components/schemas/DocumentClassifierArn" } },
        "required": ["DocumentClassifierArn"],
        "type": "object"
      },
      "DescribeDocumentClassifierResponse": {
        "properties": {
          "DocumentClassifierProperties": { "$ref": "#/components/schemas/DocumentClassifierProperties" }
        },
        "type": "object"
      },
      "DescribeDominantLanguageDetectionJobRequest": {
        "properties": { "JobId": { "$ref": "#/components/schemas/JobId" } },
        "required": ["JobId"],
        "type": "object"
      },
      "DescribeDominantLanguageDetectionJobResponse": {
        "properties": {
          "DominantLanguageDetectionJobProperties": {
            "$ref": "#/components/schemas/DominantLanguageDetectionJobProperties"
          }
        },
        "type": "object"
      },
      "DescribeEntitiesDetectionJobRequest": {
        "properties": { "JobId": { "$ref": "#/components/schemas/JobId" } },
        "required": ["JobId"],
        "type": "object"
      },
      "DescribeEntitiesDetectionJobResponse": {
        "properties": {
          "EntitiesDetectionJobProperties": { "$ref": "#/components/schemas/EntitiesDetectionJobProperties" }
        },
        "type": "object"
      },
      "DescribeEntityRecognizerRequest": {
        "properties": { "EntityRecognizerArn": { "$ref": "#/components/schemas/EntityRecognizerArn" } },
        "required": ["EntityRecognizerArn"],
        "type": "object"
      },
      "DescribeEntityRecognizerResponse": {
        "properties": { "EntityRecognizerProperties": { "$ref": "#/components/schemas/EntityRecognizerProperties" } },
        "type": "object"
      },
      "DescribeKeyPhrasesDetectionJobRequest": {
        "properties": { "JobId": { "$ref": "#/components/schemas/JobId" } },
        "required": ["JobId"],
        "type": "object"
      },
      "DescribeKeyPhrasesDetectionJobResponse": {
        "properties": {
          "KeyPhrasesDetectionJobProperties": { "$ref": "#/components/schemas/KeyPhrasesDetectionJobProperties" }
        },
        "type": "object"
      },
      "DescribeSentimentDetectionJobRequest": {
        "properties": { "JobId": { "$ref": "#/components/schemas/JobId" } },
        "required": ["JobId"],
        "type": "object"
      },
      "DescribeSentimentDetectionJobResponse": {
        "properties": {
          "SentimentDetectionJobProperties": { "$ref": "#/components/schemas/SentimentDetectionJobProperties" }
        },
        "type": "object"
      },
      "DescribeTopicsDetectionJobRequest": {
        "properties": { "JobId": { "$ref": "#/components/schemas/JobId" } },
        "required": ["JobId"],
        "type": "object"
      },
      "DescribeTopicsDetectionJobResponse": {
        "properties": {
          "TopicsDetectionJobProperties": { "$ref": "#/components/schemas/TopicsDetectionJobProperties" }
        },
        "type": "object"
      },
      "DetectDominantLanguageRequest": {
        "properties": { "Text": { "$ref": "#/components/schemas/String" } },
        "required": ["Text"],
        "type": "object"
      },
      "DetectDominantLanguageResponse": {
        "properties": { "Languages": { "$ref": "#/components/schemas/ListOfDominantLanguages" } },
        "type": "object"
      },
      "DetectEntitiesRequest": {
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "Text": { "$ref": "#/components/schemas/String" }
        },
        "required": ["Text", "LanguageCode"],
        "type": "object"
      },
      "DetectEntitiesResponse": {
        "properties": { "Entities": { "$ref": "#/components/schemas/ListOfEntities" } },
        "type": "object"
      },
      "DetectKeyPhrasesRequest": {
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "Text": { "$ref": "#/components/schemas/String" }
        },
        "required": ["Text", "LanguageCode"],
        "type": "object"
      },
      "DetectKeyPhrasesResponse": {
        "properties": { "KeyPhrases": { "$ref": "#/components/schemas/ListOfKeyPhrases" } },
        "type": "object"
      },
      "DetectSentimentRequest": {
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "Text": { "$ref": "#/components/schemas/String" }
        },
        "required": ["Text", "LanguageCode"],
        "type": "object"
      },
      "DetectSentimentResponse": {
        "properties": {
          "Sentiment": { "$ref": "#/components/schemas/SentimentType" },
          "SentimentScore": { "$ref": "#/components/schemas/SentimentScore" }
        },
        "type": "object"
      },
      "DetectSyntaxRequest": {
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/SyntaxLanguageCode" },
          "Text": { "$ref": "#/components/schemas/String" }
        },
        "required": ["Text", "LanguageCode"],
        "type": "object"
      },
      "DetectSyntaxResponse": {
        "properties": { "SyntaxTokens": { "$ref": "#/components/schemas/ListOfSyntaxTokens" } },
        "type": "object"
      },
      "DocumentClassificationJobFilter": {
        "description": "Provides information for filtering a list of document classification jobs. For more information, see the operation. You can provide only one filter parameter in each request.",
        "properties": {
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "SubmitTimeAfter": { "$ref": "#/components/schemas/Timestamp" },
          "SubmitTimeBefore": { "$ref": "#/components/schemas/Timestamp" }
        },
        "type": "object"
      },
      "DocumentClassificationJobProperties": {
        "description": "Provides information about a document classification job.",
        "properties": {
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "DocumentClassifierArn": { "$ref": "#/components/schemas/DocumentClassifierArn" },
          "EndTime": { "$ref": "#/components/schemas/Timestamp" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "Message": { "$ref": "#/components/schemas/AnyLengthString" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "SubmitTime": { "$ref": "#/components/schemas/Timestamp" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "type": "object"
      },
      "DocumentClassificationJobPropertiesList": {
        "items": { "$ref": "#/components/schemas/DocumentClassificationJobProperties" },
        "type": "array"
      },
      "DocumentClassifierArn": {
        "maxLength": 256,
        "pattern": "arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "type": "string"
      },
      "DocumentClassifierFilter": {
        "description": "Provides information for filtering a list of document classifiers. You can only specify one filtering parameter in a request. For more information, see the operation.",
        "properties": {
          "Status": { "$ref": "#/components/schemas/ModelStatus" },
          "SubmitTimeAfter": { "$ref": "#/components/schemas/Timestamp" },
          "SubmitTimeBefore": { "$ref": "#/components/schemas/Timestamp" }
        },
        "type": "object"
      },
      "DocumentClassifierInputDataConfig": {
        "description": "<p>The input properties for training a document classifier. </p> <p>For more information on how the input file is formatted, see <a>how-document-classification-training-data</a>. </p>",
        "properties": { "S3Uri": { "$ref": "#/components/schemas/S3Uri" } },
        "required": ["S3Uri"],
        "type": "object"
      },
      "DocumentClassifierOutputDataConfig": {
        "description": "Provides output results configuration parameters for custom classifier jobs. ",
        "properties": {
          "KmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "S3Uri": { "$ref": "#/components/schemas/S3Uri" }
        },
        "type": "object"
      },
      "DocumentClassifierProperties": {
        "description": "Provides information about a document classifier.",
        "properties": {
          "ClassifierMetadata": { "$ref": "#/components/schemas/ClassifierMetadata" },
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "DocumentClassifierArn": { "$ref": "#/components/schemas/DocumentClassifierArn" },
          "EndTime": { "$ref": "#/components/schemas/Timestamp" },
          "InputDataConfig": { "$ref": "#/components/schemas/DocumentClassifierInputDataConfig" },
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "Message": { "$ref": "#/components/schemas/AnyLengthString" },
          "OutputDataConfig": { "$ref": "#/components/schemas/DocumentClassifierOutputDataConfig" },
          "Status": { "$ref": "#/components/schemas/ModelStatus" },
          "SubmitTime": { "$ref": "#/components/schemas/Timestamp" },
          "TrainingEndTime": { "$ref": "#/components/schemas/Timestamp" },
          "TrainingStartTime": { "$ref": "#/components/schemas/Timestamp" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "type": "object"
      },
      "DocumentClassifierPropertiesList": {
        "items": { "$ref": "#/components/schemas/DocumentClassifierProperties" },
        "type": "array"
      },
      "DominantLanguage": {
        "description": "Returns the code for the dominant language in the input text and the level of confidence that Amazon Comprehend has in the accuracy of the detection.",
        "properties": {
          "LanguageCode": { "$ref": "#/components/schemas/String" },
          "Score": { "$ref": "#/components/schemas/Float" }
        },
        "type": "object"
      },
      "DominantLanguageDetectionJobFilter": {
        "description": "Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.",
        "properties": {
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "SubmitTimeAfter": { "$ref": "#/components/schemas/Timestamp" },
          "SubmitTimeBefore": { "$ref": "#/components/schemas/Timestamp" }
        },
        "type": "object"
      },
      "DominantLanguageDetectionJobProperties": {
        "description": "Provides information about a dominant language detection job.",
        "properties": {
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "EndTime": { "$ref": "#/components/schemas/Timestamp" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "Message": { "$ref": "#/components/schemas/AnyLengthString" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "SubmitTime": { "$ref": "#/components/schemas/Timestamp" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "type": "object"
      },
      "DominantLanguageDetectionJobPropertiesList": {
        "items": { "$ref": "#/components/schemas/DominantLanguageDetectionJobProperties" },
        "type": "array"
      },
      "Double": { "format": "double", "type": "number" },
      "EntitiesDetectionJobFilter": {
        "description": "Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.",
        "properties": {
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "SubmitTimeAfter": { "$ref": "#/components/schemas/Timestamp" },
          "SubmitTimeBefore": { "$ref": "#/components/schemas/Timestamp" }
        },
        "type": "object"
      },
      "EntitiesDetectionJobProperties": {
        "description": "Provides information about an entities detection job.",
        "properties": {
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "EndTime": { "$ref": "#/components/schemas/Timestamp" },
          "EntityRecognizerArn": { "$ref": "#/components/schemas/EntityRecognizerArn" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "Message": { "$ref": "#/components/schemas/AnyLengthString" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "SubmitTime": { "$ref": "#/components/schemas/Timestamp" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "type": "object"
      },
      "EntitiesDetectionJobPropertiesList": {
        "items": { "$ref": "#/components/schemas/EntitiesDetectionJobProperties" },
        "type": "array"
      },
      "Entity": {
        "description": "<p>Provides information about an entity. </p> <p> </p>",
        "properties": {
          "BeginOffset": { "$ref": "#/components/schemas/Integer" },
          "EndOffset": { "$ref": "#/components/schemas/Integer" },
          "Score": { "$ref": "#/components/schemas/Float" },
          "Text": { "$ref": "#/components/schemas/String" },
          "Type": { "$ref": "#/components/schemas/EntityType" }
        },
        "type": "object"
      },
      "EntityRecognizerAnnotations": {
        "description": "Describes the annotations associated with a entity recognizer.",
        "properties": { "S3Uri": { "$ref": "#/components/schemas/S3Uri" } },
        "required": ["S3Uri"],
        "type": "object"
      },
      "EntityRecognizerArn": {
        "maxLength": 256,
        "pattern": "arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer/[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "type": "string"
      },
      "EntityRecognizerDocuments": {
        "description": "Describes the training documents submitted with an entity recognizer.",
        "properties": { "S3Uri": { "$ref": "#/components/schemas/S3Uri" } },
        "required": ["S3Uri"],
        "type": "object"
      },
      "EntityRecognizerEntityList": {
        "description": "Describes the entity recognizer submitted with an entity recognizer.",
        "properties": { "S3Uri": { "$ref": "#/components/schemas/S3Uri" } },
        "required": ["S3Uri"],
        "type": "object"
      },
      "EntityRecognizerEvaluationMetrics": {
        "description": "Detailed information about the accuracy of an entity recognizer. ",
        "properties": {
          "F1Score": { "$ref": "#/components/schemas/Double" },
          "Precision": { "$ref": "#/components/schemas/Double" },
          "Recall": { "$ref": "#/components/schemas/Double" }
        },
        "type": "object"
      },
      "EntityRecognizerFilter": {
        "description": "Provides information for filtering a list of entity recognizers. You can only specify one filtering parameter in a request. For more information, see the operation./&gt;",
        "properties": {
          "Status": { "$ref": "#/components/schemas/ModelStatus" },
          "SubmitTimeAfter": { "$ref": "#/components/schemas/Timestamp" },
          "SubmitTimeBefore": { "$ref": "#/components/schemas/Timestamp" }
        },
        "type": "object"
      },
      "EntityRecognizerInputDataConfig": {
        "description": "Specifies the format and location of the input data.",
        "properties": {
          "Annotations": { "$ref": "#/components/schemas/EntityRecognizerAnnotations" },
          "Documents": { "$ref": "#/components/schemas/EntityRecognizerDocuments" },
          "EntityList": { "$ref": "#/components/schemas/EntityRecognizerEntityList" },
          "EntityTypes": { "$ref": "#/components/schemas/EntityTypesList" }
        },
        "required": ["EntityTypes", "Documents"],
        "type": "object"
      },
      "EntityRecognizerMetadata": {
        "description": "Detailed information about an entity recognizer.",
        "properties": {
          "EntityTypes": { "$ref": "#/components/schemas/EntityRecognizerMetadataEntityTypesList" },
          "EvaluationMetrics": { "$ref": "#/components/schemas/EntityRecognizerEvaluationMetrics" },
          "NumberOfTestDocuments": { "$ref": "#/components/schemas/Integer" },
          "NumberOfTrainedDocuments": { "$ref": "#/components/schemas/Integer" }
        },
        "type": "object"
      },
      "EntityRecognizerMetadataEntityTypesList": {
        "items": { "$ref": "#/components/schemas/EntityRecognizerMetadataEntityTypesListItem" },
        "type": "array"
      },
      "EntityRecognizerMetadataEntityTypesListItem": {
        "description": "Individual item from the list of entity types in the metadata of an entity recognizer.",
        "properties": {
          "EvaluationMetrics": { "$ref": "#/components/schemas/EntityTypesEvaluationMetrics" },
          "NumberOfTrainMentions": { "$ref": "#/components/schemas/Integer" },
          "Type": { "$ref": "#/components/schemas/AnyLengthString" }
        },
        "type": "object"
      },
      "EntityRecognizerProperties": {
        "description": "Describes information about an entity recognizer.",
        "properties": {
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "EndTime": { "$ref": "#/components/schemas/Timestamp" },
          "EntityRecognizerArn": { "$ref": "#/components/schemas/EntityRecognizerArn" },
          "InputDataConfig": { "$ref": "#/components/schemas/EntityRecognizerInputDataConfig" },
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "Message": { "$ref": "#/components/schemas/AnyLengthString" },
          "RecognizerMetadata": { "$ref": "#/components/schemas/EntityRecognizerMetadata" },
          "Status": { "$ref": "#/components/schemas/ModelStatus" },
          "SubmitTime": { "$ref": "#/components/schemas/Timestamp" },
          "TrainingEndTime": { "$ref": "#/components/schemas/Timestamp" },
          "TrainingStartTime": { "$ref": "#/components/schemas/Timestamp" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "type": "object"
      },
      "EntityRecognizerPropertiesList": {
        "items": { "$ref": "#/components/schemas/EntityRecognizerProperties" },
        "type": "array"
      },
      "EntityType": {
        "enum": [
          "PERSON",
          "LOCATION",
          "ORGANIZATION",
          "COMMERCIAL_ITEM",
          "EVENT",
          "DATE",
          "QUANTITY",
          "TITLE",
          "OTHER"
        ],
        "type": "string"
      },
      "EntityTypeName": { "maxLength": 64, "pattern": "[_A-Z0-9]+", "type": "string" },
      "EntityTypesEvaluationMetrics": {
        "description": "Detailed information about the accuracy of an entity recognizer for a specific entity type. ",
        "properties": {
          "F1Score": { "$ref": "#/components/schemas/Double" },
          "Precision": { "$ref": "#/components/schemas/Double" },
          "Recall": { "$ref": "#/components/schemas/Double" }
        },
        "type": "object"
      },
      "EntityTypesList": { "items": { "$ref": "#/components/schemas/EntityTypesListItem" }, "type": "array" },
      "EntityTypesListItem": {
        "description": "Information about an individual item on a list of entity types.",
        "properties": { "Type": { "$ref": "#/components/schemas/EntityTypeName" } },
        "required": ["Type"],
        "type": "object"
      },
      "Float": { "format": "float", "type": "number" },
      "IamRoleArn": {
        "maxLength": 2048,
        "minLength": 20,
        "pattern": "arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+",
        "type": "string"
      },
      "InputDataConfig": {
        "description": "The input properties for a topic detection job.",
        "properties": {
          "InputFormat": { "$ref": "#/components/schemas/InputFormat" },
          "S3Uri": { "$ref": "#/components/schemas/S3Uri" }
        },
        "required": ["S3Uri"],
        "type": "object"
      },
      "InputFormat": { "enum": ["ONE_DOC_PER_FILE", "ONE_DOC_PER_LINE"], "type": "string" },
      "Integer": { "type": "integer" },
      "InternalServerException": {},
      "InvalidFilterException": {},
      "InvalidRequestException": {},
      "JobId": { "maxLength": 32, "minLength": 1, "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$", "type": "string" },
      "JobName": {
        "maxLength": 256,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$",
        "type": "string"
      },
      "JobNotFoundException": {},
      "JobStatus": {
        "enum": ["SUBMITTED", "IN_PROGRESS", "COMPLETED", "FAILED", "STOP_REQUESTED", "STOPPED"],
        "type": "string"
      },
      "KeyPhrase": {
        "description": "Describes a key noun phrase.",
        "properties": {
          "BeginOffset": { "$ref": "#/components/schemas/Integer" },
          "EndOffset": { "$ref": "#/components/schemas/Integer" },
          "Score": { "$ref": "#/components/schemas/Float" },
          "Text": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "KeyPhrasesDetectionJobFilter": {
        "description": "Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.",
        "properties": {
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "SubmitTimeAfter": { "$ref": "#/components/schemas/Timestamp" },
          "SubmitTimeBefore": { "$ref": "#/components/schemas/Timestamp" }
        },
        "type": "object"
      },
      "KeyPhrasesDetectionJobProperties": {
        "description": "Provides information about a key phrases detection job.",
        "properties": {
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "EndTime": { "$ref": "#/components/schemas/Timestamp" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "Message": { "$ref": "#/components/schemas/AnyLengthString" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "SubmitTime": { "$ref": "#/components/schemas/Timestamp" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "type": "object"
      },
      "KeyPhrasesDetectionJobPropertiesList": {
        "items": { "$ref": "#/components/schemas/KeyPhrasesDetectionJobProperties" },
        "type": "array"
      },
      "KmsKeyId": { "maxLength": 2048, "type": "string" },
      "KmsKeyValidationException": {},
      "LanguageCode": { "enum": ["en", "es", "fr", "de", "it", "pt"], "type": "string" },
      "ListDocumentClassificationJobsRequest": {
        "properties": {
          "Filter": { "$ref": "#/components/schemas/DocumentClassificationJobFilter" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResultsInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListDocumentClassificationJobsResponse": {
        "properties": {
          "DocumentClassificationJobPropertiesList": {
            "$ref": "#/components/schemas/DocumentClassificationJobPropertiesList"
          },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListDocumentClassifiersRequest": {
        "properties": {
          "Filter": { "$ref": "#/components/schemas/DocumentClassifierFilter" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResultsInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListDocumentClassifiersResponse": {
        "properties": {
          "DocumentClassifierPropertiesList": { "$ref": "#/components/schemas/DocumentClassifierPropertiesList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListDominantLanguageDetectionJobsRequest": {
        "properties": {
          "Filter": { "$ref": "#/components/schemas/DominantLanguageDetectionJobFilter" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResultsInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListDominantLanguageDetectionJobsResponse": {
        "properties": {
          "DominantLanguageDetectionJobPropertiesList": {
            "$ref": "#/components/schemas/DominantLanguageDetectionJobPropertiesList"
          },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListEntitiesDetectionJobsRequest": {
        "properties": {
          "Filter": { "$ref": "#/components/schemas/EntitiesDetectionJobFilter" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResultsInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListEntitiesDetectionJobsResponse": {
        "properties": {
          "EntitiesDetectionJobPropertiesList": { "$ref": "#/components/schemas/EntitiesDetectionJobPropertiesList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListEntityRecognizersRequest": {
        "properties": {
          "Filter": { "$ref": "#/components/schemas/EntityRecognizerFilter" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResultsInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListEntityRecognizersResponse": {
        "properties": {
          "EntityRecognizerPropertiesList": { "$ref": "#/components/schemas/EntityRecognizerPropertiesList" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListKeyPhrasesDetectionJobsRequest": {
        "properties": {
          "Filter": { "$ref": "#/components/schemas/KeyPhrasesDetectionJobFilter" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResultsInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListKeyPhrasesDetectionJobsResponse": {
        "properties": {
          "KeyPhrasesDetectionJobPropertiesList": {
            "$ref": "#/components/schemas/KeyPhrasesDetectionJobPropertiesList"
          },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListOfDetectDominantLanguageResult": {
        "items": { "$ref": "#/components/schemas/BatchDetectDominantLanguageItemResult" },
        "type": "array"
      },
      "ListOfDetectEntitiesResult": {
        "items": { "$ref": "#/components/schemas/BatchDetectEntitiesItemResult" },
        "type": "array"
      },
      "ListOfDetectKeyPhrasesResult": {
        "items": { "$ref": "#/components/schemas/BatchDetectKeyPhrasesItemResult" },
        "type": "array"
      },
      "ListOfDetectSentimentResult": {
        "items": { "$ref": "#/components/schemas/BatchDetectSentimentItemResult" },
        "type": "array"
      },
      "ListOfDetectSyntaxResult": {
        "items": { "$ref": "#/components/schemas/BatchDetectSyntaxItemResult" },
        "type": "array"
      },
      "ListOfDominantLanguages": { "items": { "$ref": "#/components/schemas/DominantLanguage" }, "type": "array" },
      "ListOfEntities": { "items": { "$ref": "#/components/schemas/Entity" }, "type": "array" },
      "ListOfKeyPhrases": { "items": { "$ref": "#/components/schemas/KeyPhrase" }, "type": "array" },
      "ListOfSyntaxTokens": { "items": { "$ref": "#/components/schemas/SyntaxToken" }, "type": "array" },
      "ListSentimentDetectionJobsRequest": {
        "properties": {
          "Filter": { "$ref": "#/components/schemas/SentimentDetectionJobFilter" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResultsInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListSentimentDetectionJobsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "SentimentDetectionJobPropertiesList": { "$ref": "#/components/schemas/SentimentDetectionJobPropertiesList" }
        },
        "type": "object"
      },
      "ListTagsForResourceRequest": {
        "properties": { "ResourceArn": { "$ref": "#/components/schemas/ComprehendArn" } },
        "required": ["ResourceArn"],
        "type": "object"
      },
      "ListTagsForResourceResponse": {
        "properties": {
          "ResourceArn": { "$ref": "#/components/schemas/ComprehendArn" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "ListTopicsDetectionJobsRequest": {
        "properties": {
          "Filter": { "$ref": "#/components/schemas/TopicsDetectionJobFilter" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResultsInteger" },
          "NextToken": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ListTopicsDetectionJobsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "TopicsDetectionJobPropertiesList": { "$ref": "#/components/schemas/TopicsDetectionJobPropertiesList" }
        },
        "type": "object"
      },
      "MaxResultsInteger": { "maximum": 500, "minimum": 1, "type": "integer" },
      "ModelStatus": {
        "enum": ["SUBMITTED", "TRAINING", "DELETING", "STOP_REQUESTED", "STOPPED", "IN_ERROR", "TRAINED"],
        "type": "string"
      },
      "NumberOfTopicsInteger": { "maximum": 100, "minimum": 1, "type": "integer" },
      "OutputDataConfig": {
        "description": "<p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>",
        "properties": {
          "KmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "S3Uri": { "$ref": "#/components/schemas/S3Uri" }
        },
        "required": ["S3Uri"],
        "type": "object"
      },
      "PartOfSpeechTag": {
        "description": "Identifies the part of speech represented by the token and gives the confidence that Amazon Comprehend has that the part of speech was correctly identified. For more information about the parts of speech that Amazon Comprehend can identify, see <a>how-syntax</a>.",
        "properties": {
          "Score": { "$ref": "#/components/schemas/Float" },
          "Tag": { "$ref": "#/components/schemas/PartOfSpeechTagType" }
        },
        "type": "object"
      },
      "PartOfSpeechTagType": {
        "enum": [
          "ADJ",
          "ADP",
          "ADV",
          "AUX",
          "CONJ",
          "CCONJ",
          "DET",
          "INTJ",
          "NOUN",
          "NUM",
          "O",
          "PART",
          "PRON",
          "PROPN",
          "PUNCT",
          "SCONJ",
          "SYM",
          "VERB"
        ],
        "type": "string"
      },
      "ResourceInUseException": {},
      "ResourceLimitExceededException": {},
      "ResourceNotFoundException": {},
      "ResourceUnavailableException": {},
      "S3Uri": { "maxLength": 1024, "pattern": "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?", "type": "string" },
      "SecurityGroupId": { "maxLength": 32, "minLength": 1, "pattern": "[-0-9a-zA-Z]+", "type": "string" },
      "SecurityGroupIds": {
        "items": { "$ref": "#/components/schemas/SecurityGroupId" },
        "maxItems": 5,
        "minItems": 1,
        "type": "array"
      },
      "SentimentDetectionJobFilter": {
        "description": "Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.",
        "properties": {
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "SubmitTimeAfter": { "$ref": "#/components/schemas/Timestamp" },
          "SubmitTimeBefore": { "$ref": "#/components/schemas/Timestamp" }
        },
        "type": "object"
      },
      "SentimentDetectionJobProperties": {
        "description": "Provides information about a sentiment detection job.",
        "properties": {
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "EndTime": { "$ref": "#/components/schemas/Timestamp" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "Message": { "$ref": "#/components/schemas/AnyLengthString" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "SubmitTime": { "$ref": "#/components/schemas/Timestamp" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "type": "object"
      },
      "SentimentDetectionJobPropertiesList": {
        "items": { "$ref": "#/components/schemas/SentimentDetectionJobProperties" },
        "type": "array"
      },
      "SentimentScore": {
        "description": "Describes the level of confidence that Amazon Comprehend has in the accuracy of its detection of sentiments.",
        "properties": {
          "Mixed": { "$ref": "#/components/schemas/Float" },
          "Negative": { "$ref": "#/components/schemas/Float" },
          "Neutral": { "$ref": "#/components/schemas/Float" },
          "Positive": { "$ref": "#/components/schemas/Float" }
        },
        "type": "object"
      },
      "SentimentType": { "enum": ["POSITIVE", "NEGATIVE", "NEUTRAL", "MIXED"], "type": "string" },
      "StartDocumentClassificationJobRequest": {
        "properties": {
          "ClientRequestToken": { "$ref": "#/components/schemas/ClientRequestTokenString" },
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "DocumentClassifierArn": { "$ref": "#/components/schemas/DocumentClassifierArn" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "required": ["DocumentClassifierArn", "InputDataConfig", "OutputDataConfig", "DataAccessRoleArn"],
        "type": "object"
      },
      "StartDocumentClassificationJobResponse": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" }
        },
        "type": "object"
      },
      "StartDominantLanguageDetectionJobRequest": {
        "properties": {
          "ClientRequestToken": { "$ref": "#/components/schemas/ClientRequestTokenString" },
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "required": ["InputDataConfig", "OutputDataConfig", "DataAccessRoleArn"],
        "type": "object"
      },
      "StartDominantLanguageDetectionJobResponse": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" }
        },
        "type": "object"
      },
      "StartEntitiesDetectionJobRequest": {
        "properties": {
          "ClientRequestToken": { "$ref": "#/components/schemas/ClientRequestTokenString" },
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "EntityRecognizerArn": { "$ref": "#/components/schemas/EntityRecognizerArn" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "required": ["InputDataConfig", "OutputDataConfig", "DataAccessRoleArn", "LanguageCode"],
        "type": "object"
      },
      "StartEntitiesDetectionJobResponse": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" }
        },
        "type": "object"
      },
      "StartKeyPhrasesDetectionJobRequest": {
        "properties": {
          "ClientRequestToken": { "$ref": "#/components/schemas/ClientRequestTokenString" },
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "required": ["InputDataConfig", "OutputDataConfig", "DataAccessRoleArn", "LanguageCode"],
        "type": "object"
      },
      "StartKeyPhrasesDetectionJobResponse": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" }
        },
        "type": "object"
      },
      "StartSentimentDetectionJobRequest": {
        "properties": {
          "ClientRequestToken": { "$ref": "#/components/schemas/ClientRequestTokenString" },
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "LanguageCode": { "$ref": "#/components/schemas/LanguageCode" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "required": ["InputDataConfig", "OutputDataConfig", "DataAccessRoleArn", "LanguageCode"],
        "type": "object"
      },
      "StartSentimentDetectionJobResponse": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" }
        },
        "type": "object"
      },
      "StartTopicsDetectionJobRequest": {
        "properties": {
          "ClientRequestToken": { "$ref": "#/components/schemas/ClientRequestTokenString" },
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "NumberOfTopics": { "$ref": "#/components/schemas/NumberOfTopicsInteger" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "required": ["InputDataConfig", "OutputDataConfig", "DataAccessRoleArn"],
        "type": "object"
      },
      "StartTopicsDetectionJobResponse": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" }
        },
        "type": "object"
      },
      "StopDominantLanguageDetectionJobRequest": {
        "properties": { "JobId": { "$ref": "#/components/schemas/JobId" } },
        "required": ["JobId"],
        "type": "object"
      },
      "StopDominantLanguageDetectionJobResponse": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" }
        },
        "type": "object"
      },
      "StopEntitiesDetectionJobRequest": {
        "properties": { "JobId": { "$ref": "#/components/schemas/JobId" } },
        "required": ["JobId"],
        "type": "object"
      },
      "StopEntitiesDetectionJobResponse": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" }
        },
        "type": "object"
      },
      "StopKeyPhrasesDetectionJobRequest": {
        "properties": { "JobId": { "$ref": "#/components/schemas/JobId" } },
        "required": ["JobId"],
        "type": "object"
      },
      "StopKeyPhrasesDetectionJobResponse": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" }
        },
        "type": "object"
      },
      "StopSentimentDetectionJobRequest": {
        "properties": { "JobId": { "$ref": "#/components/schemas/JobId" } },
        "required": ["JobId"],
        "type": "object"
      },
      "StopSentimentDetectionJobResponse": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" }
        },
        "type": "object"
      },
      "StopTrainingDocumentClassifierRequest": {
        "properties": { "DocumentClassifierArn": { "$ref": "#/components/schemas/DocumentClassifierArn" } },
        "required": ["DocumentClassifierArn"],
        "type": "object"
      },
      "StopTrainingDocumentClassifierResponse": { "properties": {}, "type": "object" },
      "StopTrainingEntityRecognizerRequest": {
        "properties": { "EntityRecognizerArn": { "$ref": "#/components/schemas/EntityRecognizerArn" } },
        "required": ["EntityRecognizerArn"],
        "type": "object"
      },
      "StopTrainingEntityRecognizerResponse": { "properties": {}, "type": "object" },
      "String": { "minLength": 1, "type": "string" },
      "StringList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "SubnetId": { "maxLength": 32, "minLength": 1, "pattern": "[-0-9a-zA-Z]+", "type": "string" },
      "Subnets": {
        "items": { "$ref": "#/components/schemas/SubnetId" },
        "maxItems": 16,
        "minItems": 1,
        "type": "array"
      },
      "SyntaxLanguageCode": { "enum": ["en", "es", "fr", "de", "it", "pt"], "type": "string" },
      "SyntaxToken": {
        "description": "Represents a work in the input text that was recognized and assigned a part of speech. There is one syntax token record for each word in the source text.",
        "properties": {
          "BeginOffset": { "$ref": "#/components/schemas/Integer" },
          "EndOffset": { "$ref": "#/components/schemas/Integer" },
          "PartOfSpeech": { "$ref": "#/components/schemas/PartOfSpeechTag" },
          "Text": { "$ref": "#/components/schemas/String" },
          "TokenId": { "$ref": "#/components/schemas/Integer" }
        },
        "type": "object"
      },
      "Tag": {
        "description": "A key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department. ",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TagKey" },
          "Value": { "$ref": "#/components/schemas/TagValue" }
        },
        "required": ["Key"],
        "type": "object"
      },
      "TagKey": { "maxLength": 128, "minLength": 1, "type": "string" },
      "TagKeyList": { "items": { "$ref": "#/components/schemas/TagKey" }, "type": "array" },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "type": "array" },
      "TagResourceRequest": {
        "properties": {
          "ResourceArn": { "$ref": "#/components/schemas/ComprehendArn" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["ResourceArn", "Tags"],
        "type": "object"
      },
      "TagResourceResponse": { "properties": {}, "type": "object" },
      "TagValue": { "maxLength": 256, "minLength": 0, "type": "string" },
      "TextSizeLimitExceededException": {},
      "Timestamp": { "format": "date-time", "type": "string" },
      "TooManyRequestsException": {},
      "TooManyTagKeysException": {},
      "TooManyTagsException": {},
      "TopicsDetectionJobFilter": {
        "description": "Provides information for filtering topic detection jobs. For more information, see .",
        "properties": {
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "SubmitTimeAfter": { "$ref": "#/components/schemas/Timestamp" },
          "SubmitTimeBefore": { "$ref": "#/components/schemas/Timestamp" }
        },
        "type": "object"
      },
      "TopicsDetectionJobProperties": {
        "description": "Provides information about a topic detection job.",
        "properties": {
          "DataAccessRoleArn": { "$ref": "#/components/schemas/IamRoleArn" },
          "EndTime": { "$ref": "#/components/schemas/Timestamp" },
          "InputDataConfig": { "$ref": "#/components/schemas/InputDataConfig" },
          "JobId": { "$ref": "#/components/schemas/JobId" },
          "JobName": { "$ref": "#/components/schemas/JobName" },
          "JobStatus": { "$ref": "#/components/schemas/JobStatus" },
          "Message": { "$ref": "#/components/schemas/AnyLengthString" },
          "NumberOfTopics": { "$ref": "#/components/schemas/Integer" },
          "OutputDataConfig": { "$ref": "#/components/schemas/OutputDataConfig" },
          "SubmitTime": { "$ref": "#/components/schemas/Timestamp" },
          "VolumeKmsKeyId": { "$ref": "#/components/schemas/KmsKeyId" },
          "VpcConfig": { "$ref": "#/components/schemas/VpcConfig" }
        },
        "type": "object"
      },
      "TopicsDetectionJobPropertiesList": {
        "items": { "$ref": "#/components/schemas/TopicsDetectionJobProperties" },
        "type": "array"
      },
      "UnsupportedLanguageException": {},
      "UntagResourceRequest": {
        "properties": {
          "ResourceArn": { "$ref": "#/components/schemas/ComprehendArn" },
          "TagKeys": { "$ref": "#/components/schemas/TagKeyList" }
        },
        "required": ["ResourceArn", "TagKeys"],
        "type": "object"
      },
      "UntagResourceResponse": { "properties": {}, "type": "object" },
      "VpcConfig": {
        "description": " Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html\">Amazon VPC</a>. ",
        "properties": {
          "SecurityGroupIds": { "$ref": "#/components/schemas/SecurityGroupIds" },
          "Subnets": { "$ref": "#/components/schemas/Subnets" }
        },
        "required": ["SecurityGroupIds", "Subnets"],
        "type": "object"
      }
    }
  }
}
