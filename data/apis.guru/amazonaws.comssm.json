{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Systems Manager</fullname> <p>AWS Systems Manager is a collection of capabilities that helps you automate management tasks such as collecting system inventory, applying operating system (OS) patches, automating the creation of Amazon Machine Images (AMIs), and configuring operating systems (OSs) and applications at scale. Systems Manager lets you remotely and securely manage the configuration of your managed instances. A <i>managed instance</i> is any Amazon EC2 instance or on-premises machine in your hybrid environment that has been configured for Systems Manager.</p> <p>This reference is intended to be used with the <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/\">AWS Systems Manager User Guide</a>.</p> <p>To get started, verify prerequisites and configure managed instances. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting Up AWS Systems Manager</a> in the <i>AWS Systems Manager User Guide</i>.</p> <p>For information about other API actions you can perform on Amazon EC2 instances, see the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/\">Amazon EC2 API Reference</a>. For information about how to use a Query API, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/making-api-requests.html\">Making API Requests</a>. </p>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Simple Systems Manager (SSM)",
    "version": "2014-11-06",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-2014-11-06.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "ssm"
  },
  "externalDocs": { "description": "Amazon Web Services documentation", "url": "https://docs.aws.amazon.com/ssm/" },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#X-Amz-Target=AmazonSSM.AddTagsToResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds or overwrites one or more tags for the specified resource. Tags are metadata that you can assign to your documents, managed instances, maintenance windows, Parameter Store parameters, and patch baselines. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. For example, you could define a set of tags for your account's managed instances that helps you track each instance's owner and stack level. For example: Key=Owner and Value=DbAdmin, SysAdmin, or Dev. Or Key=Stack and Value=Production, Pre-Production, or Test.</p> <p>Each resource can have a maximum of 50 tags. </p> <p>We recommend that you devise a set of tag keys that meets your needs for each resource type. Using a consistent set of tag keys makes it easier for you to manage your resources. You can search and filter the resources based on the tags you add. Tags don't have any semantic meaning to Amazon EC2 and are interpreted strictly as a string of characters. </p> <p>For more information about tags, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html\">Tagging Your Amazon EC2 Resources</a> in the <i>Amazon EC2 User Guide</i>.</p>",
        "operationId": "AddTagsToResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.AddTagsToResource"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AddTagsToResourceRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AddTagsToResourceResult" } } }
          },
          "480": {
            "description": "InvalidResourceType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceType" } } }
          },
          "481": {
            "description": "InvalidResourceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceId" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "483": {
            "description": "TooManyTagsError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyTagsError" } } }
          },
          "484": {
            "description": "TooManyUpdates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyUpdates" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.CancelCommand": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.",
        "operationId": "CancelCommand",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.CancelCommand"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CancelCommandRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CancelCommandResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidCommandId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidCommandId" } } }
          },
          "482": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "483": {
            "description": "DuplicateInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateInstanceId" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.CancelMaintenanceWindowExecution": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Stops a maintenance window execution that is already in progress and cancels any tasks in the window that have not already starting running. (Tasks already in progress will continue to completion.)",
        "operationId": "CancelMaintenanceWindowExecution",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.CancelMaintenanceWindowExecution"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CancelMaintenanceWindowExecutionRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CancelMaintenanceWindowExecutionResult" }
              }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.CreateActivation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Registers your on-premises server or virtual machine with Amazon EC2 so that you can manage these resources using Run Command. An on-premises server or virtual machine that has been registered with EC2 is called a managed instance. For more information about activations, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html\">Setting Up AWS Systems Manager for Hybrid Environments</a>.",
        "operationId": "CreateActivation",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.CreateActivation"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateActivationRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateActivationResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.CreateAssociation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Associates the specified Systems Manager document with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, SSM Agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system returns the AssociationAlreadyExists exception.</p>",
        "operationId": "CreateAssociation",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.CreateAssociation"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateAssociationRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateAssociationResult" } } }
          },
          "480": {
            "description": "AssociationAlreadyExists",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationAlreadyExists" } } }
          },
          "481": {
            "description": "AssociationLimitExceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationLimitExceeded" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "483": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "484": {
            "description": "InvalidDocumentVersion",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentVersion" } } }
          },
          "485": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "486": {
            "description": "UnsupportedPlatformType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedPlatformType" } } }
          },
          "487": {
            "description": "InvalidOutputLocation",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidOutputLocation" } } }
          },
          "488": {
            "description": "InvalidParameters",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameters" } } }
          },
          "489": {
            "description": "InvalidTarget",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTarget" } } }
          },
          "490": {
            "description": "InvalidSchedule",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidSchedule" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.CreateAssociationBatch": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Associates the specified Systems Manager document with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, SSM Agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system returns the AssociationAlreadyExists exception.</p>",
        "operationId": "CreateAssociationBatch",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.CreateAssociationBatch"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateAssociationBatchRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateAssociationBatchResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "482": {
            "description": "InvalidDocumentVersion",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentVersion" } } }
          },
          "483": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "484": {
            "description": "InvalidParameters",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameters" } } }
          },
          "485": {
            "description": "DuplicateInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateInstanceId" } } }
          },
          "486": {
            "description": "AssociationLimitExceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationLimitExceeded" } } }
          },
          "487": {
            "description": "UnsupportedPlatformType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedPlatformType" } } }
          },
          "488": {
            "description": "InvalidOutputLocation",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidOutputLocation" } } }
          },
          "489": {
            "description": "InvalidTarget",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTarget" } } }
          },
          "490": {
            "description": "InvalidSchedule",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidSchedule" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.CreateDocument": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a Systems Manager document.</p> <p>After you create a document, you can use CreateAssociation to associate it with one or more running instances.</p>",
        "operationId": "CreateDocument",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.CreateDocument"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateDocumentRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateDocumentResult" } } }
          },
          "480": {
            "description": "DocumentAlreadyExists",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DocumentAlreadyExists" } } }
          },
          "481": {
            "description": "MaxDocumentSizeExceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MaxDocumentSizeExceeded" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "483": {
            "description": "InvalidDocumentContent",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentContent" } } }
          },
          "484": {
            "description": "DocumentLimitExceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DocumentLimitExceeded" } } }
          },
          "485": {
            "description": "InvalidDocumentSchemaVersion",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentSchemaVersion" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.CreateMaintenanceWindow": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a new maintenance window.",
        "operationId": "CreateMaintenanceWindow",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.CreateMaintenanceWindow"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateMaintenanceWindowRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateMaintenanceWindowResult" } }
            }
          },
          "480": {
            "description": "IdempotentParameterMismatch",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IdempotentParameterMismatch" } }
            }
          },
          "481": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceLimitExceededException" } }
            }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.CreateOpsItem": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a new OpsItem. You must have permission in AWS Identity and Access Management (IAM) to create a new OpsItem. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting Started with OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their AWS resources. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">AWS Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>. </p>",
        "operationId": "CreateOpsItem",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.CreateOpsItem"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateOpsItemRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateOpsItemResponse" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "OpsItemAlreadyExistsException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OpsItemAlreadyExistsException" } }
            }
          },
          "482": {
            "description": "OpsItemLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OpsItemLimitExceededException" } }
            }
          },
          "483": {
            "description": "OpsItemInvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OpsItemInvalidParameterException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.CreatePatchBaseline": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a patch baseline.</p> <note> <p>For information about valid key and value pairs in <code>PatchFilters</code> for each supported operating system type, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html\">PatchFilter</a>.</p> </note>",
        "operationId": "CreatePatchBaseline",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.CreatePatchBaseline"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreatePatchBaselineRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreatePatchBaselineResult" } }
            }
          },
          "480": {
            "description": "IdempotentParameterMismatch",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IdempotentParameterMismatch" } }
            }
          },
          "481": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceLimitExceededException" } }
            }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.CreateResourceDataSync": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a resource data sync configuration to a single bucket in Amazon S3. This is an asynchronous operation that returns immediately. After a successful initial sync is completed, the system continuously syncs data to the Amazon S3 bucket. To check the status of the sync, use the <a>ListResourceDataSync</a>.</p> <p>By default, data is not encrypted in Amazon S3. We strongly recommend that you enable encryption in Amazon S3 to ensure secure data storage. We also recommend that you secure access to the Amazon S3 bucket by creating a restrictive bucket policy. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync.html\">Configuring Resource Data Sync for Inventory</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
        "operationId": "CreateResourceDataSync",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.CreateResourceDataSync"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateResourceDataSyncRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateResourceDataSyncResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "ResourceDataSyncCountExceededException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceDataSyncCountExceededException" }
              }
            }
          },
          "482": {
            "description": "ResourceDataSyncAlreadyExistsException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceDataSyncAlreadyExistsException" }
              }
            }
          },
          "483": {
            "description": "ResourceDataSyncInvalidConfigurationException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceDataSyncInvalidConfigurationException" }
              }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeleteActivation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes an activation. You are not required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation does not de-register managed instances. You must manually de-register managed instances.",
        "operationId": "DeleteActivation",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeleteActivation"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteActivationRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteActivationResult" } } }
          },
          "480": {
            "description": "InvalidActivationId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidActivationId" } } }
          },
          "481": {
            "description": "InvalidActivation",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidActivation" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "483": {
            "description": "TooManyUpdates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyUpdates" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeleteAssociation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Disassociates the specified Systems Manager document from the specified instance.</p> <p>When you disassociate a document from an instance, it does not change the configuration of the instance. To change the configuration state of an instance after you disassociate a document, you must create a new document with the desired configuration and associate it with the instance.</p>",
        "operationId": "DeleteAssociation",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeleteAssociation"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteAssociationRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteAssociationResult" } } }
          },
          "480": {
            "description": "AssociationDoesNotExist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationDoesNotExist" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "482": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "483": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "484": {
            "description": "TooManyUpdates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyUpdates" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeleteDocument": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the Systems Manager document and all instance associations to the document.</p> <p>Before you delete the document, we recommend that you use <a>DeleteAssociation</a> to disassociate all instances that are associated with the document.</p>",
        "operationId": "DeleteDocument",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeleteDocument"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDocumentRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDocumentResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "482": {
            "description": "InvalidDocumentOperation",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentOperation" } } }
          },
          "483": {
            "description": "AssociatedInstances",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociatedInstances" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeleteInventory": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Delete a custom inventory type, or the data associated with a custom Inventory type. Deleting a custom inventory type is also referred to as deleting a custom inventory schema.",
        "operationId": "DeleteInventory",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeleteInventory"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteInventoryRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteInventoryResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidTypeNameException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTypeNameException" } } }
          },
          "482": {
            "description": "InvalidOptionException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidOptionException" } } }
          },
          "483": {
            "description": "InvalidDeleteInventoryParametersException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidDeleteInventoryParametersException" }
              }
            }
          },
          "484": {
            "description": "InvalidInventoryRequestException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInventoryRequestException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeleteMaintenanceWindow": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes a maintenance window.",
        "operationId": "DeleteMaintenanceWindow",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeleteMaintenanceWindow"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteMaintenanceWindowRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteMaintenanceWindowResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeleteParameter": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Delete a parameter from the system.",
        "operationId": "DeleteParameter",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeleteParameter"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteParameterRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteParameterResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "ParameterNotFound",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ParameterNotFound" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeleteParameters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Delete a list of parameters.",
        "operationId": "DeleteParameters",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeleteParameters"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteParametersRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteParametersResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeletePatchBaseline": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes a patch baseline.",
        "operationId": "DeletePatchBaseline",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeletePatchBaseline"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeletePatchBaselineRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeletePatchBaselineResult" } }
            }
          },
          "480": {
            "description": "ResourceInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResourceInUseException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeleteResourceDataSync": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes a Resource Data Sync configuration. After the configuration is deleted, changes to inventory data on managed instances are no longer synced with the target Amazon S3 bucket. Deleting a sync configuration does not delete data in the target Amazon S3 bucket.",
        "operationId": "DeleteResourceDataSync",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeleteResourceDataSync"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeleteResourceDataSyncRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeleteResourceDataSyncResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "ResourceDataSyncNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceDataSyncNotFoundException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeregisterManagedInstance": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don't plan to use Run Command on the server, we suggest uninstalling SSM Agent first.",
        "operationId": "DeregisterManagedInstance",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeregisterManagedInstance"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DeregisterManagedInstanceRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeregisterManagedInstanceResult" } }
            }
          },
          "480": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeregisterPatchBaselineForPatchGroup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes a patch group from a patch baseline.",
        "operationId": "DeregisterPatchBaselineForPatchGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeregisterPatchBaselineForPatchGroup"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeregisterPatchBaselineForPatchGroupRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeregisterPatchBaselineForPatchGroupResult" }
              }
            }
          },
          "480": {
            "description": "InvalidResourceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceId" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeregisterTargetFromMaintenanceWindow": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes a target from a maintenance window.",
        "operationId": "DeregisterTargetFromMaintenanceWindow",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeregisterTargetFromMaintenanceWindow"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeregisterTargetFromMaintenanceWindowRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeregisterTargetFromMaintenanceWindowResult" }
              }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "482": {
            "description": "TargetInUseException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TargetInUseException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DeregisterTaskFromMaintenanceWindow": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes a task from a maintenance window.",
        "operationId": "DeregisterTaskFromMaintenanceWindow",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DeregisterTaskFromMaintenanceWindow"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeregisterTaskFromMaintenanceWindowRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeregisterTaskFromMaintenanceWindowResult" }
              }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeActivations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes details about the activation, such as the date and time the activation was created, its expiration date, the IAM role assigned to the instances in the activation, and the number of instances registered by using this activation.",
        "operationId": "DescribeActivations",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeActivations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeActivationsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeActivationsResult" } }
            }
          },
          "480": {
            "description": "InvalidFilter",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilter" } } }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeAssociation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the association for the specified target or instance. If you created the association by using the <code>Targets</code> parameter, then you must retrieve the association by using the association ID. If you created the association by specifying an instance ID and a Systems Manager document, then you retrieve the association by specifying the document name and the instance ID. ",
        "operationId": "DescribeAssociation",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeAssociation"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAssociationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAssociationResult" } }
            }
          },
          "480": {
            "description": "AssociationDoesNotExist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationDoesNotExist" } } }
          },
          "481": {
            "description": "InvalidAssociationVersion",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidAssociationVersion" } }
            }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "483": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "484": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeAssociationExecutionTargets": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Use this API action to view information about a specific execution of a specific association.",
        "operationId": "DescribeAssociationExecutionTargets",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeAssociationExecutionTargets"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeAssociationExecutionTargetsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeAssociationExecutionTargetsResult" }
              }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "AssociationDoesNotExist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationDoesNotExist" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "483": {
            "description": "AssociationExecutionDoesNotExist",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AssociationExecutionDoesNotExist" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeAssociationExecutions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Use this API action to view all executions for a specific association ID. ",
        "operationId": "DescribeAssociationExecutions",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeAssociationExecutions"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAssociationExecutionsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAssociationExecutionsResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "AssociationDoesNotExist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationDoesNotExist" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeAutomationExecutions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Provides details about all active and terminated Automation executions.",
        "operationId": "DescribeAutomationExecutions",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeAutomationExecutions"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAutomationExecutionsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAutomationExecutionsResult" } }
            }
          },
          "480": {
            "description": "InvalidFilterKey",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterKey" } } }
          },
          "481": {
            "description": "InvalidFilterValue",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterValue" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "483": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeAutomationStepExecutions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Information about all active and terminated step executions in an Automation workflow.",
        "operationId": "DescribeAutomationStepExecutions",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeAutomationStepExecutions"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAutomationStepExecutionsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeAutomationStepExecutionsResult" }
              }
            }
          },
          "480": {
            "description": "AutomationExecutionNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AutomationExecutionNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "482": {
            "description": "InvalidFilterKey",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterKey" } } }
          },
          "483": {
            "description": "InvalidFilterValue",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterValue" } } }
          },
          "484": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeAvailablePatches": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all patches eligible to be included in a patch baseline.",
        "operationId": "DescribeAvailablePatches",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeAvailablePatches"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAvailablePatchesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeAvailablePatchesResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeDocument": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the specified Systems Manager document.",
        "operationId": "DescribeDocument",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeDocument"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDocumentRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDocumentResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "482": {
            "description": "InvalidDocumentVersion",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentVersion" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeDocumentPermission": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes the permissions for a Systems Manager document. If you created the document, you are the owner. If a document is shared, it can either be shared privately (by specifying a user's AWS account ID) or publicly (<i>All</i>). ",
        "operationId": "DescribeDocumentPermission",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeDocumentPermission"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDocumentPermissionRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeDocumentPermissionResponse" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "482": {
            "description": "InvalidPermissionType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidPermissionType" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeEffectiveInstanceAssociations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "All associations for the instance(s).",
        "operationId": "DescribeEffectiveInstanceAssociations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeEffectiveInstanceAssociations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeEffectiveInstanceAssociationsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeEffectiveInstanceAssociationsResult" }
              }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeEffectivePatchesForPatchBaseline": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline. Note that this API applies only to Windows patch baselines.",
        "operationId": "DescribeEffectivePatchesForPatchBaseline",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeEffectivePatchesForPatchBaseline"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeEffectivePatchesForPatchBaselineRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeEffectivePatchesForPatchBaselineResult" }
              }
            }
          },
          "480": {
            "description": "InvalidResourceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceId" } } }
          },
          "481": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "482": {
            "description": "UnsupportedOperatingSystem",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedOperatingSystem" } }
            }
          },
          "483": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeInstanceAssociationsStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "The status of the associations for the instance(s).",
        "operationId": "DescribeInstanceAssociationsStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeInstanceAssociationsStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeInstanceAssociationsStatusRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeInstanceAssociationsStatusResult" }
              }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeInstanceInformation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Describes one or more of your instances. You can use this to get information about instances like the operating system platform, the SSM Agent version (Linux), status etc. If you specify one or more instance IDs, it returns information for those instances. If you do not specify instance IDs, it returns information for all your instances. If you specify an instance ID that is not valid or an instance that you do not own, you receive an error. </p> <note> <p>The IamRole field for this API action is the Amazon Identity and Access Management (IAM) role assigned to on-premises instances. This call does not return the IAM role for Amazon EC2 instances.</p> </note>",
        "operationId": "DescribeInstanceInformation",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeInstanceInformation"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeInstanceInformationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeInstanceInformationResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "483": {
            "description": "InvalidInstanceInformationFilterValue",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceInformationFilterValue" } }
            }
          },
          "484": {
            "description": "InvalidFilterKey",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterKey" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeInstancePatchStates": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the high-level patch state of one or more instances.",
        "operationId": "DescribeInstancePatchStates",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeInstancePatchStates"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeInstancePatchStatesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeInstancePatchStatesResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeInstancePatchStatesForPatchGroup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the high-level patch state for the instances in the specified patch group.",
        "operationId": "DescribeInstancePatchStatesForPatchGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeInstancePatchStatesForPatchGroup"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeInstancePatchStatesForPatchGroupRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeInstancePatchStatesForPatchGroupResult" }
              }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidFilter",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilter" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeInstancePatches": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves information about the patches on the specified instance and their state relative to the patch baseline being used for the instance.",
        "operationId": "DescribeInstancePatches",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeInstancePatches"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeInstancePatchesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeInstancePatchesResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "482": {
            "description": "InvalidFilter",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilter" } } }
          },
          "483": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeInventoryDeletions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes a specific delete inventory operation.",
        "operationId": "DescribeInventoryDeletions",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeInventoryDeletions"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeInventoryDeletionsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeInventoryDeletionsResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidDeletionIdException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDeletionIdException" } }
            }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTaskInvocations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the individual task executions (one per target) for a particular task run as part of a maintenance window execution.",
        "operationId": "DescribeMaintenanceWindowExecutionTaskInvocations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeMaintenanceWindowExecutionTaskInvocations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowExecutionTaskInvocationsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowExecutionTaskInvocationsResult" }
              }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTasks": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "For a given maintenance window execution, lists the tasks that were run.",
        "operationId": "DescribeMaintenanceWindowExecutionTasks",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeMaintenanceWindowExecutionTasks"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowExecutionTasksRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowExecutionTasksResult" }
              }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the executions of a maintenance window. This includes information about when the maintenance window was scheduled to be active, and information about tasks registered and run with the maintenance window.",
        "operationId": "DescribeMaintenanceWindowExecutions",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeMaintenanceWindowExecutions"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowExecutionsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowExecutionsResult" }
              }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowSchedule": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves information about upcoming executions of a maintenance window.",
        "operationId": "DescribeMaintenanceWindowSchedule",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeMaintenanceWindowSchedule"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowScheduleRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowScheduleResult" }
              }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTargets": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the targets registered with the maintenance window.",
        "operationId": "DescribeMaintenanceWindowTargets",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeMaintenanceWindowTargets"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowTargetsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowTargetsResult" }
              }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTasks": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the tasks in a maintenance window.",
        "operationId": "DescribeMaintenanceWindowTasks",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeMaintenanceWindowTasks"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowTasksRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowTasksResult" } }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindows": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the maintenance windows in an AWS account.",
        "operationId": "DescribeMaintenanceWindows",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeMaintenanceWindows"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowsResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowsForTarget": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves information about the maintenance window targets or tasks that an instance is associated with.",
        "operationId": "DescribeMaintenanceWindowsForTarget",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeMaintenanceWindowsForTarget"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowsForTargetRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DescribeMaintenanceWindowsForTargetResult" }
              }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeOpsItems": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Query a set of OpsItems. You must have permission in AWS Identity and Access Management (IAM) to query a list of OpsItems. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting Started with OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their AWS resources. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">AWS Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>. </p>",
        "operationId": "DescribeOpsItems",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeOpsItems"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeOpsItemsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeOpsItemsResponse" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeParameters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Get information about a parameter.</p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>",
        "operationId": "DescribeParameters",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeParameters"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeParametersRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeParametersResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidFilterKey",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterKey" } } }
          },
          "482": {
            "description": "InvalidFilterOption",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterOption" } } }
          },
          "483": {
            "description": "InvalidFilterValue",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterValue" } } }
          },
          "484": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribePatchBaselines": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the patch baselines in your AWS account.",
        "operationId": "DescribePatchBaselines",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribePatchBaselines"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribePatchBaselinesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribePatchBaselinesResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribePatchGroupState": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns high-level aggregated patch compliance state for a patch group.",
        "operationId": "DescribePatchGroupState",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribePatchGroupState"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribePatchGroupStateRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribePatchGroupStateResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribePatchGroups": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists all patch groups that have been registered with patch baselines.",
        "operationId": "DescribePatchGroups",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribePatchGroups"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribePatchGroupsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribePatchGroupsResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribePatchProperties": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the properties of available patches organized by product, product family, classification, severity, and other properties of available patches. You can use the reported properties in the filters you specify in requests for actions such as <a>CreatePatchBaseline</a>, <a>UpdatePatchBaseline</a>, <a>DescribeAvailablePatches</a>, and <a>DescribePatchBaselines</a>.</p> <p>The following section lists the properties that can be used in filters for each major operating system type:</p> <dl> <dt>WINDOWS</dt> <dd> <p>Valid properties: PRODUCT, PRODUCT_FAMILY, CLASSIFICATION, MSRC_SEVERITY</p> </dd> <dt>AMAZON_LINUX</dt> <dd> <p>Valid properties: PRODUCT, CLASSIFICATION, SEVERITY</p> </dd> <dt>AMAZON_LINUX_2</dt> <dd> <p>Valid properties: PRODUCT, CLASSIFICATION, SEVERITY</p> </dd> <dt>UBUNTU </dt> <dd> <p>Valid properties: PRODUCT, PRIORITY</p> </dd> <dt>REDHAT_ENTERPRISE_LINUX</dt> <dd> <p>Valid properties: PRODUCT, CLASSIFICATION, SEVERITY</p> </dd> <dt>SUSE</dt> <dd> <p>Valid properties: PRODUCT, CLASSIFICATION, SEVERITY</p> </dd> <dt>CENTOS</dt> <dd> <p>Valid properties: PRODUCT, CLASSIFICATION, SEVERITY</p> </dd> </dl>",
        "operationId": "DescribePatchProperties",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribePatchProperties"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DescribePatchPropertiesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DescribePatchPropertiesResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.DescribeSessions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves a list of all active sessions (both connected and disconnected) or terminated sessions from the past 30 days.",
        "operationId": "DescribeSessions",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.DescribeSessions"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeSessionsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DescribeSessionsResponse" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidFilterKey",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterKey" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetAutomationExecution": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Get detailed information about a particular Automation execution.",
        "operationId": "GetAutomationExecution",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetAutomationExecution"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetAutomationExecutionRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetAutomationExecutionResult" } }
            }
          },
          "480": {
            "description": "AutomationExecutionNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AutomationExecutionNotFoundException" } }
            }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetCommandInvocation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns detailed information about command execution for an invocation or plugin. ",
        "operationId": "GetCommandInvocation",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetCommandInvocation"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetCommandInvocationRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetCommandInvocationResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidCommandId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidCommandId" } } }
          },
          "482": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "483": {
            "description": "InvalidPluginName",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidPluginName" } } }
          },
          "484": {
            "description": "InvocationDoesNotExist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvocationDoesNotExist" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetConnectionStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the Session Manager connection status for an instance to determine whether it is connected and ready to receive Session Manager connections.",
        "operationId": "GetConnectionStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetConnectionStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetConnectionStatusRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetConnectionStatusResponse" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetDefaultPatchBaseline": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves the default patch baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.</p> <p>If you do not specify an operating system value, the default patch baseline for Windows is returned.</p>",
        "operationId": "GetDefaultPatchBaseline",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetDefaultPatchBaseline"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetDefaultPatchBaselineRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetDefaultPatchBaselineResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetDeployablePatchSnapshotForInstance": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the current snapshot for the patch baseline the instance uses. This API is primarily used by the AWS-RunPatchBaseline Systems Manager document. ",
        "operationId": "GetDeployablePatchSnapshotForInstance",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetDeployablePatchSnapshotForInstance"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetDeployablePatchSnapshotForInstanceRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetDeployablePatchSnapshotForInstanceResult" }
              }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "UnsupportedOperatingSystem",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedOperatingSystem" } }
            }
          },
          "482": {
            "description": "UnsupportedFeatureRequiredException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedFeatureRequiredException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetDocument": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Gets the contents of the specified Systems Manager document.",
        "operationId": "GetDocument",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetDocument"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDocumentRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetDocumentResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "482": {
            "description": "InvalidDocumentVersion",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentVersion" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetInventory": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Query inventory information.",
        "operationId": "GetInventory",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetInventory"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetInventoryRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetInventoryResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidFilter",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilter" } } }
          },
          "482": {
            "description": "InvalidInventoryGroupException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInventoryGroupException" } }
            }
          },
          "483": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "484": {
            "description": "InvalidTypeNameException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTypeNameException" } } }
          },
          "485": {
            "description": "InvalidAggregatorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidAggregatorException" } }
            }
          },
          "486": {
            "description": "InvalidResultAttributeException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResultAttributeException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetInventorySchema": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type. ",
        "operationId": "GetInventorySchema",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetInventorySchema"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetInventorySchemaRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetInventorySchemaResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidTypeNameException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTypeNameException" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetMaintenanceWindow": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves a maintenance window.",
        "operationId": "GetMaintenanceWindow",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetMaintenanceWindow"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetMaintenanceWindowRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetMaintenanceWindowResult" } }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecution": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves details about a specific a maintenance window execution.",
        "operationId": "GetMaintenanceWindowExecution",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetMaintenanceWindowExecution"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetMaintenanceWindowExecutionRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetMaintenanceWindowExecutionResult" } }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTask": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the details about a specific task run as part of a maintenance window execution.",
        "operationId": "GetMaintenanceWindowExecutionTask",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetMaintenanceWindowExecutionTask"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetMaintenanceWindowExecutionTaskRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetMaintenanceWindowExecutionTaskResult" }
              }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTaskInvocation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves information about a specific task running on a specific target.",
        "operationId": "GetMaintenanceWindowExecutionTaskInvocation",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetMaintenanceWindowExecutionTaskInvocation"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetMaintenanceWindowExecutionTaskInvocationRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetMaintenanceWindowExecutionTaskInvocationResult" }
              }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetMaintenanceWindowTask": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the tasks in a maintenance window.",
        "operationId": "GetMaintenanceWindowTask",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetMaintenanceWindowTask"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetMaintenanceWindowTaskRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetMaintenanceWindowTaskResult" } }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetOpsItem": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Get information about an OpsItem by using the ID. You must have permission in AWS Identity and Access Management (IAM) to view information about an OpsItem. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting Started with OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their AWS resources. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">AWS Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>. </p>",
        "operationId": "GetOpsItem",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetOpsItem"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetOpsItemRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetOpsItemResponse" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "OpsItemNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OpsItemNotFoundException" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetOpsSummary": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "View a summary of OpsItems based on specified filters and aggregators.",
        "operationId": "GetOpsSummary",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetOpsSummary"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetOpsSummaryRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetOpsSummaryResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidFilter",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilter" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "483": {
            "description": "InvalidTypeNameException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTypeNameException" } } }
          },
          "484": {
            "description": "InvalidAggregatorException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidAggregatorException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetParameter": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Get information about a parameter by using the parameter name. Don't confuse this API action with the <a>GetParameters</a> API action.",
        "operationId": "GetParameter",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetParameter"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetParameterRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetParameterResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidKeyId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidKeyId" } } }
          },
          "482": {
            "description": "ParameterNotFound",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ParameterNotFound" } } }
          },
          "483": {
            "description": "ParameterVersionNotFound",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ParameterVersionNotFound" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetParameterHistory": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Query a list of all parameters used by the AWS account.",
        "operationId": "GetParameterHistory",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetParameterHistory"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetParameterHistoryRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetParameterHistoryResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "ParameterNotFound",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ParameterNotFound" } } }
          },
          "482": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "483": {
            "description": "InvalidKeyId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidKeyId" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetParameters": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Get details of a parameter. Don't confuse this API action with the <a>GetParameter</a> API action.",
        "operationId": "GetParameters",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetParameters"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetParametersRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetParametersResult" } } }
          },
          "480": {
            "description": "InvalidKeyId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidKeyId" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetParametersByPath": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieve parameters in a specific hierarchy. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-working.html\">Working with Systems Manager Parameters</a> in the <i>AWS Systems Manager User Guide</i>. </p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p> <note> <p>This API action doesn't support filtering by tags. </p> </note>",
        "operationId": "GetParametersByPath",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetParametersByPath"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetParametersByPathRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetParametersByPathResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidFilterKey",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterKey" } } }
          },
          "482": {
            "description": "InvalidFilterOption",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterOption" } } }
          },
          "483": {
            "description": "InvalidFilterValue",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterValue" } } }
          },
          "484": {
            "description": "InvalidKeyId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidKeyId" } } }
          },
          "485": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetPatchBaseline": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves information about a patch baseline.",
        "operationId": "GetPatchBaseline",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetPatchBaseline"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetPatchBaselineRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetPatchBaselineResult" } } }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InvalidResourceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceId" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetPatchBaselineForPatchGroup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the patch baseline that should be used for the specified patch group.",
        "operationId": "GetPatchBaselineForPatchGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetPatchBaselineForPatchGroup"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetPatchBaselineForPatchGroupRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetPatchBaselineForPatchGroupResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.GetServiceSetting": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p> <code>ServiceSetting</code> is an account-level setting for an AWS service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an AWS service charges money to the account based on feature or service usage, then the AWS service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. AWS services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>UpdateServiceSetting</a> API action to change the default setting. Or use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the AWS service team.</p> <p>Query the current service setting for the account. </p>",
        "operationId": "GetServiceSetting",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.GetServiceSetting"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetServiceSettingRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetServiceSettingResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "ServiceSettingNotFound",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceSettingNotFound" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.LabelParameterVersion": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>A parameter label is a user-defined alias to help you manage different versions of a parameter. When you modify a parameter, Systems Manager automatically saves a new version and increments the version number by one. A label can help you remember the purpose of a parameter when there are multiple versions. </p> <p>Parameter labels have the following requirements and restrictions.</p> <ul> <li> <p>A version of a parameter can have a maximum of 10 labels.</p> </li> <li> <p>You can't attach the same label to different versions of the same parameter. For example, if version 1 has the label Production, then you can't attach Production to version 2.</p> </li> <li> <p>You can move a label from one version of a parameter to another.</p> </li> <li> <p>You can't create a label when you create a new parameter. You must attach a label to a specific version of a parameter.</p> </li> <li> <p>You can't delete a parameter label. If you no longer want to use a parameter label, then you must move it to a different version of a parameter.</p> </li> <li> <p>A label can have a maximum of 100 characters.</p> </li> <li> <p>Labels can contain letters (case sensitive), numbers, periods (.), hyphens (-), or underscores (_).</p> </li> <li> <p>Labels can't begin with a number, \"aws,\" or \"ssm\" (not case sensitive). If a label fails to meet these requirements, then the label is not associated with a parameter and the system displays it in the list of InvalidLabels.</p> </li> </ul>",
        "operationId": "LabelParameterVersion",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.LabelParameterVersion"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/LabelParameterVersionRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/LabelParameterVersionResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "TooManyUpdates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyUpdates" } } }
          },
          "482": {
            "description": "ParameterNotFound",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ParameterNotFound" } } }
          },
          "483": {
            "description": "ParameterVersionNotFound",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ParameterVersionNotFound" } } }
          },
          "484": {
            "description": "ParameterVersionLabelLimitExceeded",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterVersionLabelLimitExceeded" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListAssociationVersions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves all versions of an association for a specific association ID.",
        "operationId": "ListAssociationVersions",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListAssociationVersions"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListAssociationVersionsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListAssociationVersionsResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "482": {
            "description": "AssociationDoesNotExist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationDoesNotExist" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListAssociations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the associations for the specified Systems Manager document or instance.",
        "operationId": "ListAssociations",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListAssociations"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListAssociationsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListAssociationsResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListCommandInvocations": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user runs SendCommand against three instances, then a command invocation is created for each requested instance ID. ListCommandInvocations provide status about command execution.",
        "operationId": "ListCommandInvocations",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListCommandInvocations"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListCommandInvocationsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListCommandInvocationsResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidCommandId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidCommandId" } } }
          },
          "482": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "483": {
            "description": "InvalidFilterKey",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterKey" } } }
          },
          "484": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListCommands": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the commands requested by users of the AWS account.",
        "operationId": "ListCommands",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListCommands"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListCommandsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListCommandsResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidCommandId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidCommandId" } } }
          },
          "482": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "483": {
            "description": "InvalidFilterKey",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterKey" } } }
          },
          "484": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListComplianceItems": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "For a specified resource ID, this API action returns a list of compliance statuses for different resource types. Currently, you can only specify one resource ID per call. List results depend on the criteria specified in the filter. ",
        "operationId": "ListComplianceItems",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListComplianceItems"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListComplianceItemsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListComplianceItemsResult" } }
            }
          },
          "480": {
            "description": "InvalidResourceType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceType" } } }
          },
          "481": {
            "description": "InvalidResourceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceId" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "483": {
            "description": "InvalidFilter",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilter" } } }
          },
          "484": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListComplianceSummaries": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a summary count of compliant and non-compliant resources for a compliance type. For example, this call can return State Manager associations, patches, or custom compliance types according to the filter criteria that you specify. ",
        "operationId": "ListComplianceSummaries",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListComplianceSummaries"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListComplianceSummariesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListComplianceSummariesResult" } }
            }
          },
          "480": {
            "description": "InvalidFilter",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilter" } } }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListDocumentVersions": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "List all versions for a document.",
        "operationId": "ListDocumentVersions",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListDocumentVersions"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListDocumentVersionsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListDocumentVersionsResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "482": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListDocuments": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Describes one or more of your Systems Manager documents.",
        "operationId": "ListDocuments",
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListDocuments"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListDocumentsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListDocumentsResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "482": {
            "description": "InvalidFilterKey",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilterKey" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListInventoryEntries": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "A list of inventory items returned by the request.",
        "operationId": "ListInventoryEntries",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListInventoryEntries"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListInventoryEntriesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListInventoryEntriesResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "482": {
            "description": "InvalidTypeNameException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTypeNameException" } } }
          },
          "483": {
            "description": "InvalidFilter",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilter" } } }
          },
          "484": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListResourceComplianceSummaries": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a resource-level summary count. The summary includes information about compliant and non-compliant statuses and detailed compliance-item severity counts, according to the filter criteria you specify.",
        "operationId": "ListResourceComplianceSummaries",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListResourceComplianceSummaries"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListResourceComplianceSummariesRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListResourceComplianceSummariesResult" } }
            }
          },
          "480": {
            "description": "InvalidFilter",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidFilter" } } }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListResourceDataSync": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists your resource data sync configurations. Includes information about the last time a sync attempted to start, the last sync status, and the last time a sync successfully completed.</p> <p>The number of sync configurations might be too large to return using a single call to <code>ListResourceDataSync</code>. You can limit the number of sync configurations returned by using the <code>MaxResults</code> parameter. To determine whether there are more sync configurations to list, check the value of <code>NextToken</code> in the output. If there are more sync configurations to list, you can request them by specifying the <code>NextToken</code> returned in the call to the parameter of a subsequent call. </p>",
        "operationId": "ListResourceDataSync",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListResourceDataSync"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListResourceDataSyncRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListResourceDataSyncResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidNextToken",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNextToken" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ListTagsForResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns a list of the tags assigned to the specified resource.",
        "operationId": "ListTagsForResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ListTagsForResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsForResourceRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ListTagsForResourceResult" } }
            }
          },
          "480": {
            "description": "InvalidResourceType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceType" } } }
          },
          "481": {
            "description": "InvalidResourceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceId" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ModifyDocumentPermission": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Shares a Systems Manager document publicly or privately. If you share a document privately, you must specify the AWS user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.",
        "operationId": "ModifyDocumentPermission",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ModifyDocumentPermission"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ModifyDocumentPermissionRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ModifyDocumentPermissionResponse" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "482": {
            "description": "InvalidPermissionType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidPermissionType" } } }
          },
          "483": {
            "description": "DocumentPermissionLimit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DocumentPermissionLimit" } } }
          },
          "484": {
            "description": "DocumentLimitExceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DocumentLimitExceeded" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.PutComplianceItems": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Registers a compliance type and other compliance details on a designated resource. This action lets you register custom compliance details with a resource. This call overwrites existing compliance information on the resource, so you must provide a full list of compliance items each time that you send the request.</p> <p>ComplianceType can be one of the following:</p> <ul> <li> <p>ExecutionId: The execution ID when the patch, association, or custom compliance item was applied.</p> </li> <li> <p>ExecutionType: Specify patch, association, or Custom:<code>string</code>.</p> </li> <li> <p>ExecutionTime. The time the patch, association, or custom compliance item was applied to the instance.</p> </li> <li> <p>Id: The patch, association, or custom compliance ID.</p> </li> <li> <p>Title: A title.</p> </li> <li> <p>Status: The status of the compliance item. For example, <code>approved</code> for patches, or <code>Failed</code> for associations.</p> </li> <li> <p>Severity: A patch severity. For example, <code>critical</code>.</p> </li> <li> <p>DocumentName: A SSM document name. For example, AWS-RunPatchBaseline.</p> </li> <li> <p>DocumentVersion: An SSM document version number. For example, 4.</p> </li> <li> <p>Classification: A patch classification. For example, <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A patch baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>PatchState: A patch state. For example, <code>InstancesWithFailedPatches</code>.</p> </li> <li> <p>PatchGroup: The name of a patch group.</p> </li> <li> <p>InstalledTime: The time the association, patch, or custom compliance item was applied to the resource. Specify the time by using the following format: yyyy-MM-dd'T'HH:mm:ss'Z'</p> </li> </ul>",
        "operationId": "PutComplianceItems",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.PutComplianceItems"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PutComplianceItemsRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PutComplianceItemsResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidItemContentException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidItemContentException" } }
            }
          },
          "482": {
            "description": "TotalSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TotalSizeLimitExceededException" } }
            }
          },
          "483": {
            "description": "ItemSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ItemSizeLimitExceededException" } }
            }
          },
          "484": {
            "description": "ComplianceTypeCountLimitExceededException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ComplianceTypeCountLimitExceededException" }
              }
            }
          },
          "485": {
            "description": "InvalidResourceType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceType" } } }
          },
          "486": {
            "description": "InvalidResourceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceId" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.PutInventory": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Bulk update custom inventory items on one more instance. The request adds an inventory item, if it doesn't already exist, or updates an inventory item, if it does exist.",
        "operationId": "PutInventory",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.PutInventory"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PutInventoryRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PutInventoryResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "482": {
            "description": "InvalidTypeNameException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTypeNameException" } } }
          },
          "483": {
            "description": "InvalidItemContentException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidItemContentException" } }
            }
          },
          "484": {
            "description": "TotalSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TotalSizeLimitExceededException" } }
            }
          },
          "485": {
            "description": "ItemSizeLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ItemSizeLimitExceededException" } }
            }
          },
          "486": {
            "description": "ItemContentMismatchException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ItemContentMismatchException" } }
            }
          },
          "487": {
            "description": "CustomSchemaCountLimitExceededException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CustomSchemaCountLimitExceededException" }
              }
            }
          },
          "488": {
            "description": "UnsupportedInventorySchemaVersionException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnsupportedInventorySchemaVersionException" }
              }
            }
          },
          "489": {
            "description": "UnsupportedInventoryItemContextException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnsupportedInventoryItemContextException" }
              }
            }
          },
          "490": {
            "description": "InvalidInventoryItemContextException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInventoryItemContextException" } }
            }
          },
          "491": {
            "description": "SubTypeCountLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SubTypeCountLimitExceededException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.PutParameter": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Add a parameter to the system.",
        "operationId": "PutParameter",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.PutParameter"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PutParameterRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PutParameterResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidKeyId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidKeyId" } } }
          },
          "482": {
            "description": "ParameterLimitExceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ParameterLimitExceeded" } } }
          },
          "483": {
            "description": "TooManyUpdates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyUpdates" } } }
          },
          "484": {
            "description": "ParameterAlreadyExists",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ParameterAlreadyExists" } } }
          },
          "485": {
            "description": "HierarchyLevelLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HierarchyLevelLimitExceededException" } }
            }
          },
          "486": {
            "description": "HierarchyTypeMismatchException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HierarchyTypeMismatchException" } }
            }
          },
          "487": {
            "description": "InvalidAllowedPatternException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidAllowedPatternException" } }
            }
          },
          "488": {
            "description": "ParameterMaxVersionLimitExceeded",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterMaxVersionLimitExceeded" } }
            }
          },
          "489": {
            "description": "ParameterPatternMismatchException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ParameterPatternMismatchException" } }
            }
          },
          "490": {
            "description": "UnsupportedParameterType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedParameterType" } } }
          },
          "491": {
            "description": "PoliciesLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PoliciesLimitExceededException" } }
            }
          },
          "492": {
            "description": "InvalidPolicyTypeException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidPolicyTypeException" } }
            }
          },
          "493": {
            "description": "InvalidPolicyAttributeException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidPolicyAttributeException" } }
            }
          },
          "494": {
            "description": "IncompatiblePolicyException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IncompatiblePolicyException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.RegisterDefaultPatchBaseline": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Defines the default patch baseline for the relevant operating system.</p> <p>To reset the AWS predefined patch baseline as the default, specify the full patch baseline ARN as the baseline ID value. For example, for CentOS, specify <code>arn:aws:ssm:us-east-2:733109147000:patchbaseline/pb-0574b43a65ea646ed</code> instead of <code>pb-0574b43a65ea646ed</code>.</p>",
        "operationId": "RegisterDefaultPatchBaseline",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.RegisterDefaultPatchBaseline"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RegisterDefaultPatchBaselineRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RegisterDefaultPatchBaselineResult" } }
            }
          },
          "480": {
            "description": "InvalidResourceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceId" } } }
          },
          "481": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.RegisterPatchBaselineForPatchGroup": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Registers a patch baseline for a patch group.",
        "operationId": "RegisterPatchBaselineForPatchGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.RegisterPatchBaselineForPatchGroup"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterPatchBaselineForPatchGroupRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RegisterPatchBaselineForPatchGroupResult" }
              }
            }
          },
          "480": {
            "description": "AlreadyExistsException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AlreadyExistsException" } } }
          },
          "481": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "482": {
            "description": "InvalidResourceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceId" } } }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceLimitExceededException" } }
            }
          },
          "484": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.RegisterTargetWithMaintenanceWindow": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Registers a target with a maintenance window.",
        "operationId": "RegisterTargetWithMaintenanceWindow",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.RegisterTargetWithMaintenanceWindow"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterTargetWithMaintenanceWindowRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RegisterTargetWithMaintenanceWindowResult" }
              }
            }
          },
          "480": {
            "description": "IdempotentParameterMismatch",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IdempotentParameterMismatch" } }
            }
          },
          "481": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceLimitExceededException" } }
            }
          },
          "483": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.RegisterTaskWithMaintenanceWindow": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Adds a new task to a maintenance window.",
        "operationId": "RegisterTaskWithMaintenanceWindow",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.RegisterTaskWithMaintenanceWindow"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterTaskWithMaintenanceWindowRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RegisterTaskWithMaintenanceWindowResult" }
              }
            }
          },
          "480": {
            "description": "IdempotentParameterMismatch",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IdempotentParameterMismatch" } }
            }
          },
          "481": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResourceLimitExceededException" } }
            }
          },
          "483": {
            "description": "FeatureNotAvailableException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FeatureNotAvailableException" } }
            }
          },
          "484": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.RemoveTagsFromResource": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes tag keys from the specified resource.",
        "operationId": "RemoveTagsFromResource",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.RemoveTagsFromResource"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RemoveTagsFromResourceRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RemoveTagsFromResourceResult" } }
            }
          },
          "480": {
            "description": "InvalidResourceType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceType" } } }
          },
          "481": {
            "description": "InvalidResourceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidResourceId" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "483": {
            "description": "TooManyUpdates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyUpdates" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ResetServiceSetting": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p> <code>ServiceSetting</code> is an account-level setting for an AWS service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an AWS service charges money to the account based on feature or service usage, then the AWS service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. AWS services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>GetServiceSetting</a> API action to view the current value. Use the <a>UpdateServiceSetting</a> API action to change the default setting. </p> <p>Reset the service setting for the account to the default value as provisioned by the AWS service team. </p>",
        "operationId": "ResetServiceSetting",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ResetServiceSetting"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ResetServiceSettingRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ResetServiceSettingResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "ServiceSettingNotFound",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceSettingNotFound" } } }
          },
          "482": {
            "description": "TooManyUpdates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyUpdates" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.ResumeSession": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Reconnects a session to an instance after it has been disconnected. Connections can be resumed for disconnected sessions, but not terminated sessions.</p> <note> <p>This command is primarily for use by client machines to automatically reconnect during intermittent network issues. It is not intended for any other use.</p> </note>",
        "operationId": "ResumeSession",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.ResumeSession"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResumeSessionRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ResumeSessionResponse" } } }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.SendAutomationSignal": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Sends a signal to an Automation execution to change the current behavior or status of the execution. ",
        "operationId": "SendAutomationSignal",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.SendAutomationSignal"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/SendAutomationSignalRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SendAutomationSignalResult" } }
            }
          },
          "480": {
            "description": "AutomationExecutionNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AutomationExecutionNotFoundException" } }
            }
          },
          "481": {
            "description": "AutomationStepNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AutomationStepNotFoundException" } }
            }
          },
          "482": {
            "description": "InvalidAutomationSignalException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidAutomationSignalException" } }
            }
          },
          "483": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.SendCommand": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Runs commands on one or more managed instances.",
        "operationId": "SendCommand",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.SendCommand"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SendCommandRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SendCommandResult" } } }
          },
          "480": {
            "description": "DuplicateInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateInstanceId" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "482": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "483": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "484": {
            "description": "InvalidDocumentVersion",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentVersion" } } }
          },
          "485": {
            "description": "InvalidOutputFolder",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidOutputFolder" } } }
          },
          "486": {
            "description": "InvalidParameters",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameters" } } }
          },
          "487": {
            "description": "UnsupportedPlatformType",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UnsupportedPlatformType" } } }
          },
          "488": {
            "description": "MaxDocumentSizeExceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MaxDocumentSizeExceeded" } } }
          },
          "489": {
            "description": "InvalidRole",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidRole" } } }
          },
          "490": {
            "description": "InvalidNotificationConfig",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidNotificationConfig" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.StartAssociationsOnce": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Use this API action to run an association immediately and only one time. This action can be helpful when troubleshooting associations.",
        "operationId": "StartAssociationsOnce",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.StartAssociationsOnce"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartAssociationsOnceRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartAssociationsOnceResult" } }
            }
          },
          "480": {
            "description": "InvalidAssociation",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidAssociation" } } }
          },
          "481": {
            "description": "AssociationDoesNotExist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationDoesNotExist" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.StartAutomationExecution": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Initiates execution of an Automation document.",
        "operationId": "StartAutomationExecution",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.StartAutomationExecution"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StartAutomationExecutionRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StartAutomationExecutionResult" } }
            }
          },
          "480": {
            "description": "AutomationDefinitionNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AutomationDefinitionNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidAutomationExecutionParametersException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidAutomationExecutionParametersException" }
              }
            }
          },
          "482": {
            "description": "AutomationExecutionLimitExceededException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AutomationExecutionLimitExceededException" }
              }
            }
          },
          "483": {
            "description": "AutomationDefinitionVersionNotFoundException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AutomationDefinitionVersionNotFoundException" }
              }
            }
          },
          "484": {
            "description": "IdempotentParameterMismatch",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/IdempotentParameterMismatch" } }
            }
          },
          "485": {
            "description": "InvalidTarget",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTarget" } } }
          },
          "486": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.StartSession": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Initiates a connection to a target (for example, an instance) for a Session Manager session. Returns a URL and token that can be used to open a WebSocket connection for sending input and receiving outputs.</p> <note> <p>AWS CLI usage: <code>start-session</code> is an interactive command that requires the Session Manager plugin to be installed on the client machine making the call. For information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html\"> Install the Session Manager Plugin for the AWS CLI</a> in the <i>AWS Systems Manager User Guide</i>.</p> </note>",
        "operationId": "StartSession",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.StartSession"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartSessionRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartSessionResponse" } } }
          },
          "480": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "481": {
            "description": "TargetNotConnected",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TargetNotConnected" } } }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.StopAutomationExecution": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Stop an Automation that is currently running.",
        "operationId": "StopAutomationExecution",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.StopAutomationExecution"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/StopAutomationExecutionRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StopAutomationExecutionResult" } }
            }
          },
          "480": {
            "description": "AutomationExecutionNotFoundException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AutomationExecutionNotFoundException" } }
            }
          },
          "481": {
            "description": "InvalidAutomationStatusUpdateException",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InvalidAutomationStatusUpdateException" }
              }
            }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.TerminateSession": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Permanently ends a session and closes the data connection between the Session Manager client and SSM Agent on the instance. A terminated session cannot be resumed.",
        "operationId": "TerminateSession",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.TerminateSession"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TerminateSessionRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TerminateSessionResponse" } } }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdateAssociation": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates an association. You can update the association name and version, the document version, schedule, parameters, and Amazon S3 output.</p> <important> <p>When you update an association, the association immediately runs against the specified targets.</p> </important>",
        "operationId": "UpdateAssociation",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdateAssociation"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateAssociationRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateAssociationResult" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidSchedule",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidSchedule" } } }
          },
          "482": {
            "description": "InvalidParameters",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidParameters" } } }
          },
          "483": {
            "description": "InvalidOutputLocation",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidOutputLocation" } } }
          },
          "484": {
            "description": "InvalidDocumentVersion",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentVersion" } } }
          },
          "485": {
            "description": "AssociationDoesNotExist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationDoesNotExist" } } }
          },
          "486": {
            "description": "InvalidUpdate",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidUpdate" } } }
          },
          "487": {
            "description": "TooManyUpdates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyUpdates" } } }
          },
          "488": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "489": {
            "description": "InvalidTarget",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidTarget" } } }
          },
          "490": {
            "description": "InvalidAssociationVersion",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidAssociationVersion" } }
            }
          },
          "491": {
            "description": "AssociationVersionLimitExceeded",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AssociationVersionLimitExceeded" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdateAssociationStatus": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates the status of the Systems Manager document associated with the specified instance.",
        "operationId": "UpdateAssociationStatus",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdateAssociationStatus"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateAssociationStatusRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateAssociationStatusResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "482": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "483": {
            "description": "AssociationDoesNotExist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AssociationDoesNotExist" } } }
          },
          "484": {
            "description": "StatusUnchanged",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StatusUnchanged" } } }
          },
          "485": {
            "description": "TooManyUpdates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyUpdates" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdateDocument": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates one or more values for an SSM document.",
        "operationId": "UpdateDocument",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdateDocument"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateDocumentRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateDocumentResult" } } }
          },
          "480": {
            "description": "MaxDocumentSizeExceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MaxDocumentSizeExceeded" } } }
          },
          "481": {
            "description": "DocumentVersionLimitExceeded",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DocumentVersionLimitExceeded" } }
            }
          },
          "482": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "483": {
            "description": "DuplicateDocumentContent",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateDocumentContent" } } }
          },
          "484": {
            "description": "DuplicateDocumentVersionName",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DuplicateDocumentVersionName" } }
            }
          },
          "485": {
            "description": "InvalidDocumentContent",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentContent" } } }
          },
          "486": {
            "description": "InvalidDocumentVersion",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentVersion" } } }
          },
          "487": {
            "description": "InvalidDocumentSchemaVersion",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentSchemaVersion" } }
            }
          },
          "488": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "489": {
            "description": "InvalidDocumentOperation",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentOperation" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdateDocumentDefaultVersion": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Set the default version of a document. ",
        "operationId": "UpdateDocumentDefaultVersion",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdateDocumentDefaultVersion"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateDocumentDefaultVersionRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateDocumentDefaultVersionResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "InvalidDocument",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocument" } } }
          },
          "482": {
            "description": "InvalidDocumentVersion",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentVersion" } } }
          },
          "483": {
            "description": "InvalidDocumentSchemaVersion",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InvalidDocumentSchemaVersion" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindow": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates an existing maintenance window. Only specified parameters are modified.",
        "operationId": "UpdateMaintenanceWindow",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdateMaintenanceWindow"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateMaintenanceWindowRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateMaintenanceWindowResult" } }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTarget": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Modifies the target of an existing maintenance window. You can change the following:</p> <ul> <li> <p>Name</p> </li> <li> <p>Description</p> </li> <li> <p>Owner</p> </li> <li> <p>IDs for an ID target</p> </li> <li> <p>Tags for a Tag target</p> </li> <li> <p>From any supported tag type to another. The three supported tag types are ID target, Tag target, and resource group. For more information, see <a>Target</a>.</p> </li> </ul> <note> <p>If a parameter is null, then the corresponding field is not modified.</p> </note>",
        "operationId": "UpdateMaintenanceWindowTarget",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdateMaintenanceWindowTarget"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateMaintenanceWindowTargetRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateMaintenanceWindowTargetResult" } }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTask": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Modifies a task assigned to a maintenance window. You can't change the task type, but you can change the following values:</p> <ul> <li> <p>TaskARN. For example, you can change a RUN_COMMAND task from AWS-RunPowerShellScript to AWS-RunShellScript.</p> </li> <li> <p>ServiceRoleArn</p> </li> <li> <p>TaskInvocationParameters</p> </li> <li> <p>Priority</p> </li> <li> <p>MaxConcurrency</p> </li> <li> <p>MaxErrors</p> </li> </ul> <p>If a parameter is null, then the corresponding field is not modified. Also, if you set Replace to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a> action are required for this request. Optional fields that aren't specified are set to null.</p>",
        "operationId": "UpdateMaintenanceWindowTask",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdateMaintenanceWindowTask"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateMaintenanceWindowTaskRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateMaintenanceWindowTaskResult" } }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdateManagedInstanceRole": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Assigns or changes an Amazon Identity and Access Management (IAM) role for the managed instance.",
        "operationId": "UpdateManagedInstanceRole",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdateManagedInstanceRole"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateManagedInstanceRoleRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateManagedInstanceRoleResult" } }
            }
          },
          "480": {
            "description": "InvalidInstanceId",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvalidInstanceId" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdateOpsItem": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Edit or change an OpsItem. You must have permission in AWS Identity and Access Management (IAM) to update an OpsItem. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting Started with OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their AWS resources. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">AWS Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>. </p>",
        "operationId": "UpdateOpsItem",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdateOpsItem"] }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateOpsItemRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateOpsItemResponse" } } }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "OpsItemNotFoundException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OpsItemNotFoundException" } } }
          },
          "482": {
            "description": "OpsItemAlreadyExistsException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OpsItemAlreadyExistsException" } }
            }
          },
          "483": {
            "description": "OpsItemLimitExceededException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OpsItemLimitExceededException" } }
            }
          },
          "484": {
            "description": "OpsItemInvalidParameterException",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OpsItemInvalidParameterException" } }
            }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdatePatchBaseline": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Modifies an existing patch baseline. Fields not specified in the request are left unchanged.</p> <note> <p>For information about valid key and value pairs in <code>PatchFilters</code> for each supported operating system type, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html\">PatchFilter</a>.</p> </note>",
        "operationId": "UpdatePatchBaseline",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdatePatchBaseline"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdatePatchBaselineRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdatePatchBaselineResult" } }
            }
          },
          "480": {
            "description": "DoesNotExistException",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DoesNotExistException" } } }
          },
          "481": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          }
        }
      }
    },
    "/#X-Amz-Target=AmazonSSM.UpdateServiceSetting": {
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p> <code>ServiceSetting</code> is an account-level setting for an AWS service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an AWS service charges money to the account based on feature or service usage, then the AWS service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. AWS services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>GetServiceSetting</a> API action to view the current value. Or, use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the AWS service team.</p> <p>Update the service setting for the account. </p>",
        "operationId": "UpdateServiceSetting",
        "parameters": [
          {
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "schema": { "type": "string", "enum": ["AmazonSSM.UpdateServiceSetting"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateServiceSettingRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UpdateServiceSettingResult" } }
            }
          },
          "480": {
            "description": "InternalServerError",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InternalServerError" } } }
          },
          "481": {
            "description": "ServiceSettingNotFound",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceSettingNotFound" } } }
          },
          "482": {
            "description": "TooManyUpdates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TooManyUpdates" } } }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "The Amazon SSM multi-region endpoint",
      "url": "http://ssm.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon SSM multi-region endpoint",
      "url": "https://ssm.{region}.amazonaws.com",
      "variables": {
        "region": {
          "default": "us-east-1",
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-south-1",
            "sa-east-1"
          ]
        }
      }
    },
    {
      "description": "The Amazon SSM endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://ssm.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The Amazon SSM endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://ssm.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "Account": { "type": "string" },
      "AccountId": { "pattern": "\\(\\?i\\)all\\|[0-9]\\{12\\}", "type": "string" },
      "AccountIdList": { "items": { "$ref": "#/components/schemas/AccountId" }, "maxItems": 20, "type": "array" },
      "Accounts": {
        "items": { "$ref": "#/components/schemas/Account" },
        "maxItems": 50,
        "minItems": 1,
        "type": "array"
      },
      "Activation": {
        "description": "An activation registers one or more on-premises servers or virtual machines (VMs) with AWS so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with AWS is called a managed instance.",
        "properties": {
          "ActivationId": { "$ref": "#/components/schemas/ActivationId" },
          "CreatedDate": { "$ref": "#/components/schemas/CreatedDate" },
          "DefaultInstanceName": { "$ref": "#/components/schemas/DefaultInstanceName" },
          "Description": { "$ref": "#/components/schemas/ActivationDescription" },
          "ExpirationDate": { "$ref": "#/components/schemas/ExpirationDate" },
          "Expired": { "$ref": "#/components/schemas/Boolean" },
          "IamRole": { "$ref": "#/components/schemas/IamRole" },
          "RegistrationLimit": { "$ref": "#/components/schemas/RegistrationLimit" },
          "RegistrationsCount": { "$ref": "#/components/schemas/RegistrationsCount" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "type": "object"
      },
      "ActivationCode": { "maxLength": 250, "minLength": 20, "type": "string" },
      "ActivationDescription": { "maxLength": 256, "minLength": 0, "type": "string" },
      "ActivationId": { "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", "type": "string" },
      "ActivationList": { "items": { "$ref": "#/components/schemas/Activation" }, "type": "array" },
      "AddTagsToResourceRequest": {
        "properties": {
          "ResourceId": { "$ref": "#/components/schemas/ResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceTypeForTagging" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["ResourceType", "ResourceId", "Tags"],
        "type": "object"
      },
      "AddTagsToResourceResult": { "properties": {}, "type": "object" },
      "AgentErrorCode": { "maxLength": 10, "type": "string" },
      "AggregatorSchemaOnly": { "type": "boolean" },
      "AllowedPattern": { "maxLength": 1024, "minLength": 0, "type": "string" },
      "AlreadyExistsException": {},
      "ApproveAfterDays": { "maximum": 100, "minimum": 0, "type": "integer" },
      "AssociatedInstances": {},
      "Association": {
        "description": "Describes an association of a Systems Manager document and an instance.",
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "AssociationName": { "$ref": "#/components/schemas/AssociationName" },
          "AssociationVersion": { "$ref": "#/components/schemas/AssociationVersion" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "LastExecutionDate": { "$ref": "#/components/schemas/DateTime" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "Overview": { "$ref": "#/components/schemas/AssociationOverview" },
          "ScheduleExpression": { "$ref": "#/components/schemas/ScheduleExpression" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "type": "object"
      },
      "AssociationAlreadyExists": {},
      "AssociationComplianceSeverity": {
        "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW", "UNSPECIFIED"],
        "type": "string"
      },
      "AssociationDescription": {
        "description": "Describes the parameters for a document.",
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "AssociationName": { "$ref": "#/components/schemas/AssociationName" },
          "AssociationVersion": { "$ref": "#/components/schemas/AssociationVersion" },
          "AutomationTargetParameterName": { "$ref": "#/components/schemas/AutomationTargetParameterName" },
          "ComplianceSeverity": { "$ref": "#/components/schemas/AssociationComplianceSeverity" },
          "Date": { "$ref": "#/components/schemas/DateTime" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "LastExecutionDate": { "$ref": "#/components/schemas/DateTime" },
          "LastSuccessfulExecutionDate": { "$ref": "#/components/schemas/DateTime" },
          "LastUpdateAssociationDate": { "$ref": "#/components/schemas/DateTime" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "OutputLocation": { "$ref": "#/components/schemas/InstanceAssociationOutputLocation" },
          "Overview": { "$ref": "#/components/schemas/AssociationOverview" },
          "Parameters": { "$ref": "#/components/schemas/Parameters" },
          "ScheduleExpression": { "$ref": "#/components/schemas/ScheduleExpression" },
          "Status": { "$ref": "#/components/schemas/AssociationStatus" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "type": "object"
      },
      "AssociationDescriptionList": {
        "items": { "$ref": "#/components/schemas/AssociationDescription" },
        "type": "array"
      },
      "AssociationDoesNotExist": {},
      "AssociationExecution": {
        "description": "Includes information about the specified association.",
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "AssociationVersion": { "$ref": "#/components/schemas/AssociationVersion" },
          "CreatedTime": { "$ref": "#/components/schemas/DateTime" },
          "DetailedStatus": { "$ref": "#/components/schemas/StatusName" },
          "ExecutionId": { "$ref": "#/components/schemas/AssociationExecutionId" },
          "LastExecutionDate": { "$ref": "#/components/schemas/DateTime" },
          "ResourceCountByStatus": { "$ref": "#/components/schemas/ResourceCountByStatus" },
          "Status": { "$ref": "#/components/schemas/StatusName" }
        },
        "type": "object"
      },
      "AssociationExecutionDoesNotExist": {},
      "AssociationExecutionFilter": {
        "description": "Filters used in the request.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/AssociationExecutionFilterKey" },
          "Type": { "$ref": "#/components/schemas/AssociationFilterOperatorType" },
          "Value": { "$ref": "#/components/schemas/AssociationExecutionFilterValue" }
        },
        "required": ["Key", "Value", "Type"],
        "type": "object"
      },
      "AssociationExecutionFilterKey": { "enum": ["ExecutionId", "Status", "CreatedTime"], "type": "string" },
      "AssociationExecutionFilterList": {
        "items": { "$ref": "#/components/schemas/AssociationExecutionFilter" },
        "minItems": 1,
        "type": "array"
      },
      "AssociationExecutionFilterValue": { "minLength": 1, "type": "string" },
      "AssociationExecutionId": {
        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
        "type": "string"
      },
      "AssociationExecutionTarget": {
        "description": "Includes information about the specified association execution.",
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "AssociationVersion": { "$ref": "#/components/schemas/AssociationVersion" },
          "DetailedStatus": { "$ref": "#/components/schemas/StatusName" },
          "ExecutionId": { "$ref": "#/components/schemas/AssociationExecutionId" },
          "LastExecutionDate": { "$ref": "#/components/schemas/DateTime" },
          "OutputSource": { "$ref": "#/components/schemas/OutputSource" },
          "ResourceId": { "$ref": "#/components/schemas/AssociationResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/AssociationResourceType" },
          "Status": { "$ref": "#/components/schemas/StatusName" }
        },
        "type": "object"
      },
      "AssociationExecutionTargetsFilter": {
        "description": "Filters for the association execution.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/AssociationExecutionTargetsFilterKey" },
          "Value": { "$ref": "#/components/schemas/AssociationExecutionTargetsFilterValue" }
        },
        "required": ["Key", "Value"],
        "type": "object"
      },
      "AssociationExecutionTargetsFilterKey": { "enum": ["Status", "ResourceId", "ResourceType"], "type": "string" },
      "AssociationExecutionTargetsFilterList": {
        "items": { "$ref": "#/components/schemas/AssociationExecutionTargetsFilter" },
        "minItems": 1,
        "type": "array"
      },
      "AssociationExecutionTargetsFilterValue": { "minLength": 1, "type": "string" },
      "AssociationExecutionTargetsList": {
        "items": { "$ref": "#/components/schemas/AssociationExecutionTarget" },
        "type": "array"
      },
      "AssociationExecutionsList": {
        "items": { "$ref": "#/components/schemas/AssociationExecution" },
        "type": "array"
      },
      "AssociationFilter": {
        "description": "Describes a filter.",
        "properties": {
          "key": { "$ref": "#/components/schemas/AssociationFilterKey" },
          "value": { "$ref": "#/components/schemas/AssociationFilterValue" }
        },
        "required": ["key", "value"],
        "type": "object"
      },
      "AssociationFilterKey": {
        "enum": [
          "InstanceId",
          "Name",
          "AssociationId",
          "AssociationStatusName",
          "LastExecutedBefore",
          "LastExecutedAfter",
          "AssociationName"
        ],
        "type": "string"
      },
      "AssociationFilterList": {
        "items": { "$ref": "#/components/schemas/AssociationFilter" },
        "minItems": 1,
        "type": "array"
      },
      "AssociationFilterOperatorType": { "enum": ["EQUAL", "LESS_THAN", "GREATER_THAN"], "type": "string" },
      "AssociationFilterValue": { "minLength": 1, "type": "string" },
      "AssociationId": {
        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
        "type": "string"
      },
      "AssociationIdList": {
        "items": { "$ref": "#/components/schemas/AssociationId" },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "AssociationLimitExceeded": {},
      "AssociationList": { "items": { "$ref": "#/components/schemas/Association" }, "type": "array" },
      "AssociationName": { "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$", "type": "string" },
      "AssociationOverview": {
        "description": "Information about the association.",
        "properties": {
          "AssociationStatusAggregatedCount": { "$ref": "#/components/schemas/AssociationStatusAggregatedCount" },
          "DetailedStatus": { "$ref": "#/components/schemas/StatusName" },
          "Status": { "$ref": "#/components/schemas/StatusName" }
        },
        "type": "object"
      },
      "AssociationResourceId": { "maxLength": 100, "minLength": 1, "type": "string" },
      "AssociationResourceType": { "maxLength": 50, "minLength": 1, "type": "string" },
      "AssociationStatus": {
        "description": "Describes an association status.",
        "properties": {
          "AdditionalInfo": { "$ref": "#/components/schemas/StatusAdditionalInfo" },
          "Date": { "$ref": "#/components/schemas/DateTime" },
          "Message": { "$ref": "#/components/schemas/StatusMessage" },
          "Name": { "$ref": "#/components/schemas/AssociationStatusName" }
        },
        "required": ["Date", "Name", "Message"],
        "type": "object"
      },
      "AssociationStatusAggregatedCount": {
        "additionalProperties": { "$ref": "#/components/schemas/InstanceCount" },
        "type": "object"
      },
      "AssociationStatusName": { "enum": ["Pending", "Success", "Failed"], "type": "string" },
      "AssociationVersion": { "pattern": "([$]LATEST)|([1-9][0-9]*)", "type": "string" },
      "AssociationVersionInfo": {
        "description": "Information about the association version.",
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "AssociationName": { "$ref": "#/components/schemas/AssociationName" },
          "AssociationVersion": { "$ref": "#/components/schemas/AssociationVersion" },
          "ComplianceSeverity": { "$ref": "#/components/schemas/AssociationComplianceSeverity" },
          "CreatedDate": { "$ref": "#/components/schemas/DateTime" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "OutputLocation": { "$ref": "#/components/schemas/InstanceAssociationOutputLocation" },
          "Parameters": { "$ref": "#/components/schemas/Parameters" },
          "ScheduleExpression": { "$ref": "#/components/schemas/ScheduleExpression" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "type": "object"
      },
      "AssociationVersionLimitExceeded": {},
      "AssociationVersionList": {
        "items": { "$ref": "#/components/schemas/AssociationVersionInfo" },
        "minItems": 1,
        "type": "array"
      },
      "AttachmentContent": {
        "description": "A structure that includes attributes that describe a document attachment.",
        "properties": {
          "Hash": { "$ref": "#/components/schemas/AttachmentHash" },
          "HashType": { "$ref": "#/components/schemas/AttachmentHashType" },
          "Name": { "$ref": "#/components/schemas/AttachmentName" },
          "Size": { "$ref": "#/components/schemas/ContentLength" },
          "Url": { "$ref": "#/components/schemas/AttachmentUrl" }
        },
        "type": "object"
      },
      "AttachmentContentList": { "items": { "$ref": "#/components/schemas/AttachmentContent" }, "type": "array" },
      "AttachmentHash": { "maxLength": 256, "type": "string" },
      "AttachmentHashType": { "enum": ["Sha256"], "type": "string" },
      "AttachmentInformation": {
        "description": "An attribute of an attachment, such as the attachment name.",
        "properties": { "Name": { "$ref": "#/components/schemas/AttachmentName" } },
        "type": "object"
      },
      "AttachmentInformationList": {
        "items": { "$ref": "#/components/schemas/AttachmentInformation" },
        "type": "array"
      },
      "AttachmentName": { "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$", "type": "string" },
      "AttachmentUrl": { "type": "string" },
      "AttachmentsSource": {
        "description": "A key and value pair that identifies the location of an attachment to a document.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/AttachmentsSourceKey" },
          "Values": { "$ref": "#/components/schemas/AttachmentsSourceValues" }
        },
        "type": "object"
      },
      "AttachmentsSourceKey": { "enum": ["SourceUrl"], "type": "string" },
      "AttachmentsSourceList": {
        "items": { "$ref": "#/components/schemas/AttachmentsSource" },
        "maxItems": 1,
        "minItems": 0,
        "type": "array"
      },
      "AttachmentsSourceValue": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "AttachmentsSourceValues": {
        "items": { "$ref": "#/components/schemas/AttachmentsSourceValue" },
        "maxItems": 1,
        "minItems": 1,
        "type": "array"
      },
      "AttributeName": { "maxLength": 64, "minLength": 1, "type": "string" },
      "AttributeValue": { "maxLength": 4096, "minLength": 0, "type": "string" },
      "AutomationActionName": { "pattern": "^aws:[a-zA-Z]{3,25}$", "type": "string" },
      "AutomationDefinitionNotFoundException": {},
      "AutomationDefinitionVersionNotFoundException": {},
      "AutomationExecution": {
        "description": "Detailed information about the current state of an individual Automation execution.",
        "properties": {
          "AutomationExecutionId": { "$ref": "#/components/schemas/AutomationExecutionId" },
          "AutomationExecutionStatus": { "$ref": "#/components/schemas/AutomationExecutionStatus" },
          "CurrentAction": { "$ref": "#/components/schemas/String" },
          "CurrentStepName": { "$ref": "#/components/schemas/String" },
          "DocumentName": { "$ref": "#/components/schemas/DocumentName" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "ExecutedBy": { "$ref": "#/components/schemas/String" },
          "ExecutionEndTime": { "$ref": "#/components/schemas/DateTime" },
          "ExecutionStartTime": { "$ref": "#/components/schemas/DateTime" },
          "FailureMessage": { "$ref": "#/components/schemas/String" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Mode": { "$ref": "#/components/schemas/ExecutionMode" },
          "Outputs": { "$ref": "#/components/schemas/AutomationParameterMap" },
          "Parameters": { "$ref": "#/components/schemas/AutomationParameterMap" },
          "ParentAutomationExecutionId": { "$ref": "#/components/schemas/AutomationExecutionId" },
          "ProgressCounters": { "$ref": "#/components/schemas/ProgressCounters" },
          "ResolvedTargets": { "$ref": "#/components/schemas/ResolvedTargets" },
          "StepExecutions": { "$ref": "#/components/schemas/StepExecutionList" },
          "StepExecutionsTruncated": { "$ref": "#/components/schemas/Boolean" },
          "Target": { "$ref": "#/components/schemas/String" },
          "TargetLocations": { "$ref": "#/components/schemas/TargetLocations" },
          "TargetMaps": { "$ref": "#/components/schemas/TargetMaps" },
          "TargetParameterName": { "$ref": "#/components/schemas/AutomationParameterKey" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "type": "object"
      },
      "AutomationExecutionFilter": {
        "description": "A filter used to match specific automation executions. This is used to limit the scope of Automation execution information returned.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/AutomationExecutionFilterKey" },
          "Values": { "$ref": "#/components/schemas/AutomationExecutionFilterValueList" }
        },
        "required": ["Key", "Values"],
        "type": "object"
      },
      "AutomationExecutionFilterKey": {
        "enum": [
          "DocumentNamePrefix",
          "ExecutionStatus",
          "ExecutionId",
          "ParentExecutionId",
          "CurrentAction",
          "StartTimeBefore",
          "StartTimeAfter",
          "AutomationType"
        ],
        "type": "string"
      },
      "AutomationExecutionFilterList": {
        "items": { "$ref": "#/components/schemas/AutomationExecutionFilter" },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "AutomationExecutionFilterValue": { "maxLength": 150, "minLength": 1, "type": "string" },
      "AutomationExecutionFilterValueList": {
        "items": { "$ref": "#/components/schemas/AutomationExecutionFilterValue" },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "AutomationExecutionId": { "maxLength": 36, "minLength": 36, "type": "string" },
      "AutomationExecutionLimitExceededException": {},
      "AutomationExecutionMetadata": {
        "description": "Details about a specific Automation execution.",
        "properties": {
          "AutomationExecutionId": { "$ref": "#/components/schemas/AutomationExecutionId" },
          "AutomationExecutionStatus": { "$ref": "#/components/schemas/AutomationExecutionStatus" },
          "AutomationType": { "$ref": "#/components/schemas/AutomationType" },
          "CurrentAction": { "$ref": "#/components/schemas/String" },
          "CurrentStepName": { "$ref": "#/components/schemas/String" },
          "DocumentName": { "$ref": "#/components/schemas/DocumentName" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "ExecutedBy": { "$ref": "#/components/schemas/String" },
          "ExecutionEndTime": { "$ref": "#/components/schemas/DateTime" },
          "ExecutionStartTime": { "$ref": "#/components/schemas/DateTime" },
          "FailureMessage": { "$ref": "#/components/schemas/String" },
          "LogFile": { "$ref": "#/components/schemas/String" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Mode": { "$ref": "#/components/schemas/ExecutionMode" },
          "Outputs": { "$ref": "#/components/schemas/AutomationParameterMap" },
          "ParentAutomationExecutionId": { "$ref": "#/components/schemas/AutomationExecutionId" },
          "ResolvedTargets": { "$ref": "#/components/schemas/ResolvedTargets" },
          "Target": { "$ref": "#/components/schemas/String" },
          "TargetMaps": { "$ref": "#/components/schemas/TargetMaps" },
          "TargetParameterName": { "$ref": "#/components/schemas/AutomationParameterKey" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "type": "object"
      },
      "AutomationExecutionMetadataList": {
        "items": { "$ref": "#/components/schemas/AutomationExecutionMetadata" },
        "type": "array"
      },
      "AutomationExecutionNotFoundException": {},
      "AutomationExecutionStatus": {
        "enum": ["Pending", "InProgress", "Waiting", "Success", "TimedOut", "Cancelling", "Cancelled", "Failed"],
        "type": "string"
      },
      "AutomationParameterKey": { "maxLength": 50, "minLength": 1, "type": "string" },
      "AutomationParameterMap": {
        "additionalProperties": { "$ref": "#/components/schemas/AutomationParameterValueList" },
        "maxProperties": 200,
        "minProperties": 1,
        "type": "object"
      },
      "AutomationParameterValue": { "maxLength": 512, "minLength": 1, "type": "string" },
      "AutomationParameterValueList": {
        "items": { "$ref": "#/components/schemas/AutomationParameterValue" },
        "maxItems": 10,
        "minItems": 0,
        "type": "array"
      },
      "AutomationStepNotFoundException": {},
      "AutomationTargetParameterName": { "maxLength": 50, "minLength": 1, "type": "string" },
      "AutomationType": { "enum": ["CrossAccount", "Local"], "type": "string" },
      "BaselineDescription": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "BaselineId": { "maxLength": 128, "minLength": 20, "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$", "type": "string" },
      "BaselineName": { "maxLength": 128, "minLength": 3, "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$", "type": "string" },
      "BatchErrorMessage": { "type": "string" },
      "Boolean": { "type": "boolean" },
      "CancelCommandRequest": {
        "description": "<p/>",
        "properties": {
          "CommandId": { "$ref": "#/components/schemas/CommandId" },
          "InstanceIds": { "$ref": "#/components/schemas/InstanceIdList" }
        },
        "required": ["CommandId"],
        "type": "object"
      },
      "CancelCommandResult": {
        "description": "Whether or not the command was successfully canceled. There is no guarantee that a request can be canceled.",
        "properties": {},
        "type": "object"
      },
      "CancelMaintenanceWindowExecutionRequest": {
        "properties": { "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" } },
        "required": ["WindowExecutionId"],
        "type": "object"
      },
      "CancelMaintenanceWindowExecutionResult": {
        "properties": { "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" } },
        "type": "object"
      },
      "ClientToken": { "maxLength": 64, "minLength": 1, "type": "string" },
      "CloudWatchLogGroupName": {
        "maxLength": 512,
        "minLength": 1,
        "pattern": "[\\.\\-_/#A-Za-z0-9]+",
        "type": "string"
      },
      "CloudWatchOutputConfig": {
        "description": "Configuration options for sending command output to CloudWatch Logs.",
        "properties": {
          "CloudWatchLogGroupName": { "$ref": "#/components/schemas/CloudWatchLogGroupName" },
          "CloudWatchOutputEnabled": { "$ref": "#/components/schemas/CloudWatchOutputEnabled" }
        },
        "type": "object"
      },
      "CloudWatchOutputEnabled": { "type": "boolean" },
      "Command": {
        "description": "Describes a command request.",
        "properties": {
          "CloudWatchOutputConfig": { "$ref": "#/components/schemas/CloudWatchOutputConfig" },
          "CommandId": { "$ref": "#/components/schemas/CommandId" },
          "Comment": { "$ref": "#/components/schemas/Comment" },
          "CompletedCount": { "$ref": "#/components/schemas/CompletedCount" },
          "DeliveryTimedOutCount": { "$ref": "#/components/schemas/DeliveryTimedOutCount" },
          "DocumentName": { "$ref": "#/components/schemas/DocumentName" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "ErrorCount": { "$ref": "#/components/schemas/ErrorCount" },
          "ExpiresAfter": { "$ref": "#/components/schemas/DateTime" },
          "InstanceIds": { "$ref": "#/components/schemas/InstanceIdList" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "NotificationConfig": { "$ref": "#/components/schemas/NotificationConfig" },
          "OutputS3BucketName": { "$ref": "#/components/schemas/S3BucketName" },
          "OutputS3KeyPrefix": { "$ref": "#/components/schemas/S3KeyPrefix" },
          "OutputS3Region": { "$ref": "#/components/schemas/S3Region" },
          "Parameters": { "$ref": "#/components/schemas/Parameters" },
          "RequestedDateTime": { "$ref": "#/components/schemas/DateTime" },
          "ServiceRole": { "$ref": "#/components/schemas/ServiceRole" },
          "Status": { "$ref": "#/components/schemas/CommandStatus" },
          "StatusDetails": { "$ref": "#/components/schemas/StatusDetails" },
          "TargetCount": { "$ref": "#/components/schemas/TargetCount" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "type": "object"
      },
      "CommandFilter": {
        "description": "Describes a command filter.",
        "properties": {
          "key": { "$ref": "#/components/schemas/CommandFilterKey" },
          "value": { "$ref": "#/components/schemas/CommandFilterValue" }
        },
        "required": ["key", "value"],
        "type": "object"
      },
      "CommandFilterKey": {
        "enum": ["InvokedAfter", "InvokedBefore", "Status", "ExecutionStage", "DocumentName"],
        "type": "string"
      },
      "CommandFilterList": {
        "items": { "$ref": "#/components/schemas/CommandFilter" },
        "maxItems": 5,
        "minItems": 1,
        "type": "array"
      },
      "CommandFilterValue": { "maxLength": 128, "minLength": 1, "type": "string" },
      "CommandId": { "maxLength": 36, "minLength": 36, "type": "string" },
      "CommandInvocation": {
        "description": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user runs SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you ran. ",
        "properties": {
          "CloudWatchOutputConfig": { "$ref": "#/components/schemas/CloudWatchOutputConfig" },
          "CommandId": { "$ref": "#/components/schemas/CommandId" },
          "CommandPlugins": { "$ref": "#/components/schemas/CommandPluginList" },
          "Comment": { "$ref": "#/components/schemas/Comment" },
          "DocumentName": { "$ref": "#/components/schemas/DocumentName" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "InstanceName": { "$ref": "#/components/schemas/InstanceTagName" },
          "NotificationConfig": { "$ref": "#/components/schemas/NotificationConfig" },
          "RequestedDateTime": { "$ref": "#/components/schemas/DateTime" },
          "ServiceRole": { "$ref": "#/components/schemas/ServiceRole" },
          "StandardErrorUrl": { "$ref": "#/components/schemas/Url" },
          "StandardOutputUrl": { "$ref": "#/components/schemas/Url" },
          "Status": { "$ref": "#/components/schemas/CommandInvocationStatus" },
          "StatusDetails": { "$ref": "#/components/schemas/StatusDetails" },
          "TraceOutput": { "$ref": "#/components/schemas/InvocationTraceOutput" }
        },
        "type": "object"
      },
      "CommandInvocationList": { "items": { "$ref": "#/components/schemas/CommandInvocation" }, "type": "array" },
      "CommandInvocationStatus": {
        "enum": ["Pending", "InProgress", "Delayed", "Success", "Cancelled", "TimedOut", "Failed", "Cancelling"],
        "type": "string"
      },
      "CommandList": { "items": { "$ref": "#/components/schemas/Command" }, "type": "array" },
      "CommandMaxResults": { "maximum": 50, "minimum": 1, "type": "integer" },
      "CommandPlugin": {
        "description": "Describes plugin details.",
        "properties": {
          "Name": { "$ref": "#/components/schemas/CommandPluginName" },
          "Output": { "$ref": "#/components/schemas/CommandPluginOutput" },
          "OutputS3BucketName": { "$ref": "#/components/schemas/S3BucketName" },
          "OutputS3KeyPrefix": { "$ref": "#/components/schemas/S3KeyPrefix" },
          "OutputS3Region": { "$ref": "#/components/schemas/S3Region" },
          "ResponseCode": { "$ref": "#/components/schemas/ResponseCode" },
          "ResponseFinishDateTime": { "$ref": "#/components/schemas/DateTime" },
          "ResponseStartDateTime": { "$ref": "#/components/schemas/DateTime" },
          "StandardErrorUrl": { "$ref": "#/components/schemas/Url" },
          "StandardOutputUrl": { "$ref": "#/components/schemas/Url" },
          "Status": { "$ref": "#/components/schemas/CommandPluginStatus" },
          "StatusDetails": { "$ref": "#/components/schemas/StatusDetails" }
        },
        "type": "object"
      },
      "CommandPluginList": { "items": { "$ref": "#/components/schemas/CommandPlugin" }, "type": "array" },
      "CommandPluginName": { "minLength": 4, "type": "string" },
      "CommandPluginOutput": { "maxLength": 2500, "type": "string" },
      "CommandPluginStatus": {
        "enum": ["Pending", "InProgress", "Success", "TimedOut", "Cancelled", "Failed"],
        "type": "string"
      },
      "CommandStatus": {
        "enum": ["Pending", "InProgress", "Success", "Cancelled", "Failed", "TimedOut", "Cancelling"],
        "type": "string"
      },
      "Comment": { "maxLength": 100, "type": "string" },
      "CompletedCount": { "type": "integer" },
      "ComplianceExecutionId": { "maxLength": 100, "type": "string" },
      "ComplianceExecutionSummary": {
        "description": "A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
        "properties": {
          "ExecutionId": { "$ref": "#/components/schemas/ComplianceExecutionId" },
          "ExecutionTime": { "$ref": "#/components/schemas/DateTime" },
          "ExecutionType": { "$ref": "#/components/schemas/ComplianceExecutionType" }
        },
        "required": ["ExecutionTime"],
        "type": "object"
      },
      "ComplianceExecutionType": { "maxLength": 50, "type": "string" },
      "ComplianceFilterValue": { "type": "string" },
      "ComplianceItem": {
        "description": "Information about the compliance as defined by the resource type. For example, for a patch resource type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.",
        "properties": {
          "ComplianceType": { "$ref": "#/components/schemas/ComplianceTypeName" },
          "Details": { "$ref": "#/components/schemas/ComplianceItemDetails" },
          "ExecutionSummary": { "$ref": "#/components/schemas/ComplianceExecutionSummary" },
          "Id": { "$ref": "#/components/schemas/ComplianceItemId" },
          "ResourceId": { "$ref": "#/components/schemas/ComplianceResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/ComplianceResourceType" },
          "Severity": { "$ref": "#/components/schemas/ComplianceSeverity" },
          "Status": { "$ref": "#/components/schemas/ComplianceStatus" },
          "Title": { "$ref": "#/components/schemas/ComplianceItemTitle" }
        },
        "type": "object"
      },
      "ComplianceItemContentHash": { "maxLength": 256, "type": "string" },
      "ComplianceItemDetails": {
        "additionalProperties": { "$ref": "#/components/schemas/AttributeValue" },
        "type": "object"
      },
      "ComplianceItemEntry": {
        "description": "Information about a compliance item.",
        "properties": {
          "Details": { "$ref": "#/components/schemas/ComplianceItemDetails" },
          "Id": { "$ref": "#/components/schemas/ComplianceItemId" },
          "Severity": { "$ref": "#/components/schemas/ComplianceSeverity" },
          "Status": { "$ref": "#/components/schemas/ComplianceStatus" },
          "Title": { "$ref": "#/components/schemas/ComplianceItemTitle" }
        },
        "required": ["Severity", "Status"],
        "type": "object"
      },
      "ComplianceItemEntryList": {
        "items": { "$ref": "#/components/schemas/ComplianceItemEntry" },
        "maxItems": 10000,
        "minItems": 0,
        "type": "array"
      },
      "ComplianceItemId": { "maxLength": 100, "minLength": 1, "type": "string" },
      "ComplianceItemList": { "items": { "$ref": "#/components/schemas/ComplianceItem" }, "type": "array" },
      "ComplianceItemTitle": { "maxLength": 500, "type": "string" },
      "ComplianceQueryOperatorType": {
        "enum": ["EQUAL", "NOT_EQUAL", "BEGIN_WITH", "LESS_THAN", "GREATER_THAN"],
        "type": "string"
      },
      "ComplianceResourceId": { "maxLength": 100, "minLength": 1, "type": "string" },
      "ComplianceResourceIdList": {
        "items": { "$ref": "#/components/schemas/ComplianceResourceId" },
        "minItems": 1,
        "type": "array"
      },
      "ComplianceResourceType": { "maxLength": 50, "minLength": 1, "type": "string" },
      "ComplianceResourceTypeList": {
        "items": { "$ref": "#/components/schemas/ComplianceResourceType" },
        "minItems": 1,
        "type": "array"
      },
      "ComplianceSeverity": {
        "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW", "INFORMATIONAL", "UNSPECIFIED"],
        "type": "string"
      },
      "ComplianceStatus": { "enum": ["COMPLIANT", "NON_COMPLIANT"], "type": "string" },
      "ComplianceStringFilter": {
        "description": "One or more filters. Use a filter to return a more specific list of results.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/ComplianceStringFilterKey" },
          "Type": { "$ref": "#/components/schemas/ComplianceQueryOperatorType" },
          "Values": { "$ref": "#/components/schemas/ComplianceStringFilterValueList" }
        },
        "type": "object"
      },
      "ComplianceStringFilterKey": { "maxLength": 200, "minLength": 1, "type": "string" },
      "ComplianceStringFilterList": {
        "items": { "$ref": "#/components/schemas/ComplianceStringFilter" },
        "type": "array"
      },
      "ComplianceStringFilterValueList": {
        "items": { "$ref": "#/components/schemas/ComplianceFilterValue" },
        "maxItems": 20,
        "minItems": 1,
        "type": "array"
      },
      "ComplianceSummaryCount": { "type": "integer" },
      "ComplianceSummaryItem": {
        "description": "A summary of compliance information by compliance type.",
        "properties": {
          "ComplianceType": { "$ref": "#/components/schemas/ComplianceTypeName" },
          "CompliantSummary": { "$ref": "#/components/schemas/CompliantSummary" },
          "NonCompliantSummary": { "$ref": "#/components/schemas/NonCompliantSummary" }
        },
        "type": "object"
      },
      "ComplianceSummaryItemList": {
        "items": { "$ref": "#/components/schemas/ComplianceSummaryItem" },
        "type": "array"
      },
      "ComplianceTypeCountLimitExceededException": {},
      "ComplianceTypeName": {
        "maxLength": 100,
        "minLength": 1,
        "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
        "type": "string"
      },
      "CompliantSummary": {
        "description": "A summary of resources that are compliant. The summary is organized according to the resource count for each compliance type.",
        "properties": {
          "CompliantCount": { "$ref": "#/components/schemas/ComplianceSummaryCount" },
          "SeveritySummary": { "$ref": "#/components/schemas/SeveritySummary" }
        },
        "type": "object"
      },
      "ComputerName": { "maxLength": 255, "minLength": 1, "type": "string" },
      "ConnectionStatus": { "enum": ["Connected", "NotConnected"], "type": "string" },
      "ContentLength": { "type": "integer" },
      "CreateActivationRequest": {
        "properties": {
          "DefaultInstanceName": { "$ref": "#/components/schemas/DefaultInstanceName" },
          "Description": { "$ref": "#/components/schemas/ActivationDescription" },
          "ExpirationDate": { "$ref": "#/components/schemas/ExpirationDate" },
          "IamRole": { "$ref": "#/components/schemas/IamRole" },
          "RegistrationLimit": { "$ref": "#/components/schemas/RegistrationLimit" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["IamRole"],
        "type": "object"
      },
      "CreateActivationResult": {
        "properties": {
          "ActivationCode": { "$ref": "#/components/schemas/ActivationCode" },
          "ActivationId": { "$ref": "#/components/schemas/ActivationId" }
        },
        "type": "object"
      },
      "CreateAssociationBatchRequest": {
        "properties": { "Entries": { "$ref": "#/components/schemas/CreateAssociationBatchRequestEntries" } },
        "required": ["Entries"],
        "type": "object"
      },
      "CreateAssociationBatchRequestEntries": {
        "items": { "$ref": "#/components/schemas/CreateAssociationBatchRequestEntry" },
        "minItems": 1,
        "type": "array"
      },
      "CreateAssociationBatchRequestEntry": {
        "description": "Describes the association of a Systems Manager SSM document and an instance.",
        "properties": {
          "AssociationName": { "$ref": "#/components/schemas/AssociationName" },
          "AutomationTargetParameterName": { "$ref": "#/components/schemas/AutomationTargetParameterName" },
          "ComplianceSeverity": { "$ref": "#/components/schemas/AssociationComplianceSeverity" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "OutputLocation": { "$ref": "#/components/schemas/InstanceAssociationOutputLocation" },
          "Parameters": { "$ref": "#/components/schemas/Parameters" },
          "ScheduleExpression": { "$ref": "#/components/schemas/ScheduleExpression" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "CreateAssociationBatchResult": {
        "properties": {
          "Failed": { "$ref": "#/components/schemas/FailedCreateAssociationList" },
          "Successful": { "$ref": "#/components/schemas/AssociationDescriptionList" }
        },
        "type": "object"
      },
      "CreateAssociationRequest": {
        "properties": {
          "AssociationName": { "$ref": "#/components/schemas/AssociationName" },
          "AutomationTargetParameterName": { "$ref": "#/components/schemas/AutomationTargetParameterName" },
          "ComplianceSeverity": { "$ref": "#/components/schemas/AssociationComplianceSeverity" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "OutputLocation": { "$ref": "#/components/schemas/InstanceAssociationOutputLocation" },
          "Parameters": { "$ref": "#/components/schemas/Parameters" },
          "ScheduleExpression": { "$ref": "#/components/schemas/ScheduleExpression" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "CreateAssociationResult": {
        "properties": { "AssociationDescription": { "$ref": "#/components/schemas/AssociationDescription" } },
        "type": "object"
      },
      "CreateDocumentRequest": {
        "properties": {
          "Attachments": { "$ref": "#/components/schemas/AttachmentsSourceList" },
          "Content": { "$ref": "#/components/schemas/DocumentContent" },
          "DocumentFormat": { "$ref": "#/components/schemas/DocumentFormat" },
          "DocumentType": { "$ref": "#/components/schemas/DocumentType" },
          "Name": { "$ref": "#/components/schemas/DocumentName" },
          "Tags": { "$ref": "#/components/schemas/TagList" },
          "TargetType": { "$ref": "#/components/schemas/TargetType" },
          "VersionName": { "$ref": "#/components/schemas/DocumentVersionName" }
        },
        "required": ["Content", "Name"],
        "type": "object"
      },
      "CreateDocumentResult": {
        "properties": { "DocumentDescription": { "$ref": "#/components/schemas/DocumentDescription" } },
        "type": "object"
      },
      "CreateMaintenanceWindowRequest": {
        "properties": {
          "AllowUnassociatedTargets": { "$ref": "#/components/schemas/MaintenanceWindowAllowUnassociatedTargets" },
          "ClientToken": { "$ref": "#/components/schemas/ClientToken" },
          "Cutoff": { "$ref": "#/components/schemas/MaintenanceWindowCutoff" },
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "Duration": { "$ref": "#/components/schemas/MaintenanceWindowDurationHours" },
          "EndDate": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "Schedule": { "$ref": "#/components/schemas/MaintenanceWindowSchedule" },
          "ScheduleTimezone": { "$ref": "#/components/schemas/MaintenanceWindowTimezone" },
          "StartDate": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["Name", "Schedule", "Duration", "Cutoff", "AllowUnassociatedTargets"],
        "type": "object"
      },
      "CreateMaintenanceWindowResult": {
        "properties": { "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" } },
        "type": "object"
      },
      "CreateOpsItemRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/OpsItemDescription" },
          "Notifications": { "$ref": "#/components/schemas/OpsItemNotifications" },
          "OperationalData": { "$ref": "#/components/schemas/OpsItemOperationalData" },
          "Priority": { "$ref": "#/components/schemas/OpsItemPriority" },
          "RelatedOpsItems": { "$ref": "#/components/schemas/RelatedOpsItems" },
          "Source": { "$ref": "#/components/schemas/OpsItemSource" },
          "Tags": { "$ref": "#/components/schemas/TagList" },
          "Title": { "$ref": "#/components/schemas/OpsItemTitle" }
        },
        "required": ["Description", "Source", "Title"],
        "type": "object"
      },
      "CreateOpsItemResponse": {
        "properties": { "OpsItemId": { "$ref": "#/components/schemas/String" } },
        "type": "object"
      },
      "CreatePatchBaselineRequest": {
        "properties": {
          "ApprovalRules": { "$ref": "#/components/schemas/PatchRuleGroup" },
          "ApprovedPatches": { "$ref": "#/components/schemas/PatchIdList" },
          "ApprovedPatchesComplianceLevel": { "$ref": "#/components/schemas/PatchComplianceLevel" },
          "ApprovedPatchesEnableNonSecurity": { "$ref": "#/components/schemas/Boolean" },
          "ClientToken": { "$ref": "#/components/schemas/ClientToken" },
          "Description": { "$ref": "#/components/schemas/BaselineDescription" },
          "GlobalFilters": { "$ref": "#/components/schemas/PatchFilterGroup" },
          "Name": { "$ref": "#/components/schemas/BaselineName" },
          "OperatingSystem": { "$ref": "#/components/schemas/OperatingSystem" },
          "RejectedPatches": { "$ref": "#/components/schemas/PatchIdList" },
          "RejectedPatchesAction": { "$ref": "#/components/schemas/PatchAction" },
          "Sources": { "$ref": "#/components/schemas/PatchSourceList" },
          "Tags": { "$ref": "#/components/schemas/TagList" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "CreatePatchBaselineResult": {
        "properties": { "BaselineId": { "$ref": "#/components/schemas/BaselineId" } },
        "type": "object"
      },
      "CreateResourceDataSyncRequest": {
        "properties": {
          "S3Destination": { "$ref": "#/components/schemas/ResourceDataSyncS3Destination" },
          "SyncName": { "$ref": "#/components/schemas/ResourceDataSyncName" }
        },
        "required": ["SyncName", "S3Destination"],
        "type": "object"
      },
      "CreateResourceDataSyncResult": { "properties": {}, "type": "object" },
      "CreatedDate": { "format": "date-time", "type": "string" },
      "CustomSchemaCountLimitExceededException": {},
      "DateTime": { "format": "date-time", "type": "string" },
      "DefaultBaseline": { "type": "boolean" },
      "DefaultInstanceName": {
        "maxLength": 256,
        "minLength": 0,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "DeleteActivationRequest": {
        "properties": { "ActivationId": { "$ref": "#/components/schemas/ActivationId" } },
        "required": ["ActivationId"],
        "type": "object"
      },
      "DeleteActivationResult": { "properties": {}, "type": "object" },
      "DeleteAssociationRequest": {
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" }
        },
        "type": "object"
      },
      "DeleteAssociationResult": { "properties": {}, "type": "object" },
      "DeleteDocumentRequest": {
        "properties": {
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "Name": { "$ref": "#/components/schemas/DocumentName" },
          "VersionName": { "$ref": "#/components/schemas/DocumentVersionName" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "DeleteDocumentResult": { "properties": {}, "type": "object" },
      "DeleteInventoryRequest": {
        "properties": {
          "ClientToken": { "$ref": "#/components/schemas/ClientToken" },
          "DryRun": { "$ref": "#/components/schemas/DryRun" },
          "SchemaDeleteOption": { "$ref": "#/components/schemas/InventorySchemaDeleteOption" },
          "TypeName": { "$ref": "#/components/schemas/InventoryItemTypeName" }
        },
        "required": ["TypeName"],
        "type": "object"
      },
      "DeleteInventoryResult": {
        "properties": {
          "DeletionId": { "$ref": "#/components/schemas/InventoryDeletionId" },
          "DeletionSummary": { "$ref": "#/components/schemas/InventoryDeletionSummary" },
          "TypeName": { "$ref": "#/components/schemas/InventoryItemTypeName" }
        },
        "type": "object"
      },
      "DeleteMaintenanceWindowRequest": {
        "properties": { "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" } },
        "required": ["WindowId"],
        "type": "object"
      },
      "DeleteMaintenanceWindowResult": {
        "properties": { "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" } },
        "type": "object"
      },
      "DeleteParameterRequest": {
        "properties": { "Name": { "$ref": "#/components/schemas/PSParameterName" } },
        "required": ["Name"],
        "type": "object"
      },
      "DeleteParameterResult": { "properties": {}, "type": "object" },
      "DeleteParametersRequest": {
        "properties": { "Names": { "$ref": "#/components/schemas/ParameterNameList" } },
        "required": ["Names"],
        "type": "object"
      },
      "DeleteParametersResult": {
        "properties": {
          "DeletedParameters": { "$ref": "#/components/schemas/ParameterNameList" },
          "InvalidParameters": { "$ref": "#/components/schemas/ParameterNameList" }
        },
        "type": "object"
      },
      "DeletePatchBaselineRequest": {
        "properties": { "BaselineId": { "$ref": "#/components/schemas/BaselineId" } },
        "required": ["BaselineId"],
        "type": "object"
      },
      "DeletePatchBaselineResult": {
        "properties": { "BaselineId": { "$ref": "#/components/schemas/BaselineId" } },
        "type": "object"
      },
      "DeleteResourceDataSyncRequest": {
        "properties": { "SyncName": { "$ref": "#/components/schemas/ResourceDataSyncName" } },
        "required": ["SyncName"],
        "type": "object"
      },
      "DeleteResourceDataSyncResult": { "properties": {}, "type": "object" },
      "DeliveryTimedOutCount": { "type": "integer" },
      "DeregisterManagedInstanceRequest": {
        "properties": { "InstanceId": { "$ref": "#/components/schemas/ManagedInstanceId" } },
        "required": ["InstanceId"],
        "type": "object"
      },
      "DeregisterManagedInstanceResult": { "properties": {}, "type": "object" },
      "DeregisterPatchBaselineForPatchGroupRequest": {
        "properties": {
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "PatchGroup": { "$ref": "#/components/schemas/PatchGroup" }
        },
        "required": ["BaselineId", "PatchGroup"],
        "type": "object"
      },
      "DeregisterPatchBaselineForPatchGroupResult": {
        "properties": {
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "PatchGroup": { "$ref": "#/components/schemas/PatchGroup" }
        },
        "type": "object"
      },
      "DeregisterTargetFromMaintenanceWindowRequest": {
        "properties": {
          "Safe": { "$ref": "#/components/schemas/Boolean" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTargetId": { "$ref": "#/components/schemas/MaintenanceWindowTargetId" }
        },
        "required": ["WindowId", "WindowTargetId"],
        "type": "object"
      },
      "DeregisterTargetFromMaintenanceWindowResult": {
        "properties": {
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTargetId": { "$ref": "#/components/schemas/MaintenanceWindowTargetId" }
        },
        "type": "object"
      },
      "DeregisterTaskFromMaintenanceWindowRequest": {
        "properties": {
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTaskId": { "$ref": "#/components/schemas/MaintenanceWindowTaskId" }
        },
        "required": ["WindowId", "WindowTaskId"],
        "type": "object"
      },
      "DeregisterTaskFromMaintenanceWindowResult": {
        "properties": {
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTaskId": { "$ref": "#/components/schemas/MaintenanceWindowTaskId" }
        },
        "type": "object"
      },
      "DescribeActivationsFilter": {
        "description": "Filter for the DescribeActivation API.",
        "properties": {
          "FilterKey": { "$ref": "#/components/schemas/DescribeActivationsFilterKeys" },
          "FilterValues": { "$ref": "#/components/schemas/StringList" }
        },
        "type": "object"
      },
      "DescribeActivationsFilterKeys": {
        "enum": ["ActivationIds", "DefaultInstanceName", "IamRole"],
        "type": "string"
      },
      "DescribeActivationsFilterList": {
        "items": { "$ref": "#/components/schemas/DescribeActivationsFilter" },
        "type": "array"
      },
      "DescribeActivationsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/DescribeActivationsFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeActivationsResult": {
        "properties": {
          "ActivationList": { "$ref": "#/components/schemas/ActivationList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeAssociationExecutionTargetsRequest": {
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "ExecutionId": { "$ref": "#/components/schemas/AssociationExecutionId" },
          "Filters": { "$ref": "#/components/schemas/AssociationExecutionTargetsFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["AssociationId", "ExecutionId"],
        "type": "object"
      },
      "DescribeAssociationExecutionTargetsResult": {
        "properties": {
          "AssociationExecutionTargets": { "$ref": "#/components/schemas/AssociationExecutionTargetsList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeAssociationExecutionsRequest": {
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "Filters": { "$ref": "#/components/schemas/AssociationExecutionFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["AssociationId"],
        "type": "object"
      },
      "DescribeAssociationExecutionsResult": {
        "properties": {
          "AssociationExecutions": { "$ref": "#/components/schemas/AssociationExecutionsList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeAssociationRequest": {
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "AssociationVersion": { "$ref": "#/components/schemas/AssociationVersion" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" }
        },
        "type": "object"
      },
      "DescribeAssociationResult": {
        "properties": { "AssociationDescription": { "$ref": "#/components/schemas/AssociationDescription" } },
        "type": "object"
      },
      "DescribeAutomationExecutionsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/AutomationExecutionFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeAutomationExecutionsResult": {
        "properties": {
          "AutomationExecutionMetadataList": { "$ref": "#/components/schemas/AutomationExecutionMetadataList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeAutomationStepExecutionsRequest": {
        "properties": {
          "AutomationExecutionId": { "$ref": "#/components/schemas/AutomationExecutionId" },
          "Filters": { "$ref": "#/components/schemas/StepExecutionFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ReverseOrder": { "$ref": "#/components/schemas/Boolean" }
        },
        "required": ["AutomationExecutionId"],
        "type": "object"
      },
      "DescribeAutomationStepExecutionsResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "StepExecutions": { "$ref": "#/components/schemas/StepExecutionList" }
        },
        "type": "object"
      },
      "DescribeAvailablePatchesRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/PatchOrchestratorFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/PatchBaselineMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeAvailablePatchesResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Patches": { "$ref": "#/components/schemas/PatchList" }
        },
        "type": "object"
      },
      "DescribeDocumentPermissionRequest": {
        "properties": {
          "Name": { "$ref": "#/components/schemas/DocumentName" },
          "PermissionType": { "$ref": "#/components/schemas/DocumentPermissionType" }
        },
        "required": ["Name", "PermissionType"],
        "type": "object"
      },
      "DescribeDocumentPermissionResponse": {
        "properties": { "AccountIds": { "$ref": "#/components/schemas/AccountIdList" } },
        "type": "object"
      },
      "DescribeDocumentRequest": {
        "properties": {
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "VersionName": { "$ref": "#/components/schemas/DocumentVersionName" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "DescribeDocumentResult": {
        "properties": { "Document": { "$ref": "#/components/schemas/DocumentDescription" } },
        "type": "object"
      },
      "DescribeEffectiveInstanceAssociationsRequest": {
        "properties": {
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "MaxResults": { "$ref": "#/components/schemas/EffectiveInstanceAssociationMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["InstanceId"],
        "type": "object"
      },
      "DescribeEffectiveInstanceAssociationsResult": {
        "properties": {
          "Associations": { "$ref": "#/components/schemas/InstanceAssociationList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeEffectivePatchesForPatchBaselineRequest": {
        "properties": {
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "MaxResults": { "$ref": "#/components/schemas/PatchBaselineMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["BaselineId"],
        "type": "object"
      },
      "DescribeEffectivePatchesForPatchBaselineResult": {
        "properties": {
          "EffectivePatches": { "$ref": "#/components/schemas/EffectivePatchList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeInstanceAssociationsStatusRequest": {
        "properties": {
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["InstanceId"],
        "type": "object"
      },
      "DescribeInstanceAssociationsStatusResult": {
        "properties": {
          "InstanceAssociationStatusInfos": { "$ref": "#/components/schemas/InstanceAssociationStatusInfos" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeInstanceInformationRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/InstanceInformationStringFilterList" },
          "InstanceInformationFilterList": { "$ref": "#/components/schemas/InstanceInformationFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResultsEC2Compatible" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeInstanceInformationResult": {
        "properties": {
          "InstanceInformationList": { "$ref": "#/components/schemas/InstanceInformationList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeInstancePatchStatesForPatchGroupRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/InstancePatchStateFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/PatchComplianceMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "PatchGroup": { "$ref": "#/components/schemas/PatchGroup" }
        },
        "required": ["PatchGroup"],
        "type": "object"
      },
      "DescribeInstancePatchStatesForPatchGroupResult": {
        "properties": {
          "InstancePatchStates": { "$ref": "#/components/schemas/InstancePatchStatesList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeInstancePatchStatesRequest": {
        "properties": {
          "InstanceIds": { "$ref": "#/components/schemas/InstanceIdList" },
          "MaxResults": { "$ref": "#/components/schemas/PatchComplianceMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["InstanceIds"],
        "type": "object"
      },
      "DescribeInstancePatchStatesResult": {
        "properties": {
          "InstancePatchStates": { "$ref": "#/components/schemas/InstancePatchStateList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeInstancePatchesRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/PatchOrchestratorFilterList" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "MaxResults": { "$ref": "#/components/schemas/PatchComplianceMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["InstanceId"],
        "type": "object"
      },
      "DescribeInstancePatchesResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Patches": { "$ref": "#/components/schemas/PatchComplianceDataList" }
        },
        "type": "object"
      },
      "DescribeInventoryDeletionsRequest": {
        "properties": {
          "DeletionId": { "$ref": "#/components/schemas/InventoryDeletionId" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeInventoryDeletionsResult": {
        "properties": {
          "InventoryDeletions": { "$ref": "#/components/schemas/InventoryDeletionsList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeMaintenanceWindowExecutionTaskInvocationsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/MaintenanceWindowFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaintenanceWindowMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "TaskId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskId" },
          "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" }
        },
        "required": ["WindowExecutionId", "TaskId"],
        "type": "object"
      },
      "DescribeMaintenanceWindowExecutionTaskInvocationsResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "WindowExecutionTaskInvocationIdentities": {
            "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskInvocationIdentityList"
          }
        },
        "type": "object"
      },
      "DescribeMaintenanceWindowExecutionTasksRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/MaintenanceWindowFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaintenanceWindowMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" }
        },
        "required": ["WindowExecutionId"],
        "type": "object"
      },
      "DescribeMaintenanceWindowExecutionTasksResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "WindowExecutionTaskIdentities": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskIdentityList" }
        },
        "type": "object"
      },
      "DescribeMaintenanceWindowExecutionsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/MaintenanceWindowFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaintenanceWindowMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "required": ["WindowId"],
        "type": "object"
      },
      "DescribeMaintenanceWindowExecutionsResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "WindowExecutions": { "$ref": "#/components/schemas/MaintenanceWindowExecutionList" }
        },
        "type": "object"
      },
      "DescribeMaintenanceWindowScheduleRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/PatchOrchestratorFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaintenanceWindowSearchMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResourceType": { "$ref": "#/components/schemas/MaintenanceWindowResourceType" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "type": "object"
      },
      "DescribeMaintenanceWindowScheduleResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ScheduledWindowExecutions": { "$ref": "#/components/schemas/ScheduledWindowExecutionList" }
        },
        "type": "object"
      },
      "DescribeMaintenanceWindowTargetsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/MaintenanceWindowFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaintenanceWindowMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "required": ["WindowId"],
        "type": "object"
      },
      "DescribeMaintenanceWindowTargetsResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Targets": { "$ref": "#/components/schemas/MaintenanceWindowTargetList" }
        },
        "type": "object"
      },
      "DescribeMaintenanceWindowTasksRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/MaintenanceWindowFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaintenanceWindowMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "required": ["WindowId"],
        "type": "object"
      },
      "DescribeMaintenanceWindowTasksResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Tasks": { "$ref": "#/components/schemas/MaintenanceWindowTaskList" }
        },
        "type": "object"
      },
      "DescribeMaintenanceWindowsForTargetRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/MaintenanceWindowSearchMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResourceType": { "$ref": "#/components/schemas/MaintenanceWindowResourceType" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "required": ["Targets", "ResourceType"],
        "type": "object"
      },
      "DescribeMaintenanceWindowsForTargetResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "WindowIdentities": { "$ref": "#/components/schemas/MaintenanceWindowsForTargetList" }
        },
        "type": "object"
      },
      "DescribeMaintenanceWindowsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/MaintenanceWindowFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaintenanceWindowMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribeMaintenanceWindowsResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "WindowIdentities": { "$ref": "#/components/schemas/MaintenanceWindowIdentityList" }
        },
        "type": "object"
      },
      "DescribeOpsItemsRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/OpsItemMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/String" },
          "OpsItemFilters": { "$ref": "#/components/schemas/OpsItemFilters" }
        },
        "type": "object"
      },
      "DescribeOpsItemsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/String" },
          "OpsItemSummaries": { "$ref": "#/components/schemas/OpsItemSummaries" }
        },
        "type": "object"
      },
      "DescribeParametersRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/ParametersFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ParameterFilters": { "$ref": "#/components/schemas/ParameterStringFilterList" }
        },
        "type": "object"
      },
      "DescribeParametersResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Parameters": { "$ref": "#/components/schemas/ParameterMetadataList" }
        },
        "type": "object"
      },
      "DescribePatchBaselinesRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/PatchOrchestratorFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/PatchBaselineMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribePatchBaselinesResult": {
        "properties": {
          "BaselineIdentities": { "$ref": "#/components/schemas/PatchBaselineIdentityList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribePatchGroupStateRequest": {
        "properties": { "PatchGroup": { "$ref": "#/components/schemas/PatchGroup" } },
        "required": ["PatchGroup"],
        "type": "object"
      },
      "DescribePatchGroupStateResult": {
        "properties": {
          "Instances": { "$ref": "#/components/schemas/Integer" },
          "InstancesWithFailedPatches": { "$ref": "#/components/schemas/Integer" },
          "InstancesWithInstalledOtherPatches": { "$ref": "#/components/schemas/Integer" },
          "InstancesWithInstalledPatches": { "$ref": "#/components/schemas/Integer" },
          "InstancesWithInstalledRejectedPatches": { "$ref": "#/components/schemas/InstancesCount" },
          "InstancesWithMissingPatches": { "$ref": "#/components/schemas/Integer" },
          "InstancesWithNotApplicablePatches": { "$ref": "#/components/schemas/Integer" },
          "InstancesWithUnreportedNotApplicablePatches": { "$ref": "#/components/schemas/Integer" }
        },
        "type": "object"
      },
      "DescribePatchGroupsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/PatchOrchestratorFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/PatchBaselineMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribePatchGroupsResult": {
        "properties": {
          "Mappings": { "$ref": "#/components/schemas/PatchGroupPatchBaselineMappingList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "DescribePatchPropertiesRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "OperatingSystem": { "$ref": "#/components/schemas/OperatingSystem" },
          "PatchSet": { "$ref": "#/components/schemas/PatchSet" },
          "Property": { "$ref": "#/components/schemas/PatchProperty" }
        },
        "required": ["OperatingSystem", "Property"],
        "type": "object"
      },
      "DescribePatchPropertiesResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Properties": { "$ref": "#/components/schemas/PatchPropertiesList" }
        },
        "type": "object"
      },
      "DescribeSessionsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/SessionFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/SessionMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "State": { "$ref": "#/components/schemas/SessionState" }
        },
        "required": ["State"],
        "type": "object"
      },
      "DescribeSessionsResponse": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Sessions": { "$ref": "#/components/schemas/SessionList" }
        },
        "type": "object"
      },
      "DescriptionInDocument": { "type": "string" },
      "DocumentARN": { "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$", "type": "string" },
      "DocumentAlreadyExists": {},
      "DocumentContent": { "minLength": 1, "type": "string" },
      "DocumentDefaultVersionDescription": {
        "description": "A default version of a document.",
        "properties": {
          "DefaultVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "DefaultVersionName": { "$ref": "#/components/schemas/DocumentVersionName" },
          "Name": { "$ref": "#/components/schemas/DocumentName" }
        },
        "type": "object"
      },
      "DocumentDescription": {
        "description": "Describes a Systems Manager document. ",
        "properties": {
          "AttachmentsInformation": { "$ref": "#/components/schemas/AttachmentInformationList" },
          "CreatedDate": { "$ref": "#/components/schemas/DateTime" },
          "DefaultVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "Description": { "$ref": "#/components/schemas/DescriptionInDocument" },
          "DocumentFormat": { "$ref": "#/components/schemas/DocumentFormat" },
          "DocumentType": { "$ref": "#/components/schemas/DocumentType" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "Hash": { "$ref": "#/components/schemas/DocumentHash" },
          "HashType": { "$ref": "#/components/schemas/DocumentHashType" },
          "LatestVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "Owner": { "$ref": "#/components/schemas/DocumentOwner" },
          "Parameters": { "$ref": "#/components/schemas/DocumentParameterList" },
          "PlatformTypes": { "$ref": "#/components/schemas/PlatformTypeList" },
          "SchemaVersion": { "$ref": "#/components/schemas/DocumentSchemaVersion" },
          "Sha1": { "$ref": "#/components/schemas/DocumentSha1" },
          "Status": { "$ref": "#/components/schemas/DocumentStatus" },
          "StatusInformation": { "$ref": "#/components/schemas/DocumentStatusInformation" },
          "Tags": { "$ref": "#/components/schemas/TagList" },
          "TargetType": { "$ref": "#/components/schemas/TargetType" },
          "VersionName": { "$ref": "#/components/schemas/DocumentVersionName" }
        },
        "type": "object"
      },
      "DocumentFilter": {
        "description": "Describes a filter.",
        "properties": {
          "key": { "$ref": "#/components/schemas/DocumentFilterKey" },
          "value": { "$ref": "#/components/schemas/DocumentFilterValue" }
        },
        "required": ["key", "value"],
        "type": "object"
      },
      "DocumentFilterKey": { "enum": ["Name", "Owner", "PlatformTypes", "DocumentType"], "type": "string" },
      "DocumentFilterList": {
        "items": { "$ref": "#/components/schemas/DocumentFilter" },
        "minItems": 1,
        "type": "array"
      },
      "DocumentFilterValue": { "minLength": 1, "type": "string" },
      "DocumentFormat": { "enum": ["YAML", "JSON"], "type": "string" },
      "DocumentHash": { "maxLength": 256, "type": "string" },
      "DocumentHashType": { "enum": ["Sha256", "Sha1"], "type": "string" },
      "DocumentIdentifier": {
        "description": "Describes the name of a Systems Manager document.",
        "properties": {
          "DocumentFormat": { "$ref": "#/components/schemas/DocumentFormat" },
          "DocumentType": { "$ref": "#/components/schemas/DocumentType" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "Owner": { "$ref": "#/components/schemas/DocumentOwner" },
          "PlatformTypes": { "$ref": "#/components/schemas/PlatformTypeList" },
          "SchemaVersion": { "$ref": "#/components/schemas/DocumentSchemaVersion" },
          "Tags": { "$ref": "#/components/schemas/TagList" },
          "TargetType": { "$ref": "#/components/schemas/TargetType" },
          "VersionName": { "$ref": "#/components/schemas/DocumentVersionName" }
        },
        "type": "object"
      },
      "DocumentIdentifierList": { "items": { "$ref": "#/components/schemas/DocumentIdentifier" }, "type": "array" },
      "DocumentKeyValuesFilter": {
        "description": "<p>One or more filters. Use a filter to return a more specific list of documents.</p> <p>For keys, you can specify one or more tags that have been applied to a document. </p> <p>Other valid values include Owner, Name, PlatformTypes, and DocumentType.</p> <p>Note that only one Owner can be specified in a request. For example: <code>Key=Owner,Values=Self</code>.</p> <p>If you use Name as a key, you can use a name prefix to return a list of documents. For example, in the AWS CLI, to return a list of all documents that begin with <code>Te</code>, run the following command:</p> <p> <code>aws ssm list-documents --filters Key=Name,Values=Te</code> </p> <p>If you specify more than two keys, only documents that are identified by all the tags are returned in the results. If you specify more than two values for a key, documents that are identified by any of the values are returned in the results.</p> <p>To specify a custom key and value pair, use the format <code>Key=tag:[tagName],Values=[valueName]</code>.</p> <p>For example, if you created a Key called region and are using the AWS CLI to call the <code>list-documents</code> command: </p> <p> <code>aws ssm list-documents --filters Key=tag:region,Values=east,west Key=Owner,Values=Self</code> </p>",
        "properties": {
          "Key": { "$ref": "#/components/schemas/DocumentKeyValuesFilterKey" },
          "Values": { "$ref": "#/components/schemas/DocumentKeyValuesFilterValues" }
        },
        "type": "object"
      },
      "DocumentKeyValuesFilterKey": { "maxLength": 128, "minLength": 1, "type": "string" },
      "DocumentKeyValuesFilterList": {
        "items": { "$ref": "#/components/schemas/DocumentKeyValuesFilter" },
        "maxItems": 6,
        "minItems": 0,
        "type": "array"
      },
      "DocumentKeyValuesFilterValue": { "maxLength": 256, "minLength": 1, "type": "string" },
      "DocumentKeyValuesFilterValues": {
        "items": { "$ref": "#/components/schemas/DocumentKeyValuesFilterValue" },
        "type": "array"
      },
      "DocumentLimitExceeded": {},
      "DocumentName": { "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$", "type": "string" },
      "DocumentOwner": { "type": "string" },
      "DocumentParameter": {
        "description": "Parameters specified in a System Manager document that run on the server when the command is run. ",
        "properties": {
          "DefaultValue": { "$ref": "#/components/schemas/DocumentParameterDefaultValue" },
          "Description": { "$ref": "#/components/schemas/DocumentParameterDescrption" },
          "Name": { "$ref": "#/components/schemas/DocumentParameterName" },
          "Type": { "$ref": "#/components/schemas/DocumentParameterType" }
        },
        "type": "object"
      },
      "DocumentParameterDefaultValue": { "type": "string" },
      "DocumentParameterDescrption": { "type": "string" },
      "DocumentParameterList": { "items": { "$ref": "#/components/schemas/DocumentParameter" }, "type": "array" },
      "DocumentParameterName": { "type": "string" },
      "DocumentParameterType": { "enum": ["String", "StringList"], "type": "string" },
      "DocumentPermissionLimit": {},
      "DocumentPermissionType": { "enum": ["Share"], "type": "string" },
      "DocumentSchemaVersion": { "pattern": "([0-9]+)\\.([0-9]+)", "type": "string" },
      "DocumentSha1": { "type": "string" },
      "DocumentStatus": {
        "description": "The status of a document.",
        "enum": ["Creating", "Active", "Updating", "Deleting", "Failed"],
        "type": "string"
      },
      "DocumentStatusInformation": { "type": "string" },
      "DocumentType": { "enum": ["Command", "Policy", "Automation", "Session", "Package"], "type": "string" },
      "DocumentVersion": { "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)", "type": "string" },
      "DocumentVersionInfo": {
        "description": "Version information about the document.",
        "properties": {
          "CreatedDate": { "$ref": "#/components/schemas/DateTime" },
          "DocumentFormat": { "$ref": "#/components/schemas/DocumentFormat" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "IsDefaultVersion": { "$ref": "#/components/schemas/Boolean" },
          "Name": { "$ref": "#/components/schemas/DocumentName" },
          "Status": { "$ref": "#/components/schemas/DocumentStatus" },
          "StatusInformation": { "$ref": "#/components/schemas/DocumentStatusInformation" },
          "VersionName": { "$ref": "#/components/schemas/DocumentVersionName" }
        },
        "type": "object"
      },
      "DocumentVersionLimitExceeded": {},
      "DocumentVersionList": {
        "items": { "$ref": "#/components/schemas/DocumentVersionInfo" },
        "minItems": 1,
        "type": "array"
      },
      "DocumentVersionName": { "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$", "type": "string" },
      "DocumentVersionNumber": { "pattern": "(^[1-9][0-9]*$)", "type": "string" },
      "DoesNotExistException": {},
      "DryRun": { "type": "boolean" },
      "DuplicateDocumentContent": {},
      "DuplicateDocumentVersionName": {},
      "DuplicateInstanceId": {},
      "EffectiveInstanceAssociationMaxResults": { "maximum": 5, "minimum": 1, "type": "integer" },
      "EffectivePatch": {
        "description": "The EffectivePatch structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.",
        "properties": {
          "Patch": { "$ref": "#/components/schemas/Patch" },
          "PatchStatus": { "$ref": "#/components/schemas/PatchStatus" }
        },
        "type": "object"
      },
      "EffectivePatchList": { "items": { "$ref": "#/components/schemas/EffectivePatch" }, "type": "array" },
      "ErrorCount": { "type": "integer" },
      "ExecutionMode": { "enum": ["Auto", "Interactive"], "type": "string" },
      "ExecutionRoleName": { "maxLength": 64, "minLength": 1, "type": "string" },
      "ExpirationDate": { "format": "date-time", "type": "string" },
      "FailedCreateAssociation": {
        "description": "Describes a failed association.",
        "properties": {
          "Entry": { "$ref": "#/components/schemas/CreateAssociationBatchRequestEntry" },
          "Fault": { "$ref": "#/components/schemas/Fault" },
          "Message": { "$ref": "#/components/schemas/BatchErrorMessage" }
        },
        "type": "object"
      },
      "FailedCreateAssociationList": {
        "items": { "$ref": "#/components/schemas/FailedCreateAssociation" },
        "type": "array"
      },
      "FailureDetails": {
        "description": "Information about an Automation failure.",
        "properties": {
          "Details": { "$ref": "#/components/schemas/AutomationParameterMap" },
          "FailureStage": { "$ref": "#/components/schemas/String" },
          "FailureType": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "Fault": { "enum": ["Client", "Server", "Unknown"], "type": "string" },
      "FeatureNotAvailableException": {},
      "GetAutomationExecutionRequest": {
        "properties": { "AutomationExecutionId": { "$ref": "#/components/schemas/AutomationExecutionId" } },
        "required": ["AutomationExecutionId"],
        "type": "object"
      },
      "GetAutomationExecutionResult": {
        "properties": { "AutomationExecution": { "$ref": "#/components/schemas/AutomationExecution" } },
        "type": "object"
      },
      "GetCommandInvocationRequest": {
        "properties": {
          "CommandId": { "$ref": "#/components/schemas/CommandId" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "PluginName": { "$ref": "#/components/schemas/CommandPluginName" }
        },
        "required": ["CommandId", "InstanceId"],
        "type": "object"
      },
      "GetCommandInvocationResult": {
        "properties": {
          "CloudWatchOutputConfig": { "$ref": "#/components/schemas/CloudWatchOutputConfig" },
          "CommandId": { "$ref": "#/components/schemas/CommandId" },
          "Comment": { "$ref": "#/components/schemas/Comment" },
          "DocumentName": { "$ref": "#/components/schemas/DocumentName" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "ExecutionElapsedTime": { "$ref": "#/components/schemas/StringDateTime" },
          "ExecutionEndDateTime": { "$ref": "#/components/schemas/StringDateTime" },
          "ExecutionStartDateTime": { "$ref": "#/components/schemas/StringDateTime" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "PluginName": { "$ref": "#/components/schemas/CommandPluginName" },
          "ResponseCode": { "$ref": "#/components/schemas/ResponseCode" },
          "StandardErrorContent": { "$ref": "#/components/schemas/StandardErrorContent" },
          "StandardErrorUrl": { "$ref": "#/components/schemas/Url" },
          "StandardOutputContent": { "$ref": "#/components/schemas/StandardOutputContent" },
          "StandardOutputUrl": { "$ref": "#/components/schemas/Url" },
          "Status": { "$ref": "#/components/schemas/CommandInvocationStatus" },
          "StatusDetails": { "$ref": "#/components/schemas/StatusDetails" }
        },
        "type": "object"
      },
      "GetConnectionStatusRequest": {
        "properties": { "Target": { "$ref": "#/components/schemas/SessionTarget" } },
        "required": ["Target"],
        "type": "object"
      },
      "GetConnectionStatusResponse": {
        "properties": {
          "Status": { "$ref": "#/components/schemas/ConnectionStatus" },
          "Target": { "$ref": "#/components/schemas/SessionTarget" }
        },
        "type": "object"
      },
      "GetDefaultPatchBaselineRequest": {
        "properties": { "OperatingSystem": { "$ref": "#/components/schemas/OperatingSystem" } },
        "type": "object"
      },
      "GetDefaultPatchBaselineResult": {
        "properties": {
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "OperatingSystem": { "$ref": "#/components/schemas/OperatingSystem" }
        },
        "type": "object"
      },
      "GetDeployablePatchSnapshotForInstanceRequest": {
        "properties": {
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "SnapshotId": { "$ref": "#/components/schemas/SnapshotId" }
        },
        "required": ["InstanceId", "SnapshotId"],
        "type": "object"
      },
      "GetDeployablePatchSnapshotForInstanceResult": {
        "properties": {
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "Product": { "$ref": "#/components/schemas/Product" },
          "SnapshotDownloadUrl": { "$ref": "#/components/schemas/SnapshotDownloadUrl" },
          "SnapshotId": { "$ref": "#/components/schemas/SnapshotId" }
        },
        "type": "object"
      },
      "GetDocumentRequest": {
        "properties": {
          "DocumentFormat": { "$ref": "#/components/schemas/DocumentFormat" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "VersionName": { "$ref": "#/components/schemas/DocumentVersionName" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "GetDocumentResult": {
        "properties": {
          "AttachmentsContent": { "$ref": "#/components/schemas/AttachmentContentList" },
          "Content": { "$ref": "#/components/schemas/DocumentContent" },
          "DocumentFormat": { "$ref": "#/components/schemas/DocumentFormat" },
          "DocumentType": { "$ref": "#/components/schemas/DocumentType" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "Status": { "$ref": "#/components/schemas/DocumentStatus" },
          "StatusInformation": { "$ref": "#/components/schemas/DocumentStatusInformation" },
          "VersionName": { "$ref": "#/components/schemas/DocumentVersionName" }
        },
        "type": "object"
      },
      "GetInventoryRequest": {
        "properties": {
          "Aggregators": { "$ref": "#/components/schemas/InventoryAggregatorList" },
          "Filters": { "$ref": "#/components/schemas/InventoryFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResultAttributes": { "$ref": "#/components/schemas/ResultAttributeList" }
        },
        "type": "object"
      },
      "GetInventoryResult": {
        "properties": {
          "Entities": { "$ref": "#/components/schemas/InventoryResultEntityList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "GetInventorySchemaMaxResults": { "maximum": 200, "minimum": 50, "type": "integer" },
      "GetInventorySchemaRequest": {
        "properties": {
          "Aggregator": { "$ref": "#/components/schemas/AggregatorSchemaOnly" },
          "MaxResults": { "$ref": "#/components/schemas/GetInventorySchemaMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "SubType": { "$ref": "#/components/schemas/IsSubTypeSchema" },
          "TypeName": { "$ref": "#/components/schemas/InventoryItemTypeNameFilter" }
        },
        "type": "object"
      },
      "GetInventorySchemaResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Schemas": { "$ref": "#/components/schemas/InventoryItemSchemaResultList" }
        },
        "type": "object"
      },
      "GetMaintenanceWindowExecutionRequest": {
        "properties": { "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" } },
        "required": ["WindowExecutionId"],
        "type": "object"
      },
      "GetMaintenanceWindowExecutionResult": {
        "properties": {
          "EndTime": { "$ref": "#/components/schemas/DateTime" },
          "StartTime": { "$ref": "#/components/schemas/DateTime" },
          "Status": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatus" },
          "StatusDetails": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatusDetails" },
          "TaskIds": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskIdList" },
          "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" }
        },
        "type": "object"
      },
      "GetMaintenanceWindowExecutionTaskInvocationRequest": {
        "properties": {
          "InvocationId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskInvocationId" },
          "TaskId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskId" },
          "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" }
        },
        "required": ["WindowExecutionId", "TaskId", "InvocationId"],
        "type": "object"
      },
      "GetMaintenanceWindowExecutionTaskInvocationResult": {
        "properties": {
          "EndTime": { "$ref": "#/components/schemas/DateTime" },
          "ExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskExecutionId" },
          "InvocationId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskInvocationId" },
          "OwnerInformation": { "$ref": "#/components/schemas/OwnerInformation" },
          "Parameters": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskInvocationParameters" },
          "StartTime": { "$ref": "#/components/schemas/DateTime" },
          "Status": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatus" },
          "StatusDetails": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatusDetails" },
          "TaskExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskId" },
          "TaskType": { "$ref": "#/components/schemas/MaintenanceWindowTaskType" },
          "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" },
          "WindowTargetId": { "$ref": "#/components/schemas/MaintenanceWindowTaskTargetId" }
        },
        "type": "object"
      },
      "GetMaintenanceWindowExecutionTaskRequest": {
        "properties": {
          "TaskId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskId" },
          "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" }
        },
        "required": ["WindowExecutionId", "TaskId"],
        "type": "object"
      },
      "GetMaintenanceWindowExecutionTaskResult": {
        "properties": {
          "EndTime": { "$ref": "#/components/schemas/DateTime" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Priority": { "$ref": "#/components/schemas/MaintenanceWindowTaskPriority" },
          "ServiceRole": { "$ref": "#/components/schemas/ServiceRole" },
          "StartTime": { "$ref": "#/components/schemas/DateTime" },
          "Status": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatus" },
          "StatusDetails": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatusDetails" },
          "TaskArn": { "$ref": "#/components/schemas/MaintenanceWindowTaskArn" },
          "TaskExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskId" },
          "TaskParameters": { "$ref": "#/components/schemas/MaintenanceWindowTaskParametersList" },
          "Type": { "$ref": "#/components/schemas/MaintenanceWindowTaskType" },
          "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" }
        },
        "type": "object"
      },
      "GetMaintenanceWindowRequest": {
        "properties": { "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" } },
        "required": ["WindowId"],
        "type": "object"
      },
      "GetMaintenanceWindowResult": {
        "properties": {
          "AllowUnassociatedTargets": { "$ref": "#/components/schemas/MaintenanceWindowAllowUnassociatedTargets" },
          "CreatedDate": { "$ref": "#/components/schemas/DateTime" },
          "Cutoff": { "$ref": "#/components/schemas/MaintenanceWindowCutoff" },
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "Duration": { "$ref": "#/components/schemas/MaintenanceWindowDurationHours" },
          "Enabled": { "$ref": "#/components/schemas/MaintenanceWindowEnabled" },
          "EndDate": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "ModifiedDate": { "$ref": "#/components/schemas/DateTime" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "NextExecutionTime": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "Schedule": { "$ref": "#/components/schemas/MaintenanceWindowSchedule" },
          "ScheduleTimezone": { "$ref": "#/components/schemas/MaintenanceWindowTimezone" },
          "StartDate": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "type": "object"
      },
      "GetMaintenanceWindowTaskRequest": {
        "properties": {
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTaskId": { "$ref": "#/components/schemas/MaintenanceWindowTaskId" }
        },
        "required": ["WindowId", "WindowTaskId"],
        "type": "object"
      },
      "GetMaintenanceWindowTaskResult": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "LoggingInfo": { "$ref": "#/components/schemas/LoggingInfo" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "Priority": { "$ref": "#/components/schemas/MaintenanceWindowTaskPriority" },
          "ServiceRoleArn": { "$ref": "#/components/schemas/ServiceRole" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "TaskArn": { "$ref": "#/components/schemas/MaintenanceWindowTaskArn" },
          "TaskInvocationParameters": { "$ref": "#/components/schemas/MaintenanceWindowTaskInvocationParameters" },
          "TaskParameters": { "$ref": "#/components/schemas/MaintenanceWindowTaskParameters" },
          "TaskType": { "$ref": "#/components/schemas/MaintenanceWindowTaskType" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTaskId": { "$ref": "#/components/schemas/MaintenanceWindowTaskId" }
        },
        "type": "object"
      },
      "GetOpsItemRequest": {
        "properties": { "OpsItemId": { "$ref": "#/components/schemas/OpsItemId" } },
        "required": ["OpsItemId"],
        "type": "object"
      },
      "GetOpsItemResponse": {
        "properties": { "OpsItem": { "$ref": "#/components/schemas/OpsItem" } },
        "type": "object"
      },
      "GetOpsSummaryRequest": {
        "properties": {
          "Aggregators": { "$ref": "#/components/schemas/OpsAggregatorList" },
          "Filters": { "$ref": "#/components/schemas/OpsFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["Aggregators"],
        "type": "object"
      },
      "GetOpsSummaryResult": {
        "properties": {
          "Entities": { "$ref": "#/components/schemas/OpsEntityList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "GetParameterHistoryRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "Name": { "$ref": "#/components/schemas/PSParameterName" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "WithDecryption": { "$ref": "#/components/schemas/Boolean" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "GetParameterHistoryResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Parameters": { "$ref": "#/components/schemas/ParameterHistoryList" }
        },
        "type": "object"
      },
      "GetParameterRequest": {
        "properties": {
          "Name": { "$ref": "#/components/schemas/PSParameterName" },
          "WithDecryption": { "$ref": "#/components/schemas/Boolean" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "GetParameterResult": {
        "properties": { "Parameter": { "$ref": "#/components/schemas/Parameter" } },
        "type": "object"
      },
      "GetParametersByPathMaxResults": { "maximum": 10, "minimum": 1, "type": "integer" },
      "GetParametersByPathRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/GetParametersByPathMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ParameterFilters": { "$ref": "#/components/schemas/ParameterStringFilterList" },
          "Path": { "$ref": "#/components/schemas/PSParameterName" },
          "Recursive": { "$ref": "#/components/schemas/Boolean" },
          "WithDecryption": { "$ref": "#/components/schemas/Boolean" }
        },
        "required": ["Path"],
        "type": "object"
      },
      "GetParametersByPathResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "Parameters": { "$ref": "#/components/schemas/ParameterList" }
        },
        "type": "object"
      },
      "GetParametersRequest": {
        "properties": {
          "Names": { "$ref": "#/components/schemas/ParameterNameList" },
          "WithDecryption": { "$ref": "#/components/schemas/Boolean" }
        },
        "required": ["Names"],
        "type": "object"
      },
      "GetParametersResult": {
        "properties": {
          "InvalidParameters": { "$ref": "#/components/schemas/ParameterNameList" },
          "Parameters": { "$ref": "#/components/schemas/ParameterList" }
        },
        "type": "object"
      },
      "GetPatchBaselineForPatchGroupRequest": {
        "properties": {
          "OperatingSystem": { "$ref": "#/components/schemas/OperatingSystem" },
          "PatchGroup": { "$ref": "#/components/schemas/PatchGroup" }
        },
        "required": ["PatchGroup"],
        "type": "object"
      },
      "GetPatchBaselineForPatchGroupResult": {
        "properties": {
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "OperatingSystem": { "$ref": "#/components/schemas/OperatingSystem" },
          "PatchGroup": { "$ref": "#/components/schemas/PatchGroup" }
        },
        "type": "object"
      },
      "GetPatchBaselineRequest": {
        "properties": { "BaselineId": { "$ref": "#/components/schemas/BaselineId" } },
        "required": ["BaselineId"],
        "type": "object"
      },
      "GetPatchBaselineResult": {
        "properties": {
          "ApprovalRules": { "$ref": "#/components/schemas/PatchRuleGroup" },
          "ApprovedPatches": { "$ref": "#/components/schemas/PatchIdList" },
          "ApprovedPatchesComplianceLevel": { "$ref": "#/components/schemas/PatchComplianceLevel" },
          "ApprovedPatchesEnableNonSecurity": { "$ref": "#/components/schemas/Boolean" },
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "CreatedDate": { "$ref": "#/components/schemas/DateTime" },
          "Description": { "$ref": "#/components/schemas/BaselineDescription" },
          "GlobalFilters": { "$ref": "#/components/schemas/PatchFilterGroup" },
          "ModifiedDate": { "$ref": "#/components/schemas/DateTime" },
          "Name": { "$ref": "#/components/schemas/BaselineName" },
          "OperatingSystem": { "$ref": "#/components/schemas/OperatingSystem" },
          "PatchGroups": { "$ref": "#/components/schemas/PatchGroupList" },
          "RejectedPatches": { "$ref": "#/components/schemas/PatchIdList" },
          "RejectedPatchesAction": { "$ref": "#/components/schemas/PatchAction" },
          "Sources": { "$ref": "#/components/schemas/PatchSourceList" }
        },
        "type": "object"
      },
      "GetServiceSettingRequest": {
        "description": "The request body of the GetServiceSetting API action.",
        "properties": { "SettingId": { "$ref": "#/components/schemas/ServiceSettingId" } },
        "required": ["SettingId"],
        "type": "object"
      },
      "GetServiceSettingResult": {
        "description": "The query result body of the GetServiceSetting API action.",
        "properties": { "ServiceSetting": { "$ref": "#/components/schemas/ServiceSetting" } },
        "type": "object"
      },
      "HierarchyLevelLimitExceededException": {},
      "HierarchyTypeMismatchException": {},
      "IPAddress": { "maxLength": 46, "minLength": 1, "type": "string" },
      "IamRole": { "maxLength": 64, "type": "string" },
      "IdempotencyToken": {
        "maxLength": 36,
        "minLength": 36,
        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
        "type": "string"
      },
      "IdempotentParameterMismatch": {},
      "IncompatiblePolicyException": {},
      "InstallOverrideList": {
        "maxLength": 256,
        "minLength": 1,
        "pattern": "^https://.+$|^s3://([^/]+)/(.*?([^/]+))$",
        "type": "string"
      },
      "InstanceAggregatedAssociationOverview": {
        "description": "Status information about the aggregated associations.",
        "properties": {
          "DetailedStatus": { "$ref": "#/components/schemas/StatusName" },
          "InstanceAssociationStatusAggregatedCount": {
            "$ref": "#/components/schemas/InstanceAssociationStatusAggregatedCount"
          }
        },
        "type": "object"
      },
      "InstanceAssociation": {
        "description": "One or more association documents on the instance. ",
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "AssociationVersion": { "$ref": "#/components/schemas/AssociationVersion" },
          "Content": { "$ref": "#/components/schemas/DocumentContent" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" }
        },
        "type": "object"
      },
      "InstanceAssociationExecutionSummary": { "maxLength": 512, "minLength": 1, "type": "string" },
      "InstanceAssociationList": { "items": { "$ref": "#/components/schemas/InstanceAssociation" }, "type": "array" },
      "InstanceAssociationOutputLocation": {
        "description": "An Amazon S3 bucket where you want to store the results of this request.",
        "properties": { "S3Location": { "$ref": "#/components/schemas/S3OutputLocation" } },
        "type": "object"
      },
      "InstanceAssociationOutputUrl": {
        "description": "The URL of Amazon S3 bucket where you want to store the results of this request.",
        "properties": { "S3OutputUrl": { "$ref": "#/components/schemas/S3OutputUrl" } },
        "type": "object"
      },
      "InstanceAssociationStatusAggregatedCount": {
        "additionalProperties": { "$ref": "#/components/schemas/InstanceCount" },
        "type": "object"
      },
      "InstanceAssociationStatusInfo": {
        "description": "Status information about the instance association.",
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "AssociationName": { "$ref": "#/components/schemas/AssociationName" },
          "AssociationVersion": { "$ref": "#/components/schemas/AssociationVersion" },
          "DetailedStatus": { "$ref": "#/components/schemas/StatusName" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "ErrorCode": { "$ref": "#/components/schemas/AgentErrorCode" },
          "ExecutionDate": { "$ref": "#/components/schemas/DateTime" },
          "ExecutionSummary": { "$ref": "#/components/schemas/InstanceAssociationExecutionSummary" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "OutputUrl": { "$ref": "#/components/schemas/InstanceAssociationOutputUrl" },
          "Status": { "$ref": "#/components/schemas/StatusName" }
        },
        "type": "object"
      },
      "InstanceAssociationStatusInfos": {
        "items": { "$ref": "#/components/schemas/InstanceAssociationStatusInfo" },
        "type": "array"
      },
      "InstanceCount": { "type": "integer" },
      "InstanceId": { "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)", "type": "string" },
      "InstanceIdList": {
        "items": { "$ref": "#/components/schemas/InstanceId" },
        "maxItems": 50,
        "minItems": 0,
        "type": "array"
      },
      "InstanceInformation": {
        "description": "Describes a filter for a specific list of instances. ",
        "properties": {
          "ActivationId": { "$ref": "#/components/schemas/ActivationId" },
          "AgentVersion": { "$ref": "#/components/schemas/Version" },
          "AssociationOverview": { "$ref": "#/components/schemas/InstanceAggregatedAssociationOverview" },
          "AssociationStatus": { "$ref": "#/components/schemas/StatusName" },
          "ComputerName": { "$ref": "#/components/schemas/ComputerName" },
          "IPAddress": { "$ref": "#/components/schemas/IPAddress" },
          "IamRole": { "$ref": "#/components/schemas/IamRole" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "IsLatestVersion": { "$ref": "#/components/schemas/Boolean" },
          "LastAssociationExecutionDate": { "$ref": "#/components/schemas/DateTime" },
          "LastPingDateTime": { "$ref": "#/components/schemas/DateTime" },
          "LastSuccessfulAssociationExecutionDate": { "$ref": "#/components/schemas/DateTime" },
          "Name": { "$ref": "#/components/schemas/String" },
          "PingStatus": { "$ref": "#/components/schemas/PingStatus" },
          "PlatformName": { "$ref": "#/components/schemas/String" },
          "PlatformType": { "$ref": "#/components/schemas/PlatformType" },
          "PlatformVersion": { "$ref": "#/components/schemas/String" },
          "RegistrationDate": { "$ref": "#/components/schemas/DateTime" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceType" }
        },
        "type": "object"
      },
      "InstanceInformationFilter": {
        "description": "<p>Describes a filter for a specific list of instances. You can filter instances information by using tags. You specify tags by using a key-value mapping.</p> <p>Use this action instead of the <a>DescribeInstanceInformationRequest$InstanceInformationFilterList</a> method. The <code>InstanceInformationFilterList</code> method is a legacy method and does not support tags. </p>",
        "properties": {
          "key": { "$ref": "#/components/schemas/InstanceInformationFilterKey" },
          "valueSet": { "$ref": "#/components/schemas/InstanceInformationFilterValueSet" }
        },
        "required": ["key", "valueSet"],
        "type": "object"
      },
      "InstanceInformationFilterKey": {
        "enum": [
          "InstanceIds",
          "AgentVersion",
          "PingStatus",
          "PlatformTypes",
          "ActivationIds",
          "IamRole",
          "ResourceType",
          "AssociationStatus"
        ],
        "type": "string"
      },
      "InstanceInformationFilterList": {
        "items": { "$ref": "#/components/schemas/InstanceInformationFilter" },
        "minItems": 0,
        "type": "array"
      },
      "InstanceInformationFilterValue": { "minLength": 1, "type": "string" },
      "InstanceInformationFilterValueSet": {
        "items": { "$ref": "#/components/schemas/InstanceInformationFilterValue" },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "InstanceInformationList": { "items": { "$ref": "#/components/schemas/InstanceInformation" }, "type": "array" },
      "InstanceInformationStringFilter": {
        "description": "The filters to describe or get information about your managed instances.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/InstanceInformationStringFilterKey" },
          "Values": { "$ref": "#/components/schemas/InstanceInformationFilterValueSet" }
        },
        "required": ["Key", "Values"],
        "type": "object"
      },
      "InstanceInformationStringFilterKey": { "minLength": 1, "type": "string" },
      "InstanceInformationStringFilterList": {
        "items": { "$ref": "#/components/schemas/InstanceInformationStringFilter" },
        "minItems": 0,
        "type": "array"
      },
      "InstancePatchState": {
        "description": "Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.",
        "properties": {
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "FailedCount": { "$ref": "#/components/schemas/PatchFailedCount" },
          "InstallOverrideList": { "$ref": "#/components/schemas/InstallOverrideList" },
          "InstalledCount": { "$ref": "#/components/schemas/PatchInstalledCount" },
          "InstalledOtherCount": { "$ref": "#/components/schemas/PatchInstalledOtherCount" },
          "InstalledRejectedCount": { "$ref": "#/components/schemas/PatchInstalledRejectedCount" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "MissingCount": { "$ref": "#/components/schemas/PatchMissingCount" },
          "NotApplicableCount": { "$ref": "#/components/schemas/PatchNotApplicableCount" },
          "Operation": { "$ref": "#/components/schemas/PatchOperationType" },
          "OperationEndTime": { "$ref": "#/components/schemas/DateTime" },
          "OperationStartTime": { "$ref": "#/components/schemas/DateTime" },
          "OwnerInformation": { "$ref": "#/components/schemas/OwnerInformation" },
          "PatchGroup": { "$ref": "#/components/schemas/PatchGroup" },
          "SnapshotId": { "$ref": "#/components/schemas/SnapshotId" },
          "UnreportedNotApplicableCount": { "$ref": "#/components/schemas/PatchUnreportedNotApplicableCount" }
        },
        "required": ["InstanceId", "PatchGroup", "BaselineId", "OperationStartTime", "OperationEndTime", "Operation"],
        "type": "object"
      },
      "InstancePatchStateFilter": {
        "description": "Defines a filter used in DescribeInstancePatchStatesForPatchGroup used to scope down the information returned by the API.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/InstancePatchStateFilterKey" },
          "Type": { "$ref": "#/components/schemas/InstancePatchStateOperatorType" },
          "Values": { "$ref": "#/components/schemas/InstancePatchStateFilterValues" }
        },
        "required": ["Key", "Values", "Type"],
        "type": "object"
      },
      "InstancePatchStateFilterKey": { "maxLength": 200, "minLength": 1, "type": "string" },
      "InstancePatchStateFilterList": {
        "items": { "$ref": "#/components/schemas/InstancePatchStateFilter" },
        "maxItems": 4,
        "minItems": 0,
        "type": "array"
      },
      "InstancePatchStateFilterValue": { "type": "string" },
      "InstancePatchStateFilterValues": {
        "items": { "$ref": "#/components/schemas/InstancePatchStateFilterValue" },
        "maxItems": 1,
        "minItems": 1,
        "type": "array"
      },
      "InstancePatchStateList": { "items": { "$ref": "#/components/schemas/InstancePatchState" }, "type": "array" },
      "InstancePatchStateOperatorType": { "enum": ["Equal", "NotEqual", "LessThan", "GreaterThan"], "type": "string" },
      "InstancePatchStatesList": {
        "items": { "$ref": "#/components/schemas/InstancePatchState" },
        "maxItems": 5,
        "minItems": 1,
        "type": "array"
      },
      "InstanceTagName": { "maxLength": 255, "type": "string" },
      "InstancesCount": { "type": "integer" },
      "Integer": { "type": "integer" },
      "InternalServerError": {},
      "InvalidActivation": {},
      "InvalidActivationId": {},
      "InvalidAggregatorException": {},
      "InvalidAllowedPatternException": {},
      "InvalidAssociation": {},
      "InvalidAssociationVersion": {},
      "InvalidAutomationExecutionParametersException": {},
      "InvalidAutomationSignalException": {},
      "InvalidAutomationStatusUpdateException": {},
      "InvalidCommandId": {},
      "InvalidDeleteInventoryParametersException": {},
      "InvalidDeletionIdException": {},
      "InvalidDocument": {},
      "InvalidDocumentContent": {},
      "InvalidDocumentOperation": {},
      "InvalidDocumentSchemaVersion": {},
      "InvalidDocumentVersion": {},
      "InvalidFilter": {},
      "InvalidFilterKey": {},
      "InvalidFilterOption": {},
      "InvalidFilterValue": {},
      "InvalidInstanceId": {},
      "InvalidInstanceInformationFilterValue": {},
      "InvalidInventoryGroupException": {},
      "InvalidInventoryItemContextException": {},
      "InvalidInventoryRequestException": {},
      "InvalidItemContentException": {},
      "InvalidKeyId": {},
      "InvalidNextToken": {},
      "InvalidNotificationConfig": {},
      "InvalidOptionException": {},
      "InvalidOutputFolder": {},
      "InvalidOutputLocation": {},
      "InvalidParameters": {},
      "InvalidPermissionType": {},
      "InvalidPluginName": {},
      "InvalidPolicyAttributeException": {},
      "InvalidPolicyTypeException": {},
      "InvalidResourceId": {},
      "InvalidResourceType": {},
      "InvalidResultAttributeException": {},
      "InvalidRole": {},
      "InvalidSchedule": {},
      "InvalidTarget": {},
      "InvalidTypeNameException": {},
      "InvalidUpdate": {},
      "InventoryAggregator": {
        "description": "Specifies the inventory type and attribute for the aggregation execution.",
        "properties": {
          "Aggregators": { "$ref": "#/components/schemas/InventoryAggregatorList" },
          "Expression": { "$ref": "#/components/schemas/InventoryAggregatorExpression" },
          "Groups": { "$ref": "#/components/schemas/InventoryGroupList" }
        },
        "type": "object"
      },
      "InventoryAggregatorExpression": { "maxLength": 1000, "minLength": 1, "type": "string" },
      "InventoryAggregatorList": {
        "items": { "$ref": "#/components/schemas/InventoryAggregator" },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "InventoryAttributeDataType": { "enum": ["string", "number"], "type": "string" },
      "InventoryDeletionId": { "type": "string" },
      "InventoryDeletionLastStatusMessage": { "type": "string" },
      "InventoryDeletionLastStatusUpdateTime": { "format": "date-time", "type": "string" },
      "InventoryDeletionStartTime": { "format": "date-time", "type": "string" },
      "InventoryDeletionStatus": { "enum": ["InProgress", "Complete"], "type": "string" },
      "InventoryDeletionStatusItem": {
        "description": "Status information returned by the <code>DeleteInventory</code> action.",
        "properties": {
          "DeletionId": { "$ref": "#/components/schemas/InventoryDeletionId" },
          "DeletionStartTime": { "$ref": "#/components/schemas/InventoryDeletionStartTime" },
          "DeletionSummary": { "$ref": "#/components/schemas/InventoryDeletionSummary" },
          "LastStatus": { "$ref": "#/components/schemas/InventoryDeletionStatus" },
          "LastStatusMessage": { "$ref": "#/components/schemas/InventoryDeletionLastStatusMessage" },
          "LastStatusUpdateTime": { "$ref": "#/components/schemas/InventoryDeletionLastStatusUpdateTime" },
          "TypeName": { "$ref": "#/components/schemas/InventoryItemTypeName" }
        },
        "type": "object"
      },
      "InventoryDeletionSummary": {
        "description": "Information about the delete operation.",
        "properties": {
          "RemainingCount": { "$ref": "#/components/schemas/RemainingCount" },
          "SummaryItems": { "$ref": "#/components/schemas/InventoryDeletionSummaryItems" },
          "TotalCount": { "$ref": "#/components/schemas/TotalCount" }
        },
        "type": "object"
      },
      "InventoryDeletionSummaryItem": {
        "description": "Either a count, remaining count, or a version number in a delete inventory summary.",
        "properties": {
          "Count": { "$ref": "#/components/schemas/ResourceCount" },
          "RemainingCount": { "$ref": "#/components/schemas/RemainingCount" },
          "Version": { "$ref": "#/components/schemas/InventoryItemSchemaVersion" }
        },
        "type": "object"
      },
      "InventoryDeletionSummaryItems": {
        "items": { "$ref": "#/components/schemas/InventoryDeletionSummaryItem" },
        "type": "array"
      },
      "InventoryDeletionsList": {
        "items": { "$ref": "#/components/schemas/InventoryDeletionStatusItem" },
        "type": "array"
      },
      "InventoryFilter": {
        "description": "One or more filters. Use a filter to return a more specific list of results.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/InventoryFilterKey" },
          "Type": { "$ref": "#/components/schemas/InventoryQueryOperatorType" },
          "Values": { "$ref": "#/components/schemas/InventoryFilterValueList" }
        },
        "required": ["Key", "Values"],
        "type": "object"
      },
      "InventoryFilterKey": { "maxLength": 200, "minLength": 1, "type": "string" },
      "InventoryFilterList": {
        "items": { "$ref": "#/components/schemas/InventoryFilter" },
        "maxItems": 5,
        "minItems": 1,
        "type": "array"
      },
      "InventoryFilterValue": { "type": "string" },
      "InventoryFilterValueList": {
        "items": { "$ref": "#/components/schemas/InventoryFilterValue" },
        "maxItems": 40,
        "minItems": 1,
        "type": "array"
      },
      "InventoryGroup": {
        "description": "A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria.",
        "properties": {
          "Filters": { "$ref": "#/components/schemas/InventoryFilterList" },
          "Name": { "$ref": "#/components/schemas/InventoryGroupName" }
        },
        "required": ["Name", "Filters"],
        "type": "object"
      },
      "InventoryGroupList": {
        "items": { "$ref": "#/components/schemas/InventoryGroup" },
        "maxItems": 15,
        "minItems": 1,
        "type": "array"
      },
      "InventoryGroupName": { "maxLength": 200, "minLength": 1, "type": "string" },
      "InventoryItem": {
        "description": "Information collected from managed instances based on your inventory policy document",
        "properties": {
          "CaptureTime": { "$ref": "#/components/schemas/InventoryItemCaptureTime" },
          "Content": { "$ref": "#/components/schemas/InventoryItemEntryList" },
          "ContentHash": { "$ref": "#/components/schemas/InventoryItemContentHash" },
          "Context": { "$ref": "#/components/schemas/InventoryItemContentContext" },
          "SchemaVersion": { "$ref": "#/components/schemas/InventoryItemSchemaVersion" },
          "TypeName": { "$ref": "#/components/schemas/InventoryItemTypeName" }
        },
        "required": ["TypeName", "SchemaVersion", "CaptureTime"],
        "type": "object"
      },
      "InventoryItemAttribute": {
        "description": "Attributes are the entries within the inventory item content. It contains name and value.",
        "properties": {
          "DataType": { "$ref": "#/components/schemas/InventoryAttributeDataType" },
          "Name": { "$ref": "#/components/schemas/InventoryItemAttributeName" }
        },
        "required": ["Name", "DataType"],
        "type": "object"
      },
      "InventoryItemAttributeList": {
        "items": { "$ref": "#/components/schemas/InventoryItemAttribute" },
        "maxItems": 50,
        "minItems": 1,
        "type": "array"
      },
      "InventoryItemAttributeName": { "type": "string" },
      "InventoryItemCaptureTime": {
        "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
        "type": "string"
      },
      "InventoryItemContentContext": {
        "additionalProperties": { "$ref": "#/components/schemas/AttributeValue" },
        "maxProperties": 50,
        "minProperties": 0,
        "type": "object"
      },
      "InventoryItemContentHash": { "maxLength": 256, "type": "string" },
      "InventoryItemEntry": {
        "additionalProperties": { "$ref": "#/components/schemas/AttributeValue" },
        "maxProperties": 50,
        "minProperties": 0,
        "type": "object"
      },
      "InventoryItemEntryList": {
        "items": { "$ref": "#/components/schemas/InventoryItemEntry" },
        "maxItems": 10000,
        "minItems": 0,
        "type": "array"
      },
      "InventoryItemList": {
        "items": { "$ref": "#/components/schemas/InventoryItem" },
        "maxItems": 30,
        "minItems": 1,
        "type": "array"
      },
      "InventoryItemSchema": {
        "description": "The inventory item schema definition. Users can use this to compose inventory query filters.",
        "properties": {
          "Attributes": { "$ref": "#/components/schemas/InventoryItemAttributeList" },
          "DisplayName": { "$ref": "#/components/schemas/InventoryTypeDisplayName" },
          "TypeName": { "$ref": "#/components/schemas/InventoryItemTypeName" },
          "Version": { "$ref": "#/components/schemas/InventoryItemSchemaVersion" }
        },
        "required": ["TypeName", "Attributes"],
        "type": "object"
      },
      "InventoryItemSchemaResultList": {
        "items": { "$ref": "#/components/schemas/InventoryItemSchema" },
        "type": "array"
      },
      "InventoryItemSchemaVersion": { "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$", "type": "string" },
      "InventoryItemTypeName": { "maxLength": 100, "minLength": 1, "pattern": "^(AWS|Custom):.*$", "type": "string" },
      "InventoryItemTypeNameFilter": { "maxLength": 100, "minLength": 0, "type": "string" },
      "InventoryQueryOperatorType": {
        "enum": ["Equal", "NotEqual", "BeginWith", "LessThan", "GreaterThan", "Exists"],
        "type": "string"
      },
      "InventoryResultEntity": {
        "description": "Inventory query results.",
        "properties": {
          "Data": { "$ref": "#/components/schemas/InventoryResultItemMap" },
          "Id": { "$ref": "#/components/schemas/InventoryResultEntityId" }
        },
        "type": "object"
      },
      "InventoryResultEntityId": { "type": "string" },
      "InventoryResultEntityList": {
        "items": { "$ref": "#/components/schemas/InventoryResultEntity" },
        "type": "array"
      },
      "InventoryResultItem": {
        "description": "The inventory result item.",
        "properties": {
          "CaptureTime": { "$ref": "#/components/schemas/InventoryItemCaptureTime" },
          "Content": { "$ref": "#/components/schemas/InventoryItemEntryList" },
          "ContentHash": { "$ref": "#/components/schemas/InventoryItemContentHash" },
          "SchemaVersion": { "$ref": "#/components/schemas/InventoryItemSchemaVersion" },
          "TypeName": { "$ref": "#/components/schemas/InventoryItemTypeName" }
        },
        "required": ["TypeName", "SchemaVersion", "Content"],
        "type": "object"
      },
      "InventoryResultItemKey": { "type": "string" },
      "InventoryResultItemMap": {
        "additionalProperties": { "$ref": "#/components/schemas/InventoryResultItem" },
        "type": "object"
      },
      "InventorySchemaDeleteOption": { "enum": ["DisableSchema", "DeleteSchema"], "type": "string" },
      "InventoryTypeDisplayName": { "type": "string" },
      "InvocationDoesNotExist": {},
      "InvocationTraceOutput": { "maxLength": 2500, "type": "string" },
      "IsSubTypeSchema": { "type": "boolean" },
      "ItemContentMismatchException": {},
      "ItemSizeLimitExceededException": {},
      "KeyList": { "items": { "$ref": "#/components/schemas/TagKey" }, "type": "array" },
      "LabelParameterVersionRequest": {
        "properties": {
          "Labels": { "$ref": "#/components/schemas/ParameterLabelList" },
          "Name": { "$ref": "#/components/schemas/PSParameterName" },
          "ParameterVersion": { "$ref": "#/components/schemas/PSParameterVersion" }
        },
        "required": ["Name", "Labels"],
        "type": "object"
      },
      "LabelParameterVersionResult": {
        "properties": { "InvalidLabels": { "$ref": "#/components/schemas/ParameterLabelList" } },
        "type": "object"
      },
      "LastResourceDataSyncMessage": { "type": "string" },
      "LastResourceDataSyncStatus": { "enum": ["Successful", "Failed", "InProgress"], "type": "string" },
      "LastResourceDataSyncTime": { "format": "date-time", "type": "string" },
      "LastSuccessfulResourceDataSyncTime": { "format": "date-time", "type": "string" },
      "ListAssociationVersionsRequest": {
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["AssociationId"],
        "type": "object"
      },
      "ListAssociationVersionsResult": {
        "properties": {
          "AssociationVersions": { "$ref": "#/components/schemas/AssociationVersionList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListAssociationsRequest": {
        "properties": {
          "AssociationFilterList": { "$ref": "#/components/schemas/AssociationFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListAssociationsResult": {
        "properties": {
          "Associations": { "$ref": "#/components/schemas/AssociationList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListCommandInvocationsRequest": {
        "properties": {
          "CommandId": { "$ref": "#/components/schemas/CommandId" },
          "Details": { "$ref": "#/components/schemas/Boolean" },
          "Filters": { "$ref": "#/components/schemas/CommandFilterList" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "MaxResults": { "$ref": "#/components/schemas/CommandMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListCommandInvocationsResult": {
        "properties": {
          "CommandInvocations": { "$ref": "#/components/schemas/CommandInvocationList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListCommandsRequest": {
        "properties": {
          "CommandId": { "$ref": "#/components/schemas/CommandId" },
          "Filters": { "$ref": "#/components/schemas/CommandFilterList" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "MaxResults": { "$ref": "#/components/schemas/CommandMaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListCommandsResult": {
        "properties": {
          "Commands": { "$ref": "#/components/schemas/CommandList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListComplianceItemsRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/ComplianceStringFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResourceIds": { "$ref": "#/components/schemas/ComplianceResourceIdList" },
          "ResourceTypes": { "$ref": "#/components/schemas/ComplianceResourceTypeList" }
        },
        "type": "object"
      },
      "ListComplianceItemsResult": {
        "properties": {
          "ComplianceItems": { "$ref": "#/components/schemas/ComplianceItemList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListComplianceSummariesRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/ComplianceStringFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListComplianceSummariesResult": {
        "properties": {
          "ComplianceSummaryItems": { "$ref": "#/components/schemas/ComplianceSummaryItemList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListDocumentVersionsRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "Name": { "$ref": "#/components/schemas/DocumentName" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "required": ["Name"],
        "type": "object"
      },
      "ListDocumentVersionsResult": {
        "properties": {
          "DocumentVersions": { "$ref": "#/components/schemas/DocumentVersionList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListDocumentsRequest": {
        "properties": {
          "DocumentFilterList": { "$ref": "#/components/schemas/DocumentFilterList" },
          "Filters": { "$ref": "#/components/schemas/DocumentKeyValuesFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListDocumentsResult": {
        "properties": {
          "DocumentIdentifiers": { "$ref": "#/components/schemas/DocumentIdentifierList" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListInventoryEntriesRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/InventoryFilterList" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "TypeName": { "$ref": "#/components/schemas/InventoryItemTypeName" }
        },
        "required": ["InstanceId", "TypeName"],
        "type": "object"
      },
      "ListInventoryEntriesResult": {
        "properties": {
          "CaptureTime": { "$ref": "#/components/schemas/InventoryItemCaptureTime" },
          "Entries": { "$ref": "#/components/schemas/InventoryItemEntryList" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "SchemaVersion": { "$ref": "#/components/schemas/InventoryItemSchemaVersion" },
          "TypeName": { "$ref": "#/components/schemas/InventoryItemTypeName" }
        },
        "type": "object"
      },
      "ListResourceComplianceSummariesRequest": {
        "properties": {
          "Filters": { "$ref": "#/components/schemas/ComplianceStringFilterList" },
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListResourceComplianceSummariesResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResourceComplianceSummaryItems": { "$ref": "#/components/schemas/ResourceComplianceSummaryItemList" }
        },
        "type": "object"
      },
      "ListResourceDataSyncRequest": {
        "properties": {
          "MaxResults": { "$ref": "#/components/schemas/MaxResults" },
          "NextToken": { "$ref": "#/components/schemas/NextToken" }
        },
        "type": "object"
      },
      "ListResourceDataSyncResult": {
        "properties": {
          "NextToken": { "$ref": "#/components/schemas/NextToken" },
          "ResourceDataSyncItems": { "$ref": "#/components/schemas/ResourceDataSyncItemList" }
        },
        "type": "object"
      },
      "ListTagsForResourceRequest": {
        "properties": {
          "ResourceId": { "$ref": "#/components/schemas/ResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceTypeForTagging" }
        },
        "required": ["ResourceType", "ResourceId"],
        "type": "object"
      },
      "ListTagsForResourceResult": {
        "properties": { "TagList": { "$ref": "#/components/schemas/TagList" } },
        "type": "object"
      },
      "LoggingInfo": {
        "description": "<p>Information about an Amazon S3 bucket to write instance-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
        "properties": {
          "S3BucketName": { "$ref": "#/components/schemas/S3BucketName" },
          "S3KeyPrefix": { "$ref": "#/components/schemas/S3KeyPrefix" },
          "S3Region": { "$ref": "#/components/schemas/S3Region" }
        },
        "required": ["S3BucketName", "S3Region"],
        "type": "object"
      },
      "Long": { "type": "integer" },
      "MaintenanceWindowAllowUnassociatedTargets": { "type": "boolean" },
      "MaintenanceWindowAutomationParameters": {
        "description": "The parameters for an AUTOMATION task type.",
        "properties": {
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "Parameters": { "$ref": "#/components/schemas/AutomationParameterMap" }
        },
        "type": "object"
      },
      "MaintenanceWindowCutoff": { "maximum": 23, "minimum": 0, "type": "integer" },
      "MaintenanceWindowDescription": { "format": "password", "maxLength": 128, "minLength": 1, "type": "string" },
      "MaintenanceWindowDurationHours": { "maximum": 24, "minimum": 1, "type": "integer" },
      "MaintenanceWindowEnabled": { "type": "boolean" },
      "MaintenanceWindowExecution": {
        "description": "Describes the information about an execution of a maintenance window. ",
        "properties": {
          "EndTime": { "$ref": "#/components/schemas/DateTime" },
          "StartTime": { "$ref": "#/components/schemas/DateTime" },
          "Status": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatus" },
          "StatusDetails": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatusDetails" },
          "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "type": "object"
      },
      "MaintenanceWindowExecutionId": {
        "maxLength": 36,
        "minLength": 36,
        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
        "type": "string"
      },
      "MaintenanceWindowExecutionList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowExecution" },
        "type": "array"
      },
      "MaintenanceWindowExecutionStatus": {
        "enum": [
          "PENDING",
          "IN_PROGRESS",
          "SUCCESS",
          "FAILED",
          "TIMED_OUT",
          "CANCELLING",
          "CANCELLED",
          "SKIPPED_OVERLAPPING"
        ],
        "type": "string"
      },
      "MaintenanceWindowExecutionStatusDetails": { "maxLength": 250, "minLength": 0, "type": "string" },
      "MaintenanceWindowExecutionTaskExecutionId": { "type": "string" },
      "MaintenanceWindowExecutionTaskId": {
        "maxLength": 36,
        "minLength": 36,
        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
        "type": "string"
      },
      "MaintenanceWindowExecutionTaskIdList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskId" },
        "type": "array"
      },
      "MaintenanceWindowExecutionTaskIdentity": {
        "description": "Information about a task execution performed as part of a maintenance window execution.",
        "properties": {
          "EndTime": { "$ref": "#/components/schemas/DateTime" },
          "StartTime": { "$ref": "#/components/schemas/DateTime" },
          "Status": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatus" },
          "StatusDetails": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatusDetails" },
          "TaskArn": { "$ref": "#/components/schemas/MaintenanceWindowTaskArn" },
          "TaskExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskId" },
          "TaskType": { "$ref": "#/components/schemas/MaintenanceWindowTaskType" },
          "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" }
        },
        "type": "object"
      },
      "MaintenanceWindowExecutionTaskIdentityList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskIdentity" },
        "type": "array"
      },
      "MaintenanceWindowExecutionTaskInvocationId": {
        "maxLength": 36,
        "minLength": 36,
        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
        "type": "string"
      },
      "MaintenanceWindowExecutionTaskInvocationIdentity": {
        "description": "Describes the information about a task invocation for a particular target as part of a task execution performed as part of a maintenance window execution.",
        "properties": {
          "EndTime": { "$ref": "#/components/schemas/DateTime" },
          "ExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskExecutionId" },
          "InvocationId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskInvocationId" },
          "OwnerInformation": { "$ref": "#/components/schemas/OwnerInformation" },
          "Parameters": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskInvocationParameters" },
          "StartTime": { "$ref": "#/components/schemas/DateTime" },
          "Status": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatus" },
          "StatusDetails": { "$ref": "#/components/schemas/MaintenanceWindowExecutionStatusDetails" },
          "TaskExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskId" },
          "TaskType": { "$ref": "#/components/schemas/MaintenanceWindowTaskType" },
          "WindowExecutionId": { "$ref": "#/components/schemas/MaintenanceWindowExecutionId" },
          "WindowTargetId": { "$ref": "#/components/schemas/MaintenanceWindowTaskTargetId" }
        },
        "type": "object"
      },
      "MaintenanceWindowExecutionTaskInvocationIdentityList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowExecutionTaskInvocationIdentity" },
        "type": "array"
      },
      "MaintenanceWindowExecutionTaskInvocationParameters": { "format": "password", "type": "string" },
      "MaintenanceWindowFilter": {
        "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/MaintenanceWindowFilterKey" },
          "Values": { "$ref": "#/components/schemas/MaintenanceWindowFilterValues" }
        },
        "type": "object"
      },
      "MaintenanceWindowFilterKey": { "maxLength": 128, "minLength": 1, "type": "string" },
      "MaintenanceWindowFilterList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowFilter" },
        "maxItems": 5,
        "minItems": 0,
        "type": "array"
      },
      "MaintenanceWindowFilterValue": { "maxLength": 256, "minLength": 1, "type": "string" },
      "MaintenanceWindowFilterValues": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowFilterValue" },
        "type": "array"
      },
      "MaintenanceWindowId": { "maxLength": 20, "minLength": 20, "pattern": "^mw-[0-9a-f]{17}$", "type": "string" },
      "MaintenanceWindowIdentity": {
        "description": "Information about the maintenance window.",
        "properties": {
          "Cutoff": { "$ref": "#/components/schemas/MaintenanceWindowCutoff" },
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "Duration": { "$ref": "#/components/schemas/MaintenanceWindowDurationHours" },
          "Enabled": { "$ref": "#/components/schemas/MaintenanceWindowEnabled" },
          "EndDate": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "NextExecutionTime": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "Schedule": { "$ref": "#/components/schemas/MaintenanceWindowSchedule" },
          "ScheduleTimezone": { "$ref": "#/components/schemas/MaintenanceWindowTimezone" },
          "StartDate": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "type": "object"
      },
      "MaintenanceWindowIdentityForTarget": {
        "description": "The maintenance window to which the specified target belongs.",
        "properties": {
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "type": "object"
      },
      "MaintenanceWindowIdentityList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowIdentity" },
        "type": "array"
      },
      "MaintenanceWindowLambdaClientContext": { "maxLength": 8000, "minLength": 1, "type": "string" },
      "MaintenanceWindowLambdaParameters": {
        "description": "<p>The parameters for a LAMBDA task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Lambda tasks, Systems Manager ignores any values specified for TaskParameters and LoggingInfo.</p> </note>",
        "properties": {
          "ClientContext": { "$ref": "#/components/schemas/MaintenanceWindowLambdaClientContext" },
          "Payload": { "$ref": "#/components/schemas/MaintenanceWindowLambdaPayload" },
          "Qualifier": { "$ref": "#/components/schemas/MaintenanceWindowLambdaQualifier" }
        },
        "type": "object"
      },
      "MaintenanceWindowLambdaPayload": { "format": "password", "maxLength": 4096, "type": "string" },
      "MaintenanceWindowLambdaQualifier": { "maxLength": 128, "minLength": 1, "type": "string" },
      "MaintenanceWindowMaxResults": { "maximum": 100, "minimum": 10, "type": "integer" },
      "MaintenanceWindowName": {
        "maxLength": 128,
        "minLength": 3,
        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
        "type": "string"
      },
      "MaintenanceWindowResourceType": { "enum": ["INSTANCE", "RESOURCE_GROUP"], "type": "string" },
      "MaintenanceWindowRunCommandParameters": {
        "description": "<p>The parameters for a RUN_COMMAND task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Run Command tasks, Systems Manager uses specified values for <code>TaskParameters</code> and <code>LoggingInfo</code> only if no values are specified for <code>TaskInvocationParameters</code>. </p> </note>",
        "properties": {
          "Comment": { "$ref": "#/components/schemas/Comment" },
          "DocumentHash": { "$ref": "#/components/schemas/DocumentHash" },
          "DocumentHashType": { "$ref": "#/components/schemas/DocumentHashType" },
          "NotificationConfig": { "$ref": "#/components/schemas/NotificationConfig" },
          "OutputS3BucketName": { "$ref": "#/components/schemas/S3BucketName" },
          "OutputS3KeyPrefix": { "$ref": "#/components/schemas/S3KeyPrefix" },
          "Parameters": { "$ref": "#/components/schemas/Parameters" },
          "ServiceRoleArn": { "$ref": "#/components/schemas/ServiceRole" },
          "TimeoutSeconds": { "$ref": "#/components/schemas/TimeoutSeconds" }
        },
        "type": "object"
      },
      "MaintenanceWindowSchedule": { "maxLength": 256, "minLength": 1, "type": "string" },
      "MaintenanceWindowSearchMaxResults": { "minimum": 1, "type": "integer" },
      "MaintenanceWindowStepFunctionsInput": { "format": "password", "maxLength": 4096, "type": "string" },
      "MaintenanceWindowStepFunctionsName": { "maxLength": 80, "minLength": 1, "type": "string" },
      "MaintenanceWindowStepFunctionsParameters": {
        "description": "<p>The parameters for a STEP_FUNCTIONS task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Step Functions tasks, Systems Manager ignores any values specified for <code>TaskParameters</code> and <code>LoggingInfo</code>.</p> </note>",
        "properties": {
          "Input": { "$ref": "#/components/schemas/MaintenanceWindowStepFunctionsInput" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowStepFunctionsName" }
        },
        "type": "object"
      },
      "MaintenanceWindowStringDateTime": { "type": "string" },
      "MaintenanceWindowTarget": {
        "description": "The target registered with the maintenance window.",
        "properties": {
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "OwnerInformation": { "$ref": "#/components/schemas/OwnerInformation" },
          "ResourceType": { "$ref": "#/components/schemas/MaintenanceWindowResourceType" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTargetId": { "$ref": "#/components/schemas/MaintenanceWindowTargetId" }
        },
        "type": "object"
      },
      "MaintenanceWindowTargetId": {
        "maxLength": 36,
        "minLength": 36,
        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
        "type": "string"
      },
      "MaintenanceWindowTargetList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowTarget" },
        "type": "array"
      },
      "MaintenanceWindowTask": {
        "description": "Information about a task defined for a maintenance window.",
        "properties": {
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "LoggingInfo": { "$ref": "#/components/schemas/LoggingInfo" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "Priority": { "$ref": "#/components/schemas/MaintenanceWindowTaskPriority" },
          "ServiceRoleArn": { "$ref": "#/components/schemas/ServiceRole" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "TaskArn": { "$ref": "#/components/schemas/MaintenanceWindowTaskArn" },
          "TaskParameters": { "$ref": "#/components/schemas/MaintenanceWindowTaskParameters" },
          "Type": { "$ref": "#/components/schemas/MaintenanceWindowTaskType" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTaskId": { "$ref": "#/components/schemas/MaintenanceWindowTaskId" }
        },
        "type": "object"
      },
      "MaintenanceWindowTaskArn": { "maxLength": 1600, "minLength": 1, "type": "string" },
      "MaintenanceWindowTaskId": {
        "maxLength": 36,
        "minLength": 36,
        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
        "type": "string"
      },
      "MaintenanceWindowTaskInvocationParameters": {
        "description": "The parameters for task execution.",
        "properties": {
          "Automation": { "$ref": "#/components/schemas/MaintenanceWindowAutomationParameters" },
          "Lambda": { "$ref": "#/components/schemas/MaintenanceWindowLambdaParameters" },
          "RunCommand": { "$ref": "#/components/schemas/MaintenanceWindowRunCommandParameters" },
          "StepFunctions": { "$ref": "#/components/schemas/MaintenanceWindowStepFunctionsParameters" }
        },
        "type": "object"
      },
      "MaintenanceWindowTaskList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowTask" },
        "type": "array"
      },
      "MaintenanceWindowTaskParameterName": { "maxLength": 255, "minLength": 1, "type": "string" },
      "MaintenanceWindowTaskParameterValue": {
        "format": "password",
        "maxLength": 255,
        "minLength": 1,
        "type": "string"
      },
      "MaintenanceWindowTaskParameterValueExpression": {
        "description": "Defines the values for a task parameter.",
        "properties": { "Values": { "$ref": "#/components/schemas/MaintenanceWindowTaskParameterValueList" } },
        "type": "object"
      },
      "MaintenanceWindowTaskParameterValueList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowTaskParameterValue" },
        "type": "array"
      },
      "MaintenanceWindowTaskParameters": {
        "additionalProperties": { "$ref": "#/components/schemas/MaintenanceWindowTaskParameterValueExpression" },
        "type": "object"
      },
      "MaintenanceWindowTaskParametersList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowTaskParameters" },
        "type": "array"
      },
      "MaintenanceWindowTaskPriority": { "minimum": 0, "type": "integer" },
      "MaintenanceWindowTaskTargetId": { "maxLength": 36, "type": "string" },
      "MaintenanceWindowTaskType": {
        "enum": ["RUN_COMMAND", "AUTOMATION", "STEP_FUNCTIONS", "LAMBDA"],
        "type": "string"
      },
      "MaintenanceWindowTimezone": { "type": "string" },
      "MaintenanceWindowsForTargetList": {
        "items": { "$ref": "#/components/schemas/MaintenanceWindowIdentityForTarget" },
        "type": "array"
      },
      "ManagedInstanceId": { "pattern": "^mi-[0-9a-f]{17}$", "type": "string" },
      "MaxConcurrency": {
        "maxLength": 7,
        "minLength": 1,
        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
        "type": "string"
      },
      "MaxDocumentSizeExceeded": {},
      "MaxErrors": {
        "maxLength": 7,
        "minLength": 1,
        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
        "type": "string"
      },
      "MaxResults": { "maximum": 50, "minimum": 1, "type": "integer" },
      "MaxResultsEC2Compatible": { "maximum": 50, "minimum": 5, "type": "integer" },
      "ModifyDocumentPermissionRequest": {
        "properties": {
          "AccountIdsToAdd": { "$ref": "#/components/schemas/AccountIdList" },
          "AccountIdsToRemove": { "$ref": "#/components/schemas/AccountIdList" },
          "Name": { "$ref": "#/components/schemas/DocumentName" },
          "PermissionType": { "$ref": "#/components/schemas/DocumentPermissionType" }
        },
        "required": ["Name", "PermissionType"],
        "type": "object"
      },
      "ModifyDocumentPermissionResponse": { "properties": {}, "type": "object" },
      "NextToken": { "type": "string" },
      "NonCompliantSummary": {
        "description": "A summary of resources that are not compliant. The summary is organized according to resource type.",
        "properties": {
          "NonCompliantCount": { "$ref": "#/components/schemas/ComplianceSummaryCount" },
          "SeveritySummary": { "$ref": "#/components/schemas/SeveritySummary" }
        },
        "type": "object"
      },
      "NormalStringMap": { "additionalProperties": { "$ref": "#/components/schemas/String" }, "type": "object" },
      "NotificationArn": { "type": "string" },
      "NotificationConfig": {
        "description": "Configurations for sending notifications.",
        "properties": {
          "NotificationArn": { "$ref": "#/components/schemas/NotificationArn" },
          "NotificationEvents": { "$ref": "#/components/schemas/NotificationEventList" },
          "NotificationType": { "$ref": "#/components/schemas/NotificationType" }
        },
        "type": "object"
      },
      "NotificationEvent": {
        "enum": ["All", "InProgress", "Success", "TimedOut", "Cancelled", "Failed"],
        "type": "string"
      },
      "NotificationEventList": { "items": { "$ref": "#/components/schemas/NotificationEvent" }, "type": "array" },
      "NotificationType": { "enum": ["Command", "Invocation"], "type": "string" },
      "OperatingSystem": {
        "enum": ["WINDOWS", "AMAZON_LINUX", "AMAZON_LINUX_2", "UBUNTU", "REDHAT_ENTERPRISE_LINUX", "SUSE", "CENTOS"],
        "type": "string"
      },
      "OpsAggregator": {
        "description": "One or more aggregators for viewing counts of OpsItems using different dimensions such as <code>Source</code>, <code>CreatedTime</code>, or <code>Source and CreatedTime</code>, to name a few.",
        "properties": {
          "AggregatorType": { "$ref": "#/components/schemas/OpsAggregatorType" },
          "Aggregators": { "$ref": "#/components/schemas/OpsAggregatorList" },
          "AttributeName": { "$ref": "#/components/schemas/OpsDataAttributeName" },
          "Filters": { "$ref": "#/components/schemas/OpsFilterList" },
          "TypeName": { "$ref": "#/components/schemas/OpsDataTypeName" },
          "Values": { "$ref": "#/components/schemas/OpsAggregatorValueMap" }
        },
        "type": "object"
      },
      "OpsAggregatorList": {
        "items": { "$ref": "#/components/schemas/OpsAggregator" },
        "maxItems": 12,
        "minItems": 1,
        "type": "array"
      },
      "OpsAggregatorType": { "maxLength": 20, "minLength": 1, "pattern": "^(range|count)", "type": "string" },
      "OpsAggregatorValue": { "maxLength": 512, "minLength": 0, "type": "string" },
      "OpsAggregatorValueKey": { "maxLength": 32, "minLength": 1, "type": "string" },
      "OpsAggregatorValueMap": {
        "additionalProperties": { "$ref": "#/components/schemas/OpsAggregatorValue" },
        "maxProperties": 5,
        "minProperties": 0,
        "type": "object"
      },
      "OpsDataAttributeName": { "type": "string" },
      "OpsDataTypeName": { "maxLength": 100, "minLength": 1, "pattern": "^(AWS|Custom):.*$", "type": "string" },
      "OpsEntity": {
        "description": "The result of the query.",
        "properties": {
          "Data": { "$ref": "#/components/schemas/OpsEntityItemMap" },
          "Id": { "$ref": "#/components/schemas/OpsEntityId" }
        },
        "type": "object"
      },
      "OpsEntityId": { "type": "string" },
      "OpsEntityItem": {
        "description": "The OpsItem summaries result item.",
        "properties": { "Content": { "$ref": "#/components/schemas/OpsEntityItemEntryList" } },
        "type": "object"
      },
      "OpsEntityItemEntry": {
        "additionalProperties": { "$ref": "#/components/schemas/AttributeValue" },
        "maxProperties": 50,
        "minProperties": 0,
        "type": "object"
      },
      "OpsEntityItemEntryList": {
        "items": { "$ref": "#/components/schemas/OpsEntityItemEntry" },
        "maxItems": 10000,
        "minItems": 0,
        "type": "array"
      },
      "OpsEntityItemKey": { "type": "string" },
      "OpsEntityItemMap": {
        "additionalProperties": { "$ref": "#/components/schemas/OpsEntityItem" },
        "type": "object"
      },
      "OpsEntityList": { "items": { "$ref": "#/components/schemas/OpsEntity" }, "type": "array" },
      "OpsFilter": {
        "description": "A filter for viewing OpsItem summaries.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/OpsFilterKey" },
          "Type": { "$ref": "#/components/schemas/OpsFilterOperatorType" },
          "Values": { "$ref": "#/components/schemas/OpsFilterValueList" }
        },
        "required": ["Key", "Values"],
        "type": "object"
      },
      "OpsFilterKey": { "maxLength": 200, "minLength": 1, "type": "string" },
      "OpsFilterList": {
        "items": { "$ref": "#/components/schemas/OpsFilter" },
        "maxItems": 5,
        "minItems": 1,
        "type": "array"
      },
      "OpsFilterOperatorType": {
        "enum": ["Equal", "NotEqual", "BeginWith", "LessThan", "GreaterThan", "Exists"],
        "type": "string"
      },
      "OpsFilterValue": { "type": "string" },
      "OpsFilterValueList": {
        "items": { "$ref": "#/components/schemas/OpsFilterValue" },
        "maxItems": 40,
        "minItems": 1,
        "type": "array"
      },
      "OpsItem": {
        "description": "Operations engineers and IT professionals use OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their AWS resources. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">AWS Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User Guide</i>. ",
        "properties": {
          "CreatedBy": { "$ref": "#/components/schemas/String" },
          "CreatedTime": { "$ref": "#/components/schemas/DateTime" },
          "Description": { "$ref": "#/components/schemas/OpsItemDescription" },
          "LastModifiedBy": { "$ref": "#/components/schemas/String" },
          "LastModifiedTime": { "$ref": "#/components/schemas/DateTime" },
          "Notifications": { "$ref": "#/components/schemas/OpsItemNotifications" },
          "OperationalData": { "$ref": "#/components/schemas/OpsItemOperationalData" },
          "OpsItemId": { "$ref": "#/components/schemas/OpsItemId" },
          "Priority": { "$ref": "#/components/schemas/OpsItemPriority" },
          "RelatedOpsItems": { "$ref": "#/components/schemas/RelatedOpsItems" },
          "Source": { "$ref": "#/components/schemas/OpsItemSource" },
          "Status": { "$ref": "#/components/schemas/OpsItemStatus" },
          "Title": { "$ref": "#/components/schemas/OpsItemTitle" },
          "Version": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "OpsItemAlreadyExistsException": {},
      "OpsItemDataKey": { "maxLength": 128, "minLength": 1, "type": "string" },
      "OpsItemDataType": { "enum": ["SearchableString", "String"], "type": "string" },
      "OpsItemDataValue": {
        "description": "An object that defines the value of the key and its type in the OperationalData map.",
        "properties": {
          "Type": { "$ref": "#/components/schemas/OpsItemDataType" },
          "Value": { "$ref": "#/components/schemas/OpsItemDataValueString" }
        },
        "type": "object"
      },
      "OpsItemDataValueString": { "type": "string" },
      "OpsItemDescription": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "OpsItemFilter": {
        "description": "Describes an OpsItem filter.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/OpsItemFilterKey" },
          "Operator": { "$ref": "#/components/schemas/OpsItemFilterOperator" },
          "Values": { "$ref": "#/components/schemas/OpsItemFilterValues" }
        },
        "required": ["Key", "Values", "Operator"],
        "type": "object"
      },
      "OpsItemFilterKey": {
        "enum": [
          "Status",
          "CreatedBy",
          "Source",
          "Priority",
          "Title",
          "OpsItemId",
          "CreatedTime",
          "LastModifiedTime",
          "OperationalData",
          "OperationalDataKey",
          "OperationalDataValue",
          "ResourceId",
          "AutomationId"
        ],
        "type": "string"
      },
      "OpsItemFilterOperator": { "enum": ["Equal", "Contains", "GreaterThan", "LessThan"], "type": "string" },
      "OpsItemFilterValue": { "type": "string" },
      "OpsItemFilterValues": { "items": { "$ref": "#/components/schemas/OpsItemFilterValue" }, "type": "array" },
      "OpsItemFilters": { "items": { "$ref": "#/components/schemas/OpsItemFilter" }, "type": "array" },
      "OpsItemId": { "pattern": "^(oi)-[0-9a-f]{12}$", "type": "string" },
      "OpsItemInvalidParameterException": {},
      "OpsItemLimitExceededException": {},
      "OpsItemMaxResults": { "maximum": 50, "minimum": 1, "type": "integer" },
      "OpsItemNotFoundException": {},
      "OpsItemNotification": {
        "description": "A notification about the OpsItem.",
        "properties": { "Arn": { "$ref": "#/components/schemas/String" } },
        "type": "object"
      },
      "OpsItemNotifications": { "items": { "$ref": "#/components/schemas/OpsItemNotification" }, "type": "array" },
      "OpsItemOperationalData": {
        "additionalProperties": { "$ref": "#/components/schemas/OpsItemDataValue" },
        "type": "object"
      },
      "OpsItemOpsDataKeysList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "OpsItemPriority": { "maximum": 5, "minimum": 1, "type": "integer" },
      "OpsItemSource": { "maxLength": 64, "minLength": 1, "type": "string" },
      "OpsItemStatus": { "enum": ["Open", "InProgress", "Resolved"], "type": "string" },
      "OpsItemSummaries": { "items": { "$ref": "#/components/schemas/OpsItemSummary" }, "type": "array" },
      "OpsItemSummary": {
        "description": "A count of OpsItems.",
        "properties": {
          "CreatedBy": { "$ref": "#/components/schemas/String" },
          "CreatedTime": { "$ref": "#/components/schemas/DateTime" },
          "LastModifiedBy": { "$ref": "#/components/schemas/String" },
          "LastModifiedTime": { "$ref": "#/components/schemas/DateTime" },
          "OperationalData": { "$ref": "#/components/schemas/OpsItemOperationalData" },
          "OpsItemId": { "$ref": "#/components/schemas/OpsItemId" },
          "Priority": { "$ref": "#/components/schemas/OpsItemPriority" },
          "Source": { "$ref": "#/components/schemas/OpsItemSource" },
          "Status": { "$ref": "#/components/schemas/OpsItemStatus" },
          "Title": { "$ref": "#/components/schemas/OpsItemTitle" }
        },
        "type": "object"
      },
      "OpsItemTitle": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "OutputSource": {
        "description": "Information about the source where the association execution details are stored.",
        "properties": {
          "OutputSourceId": { "$ref": "#/components/schemas/OutputSourceId" },
          "OutputSourceType": { "$ref": "#/components/schemas/OutputSourceType" }
        },
        "type": "object"
      },
      "OutputSourceId": { "maxLength": 36, "minLength": 36, "type": "string" },
      "OutputSourceType": { "type": "string" },
      "OwnerInformation": { "format": "password", "maxLength": 128, "minLength": 1, "type": "string" },
      "PSParameterName": { "maxLength": 2048, "minLength": 1, "type": "string" },
      "PSParameterSelector": { "maxLength": 128, "minLength": 0, "type": "string" },
      "PSParameterValue": { "type": "string" },
      "PSParameterVersion": { "type": "integer" },
      "Parameter": {
        "description": "An Amazon EC2 Systems Manager parameter in Parameter Store.",
        "properties": {
          "ARN": { "$ref": "#/components/schemas/String" },
          "LastModifiedDate": { "$ref": "#/components/schemas/DateTime" },
          "Name": { "$ref": "#/components/schemas/PSParameterName" },
          "Selector": { "$ref": "#/components/schemas/PSParameterSelector" },
          "SourceResult": { "$ref": "#/components/schemas/String" },
          "Type": { "$ref": "#/components/schemas/ParameterType" },
          "Value": { "$ref": "#/components/schemas/PSParameterValue" },
          "Version": { "$ref": "#/components/schemas/PSParameterVersion" }
        },
        "type": "object"
      },
      "ParameterAlreadyExists": {},
      "ParameterDescription": { "maxLength": 1024, "minLength": 0, "type": "string" },
      "ParameterHistory": {
        "description": "Information about parameter usage.",
        "properties": {
          "AllowedPattern": { "$ref": "#/components/schemas/AllowedPattern" },
          "Description": { "$ref": "#/components/schemas/ParameterDescription" },
          "KeyId": { "$ref": "#/components/schemas/ParameterKeyId" },
          "Labels": { "$ref": "#/components/schemas/ParameterLabelList" },
          "LastModifiedDate": { "$ref": "#/components/schemas/DateTime" },
          "LastModifiedUser": { "$ref": "#/components/schemas/String" },
          "Name": { "$ref": "#/components/schemas/PSParameterName" },
          "Policies": { "$ref": "#/components/schemas/ParameterPolicyList" },
          "Tier": { "$ref": "#/components/schemas/ParameterTier" },
          "Type": { "$ref": "#/components/schemas/ParameterType" },
          "Value": { "$ref": "#/components/schemas/PSParameterValue" },
          "Version": { "$ref": "#/components/schemas/PSParameterVersion" }
        },
        "type": "object"
      },
      "ParameterHistoryList": { "items": { "$ref": "#/components/schemas/ParameterHistory" }, "type": "array" },
      "ParameterInlinePolicy": {
        "description": "One or more policies assigned to a parameter.",
        "properties": {
          "PolicyStatus": { "$ref": "#/components/schemas/String" },
          "PolicyText": { "$ref": "#/components/schemas/String" },
          "PolicyType": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ParameterKeyId": { "maxLength": 256, "minLength": 1, "pattern": "^([a-zA-Z0-9:/_-]+)$", "type": "string" },
      "ParameterLabel": { "maxLength": 100, "minLength": 1, "type": "string" },
      "ParameterLabelList": {
        "items": { "$ref": "#/components/schemas/ParameterLabel" },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "ParameterLimitExceeded": {},
      "ParameterList": { "items": { "$ref": "#/components/schemas/Parameter" }, "type": "array" },
      "ParameterMaxVersionLimitExceeded": {},
      "ParameterMetadata": {
        "description": "Metadata includes information like the ARN of the last user and the date/time the parameter was last used.",
        "properties": {
          "AllowedPattern": { "$ref": "#/components/schemas/AllowedPattern" },
          "Description": { "$ref": "#/components/schemas/ParameterDescription" },
          "KeyId": { "$ref": "#/components/schemas/ParameterKeyId" },
          "LastModifiedDate": { "$ref": "#/components/schemas/DateTime" },
          "LastModifiedUser": { "$ref": "#/components/schemas/String" },
          "Name": { "$ref": "#/components/schemas/PSParameterName" },
          "Policies": { "$ref": "#/components/schemas/ParameterPolicyList" },
          "Tier": { "$ref": "#/components/schemas/ParameterTier" },
          "Type": { "$ref": "#/components/schemas/ParameterType" },
          "Version": { "$ref": "#/components/schemas/PSParameterVersion" }
        },
        "type": "object"
      },
      "ParameterMetadataList": { "items": { "$ref": "#/components/schemas/ParameterMetadata" }, "type": "array" },
      "ParameterName": { "type": "string" },
      "ParameterNameList": {
        "items": { "$ref": "#/components/schemas/PSParameterName" },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "ParameterNotFound": {},
      "ParameterPatternMismatchException": {},
      "ParameterPolicies": { "maxLength": 4096, "minLength": 1, "type": "string" },
      "ParameterPolicyList": { "items": { "$ref": "#/components/schemas/ParameterInlinePolicy" }, "type": "array" },
      "ParameterStringFilter": {
        "description": "<p>One or more filters. Use a filter to return a more specific list of results.</p> <note> <p>The <code>Name</code> and <code>Tier</code> filter keys can't be used with the <a>GetParametersByPath</a> API action. Also, the <code>Label</code> filter key can't be used with the <a>DescribeParameters</a> API action.</p> </note>",
        "properties": {
          "Key": { "$ref": "#/components/schemas/ParameterStringFilterKey" },
          "Option": { "$ref": "#/components/schemas/ParameterStringQueryOption" },
          "Values": { "$ref": "#/components/schemas/ParameterStringFilterValueList" }
        },
        "required": ["Key"],
        "type": "object"
      },
      "ParameterStringFilterKey": {
        "maxLength": 132,
        "minLength": 1,
        "pattern": "tag:.+|Name|Type|KeyId|Path|Label|Tier",
        "type": "string"
      },
      "ParameterStringFilterList": {
        "items": { "$ref": "#/components/schemas/ParameterStringFilter" },
        "type": "array"
      },
      "ParameterStringFilterValue": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "ParameterStringFilterValueList": {
        "items": { "$ref": "#/components/schemas/ParameterStringFilterValue" },
        "maxItems": 50,
        "minItems": 1,
        "type": "array"
      },
      "ParameterStringQueryOption": { "maxLength": 10, "minLength": 1, "type": "string" },
      "ParameterTier": { "enum": ["Standard", "Advanced", "Intelligent-Tiering"], "type": "string" },
      "ParameterType": { "enum": ["String", "StringList", "SecureString"], "type": "string" },
      "ParameterValue": { "type": "string" },
      "ParameterValueList": { "items": { "$ref": "#/components/schemas/ParameterValue" }, "type": "array" },
      "ParameterVersionLabelLimitExceeded": {},
      "ParameterVersionNotFound": {},
      "Parameters": { "additionalProperties": { "$ref": "#/components/schemas/ParameterValueList" }, "type": "object" },
      "ParametersFilter": {
        "description": "This data type is deprecated. Instead, use <a>ParameterStringFilter</a>.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/ParametersFilterKey" },
          "Values": { "$ref": "#/components/schemas/ParametersFilterValueList" }
        },
        "required": ["Key", "Values"],
        "type": "object"
      },
      "ParametersFilterKey": { "enum": ["Name", "Type", "KeyId"], "type": "string" },
      "ParametersFilterList": { "items": { "$ref": "#/components/schemas/ParametersFilter" }, "type": "array" },
      "ParametersFilterValue": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "ParametersFilterValueList": {
        "items": { "$ref": "#/components/schemas/ParametersFilterValue" },
        "maxItems": 50,
        "minItems": 1,
        "type": "array"
      },
      "Patch": {
        "description": "Represents metadata about a patch.",
        "properties": {
          "Classification": { "$ref": "#/components/schemas/PatchClassification" },
          "ContentUrl": { "$ref": "#/components/schemas/PatchContentUrl" },
          "Description": { "$ref": "#/components/schemas/PatchDescription" },
          "Id": { "$ref": "#/components/schemas/PatchId" },
          "KbNumber": { "$ref": "#/components/schemas/PatchKbNumber" },
          "Language": { "$ref": "#/components/schemas/PatchLanguage" },
          "MsrcNumber": { "$ref": "#/components/schemas/PatchMsrcNumber" },
          "MsrcSeverity": { "$ref": "#/components/schemas/PatchMsrcSeverity" },
          "Product": { "$ref": "#/components/schemas/PatchProduct" },
          "ProductFamily": { "$ref": "#/components/schemas/PatchProductFamily" },
          "ReleaseDate": { "$ref": "#/components/schemas/DateTime" },
          "Title": { "$ref": "#/components/schemas/PatchTitle" },
          "Vendor": { "$ref": "#/components/schemas/PatchVendor" }
        },
        "type": "object"
      },
      "PatchAction": { "enum": ["ALLOW_AS_DEPENDENCY", "BLOCK"], "type": "string" },
      "PatchBaselineIdentity": {
        "description": "Defines the basic information about a patch baseline.",
        "properties": {
          "BaselineDescription": { "$ref": "#/components/schemas/BaselineDescription" },
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "BaselineName": { "$ref": "#/components/schemas/BaselineName" },
          "DefaultBaseline": { "$ref": "#/components/schemas/DefaultBaseline" },
          "OperatingSystem": { "$ref": "#/components/schemas/OperatingSystem" }
        },
        "type": "object"
      },
      "PatchBaselineIdentityList": {
        "items": { "$ref": "#/components/schemas/PatchBaselineIdentity" },
        "type": "array"
      },
      "PatchBaselineMaxResults": { "maximum": 100, "minimum": 1, "type": "integer" },
      "PatchClassification": { "type": "string" },
      "PatchComplianceData": {
        "description": "Information about the state of a patch on a particular instance as it relates to the patch baseline used to patch the instance.",
        "properties": {
          "Classification": { "$ref": "#/components/schemas/PatchClassification" },
          "InstalledTime": { "$ref": "#/components/schemas/DateTime" },
          "KBId": { "$ref": "#/components/schemas/PatchKbNumber" },
          "Severity": { "$ref": "#/components/schemas/PatchSeverity" },
          "State": { "$ref": "#/components/schemas/PatchComplianceDataState" },
          "Title": { "$ref": "#/components/schemas/PatchTitle" }
        },
        "required": ["Title", "KBId", "Classification", "Severity", "State", "InstalledTime"],
        "type": "object"
      },
      "PatchComplianceDataList": { "items": { "$ref": "#/components/schemas/PatchComplianceData" }, "type": "array" },
      "PatchComplianceDataState": {
        "enum": ["INSTALLED", "INSTALLED_OTHER", "INSTALLED_REJECTED", "MISSING", "NOT_APPLICABLE", "FAILED"],
        "type": "string"
      },
      "PatchComplianceLevel": {
        "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW", "INFORMATIONAL", "UNSPECIFIED"],
        "type": "string"
      },
      "PatchComplianceMaxResults": { "maximum": 100, "minimum": 10, "type": "integer" },
      "PatchContentUrl": { "type": "string" },
      "PatchDeploymentStatus": {
        "enum": ["APPROVED", "PENDING_APPROVAL", "EXPLICIT_APPROVED", "EXPLICIT_REJECTED"],
        "type": "string"
      },
      "PatchDescription": { "type": "string" },
      "PatchFailedCount": { "type": "integer" },
      "PatchFilter": {
        "description": "<p> Defines which patches should be included in a patch baseline.</p> <p>A patch filter consists of a key and a set of values. The filter key is a patch property. For example, the available filter keys for WINDOWS are PATCH_SET, PRODUCT, PRODUCT_FAMILY, CLASSIFICATION, and MSRC_SEVERITY. The filter values define a matching criterion for the patch property indicated by the key. For example, if the filter key is PRODUCT and the filter values are [\"Office 2013\", \"Office 2016\"], then the filter accepts all patches where product name is either \"Office 2013\" or \"Office 2016\". The filter values can be exact values for the patch property given as a key, or a wildcard (*), which matches all values.</p> <p>You can view lists of valid values for the patch properties by running the <code>DescribePatchProperties</code> command. For information about which patch properties can be used with each major operating system, see <a>DescribePatchProperties</a>.</p>",
        "properties": {
          "Key": { "$ref": "#/components/schemas/PatchFilterKey" },
          "Values": { "$ref": "#/components/schemas/PatchFilterValueList" }
        },
        "required": ["Key", "Values"],
        "type": "object"
      },
      "PatchFilterGroup": {
        "description": "A set of patch filters, typically used for approval rules.",
        "properties": { "PatchFilters": { "$ref": "#/components/schemas/PatchFilterList" } },
        "required": ["PatchFilters"],
        "type": "object"
      },
      "PatchFilterKey": {
        "enum": [
          "PATCH_SET",
          "PRODUCT",
          "PRODUCT_FAMILY",
          "CLASSIFICATION",
          "MSRC_SEVERITY",
          "PATCH_ID",
          "SECTION",
          "PRIORITY",
          "SEVERITY"
        ],
        "type": "string"
      },
      "PatchFilterList": {
        "items": { "$ref": "#/components/schemas/PatchFilter" },
        "maxItems": 4,
        "minItems": 0,
        "type": "array"
      },
      "PatchFilterValue": { "maxLength": 64, "minLength": 1, "type": "string" },
      "PatchFilterValueList": {
        "items": { "$ref": "#/components/schemas/PatchFilterValue" },
        "maxItems": 20,
        "minItems": 1,
        "type": "array"
      },
      "PatchGroup": {
        "maxLength": 256,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "PatchGroupList": { "items": { "$ref": "#/components/schemas/PatchGroup" }, "type": "array" },
      "PatchGroupPatchBaselineMapping": {
        "description": "The mapping between a patch group and the patch baseline the patch group is registered with.",
        "properties": {
          "BaselineIdentity": { "$ref": "#/components/schemas/PatchBaselineIdentity" },
          "PatchGroup": { "$ref": "#/components/schemas/PatchGroup" }
        },
        "type": "object"
      },
      "PatchGroupPatchBaselineMappingList": {
        "items": { "$ref": "#/components/schemas/PatchGroupPatchBaselineMapping" },
        "type": "array"
      },
      "PatchId": { "maxLength": 100, "minLength": 1, "type": "string" },
      "PatchIdList": {
        "items": { "$ref": "#/components/schemas/PatchId" },
        "maxItems": 50,
        "minItems": 0,
        "type": "array"
      },
      "PatchInstalledCount": { "type": "integer" },
      "PatchInstalledOtherCount": { "type": "integer" },
      "PatchInstalledRejectedCount": { "type": "integer" },
      "PatchKbNumber": { "type": "string" },
      "PatchLanguage": { "type": "string" },
      "PatchList": { "items": { "$ref": "#/components/schemas/Patch" }, "type": "array" },
      "PatchMissingCount": { "type": "integer" },
      "PatchMsrcNumber": { "type": "string" },
      "PatchMsrcSeverity": { "type": "string" },
      "PatchNotApplicableCount": { "type": "integer" },
      "PatchOperationType": { "enum": ["Scan", "Install"], "type": "string" },
      "PatchOrchestratorFilter": {
        "description": "Defines a filter used in Patch Manager APIs.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/PatchOrchestratorFilterKey" },
          "Values": { "$ref": "#/components/schemas/PatchOrchestratorFilterValues" }
        },
        "type": "object"
      },
      "PatchOrchestratorFilterKey": { "maxLength": 128, "minLength": 1, "type": "string" },
      "PatchOrchestratorFilterList": {
        "items": { "$ref": "#/components/schemas/PatchOrchestratorFilter" },
        "maxItems": 5,
        "minItems": 0,
        "type": "array"
      },
      "PatchOrchestratorFilterValue": { "maxLength": 256, "minLength": 1, "type": "string" },
      "PatchOrchestratorFilterValues": {
        "items": { "$ref": "#/components/schemas/PatchOrchestratorFilterValue" },
        "type": "array"
      },
      "PatchProduct": { "type": "string" },
      "PatchProductFamily": { "type": "string" },
      "PatchPropertiesList": { "items": { "$ref": "#/components/schemas/PatchPropertyEntry" }, "type": "array" },
      "PatchProperty": {
        "enum": ["PRODUCT", "PRODUCT_FAMILY", "CLASSIFICATION", "MSRC_SEVERITY", "PRIORITY", "SEVERITY"],
        "type": "string"
      },
      "PatchPropertyEntry": {
        "additionalProperties": { "$ref": "#/components/schemas/AttributeValue" },
        "type": "object"
      },
      "PatchRule": {
        "description": "Defines an approval rule for a patch baseline.",
        "properties": {
          "ApproveAfterDays": { "$ref": "#/components/schemas/ApproveAfterDays" },
          "ComplianceLevel": { "$ref": "#/components/schemas/PatchComplianceLevel" },
          "EnableNonSecurity": { "$ref": "#/components/schemas/Boolean" },
          "PatchFilterGroup": { "$ref": "#/components/schemas/PatchFilterGroup" }
        },
        "required": ["PatchFilterGroup", "ApproveAfterDays"],
        "type": "object"
      },
      "PatchRuleGroup": {
        "description": "A set of rules defining the approval rules for a patch baseline.",
        "properties": { "PatchRules": { "$ref": "#/components/schemas/PatchRuleList" } },
        "required": ["PatchRules"],
        "type": "object"
      },
      "PatchRuleList": {
        "items": { "$ref": "#/components/schemas/PatchRule" },
        "maxItems": 10,
        "minItems": 0,
        "type": "array"
      },
      "PatchSet": { "enum": ["OS", "APPLICATION"], "type": "string" },
      "PatchSeverity": { "type": "string" },
      "PatchSource": {
        "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
        "properties": {
          "Configuration": { "$ref": "#/components/schemas/PatchSourceConfiguration" },
          "Name": { "$ref": "#/components/schemas/PatchSourceName" },
          "Products": { "$ref": "#/components/schemas/PatchSourceProductList" }
        },
        "required": ["Name", "Products", "Configuration"],
        "type": "object"
      },
      "PatchSourceConfiguration": { "format": "password", "maxLength": 1024, "minLength": 1, "type": "string" },
      "PatchSourceList": {
        "items": { "$ref": "#/components/schemas/PatchSource" },
        "maxItems": 20,
        "minItems": 0,
        "type": "array"
      },
      "PatchSourceName": { "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$", "type": "string" },
      "PatchSourceProduct": { "maxLength": 128, "minLength": 1, "type": "string" },
      "PatchSourceProductList": {
        "items": { "$ref": "#/components/schemas/PatchSourceProduct" },
        "maxItems": 20,
        "minItems": 1,
        "type": "array"
      },
      "PatchStatus": {
        "description": "Information about the approval status of a patch.",
        "properties": {
          "ApprovalDate": { "$ref": "#/components/schemas/DateTime" },
          "ComplianceLevel": { "$ref": "#/components/schemas/PatchComplianceLevel" },
          "DeploymentStatus": { "$ref": "#/components/schemas/PatchDeploymentStatus" }
        },
        "type": "object"
      },
      "PatchTitle": { "type": "string" },
      "PatchUnreportedNotApplicableCount": { "type": "integer" },
      "PatchVendor": { "type": "string" },
      "PingStatus": { "enum": ["Online", "ConnectionLost", "Inactive"], "type": "string" },
      "PlatformType": { "enum": ["Windows", "Linux"], "type": "string" },
      "PlatformTypeList": { "items": { "$ref": "#/components/schemas/PlatformType" }, "type": "array" },
      "PoliciesLimitExceededException": {},
      "Product": { "type": "string" },
      "ProgressCounters": {
        "description": "An aggregate of step execution statuses displayed in the AWS Console for a multi-Region and multi-account Automation execution.",
        "properties": {
          "CancelledSteps": { "$ref": "#/components/schemas/Integer" },
          "FailedSteps": { "$ref": "#/components/schemas/Integer" },
          "SuccessSteps": { "$ref": "#/components/schemas/Integer" },
          "TimedOutSteps": { "$ref": "#/components/schemas/Integer" },
          "TotalSteps": { "$ref": "#/components/schemas/Integer" }
        },
        "type": "object"
      },
      "PutComplianceItemsRequest": {
        "properties": {
          "ComplianceType": { "$ref": "#/components/schemas/ComplianceTypeName" },
          "ExecutionSummary": { "$ref": "#/components/schemas/ComplianceExecutionSummary" },
          "ItemContentHash": { "$ref": "#/components/schemas/ComplianceItemContentHash" },
          "Items": { "$ref": "#/components/schemas/ComplianceItemEntryList" },
          "ResourceId": { "$ref": "#/components/schemas/ComplianceResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/ComplianceResourceType" }
        },
        "required": ["ResourceId", "ResourceType", "ComplianceType", "ExecutionSummary", "Items"],
        "type": "object"
      },
      "PutComplianceItemsResult": { "properties": {}, "type": "object" },
      "PutInventoryMessage": { "type": "string" },
      "PutInventoryRequest": {
        "properties": {
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "Items": { "$ref": "#/components/schemas/InventoryItemList" }
        },
        "required": ["InstanceId", "Items"],
        "type": "object"
      },
      "PutInventoryResult": {
        "properties": { "Message": { "$ref": "#/components/schemas/PutInventoryMessage" } },
        "type": "object"
      },
      "PutParameterRequest": {
        "properties": {
          "AllowedPattern": { "$ref": "#/components/schemas/AllowedPattern" },
          "Description": { "$ref": "#/components/schemas/ParameterDescription" },
          "KeyId": { "$ref": "#/components/schemas/ParameterKeyId" },
          "Name": { "$ref": "#/components/schemas/PSParameterName" },
          "Overwrite": { "$ref": "#/components/schemas/Boolean" },
          "Policies": { "$ref": "#/components/schemas/ParameterPolicies" },
          "Tags": { "$ref": "#/components/schemas/TagList" },
          "Tier": { "$ref": "#/components/schemas/ParameterTier" },
          "Type": { "$ref": "#/components/schemas/ParameterType" },
          "Value": { "$ref": "#/components/schemas/PSParameterValue" }
        },
        "required": ["Name", "Value", "Type"],
        "type": "object"
      },
      "PutParameterResult": {
        "properties": { "Version": { "$ref": "#/components/schemas/PSParameterVersion" } },
        "type": "object"
      },
      "Region": { "type": "string" },
      "Regions": { "items": { "$ref": "#/components/schemas/Region" }, "maxItems": 50, "minItems": 1, "type": "array" },
      "RegisterDefaultPatchBaselineRequest": {
        "properties": { "BaselineId": { "$ref": "#/components/schemas/BaselineId" } },
        "required": ["BaselineId"],
        "type": "object"
      },
      "RegisterDefaultPatchBaselineResult": {
        "properties": { "BaselineId": { "$ref": "#/components/schemas/BaselineId" } },
        "type": "object"
      },
      "RegisterPatchBaselineForPatchGroupRequest": {
        "properties": {
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "PatchGroup": { "$ref": "#/components/schemas/PatchGroup" }
        },
        "required": ["BaselineId", "PatchGroup"],
        "type": "object"
      },
      "RegisterPatchBaselineForPatchGroupResult": {
        "properties": {
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "PatchGroup": { "$ref": "#/components/schemas/PatchGroup" }
        },
        "type": "object"
      },
      "RegisterTargetWithMaintenanceWindowRequest": {
        "properties": {
          "ClientToken": { "$ref": "#/components/schemas/ClientToken" },
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "OwnerInformation": { "$ref": "#/components/schemas/OwnerInformation" },
          "ResourceType": { "$ref": "#/components/schemas/MaintenanceWindowResourceType" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "required": ["WindowId", "ResourceType", "Targets"],
        "type": "object"
      },
      "RegisterTargetWithMaintenanceWindowResult": {
        "properties": { "WindowTargetId": { "$ref": "#/components/schemas/MaintenanceWindowTargetId" } },
        "type": "object"
      },
      "RegisterTaskWithMaintenanceWindowRequest": {
        "properties": {
          "ClientToken": { "$ref": "#/components/schemas/ClientToken" },
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "LoggingInfo": { "$ref": "#/components/schemas/LoggingInfo" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "Priority": { "$ref": "#/components/schemas/MaintenanceWindowTaskPriority" },
          "ServiceRoleArn": { "$ref": "#/components/schemas/ServiceRole" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "TaskArn": { "$ref": "#/components/schemas/MaintenanceWindowTaskArn" },
          "TaskInvocationParameters": { "$ref": "#/components/schemas/MaintenanceWindowTaskInvocationParameters" },
          "TaskParameters": { "$ref": "#/components/schemas/MaintenanceWindowTaskParameters" },
          "TaskType": { "$ref": "#/components/schemas/MaintenanceWindowTaskType" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "required": ["WindowId", "Targets", "TaskArn", "TaskType", "MaxConcurrency", "MaxErrors"],
        "type": "object"
      },
      "RegisterTaskWithMaintenanceWindowResult": {
        "properties": { "WindowTaskId": { "$ref": "#/components/schemas/MaintenanceWindowTaskId" } },
        "type": "object"
      },
      "RegistrationLimit": { "maximum": 1000, "minimum": 1, "type": "integer" },
      "RegistrationsCount": { "maximum": 1000, "minimum": 1, "type": "integer" },
      "RelatedOpsItem": {
        "description": "An OpsItems that shares something in common with the current OpsItem. For example, related OpsItems can include OpsItems with similar error messages, impacted resources, or statuses for the impacted resource.",
        "properties": { "OpsItemId": { "$ref": "#/components/schemas/String" } },
        "required": ["OpsItemId"],
        "type": "object"
      },
      "RelatedOpsItems": { "items": { "$ref": "#/components/schemas/RelatedOpsItem" }, "type": "array" },
      "RemainingCount": { "type": "integer" },
      "RemoveTagsFromResourceRequest": {
        "properties": {
          "ResourceId": { "$ref": "#/components/schemas/ResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/ResourceTypeForTagging" },
          "TagKeys": { "$ref": "#/components/schemas/KeyList" }
        },
        "required": ["ResourceType", "ResourceId", "TagKeys"],
        "type": "object"
      },
      "RemoveTagsFromResourceResult": { "properties": {}, "type": "object" },
      "ResetServiceSettingRequest": {
        "description": "The request body of the ResetServiceSetting API action.",
        "properties": { "SettingId": { "$ref": "#/components/schemas/ServiceSettingId" } },
        "required": ["SettingId"],
        "type": "object"
      },
      "ResetServiceSettingResult": {
        "description": "The result body of the ResetServiceSetting API action.",
        "properties": { "ServiceSetting": { "$ref": "#/components/schemas/ServiceSetting" } },
        "type": "object"
      },
      "ResolvedTargets": {
        "description": "Information about targets that resolved during the Automation execution.",
        "properties": {
          "ParameterValues": { "$ref": "#/components/schemas/TargetParameterList" },
          "Truncated": { "$ref": "#/components/schemas/Boolean" }
        },
        "type": "object"
      },
      "ResourceComplianceSummaryItem": {
        "description": "Compliance summary information for a specific resource. ",
        "properties": {
          "ComplianceType": { "$ref": "#/components/schemas/ComplianceTypeName" },
          "CompliantSummary": { "$ref": "#/components/schemas/CompliantSummary" },
          "ExecutionSummary": { "$ref": "#/components/schemas/ComplianceExecutionSummary" },
          "NonCompliantSummary": { "$ref": "#/components/schemas/NonCompliantSummary" },
          "OverallSeverity": { "$ref": "#/components/schemas/ComplianceSeverity" },
          "ResourceId": { "$ref": "#/components/schemas/ComplianceResourceId" },
          "ResourceType": { "$ref": "#/components/schemas/ComplianceResourceType" },
          "Status": { "$ref": "#/components/schemas/ComplianceStatus" }
        },
        "type": "object"
      },
      "ResourceComplianceSummaryItemList": {
        "items": { "$ref": "#/components/schemas/ResourceComplianceSummaryItem" },
        "type": "array"
      },
      "ResourceCount": { "type": "integer" },
      "ResourceCountByStatus": { "type": "string" },
      "ResourceDataSyncAWSKMSKeyARN": { "maxLength": 512, "minLength": 1, "pattern": "arn:.*", "type": "string" },
      "ResourceDataSyncAlreadyExistsException": {},
      "ResourceDataSyncCountExceededException": {},
      "ResourceDataSyncCreatedTime": { "format": "date-time", "type": "string" },
      "ResourceDataSyncInvalidConfigurationException": {},
      "ResourceDataSyncItem": {
        "description": "Information about a Resource Data Sync configuration, including its current status and last successful sync.",
        "properties": {
          "LastStatus": { "$ref": "#/components/schemas/LastResourceDataSyncStatus" },
          "LastSuccessfulSyncTime": { "$ref": "#/components/schemas/LastSuccessfulResourceDataSyncTime" },
          "LastSyncStatusMessage": { "$ref": "#/components/schemas/LastResourceDataSyncMessage" },
          "LastSyncTime": { "$ref": "#/components/schemas/LastResourceDataSyncTime" },
          "S3Destination": { "$ref": "#/components/schemas/ResourceDataSyncS3Destination" },
          "SyncCreatedTime": { "$ref": "#/components/schemas/ResourceDataSyncCreatedTime" },
          "SyncName": { "$ref": "#/components/schemas/ResourceDataSyncName" }
        },
        "type": "object"
      },
      "ResourceDataSyncItemList": { "items": { "$ref": "#/components/schemas/ResourceDataSyncItem" }, "type": "array" },
      "ResourceDataSyncName": { "maxLength": 64, "minLength": 1, "type": "string" },
      "ResourceDataSyncNotFoundException": {},
      "ResourceDataSyncS3BucketName": { "maxLength": 2048, "minLength": 1, "type": "string" },
      "ResourceDataSyncS3Destination": {
        "description": "Information about the target Amazon S3 bucket for the Resource Data Sync.",
        "properties": {
          "AWSKMSKeyARN": { "$ref": "#/components/schemas/ResourceDataSyncAWSKMSKeyARN" },
          "BucketName": { "$ref": "#/components/schemas/ResourceDataSyncS3BucketName" },
          "Prefix": { "$ref": "#/components/schemas/ResourceDataSyncS3Prefix" },
          "Region": { "$ref": "#/components/schemas/ResourceDataSyncS3Region" },
          "SyncFormat": { "$ref": "#/components/schemas/ResourceDataSyncS3Format" }
        },
        "required": ["BucketName", "SyncFormat", "Region"],
        "type": "object"
      },
      "ResourceDataSyncS3Format": { "enum": ["JsonSerDe"], "type": "string" },
      "ResourceDataSyncS3Prefix": { "maxLength": 256, "minLength": 1, "type": "string" },
      "ResourceDataSyncS3Region": { "maxLength": 64, "minLength": 1, "type": "string" },
      "ResourceId": { "type": "string" },
      "ResourceInUseException": {},
      "ResourceLimitExceededException": {},
      "ResourceType": { "enum": ["ManagedInstance", "Document", "EC2Instance"], "type": "string" },
      "ResourceTypeForTagging": {
        "enum": ["Document", "ManagedInstance", "MaintenanceWindow", "Parameter", "PatchBaseline", "OpsItem"],
        "type": "string"
      },
      "ResponseCode": { "type": "integer" },
      "ResultAttribute": {
        "description": "The inventory item result attribute.",
        "properties": { "TypeName": { "$ref": "#/components/schemas/InventoryItemTypeName" } },
        "required": ["TypeName"],
        "type": "object"
      },
      "ResultAttributeList": {
        "items": { "$ref": "#/components/schemas/ResultAttribute" },
        "maxItems": 1,
        "minItems": 1,
        "type": "array"
      },
      "ResumeSessionRequest": {
        "properties": { "SessionId": { "$ref": "#/components/schemas/SessionId" } },
        "required": ["SessionId"],
        "type": "object"
      },
      "ResumeSessionResponse": {
        "properties": {
          "SessionId": { "$ref": "#/components/schemas/SessionId" },
          "StreamUrl": { "$ref": "#/components/schemas/StreamUrl" },
          "TokenValue": { "$ref": "#/components/schemas/TokenValue" }
        },
        "type": "object"
      },
      "S3BucketName": { "maxLength": 63, "minLength": 3, "type": "string" },
      "S3KeyPrefix": { "maxLength": 500, "type": "string" },
      "S3OutputLocation": {
        "description": "An Amazon S3 bucket where you want to store the results of this request.",
        "properties": {
          "OutputS3BucketName": { "$ref": "#/components/schemas/S3BucketName" },
          "OutputS3KeyPrefix": { "$ref": "#/components/schemas/S3KeyPrefix" },
          "OutputS3Region": { "$ref": "#/components/schemas/S3Region" }
        },
        "type": "object"
      },
      "S3OutputUrl": {
        "description": "A URL for the Amazon S3 bucket where you want to store the results of this request.",
        "properties": { "OutputUrl": { "$ref": "#/components/schemas/Url" } },
        "type": "object"
      },
      "S3Region": { "maxLength": 20, "minLength": 3, "type": "string" },
      "ScheduleExpression": { "maxLength": 256, "minLength": 1, "type": "string" },
      "ScheduledWindowExecution": {
        "description": "Information about a scheduled execution for a maintenance window.",
        "properties": {
          "ExecutionTime": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "type": "object"
      },
      "ScheduledWindowExecutionList": {
        "items": { "$ref": "#/components/schemas/ScheduledWindowExecution" },
        "type": "array"
      },
      "SendAutomationSignalRequest": {
        "properties": {
          "AutomationExecutionId": { "$ref": "#/components/schemas/AutomationExecutionId" },
          "Payload": { "$ref": "#/components/schemas/AutomationParameterMap" },
          "SignalType": { "$ref": "#/components/schemas/SignalType" }
        },
        "required": ["AutomationExecutionId", "SignalType"],
        "type": "object"
      },
      "SendAutomationSignalResult": { "properties": {}, "type": "object" },
      "SendCommandRequest": {
        "properties": {
          "CloudWatchOutputConfig": { "$ref": "#/components/schemas/CloudWatchOutputConfig" },
          "Comment": { "$ref": "#/components/schemas/Comment" },
          "DocumentHash": { "$ref": "#/components/schemas/DocumentHash" },
          "DocumentHashType": { "$ref": "#/components/schemas/DocumentHashType" },
          "DocumentName": { "$ref": "#/components/schemas/DocumentARN" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "InstanceIds": { "$ref": "#/components/schemas/InstanceIdList" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "NotificationConfig": { "$ref": "#/components/schemas/NotificationConfig" },
          "OutputS3BucketName": { "$ref": "#/components/schemas/S3BucketName" },
          "OutputS3KeyPrefix": { "$ref": "#/components/schemas/S3KeyPrefix" },
          "OutputS3Region": { "$ref": "#/components/schemas/S3Region" },
          "Parameters": { "$ref": "#/components/schemas/Parameters" },
          "ServiceRoleArn": { "$ref": "#/components/schemas/ServiceRole" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "TimeoutSeconds": { "$ref": "#/components/schemas/TimeoutSeconds" }
        },
        "required": ["DocumentName"],
        "type": "object"
      },
      "SendCommandResult": {
        "properties": { "Command": { "$ref": "#/components/schemas/Command" } },
        "type": "object"
      },
      "ServiceRole": { "type": "string" },
      "ServiceSetting": {
        "description": "<p>The service setting data structure.</p> <p> <code>ServiceSetting</code> is an account-level setting for an AWS service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an AWS service charges money to the account based on feature or service usage, then the AWS service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. AWS services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>UpdateServiceSetting</a> API action to change the default setting. Or, use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the AWS service team.</p>",
        "properties": {
          "ARN": { "$ref": "#/components/schemas/String" },
          "LastModifiedDate": { "$ref": "#/components/schemas/DateTime" },
          "LastModifiedUser": { "$ref": "#/components/schemas/String" },
          "SettingId": { "$ref": "#/components/schemas/ServiceSettingId" },
          "SettingValue": { "$ref": "#/components/schemas/ServiceSettingValue" },
          "Status": { "$ref": "#/components/schemas/String" }
        },
        "type": "object"
      },
      "ServiceSettingId": { "maxLength": 1000, "minLength": 1, "type": "string" },
      "ServiceSettingNotFound": {},
      "ServiceSettingValue": { "maxLength": 4096, "minLength": 1, "type": "string" },
      "Session": {
        "description": "Information about a Session Manager connection to an instance.",
        "properties": {
          "Details": { "$ref": "#/components/schemas/SessionDetails" },
          "DocumentName": { "$ref": "#/components/schemas/DocumentName" },
          "EndDate": { "$ref": "#/components/schemas/DateTime" },
          "OutputUrl": { "$ref": "#/components/schemas/SessionManagerOutputUrl" },
          "Owner": { "$ref": "#/components/schemas/SessionOwner" },
          "SessionId": { "$ref": "#/components/schemas/SessionId" },
          "StartDate": { "$ref": "#/components/schemas/DateTime" },
          "Status": { "$ref": "#/components/schemas/SessionStatus" },
          "Target": { "$ref": "#/components/schemas/SessionTarget" }
        },
        "type": "object"
      },
      "SessionDetails": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "SessionFilter": {
        "description": "Describes a filter for Session Manager information.",
        "properties": {
          "key": { "$ref": "#/components/schemas/SessionFilterKey" },
          "value": { "$ref": "#/components/schemas/SessionFilterValue" }
        },
        "required": ["key", "value"],
        "type": "object"
      },
      "SessionFilterKey": { "enum": ["InvokedAfter", "InvokedBefore", "Target", "Owner", "Status"], "type": "string" },
      "SessionFilterList": {
        "items": { "$ref": "#/components/schemas/SessionFilter" },
        "maxItems": 5,
        "minItems": 1,
        "type": "array"
      },
      "SessionFilterValue": { "maxLength": 200, "minLength": 1, "type": "string" },
      "SessionId": { "maxLength": 96, "minLength": 1, "type": "string" },
      "SessionList": { "items": { "$ref": "#/components/schemas/Session" }, "type": "array" },
      "SessionManagerCloudWatchOutputUrl": { "maxLength": 2083, "minLength": 1, "type": "string" },
      "SessionManagerOutputUrl": {
        "description": "Reserved for future use.",
        "properties": {
          "CloudWatchOutputUrl": { "$ref": "#/components/schemas/SessionManagerCloudWatchOutputUrl" },
          "S3OutputUrl": { "$ref": "#/components/schemas/SessionManagerS3OutputUrl" }
        },
        "type": "object"
      },
      "SessionManagerParameterName": { "maxLength": 255, "minLength": 1, "type": "string" },
      "SessionManagerParameterValue": { "maxLength": 65535, "minLength": 1, "type": "string" },
      "SessionManagerParameterValueList": {
        "items": { "$ref": "#/components/schemas/SessionManagerParameterValue" },
        "type": "array"
      },
      "SessionManagerParameters": {
        "additionalProperties": { "$ref": "#/components/schemas/SessionManagerParameterValueList" },
        "type": "object"
      },
      "SessionManagerS3OutputUrl": { "maxLength": 2083, "minLength": 1, "type": "string" },
      "SessionMaxResults": { "maximum": 200, "minimum": 1, "type": "integer" },
      "SessionOwner": { "maxLength": 256, "minLength": 1, "type": "string" },
      "SessionState": { "enum": ["Active", "History"], "type": "string" },
      "SessionStatus": {
        "enum": ["Connected", "Connecting", "Disconnected", "Terminated", "Terminating", "Failed"],
        "type": "string"
      },
      "SessionTarget": { "maxLength": 50, "minLength": 1, "type": "string" },
      "SeveritySummary": {
        "description": "The number of managed instances found for each patch severity level defined in the request filter.",
        "properties": {
          "CriticalCount": { "$ref": "#/components/schemas/ComplianceSummaryCount" },
          "HighCount": { "$ref": "#/components/schemas/ComplianceSummaryCount" },
          "InformationalCount": { "$ref": "#/components/schemas/ComplianceSummaryCount" },
          "LowCount": { "$ref": "#/components/schemas/ComplianceSummaryCount" },
          "MediumCount": { "$ref": "#/components/schemas/ComplianceSummaryCount" },
          "UnspecifiedCount": { "$ref": "#/components/schemas/ComplianceSummaryCount" }
        },
        "type": "object"
      },
      "SignalType": { "enum": ["Approve", "Reject", "StartStep", "StopStep", "Resume"], "type": "string" },
      "SnapshotDownloadUrl": { "type": "string" },
      "SnapshotId": {
        "maxLength": 36,
        "minLength": 36,
        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        "type": "string"
      },
      "StandardErrorContent": { "maxLength": 8000, "type": "string" },
      "StandardOutputContent": { "maxLength": 24000, "type": "string" },
      "StartAssociationsOnceRequest": {
        "properties": { "AssociationIds": { "$ref": "#/components/schemas/AssociationIdList" } },
        "required": ["AssociationIds"],
        "type": "object"
      },
      "StartAssociationsOnceResult": { "properties": {}, "type": "object" },
      "StartAutomationExecutionRequest": {
        "properties": {
          "ClientToken": { "$ref": "#/components/schemas/IdempotencyToken" },
          "DocumentName": { "$ref": "#/components/schemas/DocumentARN" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Mode": { "$ref": "#/components/schemas/ExecutionMode" },
          "Parameters": { "$ref": "#/components/schemas/AutomationParameterMap" },
          "TargetLocations": { "$ref": "#/components/schemas/TargetLocations" },
          "TargetMaps": { "$ref": "#/components/schemas/TargetMaps" },
          "TargetParameterName": { "$ref": "#/components/schemas/AutomationParameterKey" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "required": ["DocumentName"],
        "type": "object"
      },
      "StartAutomationExecutionResult": {
        "properties": { "AutomationExecutionId": { "$ref": "#/components/schemas/AutomationExecutionId" } },
        "type": "object"
      },
      "StartSessionRequest": {
        "properties": {
          "DocumentName": { "$ref": "#/components/schemas/DocumentARN" },
          "Parameters": { "$ref": "#/components/schemas/SessionManagerParameters" },
          "Target": { "$ref": "#/components/schemas/SessionTarget" }
        },
        "required": ["Target"],
        "type": "object"
      },
      "StartSessionResponse": {
        "properties": {
          "SessionId": { "$ref": "#/components/schemas/SessionId" },
          "StreamUrl": { "$ref": "#/components/schemas/StreamUrl" },
          "TokenValue": { "$ref": "#/components/schemas/TokenValue" }
        },
        "type": "object"
      },
      "StatusAdditionalInfo": { "maxLength": 1024, "type": "string" },
      "StatusDetails": { "maxLength": 100, "minLength": 0, "type": "string" },
      "StatusMessage": { "maxLength": 1024, "minLength": 1, "type": "string" },
      "StatusName": { "type": "string" },
      "StatusUnchanged": {},
      "StepExecution": {
        "description": "Detailed information about an the execution state of an Automation step.",
        "properties": {
          "Action": { "$ref": "#/components/schemas/AutomationActionName" },
          "ExecutionEndTime": { "$ref": "#/components/schemas/DateTime" },
          "ExecutionStartTime": { "$ref": "#/components/schemas/DateTime" },
          "FailureDetails": { "$ref": "#/components/schemas/FailureDetails" },
          "FailureMessage": { "$ref": "#/components/schemas/String" },
          "Inputs": { "$ref": "#/components/schemas/NormalStringMap" },
          "IsCritical": { "$ref": "#/components/schemas/Boolean" },
          "IsEnd": { "$ref": "#/components/schemas/Boolean" },
          "MaxAttempts": { "$ref": "#/components/schemas/Integer" },
          "NextStep": { "$ref": "#/components/schemas/String" },
          "OnFailure": { "$ref": "#/components/schemas/String" },
          "Outputs": { "$ref": "#/components/schemas/AutomationParameterMap" },
          "OverriddenParameters": { "$ref": "#/components/schemas/AutomationParameterMap" },
          "Response": { "$ref": "#/components/schemas/String" },
          "ResponseCode": { "$ref": "#/components/schemas/String" },
          "StepExecutionId": { "$ref": "#/components/schemas/String" },
          "StepName": { "$ref": "#/components/schemas/String" },
          "StepStatus": { "$ref": "#/components/schemas/AutomationExecutionStatus" },
          "TargetLocation": { "$ref": "#/components/schemas/TargetLocation" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "TimeoutSeconds": { "$ref": "#/components/schemas/Long" },
          "ValidNextSteps": { "$ref": "#/components/schemas/ValidNextStepList" }
        },
        "type": "object"
      },
      "StepExecutionFilter": {
        "description": "A filter to limit the amount of step execution information returned by the call.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/StepExecutionFilterKey" },
          "Values": { "$ref": "#/components/schemas/StepExecutionFilterValueList" }
        },
        "required": ["Key", "Values"],
        "type": "object"
      },
      "StepExecutionFilterKey": {
        "enum": ["StartTimeBefore", "StartTimeAfter", "StepExecutionStatus", "StepExecutionId", "StepName", "Action"],
        "type": "string"
      },
      "StepExecutionFilterList": {
        "items": { "$ref": "#/components/schemas/StepExecutionFilter" },
        "maxItems": 6,
        "minItems": 1,
        "type": "array"
      },
      "StepExecutionFilterValue": { "maxLength": 150, "minLength": 1, "type": "string" },
      "StepExecutionFilterValueList": {
        "items": { "$ref": "#/components/schemas/StepExecutionFilterValue" },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "StepExecutionList": { "items": { "$ref": "#/components/schemas/StepExecution" }, "type": "array" },
      "StopAutomationExecutionRequest": {
        "properties": {
          "AutomationExecutionId": { "$ref": "#/components/schemas/AutomationExecutionId" },
          "Type": { "$ref": "#/components/schemas/StopType" }
        },
        "required": ["AutomationExecutionId"],
        "type": "object"
      },
      "StopAutomationExecutionResult": { "properties": {}, "type": "object" },
      "StopType": { "enum": ["Complete", "Cancel"], "type": "string" },
      "StreamUrl": { "type": "string" },
      "String": { "type": "string" },
      "StringDateTime": {
        "pattern": "^([\\-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d(?!:))?)?(\\17[0-5]\\d([\\.,]\\d)?)?([zZ]|([\\-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
        "type": "string"
      },
      "StringList": { "items": { "$ref": "#/components/schemas/String" }, "type": "array" },
      "SubTypeCountLimitExceededException": {},
      "Tag": {
        "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, maintenance windows, Parameter Store parameters, and patch baselines.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TagKey" },
          "Value": { "$ref": "#/components/schemas/TagValue" }
        },
        "required": ["Key", "Value"],
        "type": "object"
      },
      "TagKey": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "TagList": { "items": { "$ref": "#/components/schemas/Tag" }, "maxItems": 1000, "type": "array" },
      "TagValue": {
        "maxLength": 256,
        "minLength": 1,
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "type": "string"
      },
      "Target": {
        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. </p> <p>Supported formats include the following.</p> <ul> <li> <p> <code>Key=InstanceIds,Values=<i>instance-id-1</i>,<i>instance-id-2</i>,<i>instance-id-3</i> </code> </p> </li> <li> <p> <code>Key=tag:<i>my-tag-key</i>,Values=<i>my-tag-value-1</i>,<i>my-tag-value-2</i> </code> </p> </li> <li> <p> <code>Key=tag-key,Values=<i>my-tag-key-1</i>,<i>my-tag-key-2</i> </code> </p> </li> <li> <p>(Maintenance window targets only) <code>Key=resource-groups:Name,Values=<i>resource-group-name</i> </code> </p> </li> <li> <p>(Maintenance window targets only) <code>Key=resource-groups:ResourceTypeFilters,Values=<i>resource-type-1</i>,<i>resource-type-2</i> </code> </p> </li> </ul> <p>For example:</p> <ul> <li> <p> <code>Key=InstanceIds,Values=i-02573cafcfEXAMPLE,i-0471e04240EXAMPLE,i-07782c72faEXAMPLE</code> </p> </li> <li> <p> <code>Key=tag:CostCenter,Values=CostCenter1,CostCenter2,CostCenter3</code> </p> </li> <li> <p> <code>Key=tag-key,Values=Name,Instance-Type,CostCenter</code> </p> </li> <li> <p>(Maintenance window targets only) <code>Key=resource-groups:Name,Values=ProductionResourceGroup</code> </p> </li> <li> <p>(Maintenance window targets only) <code>Key=resource-groups:ResourceTypeFilters,Values=<i>AWS::EC2::INSTANCE</i>,<i>AWS::EC2::VPC</i> </code> </p> </li> </ul> <p>For information about how to send commands that target instances using <code>Key,Value</code> parameters, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Using Targets and Rate Controls to Send Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
        "properties": {
          "Key": { "$ref": "#/components/schemas/TargetKey" },
          "Values": { "$ref": "#/components/schemas/TargetValues" }
        },
        "type": "object"
      },
      "TargetCount": { "type": "integer" },
      "TargetInUseException": {},
      "TargetKey": {
        "maxLength": 163,
        "minLength": 1,
        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "type": "string"
      },
      "TargetLocation": {
        "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
        "properties": {
          "Accounts": { "$ref": "#/components/schemas/Accounts" },
          "ExecutionRoleName": { "$ref": "#/components/schemas/ExecutionRoleName" },
          "Regions": { "$ref": "#/components/schemas/Regions" },
          "TargetLocationMaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "TargetLocationMaxErrors": { "$ref": "#/components/schemas/MaxErrors" }
        },
        "type": "object"
      },
      "TargetLocations": {
        "items": { "$ref": "#/components/schemas/TargetLocation" },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "TargetMap": {
        "additionalProperties": { "$ref": "#/components/schemas/TargetMapValueList" },
        "maxProperties": 20,
        "minProperties": 1,
        "type": "object"
      },
      "TargetMapKey": { "maxLength": 50, "minLength": 1, "type": "string" },
      "TargetMapValue": { "maxLength": 50, "minLength": 1, "type": "string" },
      "TargetMapValueList": {
        "items": { "$ref": "#/components/schemas/TargetMapValue" },
        "maxItems": 25,
        "minItems": 0,
        "type": "array"
      },
      "TargetMaps": {
        "items": { "$ref": "#/components/schemas/TargetMap" },
        "maxItems": 300,
        "minItems": 0,
        "type": "array"
      },
      "TargetNotConnected": {},
      "TargetParameterList": { "items": { "$ref": "#/components/schemas/ParameterValue" }, "type": "array" },
      "TargetType": { "maxLength": 200, "pattern": "^\\/[\\w\\.\\-\\:\\/]*$", "type": "string" },
      "TargetValue": { "type": "string" },
      "TargetValues": {
        "items": { "$ref": "#/components/schemas/TargetValue" },
        "maxItems": 50,
        "minItems": 0,
        "type": "array"
      },
      "Targets": { "items": { "$ref": "#/components/schemas/Target" }, "maxItems": 5, "minItems": 0, "type": "array" },
      "TerminateSessionRequest": {
        "properties": { "SessionId": { "$ref": "#/components/schemas/SessionId" } },
        "required": ["SessionId"],
        "type": "object"
      },
      "TerminateSessionResponse": {
        "properties": { "SessionId": { "$ref": "#/components/schemas/SessionId" } },
        "type": "object"
      },
      "TimeoutSeconds": { "maximum": 2592000, "minimum": 30, "type": "integer" },
      "TokenValue": { "maxLength": 300, "minLength": 0, "type": "string" },
      "TooManyTagsError": {},
      "TooManyUpdates": {},
      "TotalCount": { "type": "integer" },
      "TotalSizeLimitExceededException": {},
      "UnsupportedFeatureRequiredException": {},
      "UnsupportedInventoryItemContextException": {},
      "UnsupportedInventorySchemaVersionException": {},
      "UnsupportedOperatingSystem": {},
      "UnsupportedParameterType": {},
      "UnsupportedPlatformType": {},
      "UpdateAssociationRequest": {
        "properties": {
          "AssociationId": { "$ref": "#/components/schemas/AssociationId" },
          "AssociationName": { "$ref": "#/components/schemas/AssociationName" },
          "AssociationVersion": { "$ref": "#/components/schemas/AssociationVersion" },
          "AutomationTargetParameterName": { "$ref": "#/components/schemas/AutomationTargetParameterName" },
          "ComplianceSeverity": { "$ref": "#/components/schemas/AssociationComplianceSeverity" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" },
          "OutputLocation": { "$ref": "#/components/schemas/InstanceAssociationOutputLocation" },
          "Parameters": { "$ref": "#/components/schemas/Parameters" },
          "ScheduleExpression": { "$ref": "#/components/schemas/ScheduleExpression" },
          "Targets": { "$ref": "#/components/schemas/Targets" }
        },
        "required": ["AssociationId"],
        "type": "object"
      },
      "UpdateAssociationResult": {
        "properties": { "AssociationDescription": { "$ref": "#/components/schemas/AssociationDescription" } },
        "type": "object"
      },
      "UpdateAssociationStatusRequest": {
        "properties": {
          "AssociationStatus": { "$ref": "#/components/schemas/AssociationStatus" },
          "InstanceId": { "$ref": "#/components/schemas/InstanceId" },
          "Name": { "$ref": "#/components/schemas/DocumentARN" }
        },
        "required": ["Name", "InstanceId", "AssociationStatus"],
        "type": "object"
      },
      "UpdateAssociationStatusResult": {
        "properties": { "AssociationDescription": { "$ref": "#/components/schemas/AssociationDescription" } },
        "type": "object"
      },
      "UpdateDocumentDefaultVersionRequest": {
        "properties": {
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersionNumber" },
          "Name": { "$ref": "#/components/schemas/DocumentName" }
        },
        "required": ["Name", "DocumentVersion"],
        "type": "object"
      },
      "UpdateDocumentDefaultVersionResult": {
        "properties": { "Description": { "$ref": "#/components/schemas/DocumentDefaultVersionDescription" } },
        "type": "object"
      },
      "UpdateDocumentRequest": {
        "properties": {
          "Attachments": { "$ref": "#/components/schemas/AttachmentsSourceList" },
          "Content": { "$ref": "#/components/schemas/DocumentContent" },
          "DocumentFormat": { "$ref": "#/components/schemas/DocumentFormat" },
          "DocumentVersion": { "$ref": "#/components/schemas/DocumentVersion" },
          "Name": { "$ref": "#/components/schemas/DocumentName" },
          "TargetType": { "$ref": "#/components/schemas/TargetType" },
          "VersionName": { "$ref": "#/components/schemas/DocumentVersionName" }
        },
        "required": ["Content", "Name"],
        "type": "object"
      },
      "UpdateDocumentResult": {
        "properties": { "DocumentDescription": { "$ref": "#/components/schemas/DocumentDescription" } },
        "type": "object"
      },
      "UpdateMaintenanceWindowRequest": {
        "properties": {
          "AllowUnassociatedTargets": { "$ref": "#/components/schemas/MaintenanceWindowAllowUnassociatedTargets" },
          "Cutoff": { "$ref": "#/components/schemas/MaintenanceWindowCutoff" },
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "Duration": { "$ref": "#/components/schemas/MaintenanceWindowDurationHours" },
          "Enabled": { "$ref": "#/components/schemas/MaintenanceWindowEnabled" },
          "EndDate": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "Replace": { "$ref": "#/components/schemas/Boolean" },
          "Schedule": { "$ref": "#/components/schemas/MaintenanceWindowSchedule" },
          "ScheduleTimezone": { "$ref": "#/components/schemas/MaintenanceWindowTimezone" },
          "StartDate": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "required": ["WindowId"],
        "type": "object"
      },
      "UpdateMaintenanceWindowResult": {
        "properties": {
          "AllowUnassociatedTargets": { "$ref": "#/components/schemas/MaintenanceWindowAllowUnassociatedTargets" },
          "Cutoff": { "$ref": "#/components/schemas/MaintenanceWindowCutoff" },
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "Duration": { "$ref": "#/components/schemas/MaintenanceWindowDurationHours" },
          "Enabled": { "$ref": "#/components/schemas/MaintenanceWindowEnabled" },
          "EndDate": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "Schedule": { "$ref": "#/components/schemas/MaintenanceWindowSchedule" },
          "ScheduleTimezone": { "$ref": "#/components/schemas/MaintenanceWindowTimezone" },
          "StartDate": { "$ref": "#/components/schemas/MaintenanceWindowStringDateTime" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" }
        },
        "type": "object"
      },
      "UpdateMaintenanceWindowTargetRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "OwnerInformation": { "$ref": "#/components/schemas/OwnerInformation" },
          "Replace": { "$ref": "#/components/schemas/Boolean" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTargetId": { "$ref": "#/components/schemas/MaintenanceWindowTargetId" }
        },
        "required": ["WindowId", "WindowTargetId"],
        "type": "object"
      },
      "UpdateMaintenanceWindowTargetResult": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "OwnerInformation": { "$ref": "#/components/schemas/OwnerInformation" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTargetId": { "$ref": "#/components/schemas/MaintenanceWindowTargetId" }
        },
        "type": "object"
      },
      "UpdateMaintenanceWindowTaskRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "LoggingInfo": { "$ref": "#/components/schemas/LoggingInfo" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "Priority": { "$ref": "#/components/schemas/MaintenanceWindowTaskPriority" },
          "Replace": { "$ref": "#/components/schemas/Boolean" },
          "ServiceRoleArn": { "$ref": "#/components/schemas/ServiceRole" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "TaskArn": { "$ref": "#/components/schemas/MaintenanceWindowTaskArn" },
          "TaskInvocationParameters": { "$ref": "#/components/schemas/MaintenanceWindowTaskInvocationParameters" },
          "TaskParameters": { "$ref": "#/components/schemas/MaintenanceWindowTaskParameters" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTaskId": { "$ref": "#/components/schemas/MaintenanceWindowTaskId" }
        },
        "required": ["WindowId", "WindowTaskId"],
        "type": "object"
      },
      "UpdateMaintenanceWindowTaskResult": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/MaintenanceWindowDescription" },
          "LoggingInfo": { "$ref": "#/components/schemas/LoggingInfo" },
          "MaxConcurrency": { "$ref": "#/components/schemas/MaxConcurrency" },
          "MaxErrors": { "$ref": "#/components/schemas/MaxErrors" },
          "Name": { "$ref": "#/components/schemas/MaintenanceWindowName" },
          "Priority": { "$ref": "#/components/schemas/MaintenanceWindowTaskPriority" },
          "ServiceRoleArn": { "$ref": "#/components/schemas/ServiceRole" },
          "Targets": { "$ref": "#/components/schemas/Targets" },
          "TaskArn": { "$ref": "#/components/schemas/MaintenanceWindowTaskArn" },
          "TaskInvocationParameters": { "$ref": "#/components/schemas/MaintenanceWindowTaskInvocationParameters" },
          "TaskParameters": { "$ref": "#/components/schemas/MaintenanceWindowTaskParameters" },
          "WindowId": { "$ref": "#/components/schemas/MaintenanceWindowId" },
          "WindowTaskId": { "$ref": "#/components/schemas/MaintenanceWindowTaskId" }
        },
        "type": "object"
      },
      "UpdateManagedInstanceRoleRequest": {
        "properties": {
          "IamRole": { "$ref": "#/components/schemas/IamRole" },
          "InstanceId": { "$ref": "#/components/schemas/ManagedInstanceId" }
        },
        "required": ["InstanceId", "IamRole"],
        "type": "object"
      },
      "UpdateManagedInstanceRoleResult": { "properties": {}, "type": "object" },
      "UpdateOpsItemRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/OpsItemDescription" },
          "Notifications": { "$ref": "#/components/schemas/OpsItemNotifications" },
          "OperationalData": { "$ref": "#/components/schemas/OpsItemOperationalData" },
          "OperationalDataToDelete": { "$ref": "#/components/schemas/OpsItemOpsDataKeysList" },
          "OpsItemId": { "$ref": "#/components/schemas/OpsItemId" },
          "Priority": { "$ref": "#/components/schemas/OpsItemPriority" },
          "RelatedOpsItems": { "$ref": "#/components/schemas/RelatedOpsItems" },
          "Status": { "$ref": "#/components/schemas/OpsItemStatus" },
          "Title": { "$ref": "#/components/schemas/OpsItemTitle" }
        },
        "required": ["OpsItemId"],
        "type": "object"
      },
      "UpdateOpsItemResponse": { "properties": {}, "type": "object" },
      "UpdatePatchBaselineRequest": {
        "properties": {
          "ApprovalRules": { "$ref": "#/components/schemas/PatchRuleGroup" },
          "ApprovedPatches": { "$ref": "#/components/schemas/PatchIdList" },
          "ApprovedPatchesComplianceLevel": { "$ref": "#/components/schemas/PatchComplianceLevel" },
          "ApprovedPatchesEnableNonSecurity": { "$ref": "#/components/schemas/Boolean" },
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "Description": { "$ref": "#/components/schemas/BaselineDescription" },
          "GlobalFilters": { "$ref": "#/components/schemas/PatchFilterGroup" },
          "Name": { "$ref": "#/components/schemas/BaselineName" },
          "RejectedPatches": { "$ref": "#/components/schemas/PatchIdList" },
          "RejectedPatchesAction": { "$ref": "#/components/schemas/PatchAction" },
          "Replace": { "$ref": "#/components/schemas/Boolean" },
          "Sources": { "$ref": "#/components/schemas/PatchSourceList" }
        },
        "required": ["BaselineId"],
        "type": "object"
      },
      "UpdatePatchBaselineResult": {
        "properties": {
          "ApprovalRules": { "$ref": "#/components/schemas/PatchRuleGroup" },
          "ApprovedPatches": { "$ref": "#/components/schemas/PatchIdList" },
          "ApprovedPatchesComplianceLevel": { "$ref": "#/components/schemas/PatchComplianceLevel" },
          "ApprovedPatchesEnableNonSecurity": { "$ref": "#/components/schemas/Boolean" },
          "BaselineId": { "$ref": "#/components/schemas/BaselineId" },
          "CreatedDate": { "$ref": "#/components/schemas/DateTime" },
          "Description": { "$ref": "#/components/schemas/BaselineDescription" },
          "GlobalFilters": { "$ref": "#/components/schemas/PatchFilterGroup" },
          "ModifiedDate": { "$ref": "#/components/schemas/DateTime" },
          "Name": { "$ref": "#/components/schemas/BaselineName" },
          "OperatingSystem": { "$ref": "#/components/schemas/OperatingSystem" },
          "RejectedPatches": { "$ref": "#/components/schemas/PatchIdList" },
          "RejectedPatchesAction": { "$ref": "#/components/schemas/PatchAction" },
          "Sources": { "$ref": "#/components/schemas/PatchSourceList" }
        },
        "type": "object"
      },
      "UpdateServiceSettingRequest": {
        "description": "The request body of the UpdateServiceSetting API action.",
        "properties": {
          "SettingId": { "$ref": "#/components/schemas/ServiceSettingId" },
          "SettingValue": { "$ref": "#/components/schemas/ServiceSettingValue" }
        },
        "required": ["SettingId", "SettingValue"],
        "type": "object"
      },
      "UpdateServiceSettingResult": {
        "description": "The result body of the UpdateServiceSetting API action.",
        "properties": {},
        "type": "object"
      },
      "Url": { "type": "string" },
      "ValidNextStep": { "maxLength": 65535, "minLength": 1, "type": "string" },
      "ValidNextStepList": { "items": { "$ref": "#/components/schemas/ValidNextStep" }, "type": "array" },
      "Version": { "pattern": "^[0-9]{1,6}(\\.[0-9]{1,6}){2,3}$", "type": "string" }
    }
  }
}
