{"openapi":"3.0.0","info":{"description":"Circuit REST API to interact with the Circuit system.\n\n[Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)","title":"REST API Version 2","version":"2.9.125","x-apisguru-categories":["messaging"],"x-logo":{"backgroundColor":"#FFFFFF","url":"https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_927933988269903874_4jU82-IJ_400x400.jpg"},"x-origin":[{"format":"swagger","url":"https://circuitsandbox.net/rest/v2/swagger","version":"2.0"}],"x-preferred":true,"x-providerName":"circuitsandbox.net"},"paths":{"/conversations":{"get":{"description":"Gets a list of conversations and communities the authenticated user participates in.","operationId":"getConversations","parameters":[{"description":"The modification time of the conversation in UTC format. During the query the conversations before (<i>default</i>) or after this timestamp are returned. In case no timestamp is specified the current server time in UTC is used, i.e. the last 25 modified conversations are returned","in":"query","name":"modTime","required":false,"schema":{"type":"string","format":"date-time"}},{"description":"The direction of the search based on the modification time. Valid values are either BEFORE (default) or AFTER","in":"query","name":"direction","required":false,"schema":{"type":"string","maxLength":2048,"enum":["BEFORE","AFTER"],"default":"BEFORE"}},{"description":"The maximum number of returned results (default 25). The maximum allowed value is 100.","in":"query","name":"results","required":false,"schema":{"type":"number","format":"int32","minimum":1,"maximum":100,"default":25}}],"responses":{"200":{"description":"The matching conversations","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Conversation"},"type":"array"}},"application/xml":{"schema":{"items":{"$ref":"#/components/schemas/Conversation"},"type":"array"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Gets a list of conversations","tags":["Conversation Queries"]}},"/conversations/community":{"get":{"description":"Gets a list of communities. This endpoint can be used to explore the communities the authenticated user could join.","operationId":"getCommunityConversations","parameters":[{"description":"Defines the type of sorting for the community conversations (default is alphabetical)","in":"query","name":"sort","required":false,"schema":{"type":"string","maxLength":2048,"enum":["ALPHABETICALLY","RECENT_ACTIVITY","POPULARITY"],"default":"ALPHABETICALLY"}},{"description":"Defines the ordering of the conversations (default is ascending)","in":"query","name":"order","required":false,"schema":{"type":"string","maxLength":2048,"enum":["ASCENDING","DESCENDING"],"default":"ASCENDING"}},{"description":"If set to false only conversations are returned where the user is no member of, otherwise all community conversations are returned","in":"query","name":"includeOwn","required":false,"schema":{"type":"boolean","default":false}},{"description":"The index of the conversation that is the first one that has to be returned. E.g. if a request starts with startIndex 40 and results 20 the conversations 40 to 60 are returned","in":"query","name":"startIndex","required":false,"schema":{"type":"number","format":"int32","minimum":0,"maximum":255,"default":0}},{"description":"The maximum number of returned results (default 25). The maximum allowed value is 100.","in":"query","name":"results","required":false,"schema":{"type":"number","format":"int32","minimum":1,"maximum":100,"default":25}}],"responses":{"200":{"description":"The matching conversations","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Conversation"},"type":"array"}},"application/xml":{"schema":{"items":{"$ref":"#/components/schemas/Conversation"},"type":"array"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul>a field constraint is violated</ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Gets a list of communities","tags":["Conversation Queries"]},"post":{"description":"Creates a community. Communities are open conversations that anyone in a Circuit domain (tenant) can join without having to be added by another user.","operationId":"createCommunityConversation","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"participants":{"description":"list of participants that will be part of this conversation, specified by the Circuit user ID or the unique email address. At least one participant needs to be added","type":"array","items":{"maxLength":2048,"type":"string"}},"description":{"description":"An optional description for the community conversation","type":"string","maxLength":2048},"topic":{"description":"An optional topic of the conversation. If not set the Circuit client will render the names of the participants as topic of the conversation (the first 4 names will be used)","type":"string","maxLength":2048}},"required":["topic"]}}}},"responses":{"200":{"description":"The conversation was created successfully and can be accessed via the conversation ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the userIds passed as parameter are not provided in the correct format</li><li> or an valid email address</li><li>or one or more of the user do not exist</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Creates a community conversation","tags":["Conversation Creation"]}},"/conversations/community/{convId}":{"put":{"description":"Updates the information of the given community.","operationId":"updateConversationCommunity","parameters":[{"description":"The ID of the conversation which should be updated","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"description":{"description":"An optional description for the community conversation","type":"string","maxLength":2048},"topic":{"description":"An optional topic of the conversation. If not set the Circuit client will render the names of the participants as topic of the conversation (the first 4 names will be used)","type":"string","maxLength":2048}}}}}},"responses":{"200":{"description":"Gets the updated conversation object with the new topic / description","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the conversation is not of type COMMUNITY</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Updates the information of a community","tags":["Conversation Management"]}},"/conversations/community/{convId}/join":{"post":{"description":"Adds the authenticated user to the given community (i.e., allows the user to join this community). Contrary to the operation of adding a new participant, this operation can only be performed by a user who is not yet a member of the community.","operationId":"joinCommunityConversation","parameters":[{"description":"The ID of the conversation which the user will join","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"Gets the conversation object to which the participants was added","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the userIds passed as parameter are not provided in the correct format</li><li> or an valid email address</li><li>or one or more of the user do not exist</li><li>the conversation does not exist</li><li>the conversation is not of type COMMUNITY</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Adds the authenticated user to a community","tags":["Conversation Management"]}},"/conversations/community/{convId}/participants":{"delete":{"description":"Removes one or more participants from the given community. The last participant of a community cannot be removed. This operation can only be performed by a user who is already a member of the community.","operationId":"removeParticipantCommunity","parameters":[{"description":"The ID of the conversation from which the participant have to be removed","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The IDs or the unique email addresses of the Circuit users that have to be removed","in":"query","name":"participants","required":true,"explode":true,"schema":{"type":"array","items":{"maxLength":6500,"type":"string"}}}],"responses":{"200":{"description":"Gets the conversation object from which the participants were removed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul></li>the userIds passed as parameter are not provided in the correct format</li><li> or an valid email address</li><li>or one or more of the user do not exist</li><li>the conversation does not exist</li><li>the conversation is not of type COMMUNITY</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Removes participants from a community","tags":["Conversation Management"]},"post":{"description":"Adds one or more participants to the given community. This operation can only be performed by a user who is already a member of the community.","operationId":"addParticipantCommunity","parameters":[{"description":"The ID of the conversation to which the participant has to be added.","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"$ref":"#/components/requestBodies/addParticipantCommunity"},"responses":{"200":{"description":"Gets the conversation object to which the participants were added.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the userIds passed as parameter are not provided in the correct format</li><li> or an valid email address</li><li>or one or more of the user do not exist</li><li>the conversation does not exist</li><li>the conversation is not of type COMMUNITY</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Adds participants to a community","tags":["Conversation Management"]}},"/conversations/direct":{"get":{"description":"Checks if a 1-to-1 conversation between the authenticated user and the user with the provided userId exists.","operationId":"getDirectConversation","parameters":[{"description":"The participant that will be part of this conversation together with the creator, specified by the Circuit user ID or the unique email address","in":"query","name":"participant","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The conversation was found and can be accessed via the conversation ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the data format of the passed user does not match either a UUID (user primary key)</li><li> or an valid email address</li><li>or the user does not exist</li><li>or the user is the same who initiates the request</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Checks for a 1-to-1 conversation","tags":["Conversation Queries"]},"post":{"description":"Creates a 1-to-1 conversation between the authenticated user and the user with the provided userId. In case there is already an existing 1-to-1 conversation between these users, the endpoint returns the existing conversation.","operationId":"createDirectConversation","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"participant":{"description":"The participant that will be part of this conversation together with the creator, specified by the Circuit user ID or the unique email address","type":"string","maxLength":2048}},"required":["participant"]}}}},"responses":{"200":{"description":"The conversation was created successfully and can be accessed via the conversation ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the data format of the passed user does not match either a UUID (user primary key)</li><li> or an valid email address</li><li>or the user does not exist</li><li>or the user is the same who initiates the request</li></ul>"},"401":{"description":"The authentication was not successful"},"409":{"description":"A conversation already exists. The response contains this conversation.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Creates a 1-to-1 conversation","tags":["Conversation Creation"]}},"/conversations/favorite":{"get":{"description":"Gets the conversationIds which are marked as favorites.","operationId":"getFavoriteConversations","responses":{"200":{"description":"A list of marked conversations or an empty response.","content":{"*/*":{"schema":{"items":{"$ref":"#/components/schemas/String"},"type":"array"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Gets favorite conversations","tags":["Conversation Queries"]}},"/conversations/group":{"post":{"description":"Creates a group conversation between three or more users. The authenticated user is directly added to this conversation.","operationId":"createGroupConversation","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"participants":{"description":"A list of participants that will be part of this conversation, specified by the Circuit user ID or the unique email address. At least one participant needs to be added","type":"array","items":{"maxLength":2048,"type":"string"}},"topic":{"description":"An optional topic of the conversation. If not set the Circuit client will render the names of the participants as topic of the conversation (the first 4 names will be used)","type":"string","maxLength":2048}},"required":["participants"]}}}},"responses":{"200":{"description":"The conversation was created successfully and can be accessed via the conversation ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the userIds passed as parameter are not provided in the correct format</li><li> or an valid email address</li><li>or one or more of the user do not exist</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Creates a group conversation","tags":["Conversation Creation"]}},"/conversations/group/{convId}":{"put":{"description":"Updates the information of the given group conversation.","operationId":"updateConversationGroup","parameters":[{"description":"The ID of the conversation which should be updated","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"topic":{"description":"An optional topic of the conversation. If not set the Circuit client will render the names of the participants as topic of the conversation (the first 4 names will be used)","type":"string","maxLength":2048}}}}}},"responses":{"200":{"description":"Gets the updated conversation object with the new topic","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the conversation is not of type GROUP</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Updates the information of a group conversation","tags":["Conversation Management"]}},"/conversations/group/{convId}/participants":{"delete":{"description":"Removes one or more participants from the given group conversation. The last participant of a group conversation cannot be removed. This operation can only be performed on behalf of a user who is already a member of the conversation.","operationId":"removeParticipantGroup","parameters":[{"description":"The ID of the conversation from which the participant have to be removed","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The IDs or the unique email addresses of the Circuit users that have to be removed","in":"query","name":"participants","required":true,"explode":true,"schema":{"type":"array","items":{"maxLength":6500,"type":"string"}}}],"responses":{"200":{"description":"Gets the conversation object from which the participants were removed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the userIds passed as parameter are not provided in the correct format</li><li> or an valid email address</li><li>or one or more of the user do not exist</li><li>the conversation does not exist</li><li>the conversation is not of type GROUP</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Removes participants from a group conversation","tags":["Conversation Management"]},"post":{"description":"Adds one or more participants to the given group conversation. This operation can only be performed by a user who is already a member of the conversation.","operationId":"addParticipantGroup","parameters":[{"description":"The ID of the conversation to which the participant has to be added.","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"$ref":"#/components/requestBodies/addParticipantCommunity"},"responses":{"200":{"description":"Gets the conversation object to which the participants were added.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the userIds passed as parameter are not provided in the correct format</li><li> or an valid email address</li><li>or one or more of the user do not exist</li><li>the conversation does not exist</li><li>the conversation is not of type GROUP</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Adds participants to a group conversation","tags":["Conversation Management"]}},"/conversations/label/{labelId}":{"get":{"description":"Returns conversations with matching labels and paginated ","operationId":"getConversationsByLabel","parameters":[{"description":"Id of the label to look for","in":"path","name":"labelId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"Pointer to the next page of conversations if there are any","in":"query","name":"nextPagePointer","required":false,"schema":{"type":"string","maxLength":2048}},{"description":"Numbers of max conversations per page","in":"query","name":"pageSize","required":false,"schema":{"type":"number","format":"int32","minimum":1,"maximum":100,"default":25}}],"responses":{"200":{"description":"Returns a list of conversations that are tagged with a certain label","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConversationsPage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ConversationsPage"}}}},"400":{"description":"he request cannot be fulfilled due to bad syntax"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Returns conversations with a certain label","tags":["Conversation Queries"]}},"/conversations/messages/flag":{"get":{"description":"Gets a list of all the messages the authenticated user has flagged. This endpoint should be used carefully in case where the authenticated user has a lot of flagged messages.","operationId":"getFlagItemConv","responses":{"200":{"description":"Gets the list of flagged items","content":{"*/*":{"schema":{"items":{"$ref":"#/components/schemas/ConversationItem"},"type":"array"}}}},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Gets a list of the flagged messages","tags":["Messaging (Advanced)"]}},"/conversations/messages/{itemId}":{"get":{"description":"Returns a text item for a given item id","operationId":"getSingleConversationtem","parameters":[{"description":"The ID of the item that will be returned","in":"path","name":"itemId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The item was successful returned","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConversationItem"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ConversationItem"}}}},"400":{"description":"The item with the given id was not found"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Returns a text item","tags":["Messaging (Basic)"]}},"/conversations/moderate/{convId}":{"post":{"description":"Set a conversation in moderatd mode. Moderators can be added and removed","operationId":"moderateConversation","parameters":[{"description":"The ID of the conversation which will be set to moderated state","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The conversation is in moderated mode"},"401":{"description":"Permission denied"},"403":{"description":"Forbidden to edit this conversation"},"500":{"description":"Internal server error"},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MODERATE_CONVERSATIONS"]}],"summary":"Set conversation moderated","tags":["Conversation Management"]}},"/conversations/resolveinvitetoken":{"get":{"description":"Resolves an invite token to a conversation","operationId":"resolveInvitationToken","parameters":[{"description":"The invite token to resolve","in":"query","name":"token","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"Returns the conversation object that belongs to the invite token if you are member of the conversation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"In case no invitation token was send"},"401":{"description":"The authentication was not successful"},"404":{"description":"If the token does not exist or you are not member of the conversation "},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Resolves an invite token to a conversation","tags":["Conversation Management"]}},"/conversations/search":{"get":{"description":"Performs a search for conversation content. A maximum of 100 conversations is returned. If you hit this limit you should refine the search term.","operationId":"searchConversations","parameters":[{"description":"The search term","in":"query","name":"term","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"Optional parameter to specify if a deep or normal search is executed. In a deep search all matching item IDs inside every conversation are returned (up to a maximum of 100). For a normal search only the conversation IDs are returned. Default is a normal search (without item IDs).","in":"query","name":"includeItemIds","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"A list of conversations and items that match the term","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConversationSearchResult"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ConversationSearchResult"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS"]}],"summary":"Performs a conversation search","tags":["Conversation Queries"]}},"/conversations/unmoderate/{convId}":{"post":{"description":"Set a conversation to unmoderatd mode","operationId":"unmoderateConversation","parameters":[{"description":"The ID of the conversation which will be set to unmoderated state","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The conversation is in unmoderated mode"},"401":{"description":"Forbidden to edit this conversation"},"403":{"description":"Permission denied"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MODERATE_CONVERSATIONS"]}],"summary":"Set conversation unmoderated","tags":["Conversation Management"]}},"/conversations/{convId}":{"get":{"description":"Gets a conversation based on the given ID.","operationId":"getConversationbyId","parameters":[{"description":"The ID of the conversation which should be updated","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"Gets the conversation object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Gets a conversation","tags":["Conversation Queries"]}},"/conversations/{convId}/conversationdetails":{"get":{"description":"Gets the conference details of the given conversation. Conference details include the URL, which is used to join the conference through a web or mobile application, as well as the dial-in phone numbers and conference PIN, which are used to join the conference by phone.","operationId":"getJoinDetails","parameters":[{"description":"The ID of the conversation for which the join details should be returned","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The join details.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConversationDetails"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ConversationDetails"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Gets the conference details of a conversation","tags":["Conversation Management"]}},"/conversations/{convId}/favorite":{"delete":{"description":"Removes a conversation from favorites. Favorites can be displayed in a separate side tab inside of the Circuit client to have a better overview of important conversations.","operationId":"deleteFavorite","parameters":[{"description":"The ID of the conversation which will be unmarked as favorite","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The conversation was successfully unmarked"},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li><li>the conversation was not marked before</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS"]}],"summary":"Removes a conversation from favorites","tags":["Messaging (Advanced)"]},"post":{"description":"Adds a conversation to the favorites. Favorites can be displayed in a separate side tab inside of the Circuit client to have a better overview of important conversations.","operationId":"addFavorite","parameters":[{"description":"The ID of the conversation which will be marked as favorite","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The conversation was successfully marked"},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS"]}],"summary":"Adds a conversation to the favorites","tags":["Messaging (Advanced)"]}},"/conversations/{convId}/items":{"get":{"description":"Gets a list of conversation items.","operationId":"getConversationItems","parameters":[{"description":"The ID of the conversation to which the items belong","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The modification time of the item in UTC format. During the query the items before (default) or after this timestamps are returned. In case no timestamp is specified the current server time in UTC is used, i.e. the last 25 modified items are returned","in":"query","name":"modTime","required":false,"schema":{"type":"string","format":"date-time"}},{"description":"The direction of the search based on the modification time. Valid values are either BEFORE (default) or AFTER","in":"query","name":"direction","required":false,"schema":{"type":"string","maxLength":2048,"enum":["BEFORE","AFTER"],"default":"BEFORE"}},{"description":"The maximum number of returned results (default 25). The maximum allowed value is 100.","in":"query","name":"results","required":false,"schema":{"type":"number","format":"int32","minimum":1,"maximum":100,"default":25}}],"responses":{"200":{"description":"The matching conversation items","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConversationItem"},"type":"array"}},"application/xml":{"schema":{"items":{"$ref":"#/components/schemas/ConversationItem"},"type":"array"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Gets a list of conversation items","tags":["Messaging (Basic)"]}},"/conversations/{convId}/label":{"post":{"description":"Adds a label to a conversation, you can search and organize your conversations based on these labels","operationId":"assignLabel","parameters":[{"description":"The ID of the conversation to which the label is added","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"label":{"description":"The actual label ","type":"string","maxLength":2048}},"required":["label"]}}}},"responses":{"200":{"description":"The label was successfully added","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Label"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Label"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>a field constraint is violated</li><li>you reached the maximum of 250 labels</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","ORGANIZE_CONVERSATIONS"]}],"summary":"Adds a label to a conversation","tags":["Conversation Management"]}},"/conversations/{convId}/label/{labelId}":{"delete":{"description":"Removes a label from a conversation, you can search and organize your conversations based on these labels","operationId":"unassignLabel","parameters":[{"description":"The ID of the conversation from which the label is removed","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"not available","in":"path","name":"labelId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The label was successfully removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Label"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Label"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>a field constraint is violated</li><li>the label was not assigned to the conversation</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS"]}],"summary":"Removes a label from a conversation","tags":["Conversation Management"]}},"/conversations/{convId}/messages":{"post":{"description":"Adds a message to the given conversation. This operation can be only performed on behalf of a user who is already a member of the conversation.","operationId":"addTextItem","parameters":[{"description":"The ID of the conversation to which the new item has to be added","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"content":{"description":"The actual content of the item, is mandatory unless an attachment is added","type":"string","maxLength":16384},"attachments":{"description":"A comma separated list of attachment IDs from the file API.","type":"array","items":{"maxLength":16000,"type":"string"}},"subject":{"description":"The subject (headline) of the new text item","type":"string","maxLength":255},"formMetaData":{"description":"not available","type":"string","maxLength":32768}}}}}},"responses":{"200":{"description":"Gets the new text item object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConversationItem"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ConversationItem"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","CREATE_CONVERSATIONS_CONTENT"]}],"summary":"Adds a message to a conversation","tags":["Messaging (Basic)"]}},"/conversations/{convId}/messages/flag":{"get":{"description":"Gets a list of all the flagged messages in the given conversation.","operationId":"getFlagItem","parameters":[{"description":"The ID of the conversation to which the item belongs","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"Gets the list of flagged items","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConversationItem"},"type":"array"}},"application/xml":{"schema":{"items":{"$ref":"#/components/schemas/ConversationItem"},"type":"array"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS","ORGANIZE_CONVERSATIONS"]}],"summary":"Gets a list of the flagged messages of a conversation","tags":["Messaging (Advanced)"]}},"/conversations/{convId}/messages/{itemId}":{"delete":{"description":"Marks a message in the given conversation as deleted. Deleted messages are still part of the conversation, but their content is no more visible. This operation can only be performed on behalf of the message's creator.","operationId":"deleteTextItem","parameters":[{"description":"The ID of the conversation to which the item belongs","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The ID of the item that will be deleted","in":"path","name":"itemId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"Gets the deleted text item object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConversationItem"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ConversationItem"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the item does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","DELETE_CONVERSATIONS_CONTENT"]}],"summary":"Deletes a message from a conversation","tags":["Messaging (Basic)"]},"post":{"description":"Adds a message to the existing item. The added message will be a child item of the message with the given itemId.","operationId":"addTextItemWithParent","parameters":[{"description":"The ID of the conversation to which the new item has to be added","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The ID of the item to which the new one has to be added as child","in":"path","name":"itemId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"content":{"description":"The actual content of the item","type":"string","maxLength":16384},"attachments":{"description":"not available","type":"array","items":{"maxLength":4096,"type":"string"}},"subject":{"description":"The subject (headline) of the new text item","type":"string","maxLength":255},"formMetaData":{"description":"not available","type":"string","maxLength":32768}}}}}},"responses":{"200":{"description":"Gets the new text item object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConversationItem"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ConversationItem"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the parent item does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS"]}],"summary":"Adds a message to an item","tags":["Messaging (Basic)"]},"put":{"description":"Updates the content or subject of the existing message. Only the creator of the message is allowed to perform this operation.","operationId":"updateTextItem","parameters":[{"description":"The ID of the conversation to which the item belongs","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The ID of the item to update","in":"path","name":"itemId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"content":{"description":"The actual content of the item","type":"string","maxLength":16384},"attachments":{"description":"not available","type":"array","items":{"maxLength":16000,"type":"string"}},"subject":{"description":"The subject (headline) of the new text item","type":"string","maxLength":255},"formMetaData":{"description":"not available","type":"string","maxLength":32768}}}}}},"responses":{"200":{"description":"Gets the modified text item object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConversationItem"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ConversationItem"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","UPDATE_CONVERSATION_CONTENT"]}],"summary":"Updates a message","tags":["Messaging (Basic)"]}},"/conversations/{convId}/messages/{itemId}/flag":{"delete":{"description":"Removes the flag from a given message that is posted to the given conversation.","operationId":"unFlagItem","parameters":[{"description":"The ID of the conversation to which the item belongs","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The ID of the item that will be flagged","in":"path","name":"itemId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The flagged state of item was successfully removed"},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the item does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","ORGANIZE_CONVERSATIONS"]}],"summary":"Removes the flag from a message","tags":["Messaging (Advanced)"]},"post":{"description":"Adds a flag to the given message in the given conversation.","operationId":"flagItem","parameters":[{"description":"The ID of the conversation to which the item belongs","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The ID of the item that will be flagged","in":"path","name":"itemId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"itemCreationTime":{"description":"The time when the item was created","type":"string","maxLength":2048},"parentId":{"description":"The ID of the item's parent","type":"string","maxLength":2048}}}}}},"responses":{"200":{"description":"The item was successful flagged"},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the item does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","ORGANIZE_CONVERSATIONS"]}],"summary":"Adds a flag to a message in a conversation","tags":["Messaging (Advanced)"]}},"/conversations/{convId}/messages/{itemId}/like":{"delete":{"description":"Removes a \"like\" from the given message in the given conversation","operationId":"unlikeItem","parameters":[{"description":"The ID of the conversation to which the item belongs","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The ID of the item that will be unliked","in":"path","name":"itemId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The item was successful unliked"},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the item does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","UPDATE_CONVERSATION_CONTENT"]}],"summary":"Removes a \"like\" from a message","tags":["Messaging (Advanced)"]},"post":{"description":"Adds a \"like\" to the given message in the given conversation","operationId":"likeItem","parameters":[{"description":"The ID of the conversation to which the item belongs","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The ID of the item that will be liked","in":"path","name":"itemId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The item was successful liked"},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the conversation does not exist</li><li>the item does not exist</li><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","UPDATE_CONVERSATION_CONTENT"]}],"summary":"Adds a \"like\" to a message","tags":["Messaging (Advanced)"]}},"/conversations/{convId}/moderators":{"delete":{"description":"Removes a list of moderators from a conversation","operationId":"removeModerators","parameters":[{"description":"The ID of the conversation where the moderators are removed","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"moderators":{"description":"The list of moderator ids to remove","type":"array","items":{"maxLength":6500,"type":"string"}}},"required":["moderators"]}}}},"responses":{"200":{"description":"The moderators were successfully removed"},"400":{"description":"Failure in moderators list"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MODERATE_CONVERSATIONS"]}],"summary":"Remove moderators","tags":["Conversation Management"]},"post":{"description":"Adds a list of moderators to a conversation","operationId":"addModerators","parameters":[{"description":"The ID of the conversation to which the moderators are added","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"moderators":{"description":"The list of moderator ids to add ","type":"array","items":{"maxLength":6500,"type":"string"}}},"required":["moderators"]}}}},"responses":{"200":{"description":"The moderators were successfully added"},"400":{"description":"Error reading list of moderators to add"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_CONVERSATIONS","MANAGE_CONVERSATIONS"]}],"summary":"Add moderators","tags":["Conversation Management"]}},"/conversations/{convId}/participants":{"get":{"description":"Performs a search for participants. The max number of participants is configurable. If more participants are available a search pointer is returned for consecutive calls.","operationId":"getParticipantsByConvId","parameters":[{"description":"The id of the conversation the participants are searched for.","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The page size of the hit list","in":"query","name":"pageSize","required":true,"schema":{"type":"number","format":"int32","minimum":1,"maximum":25}},{"description":"Part of name to filter the results","in":"query","name":"name","required":false,"schema":{"type":"string","maxLength":2048}},{"description":"Type of participant to filter the results","in":"query","name":"type","required":false,"schema":{"type":"string","maxLength":2048,"enum":["REGULAR","MODERATOR","GUEST","FORMER","BOT"],"default":"REGULAR"}},{"description":"Pointer for paged output. Add to consecutive request to get next page","in":"query","name":"searchPointer","required":false,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"A list of conversations and items that match the term","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConversationParticipantsList"},"type":"array"}},"application/xml":{"schema":{"items":{"$ref":"#/components/schemas/ConversationParticipantsList"},"type":"array"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the user is no participant of the conversation</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Performs a list of participants","tags":["Conversation Queries"]}},"/conversations/{convId}/pins":{"get":{"description":"Returns pinned topics of a conversation","operationId":"getPinnedConversations","parameters":[{"description":"ID of the conversation","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The pinned topics","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PinnedTopic"},"type":"array"}},"application/xml":{"schema":{"items":{"$ref":"#/components/schemas/PinnedTopic"},"type":"array"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"summary":"Returns pinned topics of a conversation","tags":["Conversation Queries"]}},"/conversations/{convId}/pins/{itemId}":{"delete":{"operationId":"unPinAConversation","parameters":[{"description":"not available","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"not available","in":"path","name":"itemId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"not available","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"not available"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"tags":["Conversation Management"]},"post":{"operationId":"pinAConversation","parameters":[{"description":"not available","in":"path","name":"convId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"not available","in":"path","name":"itemId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"not available","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Conversation"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Conversation"}}}},"400":{"description":"not available"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS"]}],"tags":["Conversation Management"]}},"/oauth/clientId":{"get":{"description":"Gets a list of the client IDs (applications) that were created for this user.","operationId":"oAuthGetClientIds","responses":{"200":{"description":"Gets the client IDs that allow to request for OAuth access","content":{"*/*":{"schema":{"items":{"$ref":"#/components/schemas/OAuthClientId"},"type":"array"}}}},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL"]}],"summary":"Gets a list of client IDs","tags":["OAuth 2.0"]}},"/oauth/scopelist":{"get":{"description":"Gets a list of available OAuth scopes","operationId":"oAuthGetScopeList","responses":{"200":{"description":"The list of available OAuth scopes","content":{"*/*":{"schema":{"items":{"$ref":"#/components/schemas/String"},"type":"array"}}}},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL"]}],"summary":"List of available OAuth scopes","tags":["OAuth 2.0"]}},"/oauth/token/{tokenId}":{"get":{"description":"Gets the access token for the given token ID.","operationId":"oAuthValidateAccessToken","parameters":[{"description":"The unique id of the token to get the data for.","in":"path","name":"tokenId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"Gets the access token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateAccessToken"}},"application/xml":{"schema":{"$ref":"#/components/schemas/ValidateAccessToken"}}}},"401":{"description":"The authentication was not successful"},"404":{"description":"In case the token was not found or the requester has no permission to access the token"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_USER_PROFILE"]}],"summary":"Gets an access token","tags":["OAuth 2.0"]}},"/rtc/sessions":{"get":{"description":"Gets a list of active RTCsessions","operationId":"getActiveSessions","responses":{"200":{"description":"The list of active RTCsessions was returned","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Label"}}}},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","CALLS"]}],"summary":"Gets a list of active sessions","tags":["RTC"]}},"/users":{"get":{"description":"Search for users based on an email address or username","operationId":"searchUser","parameters":[{"description":"Search for a user by name","in":"query","name":"name","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The users which match the search criteria","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/User"},"type":"array"}},"application/xml":{"schema":{"items":{"$ref":"#/components/schemas/User"},"type":"array"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"404":{"description":"The search term did not much any results"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_USER"]}],"summary":"Search for users","tags":["User Management"]}},"/users/labels":{"get":{"description":"Returns all labels of the user that were defined either explicit or implicit via assignment to conversations.","operationId":"getLabel","responses":{"200":{"description":"List of labels","content":{"*/*":{"schema":{"items":{"$ref":"#/components/schemas/Label"},"type":"array"}}}},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_USER_PROFILE","ORGANIZE_CONVERSATIONS"]}],"summary":"Returns all user labels","tags":["User Management"]},"post":{"description":"Add a label to the list of user labels","operationId":"addLabel","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"label":{"description":"The label value to add","type":"string","maxLength":2048}},"required":["label"]}}}},"responses":{"200":{"description":"The label was successfully added","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Label"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Label"}}}},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_USER_PROFILE","ORGANIZE_CONVERSATIONS"]}],"summary":"Add a user label","tags":["User Management"]}},"/users/labels/{labelId}":{"delete":{"description":"Remove a label from the list of user labels","operationId":"removeLabel","parameters":[{"description":"not available","in":"path","name":"labelId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The label was successfully removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Label"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Label"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>a field constraint is violated</li><li>the label does not exist</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_USER_PROFILE","ORGANIZE_CONVERSATIONS"]}],"summary":"Remove a user label","tags":["User Management"]}},"/users/list":{"get":{"description":"Search multiple users given by id or email address.","operationId":"searchUsersList","parameters":[{"description":"Multiple email addresses or UUIDs.","in":"query","name":"name","required":true,"explode":true,"schema":{"type":"array","items":{"maxLength":2048,"type":"string"}}}],"responses":{"200":{"description":"At least one user was found and returned in a list","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/User"},"type":"array"}},"application/xml":{"schema":{"items":{"$ref":"#/components/schemas/User"},"type":"array"}}}},"400":{"description":"Bad Request"},"401":{"description":"The authentication was not successful"},"404":{"description":"No user was found"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_USER"]}],"summary":"Search multiple users.","tags":["User Management"]}},"/users/presence":{"get":{"description":"Gets the presence status of the users whose IDs or email addresses are given.","operationId":"getPresence","parameters":[{"description":"A list of unique user IDs or email addresses of the users you want to query the presence state for","in":"query","name":"userIds","required":true,"explode":true,"schema":{"type":"array","items":{"maxLength":6500,"type":"string"}}}],"responses":{"200":{"description":"The presence states","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Presence"},"type":"array"}},"application/xml":{"schema":{"items":{"$ref":"#/components/schemas/Presence"},"type":"array"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the userIds passed as parameter are not provided in the correct format</li><li> or a valid email address</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"404":{"description":"One or more of the users do not exist"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_USER"]}],"summary":"Gets the presence status","tags":["User Management"]},"put":{"description":"Updates the presence status of the authenticated user.","operationId":"setUserPresence","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"state":{"description":"The user's presence.","type":"string","maxLength":2048},"dndUntil":{"description":"Timestamp until the DND state of the user is active. This field is mandatory when the state is set to DND.","type":"string","format":"date-time"},"clearDND":{"description":"not available","type":"boolean","default":false},"statusMessage":{"description":"An optional status message that is displayed instead of the location","type":"string","maxLength":2048}},"required":["state"]}}}},"responses":{"200":{"description":"The presence states","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Presence"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Presence"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the presence state is DND and the data format of the passed dndUntil is missing </li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_USER_PROFILE","MANAGE_PRESENCE"]}],"summary":"Updates the presence status","tags":["User Management"]}},"/users/profile":{"get":{"description":"Gets the authenticated user's profile information.","operationId":"getProfile","responses":{"200":{"description":"Gets the authenticated user's profile information","content":{"*/*":{"schema":{"$ref":"#/components/schemas/User"}}}},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_USER_PROFILE"]}],"summary":"Gets the authenticated user's profile information","tags":["User Management"]},"put":{"description":"Updates the user profile of the authenticated user","operationId":"updateProfile","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"firstname":{"description":"The new firstname of the user","type":"string","maxLength":128},"lastname":{"description":"The new lastname of the user","type":"string","maxLength":128},"jobTitle":{"description":"The new job title of the user","type":"string","maxLength":128},"locale":{"description":"The new locale of the user. One of EN_US, DE_DE, EN_GB, ES_ES, FR_FR, IT_IT, RU_RU, ZH_HANS_CN.","type":"string","maxLength":5,"enum":["EN_US","DE_DE","EN_GB","ES_ES","FR_FR","IT_IT","RU_RU","ZH_HANS_CN"]}}}}}},"responses":{"200":{"description":"The modified user object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}},"application/xml":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the user does not exist</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","WRITE_USER_PROFILE"]}],"summary":"Updates the user profile","tags":["User Management"]}},"/users/{id}":{"get":{"description":"Gets the profile information of the user with the given ID.","operationId":"getUserById","parameters":[{"description":"The unique ID or the email address of the user to fetch","in":"path","name":"id","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The operation was successful, the user profile is returned","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}},"application/xml":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the data format of the passed user does not match either a UUID (user primary key)</li><li> or an valid email address</li><li>or a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"404":{"description":"The user does not exist"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_USER"]}],"summary":"Gets the user's profile information","tags":["User Management"]}},"/users/{id}/presence":{"get":{"description":"Gets the presence status of the users whose ID or email address is given.","operationId":"getUserPresence","parameters":[{"description":"The unique ID or the email address of the user to fetch.","in":"path","name":"id","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The presence state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Presence"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Presence"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the data format of the passed user does not match either a UUID (user primary key)</li><li> or a valid email address</li><li>or a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"404":{"description":"The user does not exist"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_USER"]}],"summary":"Gets the presence status","tags":["User Management"]}},"/webhooks":{"delete":{"description":"Unregisters all webHooks of the authenticated user","operationId":"removeWebHooks","responses":{"204":{"description":"The operation was successful"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS","READ_USER"]}],"summary":"Removes all webHooks","tags":["Webhooks"]},"get":{"description":"Gets the list of webHooks registered for this user or API.","operationId":"getWebHook","responses":{"200":{"description":"The list of registered webHooks","content":{"*/*":{"schema":{"items":{"$ref":"#/components/schemas/WebHook"},"type":"array"}}}},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS","READ_USER"]}],"summary":"Gets a list of webHooks","tags":["Webhooks"]},"post":{"description":"Registers the webHook with the given filter and callback URL.","operationId":"addWebHook","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"url":{"description":"WebHook callback URL. Currently only HTTP is supported","type":"string","maxLength":2048},"filter":{"description":"A filter for WebHooks that checks for a list of configured events. This filter will use a regular expression to determine if it is interested in the events or not. The event itself is converted into a string of format AREA.EVENT. Examples: CONVERSATION.CREATE / USER.UPDATE","type":"array","items":{"enum":["CONVERSATION.CREATE","CONVERSATION.UPDATE","CONVERSATION.ADD_ITEM","CONVERSATION.UPDATE_ITEM","USER.INCOMING_CALL","USER.USER_UPDATED","USER.USER_SETTING_UPDATED","USER.SUBMIT_FORM_DATA"],"maxLength":2048,"type":"string"}}},"required":["url","filter"]}}}},"responses":{"201":{"description":"The webHook was successfully registered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebHook"}},"application/xml":{"schema":{"$ref":"#/components/schemas/WebHook"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>an invalid URL</li><li>an invalid event filter</li><li>an unsupported event filter</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"403":{"description":"The maximum number of allowed webHook is reached"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS","READ_USER"]}],"summary":"Registers a WebHook","tags":["Webhooks"]}},"/webhooks/incoming/create/{conversationId}":{"post":{"description":"Create a new webhook. Conversation must exist and creater has to be participant.","operationId":"createIncomingWebhook","parameters":[{"description":"The id of the conversation.","in":"path","name":"conversationId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"The name of the webhook","in":"query","name":"name","required":false,"schema":{"type":"string","maxLength":2048}},{"description":"not available","in":"query","name":"userId","required":false,"schema":{"type":"string","maxLength":2048}},{"description":"A short description of the webhook","in":"query","name":"description","required":false,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The created webhook object as JSON string.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IncomingWebhook"}},"application/xml":{"schema":{"$ref":"#/components/schemas/IncomingWebhook"}}}},"400":{"description":"Could not create webhook."},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","MANAGE_CONVERSATIONS"]}],"summary":"Create a new webhook for existing conversation.","tags":["Incoming Webhooks"]}},"/webhooks/incoming/user/{userId}":{"get":{"description":"Get all webhooks of a special user.","operationId":"getIncomingWebhookByUser","parameters":[{"description":"The id of the user.","in":"path","name":"userId","required":true,"schema":{"type":"string","maxLength":2048}},{"description":"Max number of hooks per request. Default is 25","in":"query","name":"pagesize","required":false,"schema":{"type":"number","format":"int32","minimum":1,"maximum":100,"default":25}},{"description":"Start of search if consequtive call.","in":"query","name":"searchpointer","required":false,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"Result successful","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/IncomingWebhook"},"type":"array"}},"application/xml":{"schema":{"items":{"$ref":"#/components/schemas/IncomingWebhook"},"type":"array"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","MANAGE_CONVERSATIONS"]}],"summary":"Get all webhooks of a special user.","tags":["Incoming Webhooks"]}},"/webhooks/incoming/{webhookId}":{"delete":{"description":"Delete a new webhook. Webhook must exist","operationId":"deleteIncomingWebhook","parameters":[{"description":"The id of the webhook","in":"path","name":"webhookId","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The webhook was deleted"},"401":{"description":"The authentication was not successful"},"404":{"description":"Could not find webhook"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","MANAGE_CONVERSATIONS"]}],"summary":"Delete an existing webhook","tags":["Incoming Webhooks"]},"post":{"description":"Post text items to conversations via slack apps.","operationId":"postWebhookAsSlackMessage","parameters":[{"description":"The id of the webhook.","in":"path","name":"webhookId","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/IncomingWebhookSlackMessage"}}},"description":"Attached JSON object in slack format.","required":true},"responses":{"200":{"description":"Message was posted to conversation"},"400":{"description":"The request cannot be fulfilled due to bad syntax"},"401":{"description":"The authentication was not successful"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"summary":"Post text item for conversation via webhook.","tags":["Incoming Webhooks"]}},"/webhooks/presence":{"post":{"description":"Registers a webHook that has a presence filter with the given URL and userIds. There is a maximum number of userIds allowed","operationId":"addPresenceWebHook","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"url":{"description":"WebHook callback URL. Currently only HTTP is supported","type":"string","maxLength":2048},"userIds":{"description":"not available","type":"array","items":{"maxLength":6500,"type":"string"}}},"required":["url","userIds"]}}}},"responses":{"201":{"description":"The webHook was successfully registered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebHook"}},"application/xml":{"schema":{"$ref":"#/components/schemas/WebHook"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>an invalid URL</li><li>one or more invalid userIds</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"403":{"description":"The maximum number of allowed userIds is reached or the maximum number of allowed webHook is reached"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_USER"]}],"summary":"Registers Presence WebHook registration","tags":["Webhooks"]}},"/webhooks/presence/{id}":{"put":{"description":"Updates a registration of a webHook that has a presence filter. The update can be performed either on the URL and/or the userIds. The new userIds, if any, will override any existing userIds.","operationId":"updatePresenceWebHook","parameters":[{"description":"The unique ID of the webHook to update","in":"path","name":"id","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"url":{"description":"WebHook callback URL. Currently only HTTP is supported","type":"string","maxLength":2048},"userIds":{"description":"The IDs of the users to subscribe for their presence","type":"array","items":{"maxLength":6500,"type":"string"}}}}}}},"responses":{"200":{"description":"The webHook registration was successfully updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebHook"}},"application/xml":{"schema":{"$ref":"#/components/schemas/WebHook"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>an invalid URL</li><li>one or more invalid userIds</li><li>no input parameter is provided</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"403":{"description":"The maximum number of allowed userIds is reached"},"404":{"description":"The webHook does not exist"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_USER"]}],"summary":"Updates a Presence WebHook registration","tags":["Webhooks"]}},"/webhooks/{id}":{"delete":{"description":"Unregisters the webHook with the given ID.","operationId":"removeWebHook","parameters":[{"description":"The unique ID of the webHook to remove","in":"path","name":"id","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"204":{"description":"The operation was successful"},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the data format of the given id does not match a UUID</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"404":{"description":"The webHook does not exist"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS","READ_USER"]}],"summary":"Removes a registered webHook","tags":["Webhooks"]},"get":{"description":"Gets the registered webHook with the given ID.","operationId":"getWebHookById","parameters":[{"description":"The unique ID of the webHook to fetch","in":"path","name":"id","required":true,"schema":{"type":"string","maxLength":2048}}],"responses":{"200":{"description":"The registered webHook with the given ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebHook"}},"application/xml":{"schema":{"$ref":"#/components/schemas/WebHook"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>the data format of the given id does not match a UUID</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"404":{"description":"The webHook does not exist"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS","READ_USER"]}],"summary":"Gets a webHook","tags":["Webhooks"]},"put":{"description":"Updates a webHook registration with the given filter and callback URL.","operationId":"updateWebHook","parameters":[{"description":"The unique ID of the webHook to update","in":"path","name":"id","required":true,"schema":{"type":"string","maxLength":2048}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"url":{"description":"WebHook callback URL. Currently only HTTP is supported","type":"string","maxLength":2048},"filter":{"description":"A filter for WebHooks that checks for a list of configured events. This filter will use a regular expression to determine if it is interested in the events or not. The event itself is converted into a string of format AREA.EVENT. Examples: CONVERSATION.CREATE / USER.UPDATE","type":"array","items":{"enum":["CONVERSATION.CREATE","CONVERSATION.UPDATE","CONVERSATION.ADD_ITEM","CONVERSATION.UPDATE_ITEM","USER.USER_UPDATED","USER.USER_SETTING_UPDATED"],"maxLength":2048,"type":"string"}}}}}}},"responses":{"200":{"description":"The webHook registration was successfully updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebHook"}},"application/xml":{"schema":{"$ref":"#/components/schemas/WebHook"}}}},"400":{"description":"The request cannot be fulfilled due to bad syntax: <ul><li>an invalid URL</li><li>an invalid event filter</li><li>an unsupported event filter</li><li>no input parameter is provided</li><li>a field constraint is violated</li></ul>"},"401":{"description":"The authentication was not successful"},"404":{"description":"The webHook does not exist"},"500":{"description":"The server encountered an internal error and the operation could not be completed."},"503":{"description":"The server is currently unable to receive requests."}},"security":[{"oauth":["ALL","READ_CONVERSATIONS","READ_USER"]}],"summary":"Updates a WebHook registration","tags":["Webhooks"]}}},"servers":[{"url":"https://circuitsandbox.net/rest/v2"}],"components":{"requestBodies":{"addParticipantCommunity":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"participants":{"description":"The IDs or the unique email addresses of the Circuit users that should to be added.","type":"array","items":{"maxLength":6500,"type":"string"}}},"required":["participants"]}}}}},"securitySchemes":{"oauth":{"type":"oauth2","flows":{"implicit":{"authorizationUrl":"https://circuitsandbox.net/oauth/authorize","scopes":{"ALL":"allows full access to all functionalities of the REST API","CALLS":"allows to start or join real time collaboration session","CREATE_CONVERSATIONS_CONTENT":"Create content of conversations","DELETE_CONVERSATIONS_CONTENT":"Delete content of conversations","MANAGE_CONVERSATIONS":"Manage conversations","MANAGE_PRESENCE":"Manage presence state","MENTION_EVENT":"allows to receive text item events in which the user was mentioned","MODERATE_CONVERSATIONS":"MOderate conversations","ORGANIZE_CONVERSATIONS":"Organize conversations","READ_CONVERSATIONS":"allows to read conversations of the authenticated user","READ_USER":"allows to read user information for all users that belong to the tenant of the authenticated user","READ_USER_PROFILE":"allows to read the user profile of the authenticated user","SEARCH_CONVERSATIONS":"Search conversations","UPDATE_CONVERSATION_CONTENT":"Update content of conversations","USER_MANAGEMENT":"allows to create, update and delete users","USER_TO_USER":"User2User","WRITE_CONVERSATIONS":"allows to create and update conversations of the authenticated user or to post messages","WRITE_USER_PROFILE":"allows to update the user profile of the authenticated user"}}}}},"schemas":{"Attachment":{"properties":{"creationTime":{"description":"not available","format":"int64","type":"number"},"creatorId":{"description":"not available","type":"string"},"deleteUrl":{"description":"not available","type":"string"},"fileId":{"description":"not available","type":"string"},"fileName":{"description":"not available","type":"string"},"itemId":{"description":"not available","type":"string"},"mimeType":{"description":"not available","type":"string"},"modificationTime":{"description":"not available","format":"int64","type":"number"},"size":{"description":"not available","format":"int64","type":"number"},"url":{"description":"not available","type":"string"}}},"BridgeNumber":{"properties":{"bridgeNumber":{"description":"The number that has to be called to join the real time session of a conversation","type":"string"},"country":{"description":"The country where the bridge is hosted","type":"string"},"isMostUsed":{"description":"not available","type":"boolean"},"locale":{"description":"The locale of the bridge","type":"string"},"name":{"description":"The name / identifier of the bridge","type":"string"},"type":{"description":"Information of the billing for the call, i.e. if the caller has to pay or not for the call","type":"string"}}},"Conversation":{"properties":{"avatar":{"description":"The URL of the small avatar image of the conversation","type":"string"},"avatarLarge":{"description":"The URL of the large avatar image of the conversation","type":"string"},"convId":{"description":"The ID of the conversation","type":"string"},"creationTime":{"description":"UTC timestamp when the conversation was created","format":"int64","type":"number"},"creatorId":{"description":"The ID of the user who created the conversation","type":"string"},"creatorTenantId":{"description":"The ID of the Circuit domain (tenant) where the creator of the conversation belongs to","type":"string"},"description":{"description":"The description of the conversation. This field is available only for conversations with type COMMUNITY","type":"string"},"isGuestAccessDisabled":{"description":"Indicates whether guest access to the conversation is disabled or not","type":"boolean"},"isModerated":{"description":"Indicates whether the conversation is moderated or not. In a moderated conversation only participants who have been assigned the role of a moderator are allowed to add or remove participants into the conversation","type":"boolean"},"modificationTime":{"description":"UTC timestamp when the conversation was modified. A conversation is modified when any of the conversation object fields change but not when conversation items are added or edited","format":"int64","type":"number"},"participants":{"description":"Array of active participants","items":{"type":"string"},"type":"array"},"topic":{"description":"The title of the conversation. Conversations of type DIRECT cannot have a title","type":"string"},"topicPlaceholder":{"description":"The title of the conversation. Conversations of type DIRECT cannot have a title","type":"string"},"type":{"description":"The type of the conversation. It can be one of the following: DIRECT, GROUP, COMMUNITY or LARGE","type":"string"}}},"ConversationDetails":{"properties":{"bridgeNumbers":{"description":"A list of bridge numbers which can be used to dial in to the real time session via phone","items":{"$ref":"#/components/schemas/BridgeNumber"},"type":"array"},"conversationCreatorId":{"description":"The user ID of the conversation creator","type":"string"},"isModerationAllowed":{"description":"Indicates if the conversation is allowed to be moderated","type":"boolean"},"isRecordingAllowed":{"description":"Indicates if the conversation is allowed to be recorded","type":"boolean"},"link":{"description":"A link that can be used in a browser to join the session","type":"string"},"pin":{"description":"The PIN to join a real time session via phone","type":"string"}}},"ConversationItem":{"properties":{"attachments":{"description":"Array of files attached to the item","items":{"$ref":"#/components/schemas/Attachment"},"type":"array"},"convId":{"description":"The ID of the conversation the item belongs to","type":"string"},"creationTime":{"description":"UTC timestamp when the item was created","format":"int64","type":"number"},"creatorId":{"description":"The ID of the user who created the conversation item","type":"string"},"includeInUnreadCount":{"description":"Indicates whether the item is included in the unread message count","type":"boolean"},"itemId":{"description":"The ID of the item","type":"string"},"modificationTime":{"description":"UTC timestamp when the conversation was modified","format":"int64","type":"number"},"rtc":{"$ref":"#/components/schemas/RtcItem"},"system":{"$ref":"#/components/schemas/SystemItem"},"text":{"$ref":"#/components/schemas/ConversationTextItem"},"type":{"description":"The type of the conversation item. It can be one of the following TEXT, SYSTEM or RTC","type":"string"}}},"ConversationParticipant":{"properties":{"displayName":{"description":"not available","type":"string"},"firstName":{"description":"not available","type":"string"},"isDeleted":{"description":"not available","type":"boolean"},"largeImageUri":{"description":"not available","type":"string"},"lastName":{"description":"not available","type":"string"},"smallImageUri":{"description":"not available","type":"string"},"type":{"description":"not available","type":"string"},"userId":{"description":"not available","type":"string"}}},"ConversationParticipantsList":{"properties":{"hasMore":{"description":"not available","type":"boolean"},"participantList":{"description":"not available","items":{"$ref":"#/components/schemas/ConversationParticipant"},"type":"array"},"searchPointer":{"description":"not available","type":"string"}}},"ConversationSearchResult":{"properties":{"matchingConversations":{"description":"A list of result items for conversations that match the search term.","items":{"$ref":"#/components/schemas/ConversationSearchResultItem"},"type":"array"}}},"ConversationSearchResultItem":{"properties":{"convId":{"description":"The ID of the conversation to which the matching items belong.","type":"string"},"itemIds":{"description":"The conversation items which contain the search result. The list maybe empty in case a hit was found for the conversation related data like topic or participants.","items":{"type":"string"},"type":"array"}}},"ConversationTextItem":{"properties":{"content":{"description":"The content of the text item","type":"string"},"contentType":{"description":"The type of the text item. It can be one of the following: RICH (with HTML content) or PLAIN (only text)","type":"string"},"formMetaData":{"description":"not available","type":"string"},"isWebhookMessage":{"description":"not available","type":"boolean"},"likedUserIds":{"description":"Array of IDs of the users who liked the item","items":{"type":"string"},"type":"array"},"parentId":{"description":"The ID of the parent item of the text item. This field is optional and can be used for thread views","type":"string"},"preview":{"$ref":"#/components/schemas/Preview"},"state":{"description":"The state of the text item. It can be one of the following: CREATED (which denotes that it was not modified since its creation), EDITED (which denotes that the creator of this item modified the item) or DELETED (which denotes that the item itself exists but its content was removed)","type":"string"},"subject":{"description":"TThe subject of the text item. This field is optional and maybe filled when creating the text item","type":"string"}}},"ConversationsPage":{"properties":{"conversationList":{"description":"List of conversations","items":{"$ref":"#/components/schemas/Conversation"},"type":"array"},"hasMore":{"description":"Has more pages of conversations"},"nextPagePointer":{"description":"Pointer to the next set page of conversations","type":"string"}}},"IncomingWebhook":{"properties":{"conversationId":{"description":"The conversation where the posts go to","type":"string"},"creationTime":{"description":"Milliseconds since 1.1.1900 when the hook was created","format":"int64","type":"number"},"creatorId":{"description":"Th e user who created the webhook","type":"string"},"description":{"description":"A short plain text to describe the webhook","type":"string"},"modificationTime":{"description":"not available","format":"int64","type":"number"},"name":{"description":"A name to identify the webhook","type":"string"},"status":{"description":"Status may be ENABLED or DISABLED. A disabled hook cannot be used","type":"string"},"tenantId":{"description":"The tenant where the conversation and users belong to","type":"string"},"url":{"description":"The url where the webhokk can be used","type":"string"},"userId":{"description":"The user who will occur as author of the posts","type":"string"},"webhookId":{"description":"Unique id of the webhook","type":"string"}}},"IncomingWebhookSlackMessage":{"properties":{"mrkdwn":{"description":"Optional field. If false, textitem will not be formatted. Default is true.","type":"boolean"},"text":{"description":"The text which will occur in the conversation. May contain formats like *bold* or _italic_","type":"string"}}},"Label":{"properties":{"labelId":{"description":"The unique ID of the label","type":"string"},"value":{"description":"The clear text value","type":"string"}}},"OAuthClientId":{"properties":{"accessTokenURL":{"description":"The URL to fetch the access token for an authorization code","type":"string"},"applicationName":{"description":"A free text identifier of the application that uses the client ID","type":"string"},"authorizationURL":{"description":"The URL to redirect a user for Circuit authentication","type":"string"},"clientId":{"description":"The client ID","type":"string"},"domains":{"description":"The valid domains for the client ID","items":{"type":"string"},"type":"array"},"grantTypes":{"description":"A list of grant types which are supported by this client ID","items":{"type":"string"},"type":"array"},"scopes":{"description":"The available scopes for OAUTH 2.0 access","items":{"type":"string"},"type":"array"},"ttl":{"description":"The TTL for a token generated with this client ID","type":"string"},"userId":{"description":"The ID of the user who owns a token","type":"string"}}},"PinnedTopic":{"properties":{"conversationId":{"description":"\"ID of the conversation\"","type":"string"},"conversationItemId":{"description":"\"ID of the pinned topic\"","type":"string"},"pinnedTime":{"description":"\"The exact moment the Pinning was happening\"","format":"int64","type":"number"}}},"Presence":{"properties":{"dndUntil":{"description":"Timestamp until the DND state of the user is active","format":"int64","type":"number"},"isOptedOut":{"description":"Indicates whether the user has opted out of their presence","type":"boolean"},"latitude":{"description":"The latitude of the geo location of the user","format":"float","type":"number"},"locationText":{"description":"The geo location of the user in clear text","type":"string"},"longitude":{"description":"The longitude of the geo location of the user","format":"float","type":"number"},"mobile":{"description":"Identifies whether the presence state is based on the state information of a mobile device or not","type":"boolean"},"poor":{"description":"n/a","type":"boolean"},"state":{"description":"The presence state of the user. It can be one of the following: AVAILABLE, OFFLINE, AWAY, BUSY, or DND (Do-Not-Disturb)","type":"string"},"statusMessage":{"description":"A free formed status message of the user","type":"string"},"timeZoneOffset":{"description":"The timezone offset of the user compared to UTC","format":"int32","type":"number"},"userId":{"description":"The ID of the user","type":"string"}}},"Preview":{"properties":{"imageURI":{"description":"n/a","type":"string"},"srcURL":{"description":"n/a","type":"string"},"title":{"description":"n/a","type":"string"},"type":{"description":"n/a","type":"string"}}},"RtcEnded":{"properties":{"duration":{"description":"The duration of the call.","format":"int64","type":"number"},"maxNumberOfAttendees":{"description":"The maximum number of attendees during a call.","format":"int32","type":"number"},"pickFromParticipant":{"description":"UserID of the pick from participant.","type":"string"}}},"RtcItem":{"properties":{"ended":{"$ref":"#/components/schemas/RtcEnded"},"missed":{"description":"Indicates a missed call.","type":"string"},"moved":{"$ref":"#/components/schemas/RtcMoved"},"rtcParticipants":{"description":"Participants of the call.","items":{"$ref":"#/components/schemas/RtcParticipant"},"type":"array"},"type":{"description":"The type of the RTC item.","type":"string"}}},"RtcMoved":{"properties":{"conversationId":{"description":"ID of the conversation moved from or to.","type":"string"},"direction":{"description":"Moved from or to conversation.","type":"string"}}},"RtcParticipant":{"properties":{"displayName":{"description":"The display name of the participant.","type":"string"},"type":{"description":"The RTC type of the participant.","type":"string"},"userId":{"description":"The ID of the participant.","type":"string"}}},"String":{"properties":{"CASE_INSENSITIVE_ORDER":{}}},"SystemItem":{"properties":{"affectedParticipants":{"description":"not available","items":{"type":"string"},"type":"array"},"newTopic":{"description":"not available","type":"string"},"oldTopic":{"description":"not available","type":"string"},"type":{"description":"The type of the system item","type":"string"}}},"User":{"properties":{"avatar":{"description":"The URL of the small avatar picture.","type":"string"},"avatarLarge":{"description":"not available","type":"string"},"company":{"description":"The name of the user's company","type":"string"},"displayName":{"description":"The user's display name","type":"string"},"emailAddress":{"description":"The primary email address of the user","type":"string"},"emailAddresses":{"description":"additional email addresses of the user","items":{"$ref":"#/components/schemas/UserEmailAddress"},"type":"array"},"firstName":{"description":"The first name of the user","type":"string"},"jobTitle":{"description":"The job title of the user","type":"string"},"lastName":{"description":"The last name of the user","type":"string"},"locale":{"description":"The locale of the user. (E.g. en-US, de-DE)","type":"string"},"phoneNumber":{"description":"provisioned phone number of the user","type":"string"},"phoneNumbers":{"description":"additional phone numbers of the user","items":{"$ref":"#/components/schemas/UserPhoneNumber"},"type":"array"},"userId":{"description":"The ID of the user","type":"string"},"userType":{"description":"the type of the user","type":"string"}}},"UserEmailAddress":{"properties":{"address":{"description":"the email address","type":"string"},"type":{"description":"the type of the email address","type":"string"}}},"UserPhoneNumber":{"properties":{"phoneNumber":{"description":"the phone number","type":"string"},"type":{"description":"the type of the phone number","type":"string"}}},"ValidateAccessToken":{"properties":{"accessToken":{"description":"The access token issued by the authorization server","type":"string"},"clientId":{"description":"The client ID used to generate the access token","type":"string"},"expirationTime":{"description":"The date when the token expires","format":"int64","type":"number"},"scopes":{"description":"Array of the scopes of the access token","items":{"type":"string"},"type":"array"}}},"WebHook":{"properties":{"creationTime":{"description":"The time when this WebHook was created. This does not necessary mean the time when an manifest file was created.","format":"int64","type":"number"},"filter":{"description":"An optional list of filter parameters for this webhook.","items":{"type":"string"},"type":"array"},"id":{"description":"The unique identifier for this webhook. Can be used later to unregister the webhook.","type":"string"},"subscriptionIds":{"description":"The optional list of userids for which this webhook is subscribed, i.e. presence events for the user are forwarded to the WebHook callback URL.","items":{"type":"string"},"type":"array"},"type":{"description":"The type of a WebHook. This can either be MANUAL or EXTENSION. While manual WebHooks are only temporary and for development only use, permanent ones (EXTENSION) will bemanaged by the system.","type":"string"},"url":{"description":"The callback URL of this webhook.","type":"string"},"userId":{"description":"The user ID for which this webhook is subscribed, i.e. events for this user are forwarded to the WebHook callback URL.","type":"string"}}}}}}