{
  "openapi": "3.0.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Identity and Access Management</fullname> <p>AWS Identity and Access Management (IAM) is a web service that you can use to manage users and user permissions under your AWS account. This guide provides descriptions of IAM actions that you can call programmatically. For general information about IAM, see <a href=\"http://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a>. For the user guide for IAM, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Using IAM</a>. </p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to IAM and AWS. For example, the SDKs take care of tasks such as cryptographically signing requests (see below), managing errors, and retrying requests automatically. For information about the AWS SDKs, including how to download and install them, see the <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a> page. </p> </note> <p>We recommend that you use the AWS SDKs to make programmatic API calls to IAM. However, you can also use the IAM Query API to make direct calls to the IAM web service. To learn more about the IAM Query API, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>Using IAM</i> guide. IAM supports GET and POST requests for all actions. That is, the API does not require you to use GET for some actions and POST for others. However, GET requests are subject to the limitation size of a URL. Therefore, for operations that require larger sizes, use a POST request. </p> <p> <b>Signing Requests</b> </p> <p>Requests must be signed using an access key ID and a secret access key. We strongly recommend that you do not use your AWS account access key ID and secret access key for everyday work with IAM. You can use the access key ID and secret access key for an IAM user or you can use the AWS Security Token Service to generate temporary security credentials and use those to sign requests.</p> <p>To sign requests, we recommend that you use <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>. If you have an existing application that uses Signature Version 2, you do not have to update it to use Signature Version 4. However, some operations now require Signature Version 4. The documentation for operations that require version 4 indicate this requirement. </p> <p> <b>Additional Resources</b> </p> <p>For more information, see the following:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html\">AWS Security Credentials</a>. This topic provides general information about the types of credentials used for accessing AWS. </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html\">IAM Best Practices</a>. This topic presents a list of suggestions for using the IAM service to help secure your AWS resources. </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\">Signing AWS API Requests</a>. This set of topics walk you through the process of signing a request using an access key ID and secret access key. </p> </li> </ul>",
    "license": { "name": "Apache 2.0 License", "url": "http://www.apache.org/licenses/" },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Identity and Access Management",
    "version": "2010-05-08",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": { "url": "https://github.com/mermade/aws2openapi", "version": "1.0.0" },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iam-2010-05-08.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "iam"
  },
  "externalDocs": { "description": "Amazon Web Services documentation", "url": "https://docs.aws.amazon.com/iam/" },
  "security": [{ "hmac": [] }],
  "paths": {
    "/#Action=AddClientIDToOpenIDConnectProvider": {
      "get": {
        "description": "<p>Adds a new client ID (also known as audience) to the list of client IDs already registered for the specified IAM OpenID Connect (OIDC) provider resource.</p> <p>This operation is idempotent; it does not fail or return an error if you add an existing client ID to the provider.</p>",
        "operationId": "GET AddClientIDToOpenIDConnectProvider",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "OpenIDConnectProviderArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "The client ID (also known as audience) to add to the IAM OpenID Connect provider resource.",
            "in": "query",
            "name": "ClientID",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 255 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AddClientIDToOpenIDConnectProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AddClientIDToOpenIDConnectProvider"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds a new client ID (also known as audience) to the list of client IDs already registered for the specified IAM OpenID Connect (OIDC) provider resource.</p> <p>This operation is idempotent; it does not fail or return an error if you add an existing client ID to the provider.</p>",
        "operationId": "POST AddClientIDToOpenIDConnectProvider",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AddClientIDToOpenIDConnectProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "OpenIDConnectProviderArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "ClientID": {
                    "description": "The client ID (also known as audience) to add to the IAM OpenID Connect provider resource.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  }
                },
                "required": ["OpenIDConnectProviderArn", "ClientID"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AddClientIDToOpenIDConnectProvider"
      }
    },
    "/#Action=AddRoleToInstanceProfile": {
      "get": {
        "description": "<p>Adds the specified IAM role to the specified instance profile. An instance profile can contain only one role, and this limit cannot be increased. You can remove the existing role and then add a different role to an instance profile. You must then wait for the change to appear across all of AWS because of <a href=\"https://en.wikipedia.org/wiki/Eventual_consistency\">eventual consistency</a>. To force the change, you must <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateIamInstanceProfile.html\">disassociate the instance profile</a> and then <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateIamInstanceProfile.html\">associate the instance profile</a>, or you can stop your instance and then restart it.</p> <note> <p>The caller of this API must be granted the <code>PassRole</code> permission on the IAM role by a permissions policy.</p> </note> <p>For more information about roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. For more information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p>",
        "operationId": "GET AddRoleToInstanceProfile",
        "parameters": [
          {
            "description": "<p>The name of the instance profile to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "InstanceProfileName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the role to add.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AddRoleToInstanceProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AddRoleToInstanceProfile"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds the specified IAM role to the specified instance profile. An instance profile can contain only one role, and this limit cannot be increased. You can remove the existing role and then add a different role to an instance profile. You must then wait for the change to appear across all of AWS because of <a href=\"https://en.wikipedia.org/wiki/Eventual_consistency\">eventual consistency</a>. To force the change, you must <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateIamInstanceProfile.html\">disassociate the instance profile</a> and then <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateIamInstanceProfile.html\">associate the instance profile</a>, or you can stop your instance and then restart it.</p> <note> <p>The caller of this API must be granted the <code>PassRole</code> permission on the IAM role by a permissions policy.</p> </note> <p>For more information about roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. For more information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p>",
        "operationId": "POST AddRoleToInstanceProfile",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AddRoleToInstanceProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "InstanceProfileName": {
                    "description": "<p>The name of the instance profile to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "RoleName": {
                    "description": "<p>The name of the role to add.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["InstanceProfileName", "RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AddRoleToInstanceProfile"
      }
    },
    "/#Action=AddUserToGroup": {
      "get": {
        "description": "Adds the specified user to the specified group.",
        "operationId": "GET AddUserToGroup",
        "parameters": [
          {
            "description": "<p>The name of the group to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the user to add.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AddUserToGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AddUserToGroup"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Adds the specified user to the specified group.",
        "operationId": "POST AddUserToGroup",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AddUserToGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name of the group to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "UserName": {
                    "description": "<p>The name of the user to add.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["GroupName", "UserName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AddUserToGroup"
      }
    },
    "/#Action=AttachGroupPolicy": {
      "get": {
        "description": "<p>Attaches the specified managed policy to the specified IAM group.</p> <p>You use this API to attach a managed policy to a group. To embed an inline policy in a group, use <a>PutGroupPolicy</a>.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET AttachGroupPolicy",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) of the group to attach the policy to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AttachGroupPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "PolicyNotAttachableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotAttachableException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AttachGroupPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Attaches the specified managed policy to the specified IAM group.</p> <p>You use this API to attach a managed policy to a group. To embed an inline policy in a group, use <a>PutGroupPolicy</a>.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST AttachGroupPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AttachGroupPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name (friendly name, not ARN) of the group to attach the policy to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  }
                },
                "required": ["GroupName", "PolicyArn"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "PolicyNotAttachableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotAttachableException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AttachGroupPolicy"
      }
    },
    "/#Action=AttachRolePolicy": {
      "get": {
        "description": "<p>Attaches the specified managed policy to the specified IAM role. When you attach a managed policy to a role, the managed policy becomes part of the role's permission (access) policy.</p> <note> <p>You cannot use a managed policy as the role's trust policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>.</p> </note> <p>Use this API to attach a <i>managed</i> policy to a role. To embed an inline policy in a role, use <a>PutRolePolicy</a>. For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET AttachRolePolicy",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) of the role to attach the policy to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AttachRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "PolicyNotAttachableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotAttachableException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AttachRolePolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Attaches the specified managed policy to the specified IAM role. When you attach a managed policy to a role, the managed policy becomes part of the role's permission (access) policy.</p> <note> <p>You cannot use a managed policy as the role's trust policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>.</p> </note> <p>Use this API to attach a <i>managed</i> policy to a role. To embed an inline policy in a role, use <a>PutRolePolicy</a>. For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST AttachRolePolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AttachRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name (friendly name, not ARN) of the role to attach the policy to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  }
                },
                "required": ["RoleName", "PolicyArn"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "PolicyNotAttachableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotAttachableException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AttachRolePolicy"
      }
    },
    "/#Action=AttachUserPolicy": {
      "get": {
        "description": "<p>Attaches the specified managed policy to the specified user.</p> <p>You use this API to attach a <i>managed</i> policy to a user. To embed an inline policy in a user, use <a>PutUserPolicy</a>.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET AttachUserPolicy",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) of the IAM user to attach the policy to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AttachUserPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "PolicyNotAttachableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotAttachableException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AttachUserPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Attaches the specified managed policy to the specified user.</p> <p>You use this API to attach a <i>managed</i> policy to a user. To embed an inline policy in a user, use <a>PutUserPolicy</a>.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST AttachUserPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["AttachUserPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name (friendly name, not ARN) of the IAM user to attach the policy to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  }
                },
                "required": ["UserName", "PolicyArn"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "PolicyNotAttachableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotAttachableException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "AttachUserPolicy"
      }
    },
    "/#Action=ChangePassword": {
      "get": {
        "description": "<p>Changes the password of the IAM user who is calling this operation. The AWS account root user password is not affected by this operation.</p> <p>To change the password for a different user, see <a>UpdateLoginProfile</a>. For more information about modifying passwords, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET ChangePassword",
        "parameters": [
          {
            "description": "The IAM user's current password.",
            "in": "query",
            "name": "OldPassword",
            "required": true,
            "schema": {
              "type": "string",
              "format": "password",
              "minLength": 1,
              "maxLength": 128,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "description": "<p>The new password. The new password must conform to the AWS account's password policy, if one exists.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (\\u0020) through the end of the ASCII character range (\\u00FF). You can also include the tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D) characters. Any of these characters are valid in a password. However, many tools, such as the AWS Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.</p>",
            "in": "query",
            "name": "NewPassword",
            "required": true,
            "schema": {
              "type": "string",
              "format": "password",
              "minLength": 1,
              "maxLength": 128,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ChangePassword"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidUserTypeException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidUserTypeException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "484": {
            "description": "PasswordPolicyViolationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PasswordPolicyViolationException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ChangePassword"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Changes the password of the IAM user who is calling this operation. The AWS account root user password is not affected by this operation.</p> <p>To change the password for a different user, see <a>UpdateLoginProfile</a>. For more information about modifying passwords, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST ChangePassword",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ChangePassword"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "OldPassword": {
                    "description": "The IAM user's current password.",
                    "type": "string",
                    "format": "password",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  },
                  "NewPassword": {
                    "description": "<p>The new password. The new password must conform to the AWS account's password policy, if one exists.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (\\u0020) through the end of the ASCII character range (\\u00FF). You can also include the tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D) characters. Any of these characters are valid in a password. However, many tools, such as the AWS Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.</p>",
                    "type": "string",
                    "format": "password",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  }
                },
                "required": ["OldPassword", "NewPassword"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidUserTypeException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidUserTypeException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "484": {
            "description": "PasswordPolicyViolationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PasswordPolicyViolationException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ChangePassword"
      }
    },
    "/#Action=CreateAccessKey": {
      "get": {
        "description": "<p> Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is <code>Active</code>.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials. This is true even if the AWS account has no associated users.</p> <p> For information about limits on the number of keys you can create, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <important> <p>To ensure the security of your AWS account, the secret access key is accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again. If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</p> </important>",
        "operationId": "GET CreateAccessKey",
        "parameters": [
          {
            "description": "<p>The name of the IAM user that the new key will belong to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateAccessKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateAccessKeyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateAccessKey"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p> Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is <code>Active</code>.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials. This is true even if the AWS account has no associated users.</p> <p> For information about limits on the number of keys you can create, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <important> <p>To ensure the security of your AWS account, the secret access key is accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again. If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</p> </important>",
        "operationId": "POST CreateAccessKey",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateAccessKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user that the new key will belong to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateAccessKeyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateAccessKey"
      }
    },
    "/#Action=CreateAccountAlias": {
      "get": {
        "description": "Creates an alias for your AWS account. For information about using an AWS account alias, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET CreateAccountAlias",
        "parameters": [
          {
            "description": "<p>The account alias to create.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.</p>",
            "in": "query",
            "name": "AccountAlias",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 63,
              "pattern": "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateAccountAlias"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateAccountAlias"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates an alias for your AWS account. For information about using an AWS account alias, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST CreateAccountAlias",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateAccountAlias"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountAlias": {
                    "description": "<p>The account alias to create.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.</p>",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 63,
                    "pattern": "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$"
                  }
                },
                "required": ["AccountAlias"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateAccountAlias"
      }
    },
    "/#Action=CreateGroup": {
      "get": {
        "description": "<p>Creates a new group.</p> <p> For information about the number of groups you can create, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET CreateGroup",
        "parameters": [
          {
            "description": "<p> The path to the group. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "Path",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
            }
          },
          {
            "description": "<p>The name of the group to create. Do not include the path in this value.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateGroupResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateGroup"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a new group.</p> <p> For information about the number of groups you can create, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST CreateGroup",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Path": {
                    "description": "<p> The path to the group. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
                  },
                  "GroupName": {
                    "description": "<p>The name of the group to create. Do not include the path in this value.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["GroupName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateGroupResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateGroup"
      }
    },
    "/#Action=CreateInstanceProfile": {
      "get": {
        "description": "<p> Creates a new instance profile. For information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p> <p> For information about the number of instance profiles you can create, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET CreateInstanceProfile",
        "parameters": [
          {
            "description": "<p>The name of the instance profile to create.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "InstanceProfileName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p> The path to the instance profile. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "Path",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateInstanceProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateInstanceProfileResponse" } } }
          },
          "480": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateInstanceProfile"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p> Creates a new instance profile. For information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p> <p> For information about the number of instance profiles you can create, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST CreateInstanceProfile",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateInstanceProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "InstanceProfileName": {
                    "description": "<p>The name of the instance profile to create.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Path": {
                    "description": "<p> The path to the instance profile. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
                  }
                },
                "required": ["InstanceProfileName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateInstanceProfileResponse" } } }
          },
          "480": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateInstanceProfile"
      }
    },
    "/#Action=CreateLoginProfile": {
      "get": {
        "description": " Creates a password for the specified user, giving the user the ability to access AWS services through the AWS Management Console. For more information about managing passwords, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET CreateLoginProfile",
        "parameters": [
          {
            "description": "<p>The name of the IAM user to create a password for. The user must already exist.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The new password for the user.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (\\u0020) through the end of the ASCII character range (\\u00FF). You can also include the tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D) characters. Any of these characters are valid in a password. However, many tools, such as the AWS Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.</p>",
            "in": "query",
            "name": "Password",
            "required": true,
            "schema": {
              "type": "string",
              "format": "password",
              "minLength": 1,
              "maxLength": 128,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "description": "Specifies whether the user is required to set a new password on next sign-in.",
            "in": "query",
            "name": "PasswordResetRequired",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLoginProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateLoginProfileResponse" } } }
          },
          "480": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "PasswordPolicyViolationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PasswordPolicyViolationException" } } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateLoginProfile"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": " Creates a password for the specified user, giving the user the ability to access AWS services through the AWS Management Console. For more information about managing passwords, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST CreateLoginProfile",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateLoginProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user to create a password for. The user must already exist.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Password": {
                    "description": "<p>The new password for the user.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (\\u0020) through the end of the ASCII character range (\\u00FF). You can also include the tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D) characters. Any of these characters are valid in a password. However, many tools, such as the AWS Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.</p>",
                    "type": "string",
                    "format": "password",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  },
                  "PasswordResetRequired": {
                    "description": "Specifies whether the user is required to set a new password on next sign-in.",
                    "type": "boolean"
                  }
                },
                "required": ["UserName", "Password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateLoginProfileResponse" } } }
          },
          "480": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "PasswordPolicyViolationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PasswordPolicyViolationException" } } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateLoginProfile"
      }
    },
    "/#Action=CreateOpenIDConnectProvider": {
      "get": {
        "description": "<p>Creates an IAM entity to describe an identity provider (IdP) that supports <a href=\"http://openid.net/connect/\">OpenID Connect (OIDC)</a>.</p> <p>The OIDC provider that you create with this operation can be used as a principal in a role's trust policy. Such a policy establishes a trust relationship between AWS and the OIDC provider.</p> <p>When you create the IAM OIDC provider, you specify the following:</p> <ul> <li> <p>The URL of the OIDC identity provider (IdP) to trust</p> </li> <li> <p>A list of client IDs (also known as audiences) that identify the application or applications that are allowed to authenticate using the OIDC provider</p> </li> <li> <p>A list of thumbprints of the server certificate(s) that the IdP uses</p> </li> </ul> <p>You get all of this information from the OIDC IdP that you want to use to access AWS.</p> <note> <p>The trust for the OIDC provider is derived from the IAM provider that this operation creates. Therefore, it is best to limit access to the <a>CreateOpenIDConnectProvider</a> operation to highly privileged users.</p> </note>",
        "operationId": "GET CreateOpenIDConnectProvider",
        "parameters": [
          {
            "description": "Contains a URL that specifies the endpoint for an OpenID Connect provider.",
            "in": "query",
            "name": "Url",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 255 }
          },
          {
            "description": "<p>A list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the <code>client_id</code> parameter on OAuth requests.)</p> <p>You can register multiple client IDs with the same provider. For example, you might have multiple applications that use the same OIDC provider. You cannot register more than 100 client IDs with a single IAM OIDC provider.</p> <p>There is no defined format for a client ID. The <code>CreateOpenIDConnectProviderRequest</code> operation accepts client IDs up to 255 characters long.</p>",
            "in": "query",
            "name": "ClientIDList",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "Contains a list of thumbprints of identity provider server certificates.",
            "in": "query",
            "name": "ThumbprintList",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateOpenIDConnectProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CreateOpenIDConnectProviderResponse" } }
            }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateOpenIDConnectProvider"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates an IAM entity to describe an identity provider (IdP) that supports <a href=\"http://openid.net/connect/\">OpenID Connect (OIDC)</a>.</p> <p>The OIDC provider that you create with this operation can be used as a principal in a role's trust policy. Such a policy establishes a trust relationship between AWS and the OIDC provider.</p> <p>When you create the IAM OIDC provider, you specify the following:</p> <ul> <li> <p>The URL of the OIDC identity provider (IdP) to trust</p> </li> <li> <p>A list of client IDs (also known as audiences) that identify the application or applications that are allowed to authenticate using the OIDC provider</p> </li> <li> <p>A list of thumbprints of the server certificate(s) that the IdP uses</p> </li> </ul> <p>You get all of this information from the OIDC IdP that you want to use to access AWS.</p> <note> <p>The trust for the OIDC provider is derived from the IAM provider that this operation creates. Therefore, it is best to limit access to the <a>CreateOpenIDConnectProvider</a> operation to highly privileged users.</p> </note>",
        "operationId": "POST CreateOpenIDConnectProvider",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateOpenIDConnectProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Url": {
                    "description": "Contains a URL that specifies the endpoint for an OpenID Connect provider.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "ClientIDList": {
                    "description": "<p>A list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the <code>client_id</code> parameter on OAuth requests.)</p> <p>You can register multiple client IDs with the same provider. For example, you might have multiple applications that use the same OIDC provider. You cannot register more than 100 client IDs with a single IAM OIDC provider.</p> <p>There is no defined format for a client ID. The <code>CreateOpenIDConnectProviderRequest</code> operation accepts client IDs up to 255 characters long.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "ThumbprintList": {
                    "description": "Contains a list of thumbprints of identity provider server certificates.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["Url", "ThumbprintList"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CreateOpenIDConnectProviderResponse" } }
            }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateOpenIDConnectProvider"
      }
    },
    "/#Action=CreatePolicy": {
      "get": {
        "description": "<p>Creates a new managed policy for your AWS account.</p> <p>This operation creates a policy version with a version identifier of <code>v1</code> and sets v1 as the policy's default version. For more information about policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about managed policies in general, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET CreatePolicy",
        "parameters": [
          {
            "description": "<p>The friendly name of the policy.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The path for the policy.</p> <p>For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "Path",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
            }
          },
          {
            "description": "<p>The JSON policy document that you want to use as the content for the new policy.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PolicyDocument",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 131072,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "description": "<p>A friendly description of the policy.</p> <p>Typically used to store information about the permissions defined in the policy. For example, \"Grants access to production DynamoDB tables.\"</p> <p>The policy description is immutable. After a value is assigned, it cannot be changed.</p>",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreatePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreatePolicyResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "483": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreatePolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a new managed policy for your AWS account.</p> <p>This operation creates a policy version with a version identifier of <code>v1</code> and sets v1 as the policy's default version. For more information about policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about managed policies in general, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST CreatePolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreatePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicyName": {
                    "description": "<p>The friendly name of the policy.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Path": {
                    "description": "<p>The path for the policy.</p> <p>For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
                  },
                  "PolicyDocument": {
                    "description": "<p>The JSON policy document that you want to use as the content for the new policy.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 131072,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  },
                  "Description": {
                    "description": "<p>A friendly description of the policy.</p> <p>Typically used to store information about the permissions defined in the policy. For example, \"Grants access to production DynamoDB tables.\"</p> <p>The policy description is immutable. After a value is assigned, it cannot be changed.</p>",
                    "type": "string",
                    "maxLength": 1000
                  }
                },
                "required": ["PolicyName", "PolicyDocument"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreatePolicyResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "483": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreatePolicy"
      }
    },
    "/#Action=CreatePolicyVersion": {
      "get": {
        "description": "<p>Creates a new version of the specified managed policy. To update a managed policy, you create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must delete an existing version using <a>DeletePolicyVersion</a> before you create a new version.</p> <p>Optionally, you can set the new version as the policy's default version. The default version is the version that is in effect for the IAM users, groups, and roles to which the policy is attached.</p> <p>For more information about managed policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET CreatePolicyVersion",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "<p>The JSON policy document that you want to use as the content for this new version of the policy.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PolicyDocument",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 131072,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "description": "<p>Specifies whether to set this version as the policy's default version.</p> <p>When this parameter is <code>true</code>, the new policy version becomes the operative version. That is, it becomes the version that is in effect for the IAM users, groups, and roles that the policy is attached to.</p> <p>For more information about managed policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
            "in": "query",
            "name": "SetAsDefault",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreatePolicyVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreatePolicyVersionResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreatePolicyVersion"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a new version of the specified managed policy. To update a managed policy, you create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must delete an existing version using <a>DeletePolicyVersion</a> before you create a new version.</p> <p>Optionally, you can set the new version as the policy's default version. The default version is the version that is in effect for the IAM users, groups, and roles to which the policy is attached.</p> <p>For more information about managed policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST CreatePolicyVersion",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreatePolicyVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "PolicyDocument": {
                    "description": "<p>The JSON policy document that you want to use as the content for this new version of the policy.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 131072,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  },
                  "SetAsDefault": {
                    "description": "<p>Specifies whether to set this version as the policy's default version.</p> <p>When this parameter is <code>true</code>, the new policy version becomes the operative version. That is, it becomes the version that is in effect for the IAM users, groups, and roles that the policy is attached to.</p> <p>For more information about managed policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
                    "type": "boolean"
                  }
                },
                "required": ["PolicyArn", "PolicyDocument"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreatePolicyVersionResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreatePolicyVersion"
      }
    },
    "/#Action=CreateRole": {
      "get": {
        "description": "Creates a new role for your AWS account. For more information about roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">IAM Roles</a>. For information about limitations on role names and the number of roles you can create, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET CreateRole",
        "parameters": [
          {
            "description": "<p> The path to the role. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "Path",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
            }
          },
          {
            "description": "<p>The name of the role to create.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The trust relationship policy document that grants an entity permission to assume the role.</p> <p>In IAM, you must provide a JSON policy that has been converted to a string. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul> <p> Upon success, the response includes the same trust policy as a URL-encoded JSON string.</p>",
            "in": "query",
            "name": "AssumeRolePolicyDocument",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 131072,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "description": "A description of the role.",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 1000, "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*" }
          },
          {
            "description": "<p>The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.</p> <p>Anyone who assumes the role from the AWS CLI or API can use the <code>DurationSeconds</code> API parameter or the <code>duration-seconds</code> CLI parameter to request a longer session. The <code>MaxSessionDuration</code> setting determines the maximum duration that can be requested using the <code>DurationSeconds</code> parameter. If users don't specify a value for the <code>DurationSeconds</code> parameter, their security credentials are valid for one hour by default. This applies when you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI operations but does not apply when you use those operations to create a console URL. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\">Using IAM Roles</a> in the <i>IAM User Guide</i>.</p>",
            "in": "query",
            "name": "MaxSessionDuration",
            "required": false,
            "schema": { "type": "integer", "minimum": 3600, "maximum": 43200 }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PermissionsBoundary",
            "required": false,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "<p>A list of tags that you want to attach to the newly created role. Each tag consists of a key name and an associated value. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one of the tags is invalid or if you exceed the allowed number of tags per role, then the entire request fails and the role is not created.</p> </note>",
            "in": "query",
            "name": "Tags",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["CreateRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateRoleResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "483": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "484": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateRole"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Creates a new role for your AWS account. For more information about roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">IAM Roles</a>. For information about limitations on role names and the number of roles you can create, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST CreateRole",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["CreateRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Path": {
                    "description": "<p> The path to the role. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
                  },
                  "RoleName": {
                    "description": "<p>The name of the role to create.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "AssumeRolePolicyDocument": {
                    "description": "<p>The trust relationship policy document that grants an entity permission to assume the role.</p> <p>In IAM, you must provide a JSON policy that has been converted to a string. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul> <p> Upon success, the response includes the same trust policy as a URL-encoded JSON string.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 131072,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  },
                  "Description": {
                    "description": "A description of the role.",
                    "type": "string",
                    "maxLength": 1000,
                    "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*"
                  },
                  "MaxSessionDuration": {
                    "description": "<p>The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.</p> <p>Anyone who assumes the role from the AWS CLI or API can use the <code>DurationSeconds</code> API parameter or the <code>duration-seconds</code> CLI parameter to request a longer session. The <code>MaxSessionDuration</code> setting determines the maximum duration that can be requested using the <code>DurationSeconds</code> parameter. If users don't specify a value for the <code>DurationSeconds</code> parameter, their security credentials are valid for one hour by default. This applies when you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI operations but does not apply when you use those operations to create a console URL. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\">Using IAM Roles</a> in the <i>IAM User Guide</i>.</p>",
                    "type": "integer",
                    "minimum": 3600,
                    "maximum": 43200
                  },
                  "PermissionsBoundary": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "Tags": {
                    "description": "<p>A list of tags that you want to attach to the newly created role. Each tag consists of a key name and an associated value. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one of the tags is invalid or if you exceed the allowed number of tags per role, then the entire request fails and the role is not created.</p> </note>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["RoleName", "AssumeRolePolicyDocument"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateRoleResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "483": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "484": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateRole"
      }
    },
    "/#Action=CreateSAMLProvider": {
      "get": {
        "description": "<p>Creates an IAM resource that describes an identity provider (IdP) that supports SAML 2.0.</p> <p>The SAML provider resource that you create with this operation can be used as a principal in an IAM role's trust policy. Such a policy can enable federated users who sign in using the SAML IdP to assume the role. You can create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one that supports API access to AWS.</p> <p>When you create the SAML provider resource, you upload a SAML metadata document that you get from your IdP. That document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that the IdP sends. You must generate the metadata document using the identity management software that is used as your organization's IdP.</p> <note> <p> This operation requires <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html\">Enabling SAML 2.0 Federated Users to Access the AWS Management Console</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html\">About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET CreateSAMLProvider",
        "parameters": [
          {
            "description": "<p>An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html\">About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i> </p>",
            "in": "query",
            "name": "SAMLMetadataDocument",
            "required": true,
            "schema": { "type": "string", "minLength": 1000, "maxLength": 10000000 }
          },
          {
            "description": "<p>The name of the provider to create.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "Name",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w._-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateSAMLProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateSAMLProviderResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateSAMLProvider"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates an IAM resource that describes an identity provider (IdP) that supports SAML 2.0.</p> <p>The SAML provider resource that you create with this operation can be used as a principal in an IAM role's trust policy. Such a policy can enable federated users who sign in using the SAML IdP to assume the role. You can create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one that supports API access to AWS.</p> <p>When you create the SAML provider resource, you upload a SAML metadata document that you get from your IdP. That document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that the IdP sends. You must generate the metadata document using the identity management software that is used as your organization's IdP.</p> <note> <p> This operation requires <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html\">Enabling SAML 2.0 Federated Users to Access the AWS Management Console</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html\">About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST CreateSAMLProvider",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateSAMLProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "SAMLMetadataDocument": {
                    "description": "<p>An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html\">About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i> </p>",
                    "type": "string",
                    "minLength": 1000,
                    "maxLength": 10000000
                  },
                  "Name": {
                    "description": "<p>The name of the provider to create.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w._-]+"
                  }
                },
                "required": ["SAMLMetadataDocument", "Name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateSAMLProviderResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateSAMLProvider"
      }
    },
    "/#Action=CreateServiceLinkedRole": {
      "get": {
        "description": "<p>Creates an IAM role that is linked to a specific AWS service. The service controls the attached policies and when the role can be deleted. This helps ensure that the service is not broken by an unexpectedly changed or deleted role, which could put your AWS resources into an unknown state. Allowing the service to control the role helps improve service stability and proper cleanup when a service and its role are no longer needed. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html\">Using Service-Linked Roles</a> in the <i>IAM User Guide</i>. </p> <p>To attach a policy to this service-linked role, you must make the request using the AWS service that depends on this role.</p>",
        "operationId": "GET CreateServiceLinkedRole",
        "parameters": [
          {
            "description": "<p>The service principal for the AWS service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: <code>elasticbeanstalk.amazonaws.com</code>. </p> <p>Service principals are unique and case-sensitive. To find the exact service principal for your service-linked role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html\">AWS Services That Work with IAM</a> in the <i>IAM User Guide</i>. Look for the services that have <b>Yes </b>in the <b>Service-Linked Role</b> column. Choose the <b>Yes</b> link to view the service-linked role documentation for that service.</p>",
            "in": "query",
            "name": "AWSServiceName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "The description of the role.",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 1000, "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*" }
          },
          {
            "description": "<p/> <p>A string that you provide, which is combined with the service-provided prefix to form the complete role name. If you make multiple requests for the same service, then you must supply a different <code>CustomSuffix</code> for each request. Otherwise the request fails with a duplicate role name error. For example, you could add <code>-1</code> or <code>-debug</code> to the suffix.</p> <p>Some services do not support the <code>CustomSuffix</code> parameter. If you provide an optional suffix and the operation fails, try the operation again without the suffix.</p>",
            "in": "query",
            "name": "CustomSuffix",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateServiceLinkedRole"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateServiceLinkedRoleResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateServiceLinkedRole"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates an IAM role that is linked to a specific AWS service. The service controls the attached policies and when the role can be deleted. This helps ensure that the service is not broken by an unexpectedly changed or deleted role, which could put your AWS resources into an unknown state. Allowing the service to control the role helps improve service stability and proper cleanup when a service and its role are no longer needed. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html\">Using Service-Linked Roles</a> in the <i>IAM User Guide</i>. </p> <p>To attach a policy to this service-linked role, you must make the request using the AWS service that depends on this role.</p>",
        "operationId": "POST CreateServiceLinkedRole",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateServiceLinkedRole"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AWSServiceName": {
                    "description": "<p>The service principal for the AWS service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: <code>elasticbeanstalk.amazonaws.com</code>. </p> <p>Service principals are unique and case-sensitive. To find the exact service principal for your service-linked role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html\">AWS Services That Work with IAM</a> in the <i>IAM User Guide</i>. Look for the services that have <b>Yes </b>in the <b>Service-Linked Role</b> column. Choose the <b>Yes</b> link to view the service-linked role documentation for that service.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Description": {
                    "description": "The description of the role.",
                    "type": "string",
                    "maxLength": 1000,
                    "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*"
                  },
                  "CustomSuffix": {
                    "description": "<p/> <p>A string that you provide, which is combined with the service-provided prefix to form the complete role name. If you make multiple requests for the same service, then you must supply a different <code>CustomSuffix</code> for each request. Otherwise the request fails with a duplicate role name error. For example, you could add <code>-1</code> or <code>-debug</code> to the suffix.</p> <p>Some services do not support the <code>CustomSuffix</code> parameter. If you provide an optional suffix and the operation fails, try the operation again without the suffix.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["AWSServiceName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateServiceLinkedRoleResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateServiceLinkedRole"
      }
    },
    "/#Action=CreateServiceSpecificCredential": {
      "get": {
        "description": "<p>Generates a set of credentials consisting of a user name and password that can be used to access the service specified in the request. These credentials are generated by IAM, and can be used only for the specified service. </p> <p>You can have a maximum of two sets of service-specific credentials for each supported service per user.</p> <p>The only supported service at this time is AWS CodeCommit.</p> <p>You can reset the password to a new service-generated value by calling <a>ResetServiceSpecificCredential</a>.</p> <p>For more information about service-specific credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_ssh-keys.html\">Using IAM with AWS CodeCommit: Git Credentials, SSH Keys, and AWS Access Keys</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET CreateServiceSpecificCredential",
        "parameters": [
          {
            "description": "<p>The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "The name of the AWS service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.",
            "in": "query",
            "name": "ServiceName",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateServiceSpecificCredential"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CreateServiceSpecificCredentialResponse" } }
            }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceNotSupportedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceNotSupportedException" } } }
          }
        },
        "x-aws-operation-name": "CreateServiceSpecificCredential"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Generates a set of credentials consisting of a user name and password that can be used to access the service specified in the request. These credentials are generated by IAM, and can be used only for the specified service. </p> <p>You can have a maximum of two sets of service-specific credentials for each supported service per user.</p> <p>The only supported service at this time is AWS CodeCommit.</p> <p>You can reset the password to a new service-generated value by calling <a>ResetServiceSpecificCredential</a>.</p> <p>For more information about service-specific credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_ssh-keys.html\">Using IAM with AWS CodeCommit: Git Credentials, SSH Keys, and AWS Access Keys</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST CreateServiceSpecificCredential",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateServiceSpecificCredential"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "ServiceName": {
                    "description": "The name of the AWS service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.",
                    "type": "string"
                  }
                },
                "required": ["UserName", "ServiceName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CreateServiceSpecificCredentialResponse" } }
            }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceNotSupportedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceNotSupportedException" } } }
          }
        },
        "x-aws-operation-name": "CreateServiceSpecificCredential"
      }
    },
    "/#Action=CreateUser": {
      "get": {
        "description": "<p>Creates a new IAM user for your AWS account.</p> <p> For information about limitations on the number of IAM users you can create, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET CreateUser",
        "parameters": [
          {
            "description": "<p> The path for the user name. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "Path",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
            }
          },
          {
            "description": "<p>The name of the user to create.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PermissionsBoundary",
            "required": false,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "<p>A list of tags that you want to attach to the newly created user. Each tag consists of a key name and an associated value. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one of the tags is invalid or if you exceed the allowed number of tags per user, then the entire request fails and the user is not created.</p> </note>",
            "in": "query",
            "name": "Tags",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["CreateUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateUserResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "484": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateUser"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a new IAM user for your AWS account.</p> <p> For information about limitations on the number of IAM users you can create, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST CreateUser",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["CreateUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Path": {
                    "description": "<p> The path for the user name. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
                  },
                  "UserName": {
                    "description": "<p>The name of the user to create.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PermissionsBoundary": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "Tags": {
                    "description": "<p>A list of tags that you want to attach to the newly created user. Each tag consists of a key name and an associated value. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one of the tags is invalid or if you exceed the allowed number of tags per user, then the entire request fails and the user is not created.</p> </note>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateUserResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "484": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateUser"
      }
    },
    "/#Action=CreateVirtualMFADevice": {
      "get": {
        "description": "<p>Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use <a>EnableMFADevice</a> to attach the MFA device to an IAM user. For more information about creating and working with virtual MFA devices, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\">Using a Virtual MFA Device</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of MFA devices you can create, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on Entities</a> in the <i>IAM User Guide</i>.</p> <important> <p>The seed information contained in the QR code and the Base32 string should be treated like any other secret access information. In other words, protect the seed information as you would your AWS access keys or your passwords. After you provision your virtual device, you should ensure that the information is destroyed following secure procedures.</p> </important>",
        "operationId": "GET CreateVirtualMFADevice",
        "parameters": [
          {
            "description": "<p> The path for the virtual MFA device. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "Path",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
            }
          },
          {
            "description": "<p>The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "VirtualMFADeviceName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateVirtualMFADevice"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateVirtualMFADeviceResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateVirtualMFADevice"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use <a>EnableMFADevice</a> to attach the MFA device to an IAM user. For more information about creating and working with virtual MFA devices, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\">Using a Virtual MFA Device</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of MFA devices you can create, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on Entities</a> in the <i>IAM User Guide</i>.</p> <important> <p>The seed information contained in the QR code and the Base32 string should be treated like any other secret access information. In other words, protect the seed information as you would your AWS access keys or your passwords. After you provision your virtual device, you should ensure that the information is destroyed following secure procedures.</p> </important>",
        "operationId": "POST CreateVirtualMFADevice",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["CreateVirtualMFADevice"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Path": {
                    "description": "<p> The path for the virtual MFA device. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
                  },
                  "VirtualMFADeviceName": {
                    "description": "<p>The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["VirtualMFADeviceName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CreateVirtualMFADeviceResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "CreateVirtualMFADevice"
      }
    },
    "/#Action=DeactivateMFADevice": {
      "get": {
        "description": "<p>Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.</p> <p>For more information about creating and working with virtual MFA devices, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\">Enabling a Virtual Multi-factor Authentication (MFA) Device</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET DeactivateMFADevice",
        "parameters": [
          {
            "description": "<p>The name of the user whose MFA device you want to deactivate.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>",
            "in": "query",
            "name": "SerialNumber",
            "required": true,
            "schema": { "type": "string", "minLength": 9, "maxLength": 256, "pattern": "[\\w+=/:,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeactivateMFADevice"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeactivateMFADevice"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.</p> <p>For more information about creating and working with virtual MFA devices, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\">Enabling a Virtual Multi-factor Authentication (MFA) Device</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST DeactivateMFADevice",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeactivateMFADevice"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user whose MFA device you want to deactivate.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "SerialNumber": {
                    "description": "<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>",
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 256,
                    "pattern": "[\\w+=/:,.@-]+"
                  }
                },
                "required": ["UserName", "SerialNumber"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeactivateMFADevice"
      }
    },
    "/#Action=DeleteAccessKey": {
      "get": {
        "description": "<p>Deletes the access key pair associated with the specified IAM user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p>",
        "operationId": "GET DeleteAccessKey",
        "parameters": [
          {
            "description": "<p>The name of the user whose access key pair you want to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The access key ID for the access key ID and secret access key you want to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
            "in": "query",
            "name": "AccessKeyId",
            "required": true,
            "schema": { "type": "string", "minLength": 16, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteAccessKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteAccessKey"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the access key pair associated with the specified IAM user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p>",
        "operationId": "POST DeleteAccessKey",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteAccessKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user whose access key pair you want to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "AccessKeyId": {
                    "description": "<p>The access key ID for the access key ID and secret access key you want to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
                    "type": "string",
                    "minLength": 16,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  }
                },
                "required": ["AccessKeyId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteAccessKey"
      }
    },
    "/#Action=DeleteAccountAlias": {
      "get": {
        "description": " Deletes the specified AWS account alias. For information about using an AWS account alias, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET DeleteAccountAlias",
        "parameters": [
          {
            "description": "<p>The name of the account alias to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.</p>",
            "in": "query",
            "name": "AccountAlias",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 63,
              "pattern": "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteAccountAlias"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteAccountAlias"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": " Deletes the specified AWS account alias. For information about using an AWS account alias, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST DeleteAccountAlias",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteAccountAlias"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountAlias": {
                    "description": "<p>The name of the account alias to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.</p>",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 63,
                    "pattern": "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$"
                  }
                },
                "required": ["AccountAlias"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteAccountAlias"
      }
    },
    "/#Action=DeleteAccountPasswordPolicy": {
      "get": {
        "description": "Deletes the password policy for the AWS account. There are no parameters.",
        "operationId": "GET DeleteAccountPasswordPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteAccountPasswordPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteAccountPasswordPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the password policy for the AWS account. There are no parameters.",
        "operationId": "POST DeleteAccountPasswordPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteAccountPasswordPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteAccountPasswordPolicy"
      }
    },
    "/#Action=DeleteGroup": {
      "get": {
        "description": "Deletes the specified IAM group. The group must not contain any users or have any attached policies.",
        "operationId": "GET DeleteGroup",
        "parameters": [
          {
            "description": "<p>The name of the IAM group to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteGroup"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified IAM group. The group must not contain any users or have any attached policies.",
        "operationId": "POST DeleteGroup",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name of the IAM group to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["GroupName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteGroup"
      }
    },
    "/#Action=DeleteGroupPolicy": {
      "get": {
        "description": "<p>Deletes the specified inline policy that is embedded in the specified IAM group.</p> <p>A group can also have managed policies attached to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>. For more information about policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET DeleteGroupPolicy",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) identifying the group that the policy is embedded in.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name identifying the policy document to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteGroupPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteGroupPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified inline policy that is embedded in the specified IAM group.</p> <p>A group can also have managed policies attached to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>. For more information about policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST DeleteGroupPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteGroupPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name (friendly name, not ARN) identifying the group that the policy is embedded in.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyName": {
                    "description": "<p>The name identifying the policy document to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["GroupName", "PolicyName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteGroupPolicy"
      }
    },
    "/#Action=DeleteInstanceProfile": {
      "get": {
        "description": "<p>Deletes the specified instance profile. The instance profile must not have an associated role.</p> <important> <p>Make sure that you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance.</p> </important> <p>For more information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p>",
        "operationId": "GET DeleteInstanceProfile",
        "parameters": [
          {
            "description": "<p>The name of the instance profile to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "InstanceProfileName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteInstanceProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteInstanceProfile"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified instance profile. The instance profile must not have an associated role.</p> <important> <p>Make sure that you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance.</p> </important> <p>For more information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p>",
        "operationId": "POST DeleteInstanceProfile",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteInstanceProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "InstanceProfileName": {
                    "description": "<p>The name of the instance profile to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["InstanceProfileName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteInstanceProfile"
      }
    },
    "/#Action=DeleteLoginProfile": {
      "get": {
        "description": "<p>Deletes the password for the specified IAM user, which terminates the user's ability to access AWS services through the AWS Management Console.</p> <important> <p> Deleting a user's password does not prevent a user from accessing AWS through the command line interface or the API. To prevent all user access, you must also either make any access keys inactive or delete them. For more information about making keys inactive or deleting them, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>. </p> </important>",
        "operationId": "GET DeleteLoginProfile",
        "parameters": [
          {
            "description": "<p>The name of the user whose password you want to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteLoginProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteLoginProfile"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the password for the specified IAM user, which terminates the user's ability to access AWS services through the AWS Management Console.</p> <important> <p> Deleting a user's password does not prevent a user from accessing AWS through the command line interface or the API. To prevent all user access, you must also either make any access keys inactive or delete them. For more information about making keys inactive or deleting them, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>. </p> </important>",
        "operationId": "POST DeleteLoginProfile",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteLoginProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user whose password you want to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteLoginProfile"
      }
    },
    "/#Action=DeleteOpenIDConnectProvider": {
      "get": {
        "description": "<p>Deletes an OpenID Connect identity provider (IdP) resource object in IAM.</p> <p>Deleting an IAM OIDC provider resource does not update any roles that reference the provider as a principal in their trust policies. Any attempt to assume a role that references a deleted provider fails.</p> <p>This operation is idempotent; it does not fail or return an error if you call the operation for a provider that does not exist.</p>",
        "operationId": "GET DeleteOpenIDConnectProvider",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "OpenIDConnectProviderArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteOpenIDConnectProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteOpenIDConnectProvider"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes an OpenID Connect identity provider (IdP) resource object in IAM.</p> <p>Deleting an IAM OIDC provider resource does not update any roles that reference the provider as a principal in their trust policies. Any attempt to assume a role that references a deleted provider fails.</p> <p>This operation is idempotent; it does not fail or return an error if you call the operation for a provider that does not exist.</p>",
        "operationId": "POST DeleteOpenIDConnectProvider",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteOpenIDConnectProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeleteOpenIDConnectProvider" },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteOpenIDConnectProvider"
      }
    },
    "/#Action=DeletePolicy": {
      "get": {
        "description": "<p>Deletes the specified managed policy.</p> <p>Before you can delete a managed policy, you must first detach the policy from all users, groups, and roles that it is attached to. In addition, you must delete all the policy's versions. The following steps describe the process for deleting a managed policy:</p> <ul> <li> <p>Detach the policy from all users, groups, and roles that the policy is attached to, using the <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>, or <a>DetachRolePolicy</a> API operations. To list all the users, groups, and roles that a policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> </li> <li> <p>Delete all versions of the policy using <a>DeletePolicyVersion</a>. To list the policy's versions, use <a>ListPolicyVersions</a>. You cannot use <a>DeletePolicyVersion</a> to delete the version that is marked as the default version. You delete the policy's default version in the next step of the process.</p> </li> <li> <p>Delete the policy (this automatically deletes the policy's default version) using this API.</p> </li> </ul> <p>For information about managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET DeletePolicy",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeletePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeletePolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified managed policy.</p> <p>Before you can delete a managed policy, you must first detach the policy from all users, groups, and roles that it is attached to. In addition, you must delete all the policy's versions. The following steps describe the process for deleting a managed policy:</p> <ul> <li> <p>Detach the policy from all users, groups, and roles that the policy is attached to, using the <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>, or <a>DetachRolePolicy</a> API operations. To list all the users, groups, and roles that a policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> </li> <li> <p>Delete all versions of the policy using <a>DeletePolicyVersion</a>. To list the policy's versions, use <a>ListPolicyVersions</a>. You cannot use <a>DeletePolicyVersion</a> to delete the version that is marked as the default version. You delete the policy's default version in the next step of the process.</p> </li> <li> <p>Delete the policy (this automatically deletes the policy's default version) using this API.</p> </li> </ul> <p>For information about managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST DeletePolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeletePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeletePolicy" },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeletePolicy"
      }
    },
    "/#Action=DeletePolicyVersion": {
      "get": {
        "description": "<p>Deletes the specified version from the specified managed policy.</p> <p>You cannot delete the default version from a policy using this API. To delete the default version from a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use <a>ListPolicyVersions</a>.</p> <p>For information about versions for managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET DeletePolicyVersion",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "<p>The policy version to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p> <p>For more information about managed policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
            "in": "query",
            "name": "VersionId",
            "required": true,
            "schema": { "type": "string", "pattern": "v[1-9][0-9]*(\\.[A-Za-z0-9-]*)?" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeletePolicyVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeletePolicyVersion"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified version from the specified managed policy.</p> <p>You cannot delete the default version from a policy using this API. To delete the default version from a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use <a>ListPolicyVersions</a>.</p> <p>For information about versions for managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST DeletePolicyVersion",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeletePolicyVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "VersionId": {
                    "description": "<p>The policy version to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p> <p>For more information about managed policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
                    "type": "string",
                    "pattern": "v[1-9][0-9]*(\\.[A-Za-z0-9-]*)?"
                  }
                },
                "required": ["PolicyArn", "VersionId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeletePolicyVersion"
      }
    },
    "/#Action=DeleteRole": {
      "get": {
        "description": "<p>Deletes the specified role. The role must not have any policies attached. For more information about roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p> <important> <p>Make sure that you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance.</p> </important>",
        "operationId": "GET DeleteRole",
        "parameters": [
          {
            "description": "<p>The name of the role to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["DeleteRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteRole"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified role. The role must not have any policies attached. For more information about roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p> <important> <p>Make sure that you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance.</p> </important>",
        "operationId": "POST DeleteRole",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["DeleteRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name of the role to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteRole"
      }
    },
    "/#Action=DeleteRolePermissionsBoundary": {
      "get": {
        "description": "<p>Deletes the permissions boundary for the specified IAM role. </p> <important> <p>Deleting the permissions boundary for a role might increase its permissions. For example, it might allow anyone who assumes the role to perform all the actions granted in its permissions policies. </p> </important>",
        "operationId": "GET DeleteRolePermissionsBoundary",
        "parameters": [
          {
            "description": "The name (friendly name, not ARN) of the IAM role from which you want to remove the permissions boundary.",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteRolePermissionsBoundary"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteRolePermissionsBoundary"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the permissions boundary for the specified IAM role. </p> <important> <p>Deleting the permissions boundary for a role might increase its permissions. For example, it might allow anyone who assumes the role to perform all the actions granted in its permissions policies. </p> </important>",
        "operationId": "POST DeleteRolePermissionsBoundary",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteRolePermissionsBoundary"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "The name (friendly name, not ARN) of the IAM role from which you want to remove the permissions boundary.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteRolePermissionsBoundary"
      }
    },
    "/#Action=DeleteRolePolicy": {
      "get": {
        "description": "<p>Deletes the specified inline policy that is embedded in the specified IAM role.</p> <p>A role can also have managed policies attached to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>. For more information about policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET DeleteRolePolicy",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) identifying the role that the policy is embedded in.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the inline policy to delete from the specified IAM role.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteRolePolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified inline policy that is embedded in the specified IAM role.</p> <p>A role can also have managed policies attached to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>. For more information about policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST DeleteRolePolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name (friendly name, not ARN) identifying the role that the policy is embedded in.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyName": {
                    "description": "<p>The name of the inline policy to delete from the specified IAM role.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["RoleName", "PolicyName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteRolePolicy"
      }
    },
    "/#Action=DeleteSAMLProvider": {
      "get": {
        "description": "<p>Deletes a SAML provider resource in IAM.</p> <p>Deleting the provider resource from IAM does not update any roles that reference the SAML provider resource's ARN as a principal in their trust policies. Any attempt to assume a role that references a non-existent provider resource ARN fails.</p> <note> <p> This operation requires <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> </note>",
        "operationId": "GET DeleteSAMLProvider",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "SAMLProviderArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteSAMLProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteSAMLProvider"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a SAML provider resource in IAM.</p> <p>Deleting the provider resource from IAM does not update any roles that reference the SAML provider resource's ARN as a principal in their trust policies. Any attempt to assume a role that references a non-existent provider resource ARN fails.</p> <note> <p> This operation requires <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> </note>",
        "operationId": "POST DeleteSAMLProvider",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteSAMLProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeleteSAMLProvider" },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteSAMLProvider"
      }
    },
    "/#Action=DeleteSSHPublicKey": {
      "get": {
        "description": "<p>Deletes the specified SSH public key.</p> <p>The SSH public key deleted by this operation is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
        "operationId": "GET DeleteSSHPublicKey",
        "parameters": [
          {
            "description": "<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
            "in": "query",
            "name": "SSHPublicKeyId",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteSSHPublicKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "DeleteSSHPublicKey"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified SSH public key.</p> <p>The SSH public key deleted by this operation is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
        "operationId": "POST DeleteSSHPublicKey",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteSSHPublicKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "SSHPublicKeyId": {
                    "description": "<p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  }
                },
                "required": ["UserName", "SSHPublicKeyId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "DeleteSSHPublicKey"
      }
    },
    "/#Action=DeleteServerCertificate": {
      "get": {
        "description": "<p>Deletes the specified server certificate.</p> <p>For more information about working with server certificates, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html\">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic also includes a list of AWS services that can use the server certificates that you manage with IAM.</p> <important> <p> If you are using a server certificate with Elastic Load Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn't detect the deletion of bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more information, go to <a href=\"https://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html\">DeleteLoadBalancerListeners</a> in the <i>Elastic Load Balancing API Reference</i>.</p> </important>",
        "operationId": "GET DeleteServerCertificate",
        "parameters": [
          {
            "description": "<p>The name of the server certificate you want to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "ServerCertificateName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteServerCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteServerCertificate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified server certificate.</p> <p>For more information about working with server certificates, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html\">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic also includes a list of AWS services that can use the server certificates that you manage with IAM.</p> <important> <p> If you are using a server certificate with Elastic Load Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn't detect the deletion of bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more information, go to <a href=\"https://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html\">DeleteLoadBalancerListeners</a> in the <i>Elastic Load Balancing API Reference</i>.</p> </important>",
        "operationId": "POST DeleteServerCertificate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteServerCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ServerCertificateName": {
                    "description": "<p>The name of the server certificate you want to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["ServerCertificateName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteServerCertificate"
      }
    },
    "/#Action=DeleteServiceLinkedRole": {
      "get": {
        "description": "<p>Submits a service-linked role deletion request and returns a <code>DeletionTaskId</code>, which you can use to check the status of the deletion. Before you call this operation, confirm that the role has no active sessions and that any resources used by the role in the linked service are deleted. If you call this operation more than once for the same service-linked role and an earlier deletion task is not complete, then the <code>DeletionTaskId</code> of the earlier request is returned.</p> <p>If you submit a deletion request for a service-linked role whose linked service is still accessing a resource, then the deletion task fails. If it fails, the <a>GetServiceLinkedRoleDeletionStatus</a> API operation returns the reason for the failure, usually including the resources that must be deleted. To delete the service-linked role, you must first remove those resources from the linked service and then submit the deletion request again. Resources are specific to the service that is linked to the role. For more information about removing resources from a service, see the <a href=\"http://docs.aws.amazon.com/\">AWS documentation</a> for your service.</p> <p>For more information about service-linked roles, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role\">Roles Terms and Concepts: AWS Service-Linked Role</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET DeleteServiceLinkedRole",
        "parameters": [
          {
            "description": "The name of the service-linked role to be deleted.",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteServiceLinkedRole"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteServiceLinkedRoleResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteServiceLinkedRole"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Submits a service-linked role deletion request and returns a <code>DeletionTaskId</code>, which you can use to check the status of the deletion. Before you call this operation, confirm that the role has no active sessions and that any resources used by the role in the linked service are deleted. If you call this operation more than once for the same service-linked role and an earlier deletion task is not complete, then the <code>DeletionTaskId</code> of the earlier request is returned.</p> <p>If you submit a deletion request for a service-linked role whose linked service is still accessing a resource, then the deletion task fails. If it fails, the <a>GetServiceLinkedRoleDeletionStatus</a> API operation returns the reason for the failure, usually including the resources that must be deleted. To delete the service-linked role, you must first remove those resources from the linked service and then submit the deletion request again. Resources are specific to the service that is linked to the role. For more information about removing resources from a service, see the <a href=\"http://docs.aws.amazon.com/\">AWS documentation</a> for your service.</p> <p>For more information about service-linked roles, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role\">Roles Terms and Concepts: AWS Service-Linked Role</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST DeleteServiceLinkedRole",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteServiceLinkedRole"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "The name of the service-linked role to be deleted.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteServiceLinkedRoleResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteServiceLinkedRole"
      }
    },
    "/#Action=DeleteServiceSpecificCredential": {
      "get": {
        "description": "Deletes the specified service-specific credential.",
        "operationId": "GET DeleteServiceSpecificCredential",
        "parameters": [
          {
            "description": "<p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The unique identifier of the service-specific credential. You can get this value by calling <a>ListServiceSpecificCredentials</a>.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
            "in": "query",
            "name": "ServiceSpecificCredentialId",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteServiceSpecificCredential"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "DeleteServiceSpecificCredential"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Deletes the specified service-specific credential.",
        "operationId": "POST DeleteServiceSpecificCredential",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteServiceSpecificCredential"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "ServiceSpecificCredentialId": {
                    "description": "<p>The unique identifier of the service-specific credential. You can get this value by calling <a>ListServiceSpecificCredentials</a>.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  }
                },
                "required": ["ServiceSpecificCredentialId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "DeleteServiceSpecificCredential"
      }
    },
    "/#Action=DeleteSigningCertificate": {
      "get": {
        "description": "<p>Deletes a signing certificate associated with the specified IAM user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated IAM users.</p>",
        "operationId": "GET DeleteSigningCertificate",
        "parameters": [
          {
            "description": "<p>The name of the user the signing certificate belongs to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The ID of the signing certificate to delete.</p> <p>The format of this parameter, as described by its <a href=\"http://wikipedia.org/wiki/regex\">regex</a> pattern, is a string of characters that can be upper- or lower-cased letters or digits.</p>",
            "in": "query",
            "name": "CertificateId",
            "required": true,
            "schema": { "type": "string", "minLength": 24, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteSigningCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteSigningCertificate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a signing certificate associated with the specified IAM user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated IAM users.</p>",
        "operationId": "POST DeleteSigningCertificate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteSigningCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user the signing certificate belongs to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "CertificateId": {
                    "description": "<p>The ID of the signing certificate to delete.</p> <p>The format of this parameter, as described by its <a href=\"http://wikipedia.org/wiki/regex\">regex</a> pattern, is a string of characters that can be upper- or lower-cased letters or digits.</p>",
                    "type": "string",
                    "minLength": 24,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  }
                },
                "required": ["CertificateId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteSigningCertificate"
      }
    },
    "/#Action=DeleteUser": {
      "get": {
        "description": "<p>Deletes the specified IAM user. Unlike the AWS Management Console, when you delete a user programmatically, you must delete the items attached to the user manually, or the deletion fails. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_manage.html#id_users_deleting_cli\">Deleting an IAM User</a>. Before attempting to delete a user, remove the following items:</p> <ul> <li> <p>Password (<a>DeleteLoginProfile</a>)</p> </li> <li> <p>Access keys (<a>DeleteAccessKey</a>)</p> </li> <li> <p>Signing certificate (<a>DeleteSigningCertificate</a>)</p> </li> <li> <p>SSH public key (<a>DeleteSSHPublicKey</a>)</p> </li> <li> <p>Git credentials (<a>DeleteServiceSpecificCredential</a>)</p> </li> <li> <p>Multi-factor authentication (MFA) device (<a>DeactivateMFADevice</a>, <a>DeleteVirtualMFADevice</a>)</p> </li> <li> <p>Inline policies (<a>DeleteUserPolicy</a>)</p> </li> <li> <p>Attached managed policies (<a>DetachUserPolicy</a>)</p> </li> <li> <p>Group memberships (<a>RemoveUserFromGroup</a>)</p> </li> </ul>",
        "operationId": "GET DeleteUser",
        "parameters": [
          {
            "description": "<p>The name of the user to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["DeleteUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "483": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteUser"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified IAM user. Unlike the AWS Management Console, when you delete a user programmatically, you must delete the items attached to the user manually, or the deletion fails. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_manage.html#id_users_deleting_cli\">Deleting an IAM User</a>. Before attempting to delete a user, remove the following items:</p> <ul> <li> <p>Password (<a>DeleteLoginProfile</a>)</p> </li> <li> <p>Access keys (<a>DeleteAccessKey</a>)</p> </li> <li> <p>Signing certificate (<a>DeleteSigningCertificate</a>)</p> </li> <li> <p>SSH public key (<a>DeleteSSHPublicKey</a>)</p> </li> <li> <p>Git credentials (<a>DeleteServiceSpecificCredential</a>)</p> </li> <li> <p>Multi-factor authentication (MFA) device (<a>DeactivateMFADevice</a>, <a>DeleteVirtualMFADevice</a>)</p> </li> <li> <p>Inline policies (<a>DeleteUserPolicy</a>)</p> </li> <li> <p>Attached managed policies (<a>DetachUserPolicy</a>)</p> </li> <li> <p>Group memberships (<a>RemoveUserFromGroup</a>)</p> </li> </ul>",
        "operationId": "POST DeleteUser",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["DeleteUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "483": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteUser"
      }
    },
    "/#Action=DeleteUserPermissionsBoundary": {
      "get": {
        "description": "<p>Deletes the permissions boundary for the specified IAM user.</p> <important> <p>Deleting the permissions boundary for a user might increase its permissions by allowing the user to perform all the actions granted in its permissions policies. </p> </important>",
        "operationId": "GET DeleteUserPermissionsBoundary",
        "parameters": [
          {
            "description": "The name (friendly name, not ARN) of the IAM user from which you want to remove the permissions boundary.",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteUserPermissionsBoundary"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteUserPermissionsBoundary"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the permissions boundary for the specified IAM user.</p> <important> <p>Deleting the permissions boundary for a user might increase its permissions by allowing the user to perform all the actions granted in its permissions policies. </p> </important>",
        "operationId": "POST DeleteUserPermissionsBoundary",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteUserPermissionsBoundary"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "The name (friendly name, not ARN) of the IAM user from which you want to remove the permissions boundary.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteUserPermissionsBoundary"
      }
    },
    "/#Action=DeleteUserPolicy": {
      "get": {
        "description": "<p>Deletes the specified inline policy that is embedded in the specified IAM user.</p> <p>A user can also have managed policies attached to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>. For more information about policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET DeleteUserPolicy",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) identifying the user that the policy is embedded in.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name identifying the policy document to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteUserPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteUserPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes the specified inline policy that is embedded in the specified IAM user.</p> <p>A user can also have managed policies attached to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>. For more information about policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST DeleteUserPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteUserPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name (friendly name, not ARN) identifying the user that the policy is embedded in.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyName": {
                    "description": "<p>The name identifying the policy document to delete.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["UserName", "PolicyName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteUserPolicy"
      }
    },
    "/#Action=DeleteVirtualMFADevice": {
      "get": {
        "description": "<p>Deletes a virtual MFA device.</p> <note> <p> You must deactivate a user's virtual MFA device before you can delete it. For information about deactivating MFA devices, see <a>DeactivateMFADevice</a>. </p> </note>",
        "operationId": "GET DeleteVirtualMFADevice",
        "parameters": [
          {
            "description": "<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>",
            "in": "query",
            "name": "SerialNumber",
            "required": true,
            "schema": { "type": "string", "minLength": 9, "maxLength": 256, "pattern": "[\\w+=/:,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteVirtualMFADevice"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteVirtualMFADevice"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Deletes a virtual MFA device.</p> <note> <p> You must deactivate a user's virtual MFA device before you can delete it. For information about deactivating MFA devices, see <a>DeactivateMFADevice</a>. </p> </note>",
        "operationId": "POST DeleteVirtualMFADevice",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DeleteVirtualMFADevice"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "SerialNumber": {
                    "description": "<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>",
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 256,
                    "pattern": "[\\w+=/:,.@-]+"
                  }
                },
                "required": ["SerialNumber"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "DeleteConflictException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DeleteConflictException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DeleteVirtualMFADevice"
      }
    },
    "/#Action=DetachGroupPolicy": {
      "get": {
        "description": "<p>Removes the specified managed policy from the specified IAM group.</p> <p>A group can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteGroupPolicy</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET DetachGroupPolicy",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) of the IAM group to detach the policy from.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DetachGroupPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DetachGroupPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Removes the specified managed policy from the specified IAM group.</p> <p>A group can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteGroupPolicy</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST DetachGroupPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DetachGroupPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name (friendly name, not ARN) of the IAM group to detach the policy from.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  }
                },
                "required": ["GroupName", "PolicyArn"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DetachGroupPolicy"
      }
    },
    "/#Action=DetachRolePolicy": {
      "get": {
        "description": "<p>Removes the specified managed policy from the specified role.</p> <p>A role can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteRolePolicy</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET DetachRolePolicy",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) of the IAM role to detach the policy from.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DetachRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DetachRolePolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Removes the specified managed policy from the specified role.</p> <p>A role can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteRolePolicy</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST DetachRolePolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DetachRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name (friendly name, not ARN) of the IAM role to detach the policy from.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  }
                },
                "required": ["RoleName", "PolicyArn"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DetachRolePolicy"
      }
    },
    "/#Action=DetachUserPolicy": {
      "get": {
        "description": "<p>Removes the specified managed policy from the specified user.</p> <p>A user can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteUserPolicy</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET DetachUserPolicy",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) of the IAM user to detach the policy from.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DetachUserPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DetachUserPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Removes the specified managed policy from the specified user.</p> <p>A user can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteUserPolicy</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST DetachUserPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["DetachUserPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name (friendly name, not ARN) of the IAM user to detach the policy from.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  }
                },
                "required": ["UserName", "PolicyArn"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "DetachUserPolicy"
      }
    },
    "/#Action=EnableMFADevice": {
      "get": {
        "description": "Enables the specified MFA device and associates it with the specified IAM user. When enabled, the MFA device is required for every subsequent login by the IAM user associated with the device.",
        "operationId": "GET EnableMFADevice",
        "parameters": [
          {
            "description": "<p>The name of the IAM user for whom you want to enable the MFA device.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>",
            "in": "query",
            "name": "SerialNumber",
            "required": true,
            "schema": { "type": "string", "minLength": 9, "maxLength": 256, "pattern": "[\\w+=/:,.@-]+" }
          },
          {
            "description": "<p>An authentication code emitted by the device. </p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you can <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html\">resync the device</a>.</p> </important>",
            "in": "query",
            "name": "AuthenticationCode1",
            "required": true,
            "schema": { "type": "string", "minLength": 6, "maxLength": 6, "pattern": "[\\d]+" }
          },
          {
            "description": "<p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you can <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html\">resync the device</a>.</p> </important>",
            "in": "query",
            "name": "AuthenticationCode2",
            "required": true,
            "schema": { "type": "string", "minLength": 6, "maxLength": 6, "pattern": "[\\d]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["EnableMFADevice"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "481": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "482": {
            "description": "InvalidAuthenticationCodeException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidAuthenticationCodeException" } }
            }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "484": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "EnableMFADevice"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Enables the specified MFA device and associates it with the specified IAM user. When enabled, the MFA device is required for every subsequent login by the IAM user associated with the device.",
        "operationId": "POST EnableMFADevice",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["EnableMFADevice"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user for whom you want to enable the MFA device.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "SerialNumber": {
                    "description": "<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>",
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 256,
                    "pattern": "[\\w+=/:,.@-]+"
                  },
                  "AuthenticationCode1": {
                    "description": "<p>An authentication code emitted by the device. </p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you can <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html\">resync the device</a>.</p> </important>",
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 6,
                    "pattern": "[\\d]+"
                  },
                  "AuthenticationCode2": {
                    "description": "<p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you can <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html\">resync the device</a>.</p> </important>",
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 6,
                    "pattern": "[\\d]+"
                  }
                },
                "required": ["UserName", "SerialNumber", "AuthenticationCode1", "AuthenticationCode2"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "481": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "482": {
            "description": "InvalidAuthenticationCodeException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidAuthenticationCodeException" } }
            }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "484": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "EnableMFADevice"
      }
    },
    "/#Action=GenerateCredentialReport": {
      "get": {
        "description": " Generates a credential report for the AWS account. For more information about the credential report, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Getting Credential Reports</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET GenerateCredentialReport",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GenerateCredentialReport"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GenerateCredentialReportResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GenerateCredentialReport"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": " Generates a credential report for the AWS account. For more information about the credential report, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Getting Credential Reports</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST GenerateCredentialReport",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GenerateCredentialReport"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GenerateCredentialReportResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GenerateCredentialReport"
      }
    },
    "/#Action=GenerateOrganizationsAccessReport": {
      "get": {
        "description": "<p>Generates a report for service last accessed data for AWS Organizations. You can generate a report for any entities (organization root, organizational unit, or account) or policies in your organization.</p> <p>To call this operation, you must be signed in using your AWS Organizations master account credentials. You can use your long-term IAM user or root user credentials, or temporary credentials from assuming an IAM role. SCPs must be enabled for your organization root. You must have the required IAM and AWS Organizations permissions. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\">Refining Permissions Using Service Last Accessed Data</a> in the <i>IAM User Guide</i>.</p> <p>You can generate a service last accessed data report for entities by specifying only the entity's path. This data includes a list of services that are allowed by any service control policies (SCPs) that apply to the entity.</p> <p>You can generate a service last accessed data report for a policy by specifying an entity's path and an optional AWS Organizations policy ID. This data includes a list of services that are allowed by the specified SCP.</p> <p>For each service in both report types, the data includes the most recent account activity that the policy allows to account principals in the entity or the entity's children. For important information about the data, reporting period, permissions required, troubleshooting, and supported Regions see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\">Reducing Permissions Using Service Last Accessed Data</a> in the <i>IAM User Guide</i>.</p> <important> <p>The data includes all attempts to access AWS, not just the successful ones. This includes all attempts that were made using the AWS Management Console, the AWS API through any of the SDKs, or any of the command line tools. An unexpected entry in the service last accessed data does not mean that an account has been compromised, because the request might have been denied. Refer to your CloudTrail logs as the authoritative source for information about all API calls and whether they were successful or denied access. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\">Logging IAM Events with CloudTrail</a> in the <i>IAM User Guide</i>.</p> </important> <p>This operation returns a <code>JobId</code>. Use this parameter in the <code> <a>GetOrganizationsAccessReport</a> </code> operation to check the status of the report generation. To check the status of this request, use the <code>JobId</code> parameter in the <code> <a>GetOrganizationsAccessReport</a> </code> operation and test the <code>JobStatus</code> response parameter. When the job is complete, you can retrieve the report.</p> <p>To generate a service last accessed data report for entities, specify an entity path without specifying the optional AWS Organizations policy ID. The type of entity that you specify determines the data returned in the report.</p> <ul> <li> <p> <b>Root</b> – When you specify the organizations root as the entity, the resulting report lists all of the services allowed by SCPs that are attached to your root. For each service, the report includes data for all accounts in your organization except the master account, because the master account is not limited by SCPs.</p> </li> <li> <p> <b>OU</b> – When you specify an organizational unit (OU) as the entity, the resulting report lists all of the services allowed by SCPs that are attached to the OU and its parents. For each service, the report includes data for all accounts in the OU or its children. This data excludes the master account, because the master account is not limited by SCPs.</p> </li> <li> <p> <b>Master account</b> – When you specify the master account, the resulting report lists all AWS services, because the master account is not limited by SCPs. For each service, the report includes data for only the master account.</p> </li> <li> <p> <b>Account</b> – When you specify another account as the entity, the resulting report lists all of the services allowed by SCPs that are attached to the account and its parents. For each service, the report includes data for only the specified account.</p> </li> </ul> <p>To generate a service last accessed data report for policies, specify an entity path and the optional AWS Organizations policy ID. The type of entity that you specify determines the data returned for each service.</p> <ul> <li> <p> <b>Root</b> – When you specify the root entity and a policy ID, the resulting report lists all of the services that are allowed by the specified SCP. For each service, the report includes data for all accounts in your organization to which the SCP applies. This data excludes the master account, because the master account is not limited by SCPs. If the SCP is not attached to any entities in the organization, then the report will return a list of services with no data.</p> </li> <li> <p> <b>OU</b> – When you specify an OU entity and a policy ID, the resulting report lists all of the services that are allowed by the specified SCP. For each service, the report includes data for all accounts in the OU or its children to which the SCP applies. This means that other accounts outside the OU that are affected by the SCP might not be included in the data. This data excludes the master account, because the master account is not limited by SCPs. If the SCP is not attached to the OU or one of its children, the report will return a list of services with no data.</p> </li> <li> <p> <b>Master account</b> – When you specify the master account, the resulting report lists all AWS services, because the master account is not limited by SCPs. If you specify a policy ID in the CLI or API, the policy is ignored. For each service, the report includes data for only the master account.</p> </li> <li> <p> <b>Account</b> – When you specify another account entity and a policy ID, the resulting report lists all of the services that are allowed by the specified SCP. For each service, the report includes data for only the specified account. This means that other accounts in the organization that are affected by the SCP might not be included in the data. If the SCP is not attached to the account, the report will return a list of services with no data.</p> </li> </ul> <note> <p>Service last accessed data does not use other policy types when determining whether a principal could access a service. These other policy types include identity-based policies, resource-based policies, access control lists, IAM permissions boundaries, and STS assume role policies. It only applies SCP logic. For more about the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\">Evaluating Policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For more information about service last accessed data, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\">Reducing Policy Scope by Viewing User Activity</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET GenerateOrganizationsAccessReport",
        "parameters": [
          {
            "description": "The path of the AWS Organizations entity (root, OU, or account). You can build an entity path using the known structure of your organization. For example, assume that your account ID is <code>123456789012</code> and its parent OU ID is <code>ou-rge0-awsabcde</code>. The organization root ID is <code>r-f6g7h8i9j0example</code> and your organization ID is <code>o-a1b2c3d4e5</code>. Your entity path is <code>o-a1b2c3d4e5/r-f6g7h8i9j0example/ou-rge0-awsabcde/123456789012</code>.",
            "in": "query",
            "name": "EntityPath",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 19,
              "maxLength": 427,
              "pattern": "^o-[0-9a-z]{10,32}\\/r-[0-9a-z]{4,32}[0-9a-z-\\/]*"
            }
          },
          {
            "description": "<p>The identifier of the AWS Organizations service control policy (SCP). This parameter is optional.</p> <p>This ID is used to generate information about when an account principal that is limited by the SCP attempted to access an AWS service.</p>",
            "in": "query",
            "name": "OrganizationsPolicyId",
            "required": false,
            "schema": { "type": "string", "pattern": "^p-[0-9a-zA-Z_]{8,128}$" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GenerateOrganizationsAccessReport"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GenerateOrganizationsAccessReportResponse" } }
            }
          },
          "480": {
            "description": "ReportGenerationLimitExceededException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ReportGenerationLimitExceededException" } }
            }
          }
        },
        "x-aws-operation-name": "GenerateOrganizationsAccessReport"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Generates a report for service last accessed data for AWS Organizations. You can generate a report for any entities (organization root, organizational unit, or account) or policies in your organization.</p> <p>To call this operation, you must be signed in using your AWS Organizations master account credentials. You can use your long-term IAM user or root user credentials, or temporary credentials from assuming an IAM role. SCPs must be enabled for your organization root. You must have the required IAM and AWS Organizations permissions. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\">Refining Permissions Using Service Last Accessed Data</a> in the <i>IAM User Guide</i>.</p> <p>You can generate a service last accessed data report for entities by specifying only the entity's path. This data includes a list of services that are allowed by any service control policies (SCPs) that apply to the entity.</p> <p>You can generate a service last accessed data report for a policy by specifying an entity's path and an optional AWS Organizations policy ID. This data includes a list of services that are allowed by the specified SCP.</p> <p>For each service in both report types, the data includes the most recent account activity that the policy allows to account principals in the entity or the entity's children. For important information about the data, reporting period, permissions required, troubleshooting, and supported Regions see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\">Reducing Permissions Using Service Last Accessed Data</a> in the <i>IAM User Guide</i>.</p> <important> <p>The data includes all attempts to access AWS, not just the successful ones. This includes all attempts that were made using the AWS Management Console, the AWS API through any of the SDKs, or any of the command line tools. An unexpected entry in the service last accessed data does not mean that an account has been compromised, because the request might have been denied. Refer to your CloudTrail logs as the authoritative source for information about all API calls and whether they were successful or denied access. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\">Logging IAM Events with CloudTrail</a> in the <i>IAM User Guide</i>.</p> </important> <p>This operation returns a <code>JobId</code>. Use this parameter in the <code> <a>GetOrganizationsAccessReport</a> </code> operation to check the status of the report generation. To check the status of this request, use the <code>JobId</code> parameter in the <code> <a>GetOrganizationsAccessReport</a> </code> operation and test the <code>JobStatus</code> response parameter. When the job is complete, you can retrieve the report.</p> <p>To generate a service last accessed data report for entities, specify an entity path without specifying the optional AWS Organizations policy ID. The type of entity that you specify determines the data returned in the report.</p> <ul> <li> <p> <b>Root</b> – When you specify the organizations root as the entity, the resulting report lists all of the services allowed by SCPs that are attached to your root. For each service, the report includes data for all accounts in your organization except the master account, because the master account is not limited by SCPs.</p> </li> <li> <p> <b>OU</b> – When you specify an organizational unit (OU) as the entity, the resulting report lists all of the services allowed by SCPs that are attached to the OU and its parents. For each service, the report includes data for all accounts in the OU or its children. This data excludes the master account, because the master account is not limited by SCPs.</p> </li> <li> <p> <b>Master account</b> – When you specify the master account, the resulting report lists all AWS services, because the master account is not limited by SCPs. For each service, the report includes data for only the master account.</p> </li> <li> <p> <b>Account</b> – When you specify another account as the entity, the resulting report lists all of the services allowed by SCPs that are attached to the account and its parents. For each service, the report includes data for only the specified account.</p> </li> </ul> <p>To generate a service last accessed data report for policies, specify an entity path and the optional AWS Organizations policy ID. The type of entity that you specify determines the data returned for each service.</p> <ul> <li> <p> <b>Root</b> – When you specify the root entity and a policy ID, the resulting report lists all of the services that are allowed by the specified SCP. For each service, the report includes data for all accounts in your organization to which the SCP applies. This data excludes the master account, because the master account is not limited by SCPs. If the SCP is not attached to any entities in the organization, then the report will return a list of services with no data.</p> </li> <li> <p> <b>OU</b> – When you specify an OU entity and a policy ID, the resulting report lists all of the services that are allowed by the specified SCP. For each service, the report includes data for all accounts in the OU or its children to which the SCP applies. This means that other accounts outside the OU that are affected by the SCP might not be included in the data. This data excludes the master account, because the master account is not limited by SCPs. If the SCP is not attached to the OU or one of its children, the report will return a list of services with no data.</p> </li> <li> <p> <b>Master account</b> – When you specify the master account, the resulting report lists all AWS services, because the master account is not limited by SCPs. If you specify a policy ID in the CLI or API, the policy is ignored. For each service, the report includes data for only the master account.</p> </li> <li> <p> <b>Account</b> – When you specify another account entity and a policy ID, the resulting report lists all of the services that are allowed by the specified SCP. For each service, the report includes data for only the specified account. This means that other accounts in the organization that are affected by the SCP might not be included in the data. If the SCP is not attached to the account, the report will return a list of services with no data.</p> </li> </ul> <note> <p>Service last accessed data does not use other policy types when determining whether a principal could access a service. These other policy types include identity-based policies, resource-based policies, access control lists, IAM permissions boundaries, and STS assume role policies. It only applies SCP logic. For more about the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\">Evaluating Policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For more information about service last accessed data, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\">Reducing Policy Scope by Viewing User Activity</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST GenerateOrganizationsAccessReport",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GenerateOrganizationsAccessReport"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "EntityPath": {
                    "description": "The path of the AWS Organizations entity (root, OU, or account). You can build an entity path using the known structure of your organization. For example, assume that your account ID is <code>123456789012</code> and its parent OU ID is <code>ou-rge0-awsabcde</code>. The organization root ID is <code>r-f6g7h8i9j0example</code> and your organization ID is <code>o-a1b2c3d4e5</code>. Your entity path is <code>o-a1b2c3d4e5/r-f6g7h8i9j0example/ou-rge0-awsabcde/123456789012</code>.",
                    "type": "string",
                    "minLength": 19,
                    "maxLength": 427,
                    "pattern": "^o-[0-9a-z]{10,32}\\/r-[0-9a-z]{4,32}[0-9a-z-\\/]*"
                  },
                  "OrganizationsPolicyId": {
                    "description": "<p>The identifier of the AWS Organizations service control policy (SCP). This parameter is optional.</p> <p>This ID is used to generate information about when an account principal that is limited by the SCP attempted to access an AWS service.</p>",
                    "type": "string",
                    "pattern": "^p-[0-9a-zA-Z_]{8,128}$"
                  }
                },
                "required": ["EntityPath"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GenerateOrganizationsAccessReportResponse" } }
            }
          },
          "480": {
            "description": "ReportGenerationLimitExceededException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ReportGenerationLimitExceededException" } }
            }
          }
        },
        "x-aws-operation-name": "GenerateOrganizationsAccessReport"
      }
    },
    "/#Action=GenerateServiceLastAccessedDetails": {
      "get": {
        "description": "<p>Generates a report that includes details about when an IAM resource (user, group, role, or policy) was last used in an attempt to access AWS services. Recent activity usually appears within four hours. IAM reports activity for the last 365 days, or less if your Region began supporting this feature within the last year. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period\">Regions Where Data Is Tracked</a>.</p> <important> <p>The service last accessed data includes all attempts to access an AWS API, not just the successful ones. This includes all attempts that were made using the AWS Management Console, the AWS API through any of the SDKs, or any of the command line tools. An unexpected entry in the service last accessed data does not mean that your account has been compromised, because the request might have been denied. Refer to your CloudTrail logs as the authoritative source for information about all API calls and whether they were successful or denied access. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\">Logging IAM Events with CloudTrail</a> in the <i>IAM User Guide</i>.</p> </important> <p>The <code>GenerateServiceLastAccessedDetails</code> operation returns a <code>JobId</code>. Use this parameter in the following operations to retrieve the following details from your report: </p> <ul> <li> <p> <a>GetServiceLastAccessedDetails</a> – Use this operation for users, groups, roles, or policies to list every AWS service that the resource could access using permissions policies. For each service, the response includes information about the most recent access attempt. </p> </li> <li> <p> <a>GetServiceLastAccessedDetailsWithEntities</a> – Use this operation for groups and policies to list information about the associated entities (users or roles) that attempted to access a specific AWS service. </p> </li> </ul> <p>To check the status of the <code>GenerateServiceLastAccessedDetails</code> request, use the <code>JobId</code> parameter in the same operations and test the <code>JobStatus</code> response parameter.</p> <p>For additional information about the permissions policies that allow an identity (user, group, or role) to access specific services, use the <a>ListPoliciesGrantingServiceAccess</a> operation.</p> <note> <p>Service last accessed data does not use other policy types when determining whether a resource could access a service. These other policy types include resource-based policies, access control lists, AWS Organizations policies, IAM permissions boundaries, and AWS STS assume role policies. It only applies permissions policy logic. For more about the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\">Evaluating Policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For more information about service last accessed data, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\">Reducing Policy Scope by Viewing User Activity</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET GenerateServiceLastAccessedDetails",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "Arn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GenerateServiceLastAccessedDetails"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GenerateServiceLastAccessedDetailsResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "GenerateServiceLastAccessedDetails"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Generates a report that includes details about when an IAM resource (user, group, role, or policy) was last used in an attempt to access AWS services. Recent activity usually appears within four hours. IAM reports activity for the last 365 days, or less if your Region began supporting this feature within the last year. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period\">Regions Where Data Is Tracked</a>.</p> <important> <p>The service last accessed data includes all attempts to access an AWS API, not just the successful ones. This includes all attempts that were made using the AWS Management Console, the AWS API through any of the SDKs, or any of the command line tools. An unexpected entry in the service last accessed data does not mean that your account has been compromised, because the request might have been denied. Refer to your CloudTrail logs as the authoritative source for information about all API calls and whether they were successful or denied access. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\">Logging IAM Events with CloudTrail</a> in the <i>IAM User Guide</i>.</p> </important> <p>The <code>GenerateServiceLastAccessedDetails</code> operation returns a <code>JobId</code>. Use this parameter in the following operations to retrieve the following details from your report: </p> <ul> <li> <p> <a>GetServiceLastAccessedDetails</a> – Use this operation for users, groups, roles, or policies to list every AWS service that the resource could access using permissions policies. For each service, the response includes information about the most recent access attempt. </p> </li> <li> <p> <a>GetServiceLastAccessedDetailsWithEntities</a> – Use this operation for groups and policies to list information about the associated entities (users or roles) that attempted to access a specific AWS service. </p> </li> </ul> <p>To check the status of the <code>GenerateServiceLastAccessedDetails</code> request, use the <code>JobId</code> parameter in the same operations and test the <code>JobStatus</code> response parameter.</p> <p>For additional information about the permissions policies that allow an identity (user, group, or role) to access specific services, use the <a>ListPoliciesGrantingServiceAccess</a> operation.</p> <note> <p>Service last accessed data does not use other policy types when determining whether a resource could access a service. These other policy types include resource-based policies, access control lists, AWS Organizations policies, IAM permissions boundaries, and AWS STS assume role policies. It only applies permissions policy logic. For more about the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\">Evaluating Policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For more information about service last accessed data, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\">Reducing Policy Scope by Viewing User Activity</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST GenerateServiceLastAccessedDetails",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GenerateServiceLastAccessedDetails"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Arn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  }
                },
                "required": ["Arn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GenerateServiceLastAccessedDetailsResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "GenerateServiceLastAccessedDetails"
      }
    },
    "/#Action=GetAccessKeyLastUsed": {
      "get": {
        "description": "Retrieves information about when the specified access key was last used. The information includes the date and time of last use, along with the AWS service and Region that were specified in the last request made with that key.",
        "operationId": "GET GetAccessKeyLastUsed",
        "parameters": [
          {
            "description": "<p>The identifier of an access key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
            "in": "query",
            "name": "AccessKeyId",
            "required": true,
            "schema": { "type": "string", "minLength": 16, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetAccessKeyLastUsed"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetAccessKeyLastUsedResponse" } } }
          }
        },
        "x-aws-operation-name": "GetAccessKeyLastUsed"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves information about when the specified access key was last used. The information includes the date and time of last use, along with the AWS service and Region that were specified in the last request made with that key.",
        "operationId": "POST GetAccessKeyLastUsed",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetAccessKeyLastUsed"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccessKeyId": {
                    "description": "<p>The identifier of an access key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
                    "type": "string",
                    "minLength": 16,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  }
                },
                "required": ["AccessKeyId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetAccessKeyLastUsedResponse" } } }
          }
        },
        "x-aws-operation-name": "GetAccessKeyLastUsed"
      }
    },
    "/#Action=GetAccountAuthorizationDetails": {
      "get": {
        "description": "<p>Retrieves information about all IAM users, groups, roles, and policies in your AWS account, including their relationships to one another. Use this API to obtain a snapshot of the configuration of IAM permissions (users, groups, roles, and policies) in your account.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>You can optionally filter the results using the <code>Filter</code> parameter. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET GetAccountAuthorizationDetails",
        "parameters": [
          {
            "description": "<p>A list of entity types used to filter the results. Only the entities that match the types you specify are included in the output. Use the value <code>LocalManagedPolicy</code> to include customer managed policies.</p> <p>The format for this parameter is a comma-separated (if more than one) list of strings. Each string value in the list must be one of the valid values listed below.</p>",
            "in": "query",
            "name": "Filter",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetAccountAuthorizationDetails"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GetAccountAuthorizationDetailsResponse" } }
            }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetAccountAuthorizationDetails"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves information about all IAM users, groups, roles, and policies in your AWS account, including their relationships to one another. Use this API to obtain a snapshot of the configuration of IAM permissions (users, groups, roles, and policies) in your account.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>You can optionally filter the results using the <code>Filter</code> parameter. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST GetAccountAuthorizationDetails",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetAccountAuthorizationDetails"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Filter": {
                    "description": "<p>A list of entity types used to filter the results. Only the entities that match the types you specify are included in the output. Use the value <code>LocalManagedPolicy</code> to include customer managed policies.</p> <p>The format for this parameter is a comma-separated (if more than one) list of strings. Each string value in the list must be one of the valid values listed below.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GetAccountAuthorizationDetailsResponse" } }
            }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetAccountAuthorizationDetails"
      }
    },
    "/#Action=GetAccountPasswordPolicy": {
      "get": {
        "description": "Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an IAM Password Policy</a>.",
        "operationId": "GET GetAccountPasswordPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetAccountPasswordPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetAccountPasswordPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetAccountPasswordPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an IAM Password Policy</a>.",
        "operationId": "POST GetAccountPasswordPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetAccountPasswordPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetAccountPasswordPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetAccountPasswordPolicy"
      }
    },
    "/#Action=GetAccountSummary": {
      "get": {
        "description": "<p>Retrieves information about IAM entity usage and IAM quotas in the AWS account.</p> <p> For information about limitations on IAM entities, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET GetAccountSummary",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetAccountSummary"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetAccountSummaryResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetAccountSummary"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves information about IAM entity usage and IAM quotas in the AWS account.</p> <p> For information about limitations on IAM entities, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST GetAccountSummary",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetAccountSummary"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetAccountSummaryResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetAccountSummary"
      }
    },
    "/#Action=GetContextKeysForCustomPolicy": {
      "get": {
        "description": "<p>Gets a list of all of the context keys referenced in the input policies. The policies are supplied as a list of one or more strings. To get the context keys from policies associated with an IAM user, group, or role, use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a value specified in an IAM policy. Use <code>GetContextKeysForCustomPolicy</code> to understand what key names and values you must supply when you call <a>SimulateCustomPolicy</a>. Note that all parameters are shown in unencoded form here for clarity but must be URL encoded to be included as a part of a real HTML request.</p>",
        "operationId": "GET GetContextKeysForCustomPolicy",
        "parameters": [
          {
            "description": "<p>A list of policies for which you want the list of context keys referenced in those policies. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PolicyInputList",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetContextKeysForCustomPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetContextKeysForPolicyResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "GetContextKeysForCustomPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Gets a list of all of the context keys referenced in the input policies. The policies are supplied as a list of one or more strings. To get the context keys from policies associated with an IAM user, group, or role, use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a value specified in an IAM policy. Use <code>GetContextKeysForCustomPolicy</code> to understand what key names and values you must supply when you call <a>SimulateCustomPolicy</a>. Note that all parameters are shown in unencoded form here for clarity but must be URL encoded to be included as a part of a real HTML request.</p>",
        "operationId": "POST GetContextKeysForCustomPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetContextKeysForCustomPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicyInputList": {
                    "description": "<p>A list of policies for which you want the list of context keys referenced in those policies. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["PolicyInputList"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetContextKeysForPolicyResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "GetContextKeysForCustomPolicy"
      }
    },
    "/#Action=GetContextKeysForPrincipalPolicy": {
      "get": {
        "description": "<p>Gets a list of all of the context keys referenced in all the IAM policies that are attached to the specified IAM entity. The entity can be an IAM user, group, or role. If you specify a user, then the request also includes all of the policies attached to groups that the user is a member of.</p> <p>You can optionally include a list of one or more additional policies, specified as strings. If you want to include <i>only</i> a list of policies by string, use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p> <b>Note:</b> This API discloses information about the permissions granted to other users. If you do not want users to see other user's permissions, then consider allowing them to use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a value in an IAM policy. Use <a>GetContextKeysForPrincipalPolicy</a> to understand what key names and values you must supply when you call <a>SimulatePrincipalPolicy</a>.</p>",
        "operationId": "GET GetContextKeysForPrincipalPolicy",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicySourceArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "<p>An optional list of additional policies for which you want the list of context keys that are referenced.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PolicyInputList",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetContextKeysForPrincipalPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetContextKeysForPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "GetContextKeysForPrincipalPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Gets a list of all of the context keys referenced in all the IAM policies that are attached to the specified IAM entity. The entity can be an IAM user, group, or role. If you specify a user, then the request also includes all of the policies attached to groups that the user is a member of.</p> <p>You can optionally include a list of one or more additional policies, specified as strings. If you want to include <i>only</i> a list of policies by string, use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p> <b>Note:</b> This API discloses information about the permissions granted to other users. If you do not want users to see other user's permissions, then consider allowing them to use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a value in an IAM policy. Use <a>GetContextKeysForPrincipalPolicy</a> to understand what key names and values you must supply when you call <a>SimulatePrincipalPolicy</a>.</p>",
        "operationId": "POST GetContextKeysForPrincipalPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetContextKeysForPrincipalPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicySourceArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "PolicyInputList": {
                    "description": "<p>An optional list of additional policies for which you want the list of context keys that are referenced.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["PolicySourceArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetContextKeysForPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "GetContextKeysForPrincipalPolicy"
      }
    },
    "/#Action=GetCredentialReport": {
      "get": {
        "description": " Retrieves a credential report for the AWS account. For more information about the credential report, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Getting Credential Reports</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET GetCredentialReport",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetCredentialReport"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetCredentialReportResponse" } } }
          },
          "480": {
            "description": "CredentialReportNotPresentException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CredentialReportNotPresentException" } }
            }
          },
          "481": {
            "description": "CredentialReportExpiredException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CredentialReportExpiredException" } } }
          },
          "482": {
            "description": "CredentialReportNotReadyException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CredentialReportNotReadyException" } }
            }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetCredentialReport"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": " Retrieves a credential report for the AWS account. For more information about the credential report, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Getting Credential Reports</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST GetCredentialReport",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetCredentialReport"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetCredentialReportResponse" } } }
          },
          "480": {
            "description": "CredentialReportNotPresentException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CredentialReportNotPresentException" } }
            }
          },
          "481": {
            "description": "CredentialReportExpiredException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/CredentialReportExpiredException" } } }
          },
          "482": {
            "description": "CredentialReportNotReadyException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/CredentialReportNotReadyException" } }
            }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetCredentialReport"
      }
    },
    "/#Action=GetGroup": {
      "get": {
        "description": " Returns a list of IAM users that are in the specified IAM group. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.",
        "operationId": "GET GetGroup",
        "parameters": [
          {
            "description": "<p>The name of the group.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["GetGroup"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetGroupResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetGroup"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": " Returns a list of IAM users that are in the specified IAM group. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.",
        "operationId": "POST GetGroup",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["GetGroup"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name of the group.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["GroupName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetGroupResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetGroup"
      }
    },
    "/#Action=GetGroupPolicy": {
      "get": {
        "description": "<p>Retrieves the specified inline policy document that is embedded in the specified IAM group.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>An IAM group can also have managed policies attached to it. To retrieve a managed policy document that is attached to a group, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET GetGroupPolicy",
        "parameters": [
          {
            "description": "<p>The name of the group the policy is associated with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetGroupPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetGroupPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetGroupPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves the specified inline policy document that is embedded in the specified IAM group.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>An IAM group can also have managed policies attached to it. To retrieve a managed policy document that is attached to a group, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST GetGroupPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetGroupPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name of the group the policy is associated with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyName": {
                    "description": "<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["GroupName", "PolicyName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetGroupPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetGroupPolicy"
      }
    },
    "/#Action=GetInstanceProfile": {
      "get": {
        "description": " Retrieves information about the specified instance profile, including the instance profile's path, GUID, ARN, and role. For more information about instance profiles, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET GetInstanceProfile",
        "parameters": [
          {
            "description": "<p>The name of the instance profile to get information about.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "InstanceProfileName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetInstanceProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetInstanceProfileResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetInstanceProfile"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": " Retrieves information about the specified instance profile, including the instance profile's path, GUID, ARN, and role. For more information about instance profiles, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST GetInstanceProfile",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetInstanceProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "InstanceProfileName": {
                    "description": "<p>The name of the instance profile to get information about.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["InstanceProfileName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetInstanceProfileResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetInstanceProfile"
      }
    },
    "/#Action=GetLoginProfile": {
      "get": {
        "description": "Retrieves the user name and password-creation date for the specified IAM user. If the user has not been assigned a password, the operation returns a 404 (<code>NoSuchEntity</code>) error.",
        "operationId": "GET GetLoginProfile",
        "parameters": [
          {
            "description": "<p>The name of the user whose login profile you want to retrieve.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetLoginProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetLoginProfileResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetLoginProfile"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the user name and password-creation date for the specified IAM user. If the user has not been assigned a password, the operation returns a 404 (<code>NoSuchEntity</code>) error.",
        "operationId": "POST GetLoginProfile",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetLoginProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user whose login profile you want to retrieve.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetLoginProfileResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetLoginProfile"
      }
    },
    "/#Action=GetOpenIDConnectProvider": {
      "get": {
        "description": "Returns information about the specified OpenID Connect (OIDC) provider resource object in IAM.",
        "operationId": "GET GetOpenIDConnectProvider",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "OpenIDConnectProviderArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetOpenIDConnectProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetOpenIDConnectProviderResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetOpenIDConnectProvider"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about the specified OpenID Connect (OIDC) provider resource object in IAM.",
        "operationId": "POST GetOpenIDConnectProvider",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetOpenIDConnectProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeleteOpenIDConnectProvider" },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetOpenIDConnectProviderResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetOpenIDConnectProvider"
      }
    },
    "/#Action=GetOrganizationsAccessReport": {
      "get": {
        "description": "<p>Retrieves the service last accessed data report for AWS Organizations that was previously generated using the <code> <a>GenerateOrganizationsAccessReport</a> </code> operation. This operation retrieves the status of your report job and the report contents.</p> <p>Depending on the parameters that you passed when you generated the report, the data returned could include different information. For details, see <a>GenerateOrganizationsAccessReport</a>.</p> <p>To call this operation, you must be signed in to the master account in your organization. SCPs must be enabled for your organization root. You must have permissions to perform this operation. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\">Refining Permissions Using Service Last Accessed Data</a> in the <i>IAM User Guide</i>.</p> <p>For each service that principals in an account (root users, IAM users, or IAM roles) could access using SCPs, the operation returns details about the most recent access attempt. If there was no attempt, the service is listed without details about the most recent attempt to access the service. If the operation fails, it returns the reason that it failed.</p> <p>By default, the list is sorted by service namespace.</p>",
        "operationId": "GET GetOrganizationsAccessReport",
        "parameters": [
          {
            "description": "The identifier of the request generated by the <a>GenerateOrganizationsAccessReport</a> operation.",
            "in": "query",
            "name": "JobId",
            "required": true,
            "schema": { "type": "string", "minLength": 36, "maxLength": 36 }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "The key that is used to sort the results. If you choose the namespace key, the results are returned in alphabetical order. If you choose the time key, the results are sorted numerically by the date and time.",
            "in": "query",
            "name": "SortKey",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SERVICE_NAMESPACE_ASCENDING",
                "SERVICE_NAMESPACE_DESCENDING",
                "LAST_AUTHENTICATED_TIME_ASCENDING",
                "LAST_AUTHENTICATED_TIME_DESCENDING"
              ]
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetOrganizationsAccessReport"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GetOrganizationsAccessReportResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "GetOrganizationsAccessReport"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves the service last accessed data report for AWS Organizations that was previously generated using the <code> <a>GenerateOrganizationsAccessReport</a> </code> operation. This operation retrieves the status of your report job and the report contents.</p> <p>Depending on the parameters that you passed when you generated the report, the data returned could include different information. For details, see <a>GenerateOrganizationsAccessReport</a>.</p> <p>To call this operation, you must be signed in to the master account in your organization. SCPs must be enabled for your organization root. You must have permissions to perform this operation. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\">Refining Permissions Using Service Last Accessed Data</a> in the <i>IAM User Guide</i>.</p> <p>For each service that principals in an account (root users, IAM users, or IAM roles) could access using SCPs, the operation returns details about the most recent access attempt. If there was no attempt, the service is listed without details about the most recent attempt to access the service. If the operation fails, it returns the reason that it failed.</p> <p>By default, the list is sorted by service namespace.</p>",
        "operationId": "POST GetOrganizationsAccessReport",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetOrganizationsAccessReport"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "JobId": {
                    "description": "The identifier of the request generated by the <a>GenerateOrganizationsAccessReport</a> operation.",
                    "type": "string",
                    "minLength": 36,
                    "maxLength": 36
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "SortKey": {
                    "description": "The key that is used to sort the results. If you choose the namespace key, the results are returned in alphabetical order. If you choose the time key, the results are sorted numerically by the date and time.",
                    "type": "string",
                    "enum": [
                      "SERVICE_NAMESPACE_ASCENDING",
                      "SERVICE_NAMESPACE_DESCENDING",
                      "LAST_AUTHENTICATED_TIME_ASCENDING",
                      "LAST_AUTHENTICATED_TIME_DESCENDING"
                    ]
                  }
                },
                "required": ["JobId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GetOrganizationsAccessReportResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "GetOrganizationsAccessReport"
      }
    },
    "/#Action=GetPolicy": {
      "get": {
        "description": "<p>Retrieves information about the specified managed policy, including the policy's default version and the total number of IAM users, groups, and roles to which the policy is attached. To retrieve the list of the specific users, groups, and roles that the policy is attached to, use the <a>ListEntitiesForPolicy</a> API. This API returns metadata about the policy. To retrieve the actual policy document for a specific version of the policy, use <a>GetPolicyVersion</a>.</p> <p>This API retrieves information about managed policies. To retrieve information about an inline policy that is embedded with an IAM user, group, or role, use the <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a> API.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET GetPolicy",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["GetPolicy"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves information about the specified managed policy, including the policy's default version and the total number of IAM users, groups, and roles to which the policy is attached. To retrieve the list of the specific users, groups, and roles that the policy is attached to, use the <a>ListEntitiesForPolicy</a> API. This API returns metadata about the policy. To retrieve the actual policy document for a specific version of the policy, use <a>GetPolicyVersion</a>.</p> <p>This API retrieves information about managed policies. To retrieve information about an inline policy that is embedded with an IAM user, group, or role, use the <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a> API.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST GetPolicy",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["GetPolicy"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeletePolicy" },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetPolicy"
      }
    },
    "/#Action=GetPolicyVersion": {
      "get": {
        "description": "<p>Retrieves information about the specified version of the specified managed policy, including the policy document.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>To list the available versions for a policy, use <a>ListPolicyVersions</a>.</p> <p>This API retrieves information about managed policies. To retrieve information about an inline policy that is embedded in a user, group, or role, use the <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a> API.</p> <p>For more information about the types of policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about managed policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET GetPolicyVersion",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "<p>Identifies the policy version to retrieve.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p>",
            "in": "query",
            "name": "VersionId",
            "required": true,
            "schema": { "type": "string", "pattern": "v[1-9][0-9]*(\\.[A-Za-z0-9-]*)?" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetPolicyVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetPolicyVersionResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetPolicyVersion"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves information about the specified version of the specified managed policy, including the policy document.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>To list the available versions for a policy, use <a>ListPolicyVersions</a>.</p> <p>This API retrieves information about managed policies. To retrieve information about an inline policy that is embedded in a user, group, or role, use the <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a> API.</p> <p>For more information about the types of policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about managed policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST GetPolicyVersion",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetPolicyVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "VersionId": {
                    "description": "<p>Identifies the policy version to retrieve.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p>",
                    "type": "string",
                    "pattern": "v[1-9][0-9]*(\\.[A-Za-z0-9-]*)?"
                  }
                },
                "required": ["PolicyArn", "VersionId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetPolicyVersionResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetPolicyVersion"
      }
    },
    "/#Action=GetRole": {
      "get": {
        "description": "<p>Retrieves information about the specified role, including the role's path, GUID, ARN, and the role's trust policy that grants permission to assume the role. For more information about roles, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note>",
        "operationId": "GET GetRole",
        "parameters": [
          {
            "description": "<p>The name of the IAM role to get information about.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["GetRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetRoleResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetRole"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves information about the specified role, including the role's path, GUID, ARN, and the role's trust policy that grants permission to assume the role. For more information about roles, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note>",
        "operationId": "POST GetRole",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["GetRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name of the IAM role to get information about.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetRoleResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetRole"
      }
    },
    "/#Action=GetRolePolicy": {
      "get": {
        "description": "<p>Retrieves the specified inline policy document that is embedded with the specified IAM role.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>An IAM role can also have managed policies attached to it. To retrieve a managed policy document that is attached to a role, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about roles, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html\">Using Roles to Delegate Permissions and Federate Identities</a>.</p>",
        "operationId": "GET GetRolePolicy",
        "parameters": [
          {
            "description": "<p>The name of the role associated with the policy.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetRolePolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetRolePolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves the specified inline policy document that is embedded with the specified IAM role.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>An IAM role can also have managed policies attached to it. To retrieve a managed policy document that is attached to a role, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about roles, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html\">Using Roles to Delegate Permissions and Federate Identities</a>.</p>",
        "operationId": "POST GetRolePolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name of the role associated with the policy.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyName": {
                    "description": "<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["RoleName", "PolicyName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetRolePolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetRolePolicy"
      }
    },
    "/#Action=GetSAMLProvider": {
      "get": {
        "description": "<p>Returns the SAML provider metadocument that was uploaded when the IAM SAML provider resource object was created or updated.</p> <note> <p>This operation requires <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> </note>",
        "operationId": "GET GetSAMLProvider",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "SAMLProviderArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetSAMLProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetSAMLProviderResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetSAMLProvider"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns the SAML provider metadocument that was uploaded when the IAM SAML provider resource object was created or updated.</p> <note> <p>This operation requires <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> </note>",
        "operationId": "POST GetSAMLProvider",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetSAMLProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": { "$ref": "#/components/requestBodies/POST_DeleteSAMLProvider" },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetSAMLProviderResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetSAMLProvider"
      }
    },
    "/#Action=GetSSHPublicKey": {
      "get": {
        "description": "<p>Retrieves the specified SSH public key, including metadata about the key.</p> <p>The SSH public key retrieved by this operation is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
        "operationId": "GET GetSSHPublicKey",
        "parameters": [
          {
            "description": "<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
            "in": "query",
            "name": "SSHPublicKeyId",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "description": "Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use <code>SSH</code>. To retrieve the public key in PEM format, use <code>PEM</code>.",
            "in": "query",
            "name": "Encoding",
            "required": true,
            "schema": { "type": "string", "enum": ["SSH", "PEM"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetSSHPublicKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetSSHPublicKeyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "UnrecognizedPublicKeyEncodingException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/UnrecognizedPublicKeyEncodingException" } }
            }
          }
        },
        "x-aws-operation-name": "GetSSHPublicKey"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves the specified SSH public key, including metadata about the key.</p> <p>The SSH public key retrieved by this operation is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
        "operationId": "POST GetSSHPublicKey",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetSSHPublicKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "SSHPublicKeyId": {
                    "description": "<p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  },
                  "Encoding": {
                    "description": "Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use <code>SSH</code>. To retrieve the public key in PEM format, use <code>PEM</code>.",
                    "type": "string",
                    "enum": ["SSH", "PEM"]
                  }
                },
                "required": ["UserName", "SSHPublicKeyId", "Encoding"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetSSHPublicKeyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "UnrecognizedPublicKeyEncodingException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/UnrecognizedPublicKeyEncodingException" } }
            }
          }
        },
        "x-aws-operation-name": "GetSSHPublicKey"
      }
    },
    "/#Action=GetServerCertificate": {
      "get": {
        "description": "<p>Retrieves information about the specified server certificate stored in IAM.</p> <p>For more information about working with server certificates, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html\">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic includes a list of AWS services that can use the server certificates that you manage with IAM.</p>",
        "operationId": "GET GetServerCertificate",
        "parameters": [
          {
            "description": "<p>The name of the server certificate you want to retrieve information about.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "ServerCertificateName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetServerCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetServerCertificateResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetServerCertificate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves information about the specified server certificate stored in IAM.</p> <p>For more information about working with server certificates, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html\">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic includes a list of AWS services that can use the server certificates that you manage with IAM.</p>",
        "operationId": "POST GetServerCertificate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetServerCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ServerCertificateName": {
                    "description": "<p>The name of the server certificate you want to retrieve information about.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["ServerCertificateName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetServerCertificateResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetServerCertificate"
      }
    },
    "/#Action=GetServiceLastAccessedDetails": {
      "get": {
        "description": "<p>Retrieves a service last accessed report that was created using the <code>GenerateServiceLastAccessedDetails</code> operation. You can use the <code>JobId</code> parameter in <code>GetServiceLastAccessedDetails</code> to retrieve the status of your report job. When the report is complete, you can retrieve the generated report. The report includes a list of AWS services that the resource (user, group, role, or managed policy) can access.</p> <note> <p>Service last accessed data does not use other policy types when determining whether a resource could access a service. These other policy types include resource-based policies, access control lists, AWS Organizations policies, IAM permissions boundaries, and AWS STS assume role policies. It only applies permissions policy logic. For more about the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\">Evaluating Policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For each service that the resource could access using permissions policies, the operation returns details about the most recent access attempt. If there was no attempt, the service is listed without details about the most recent attempt to access the service. If the operation fails, the <code>GetServiceLastAccessedDetails</code> operation returns the reason that it failed.</p> <p>The <code>GetServiceLastAccessedDetails</code> operation returns a list of services. This list includes the number of entities that have attempted to access the service and the date and time of the last attempt. It also returns the ARN of the following entity, depending on the resource ARN that you used to generate the report:</p> <ul> <li> <p> <b>User</b> – Returns the user ARN that you used to generate the report</p> </li> <li> <p> <b>Group</b> – Returns the ARN of the group member (user) that last attempted to access the service</p> </li> <li> <p> <b>Role</b> – Returns the role ARN that you used to generate the report</p> </li> <li> <p> <b>Policy</b> – Returns the ARN of the user or role that last used the policy to attempt to access the service</p> </li> </ul> <p>By default, the list is sorted by service namespace.</p>",
        "operationId": "GET GetServiceLastAccessedDetails",
        "parameters": [
          {
            "description": "The ID of the request generated by the <a>GenerateServiceLastAccessedDetails</a> operation.",
            "in": "query",
            "name": "JobId",
            "required": true,
            "schema": { "type": "string", "minLength": 36, "maxLength": 36 }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetServiceLastAccessedDetails"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GetServiceLastAccessedDetailsResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "GetServiceLastAccessedDetails"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves a service last accessed report that was created using the <code>GenerateServiceLastAccessedDetails</code> operation. You can use the <code>JobId</code> parameter in <code>GetServiceLastAccessedDetails</code> to retrieve the status of your report job. When the report is complete, you can retrieve the generated report. The report includes a list of AWS services that the resource (user, group, role, or managed policy) can access.</p> <note> <p>Service last accessed data does not use other policy types when determining whether a resource could access a service. These other policy types include resource-based policies, access control lists, AWS Organizations policies, IAM permissions boundaries, and AWS STS assume role policies. It only applies permissions policy logic. For more about the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\">Evaluating Policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For each service that the resource could access using permissions policies, the operation returns details about the most recent access attempt. If there was no attempt, the service is listed without details about the most recent attempt to access the service. If the operation fails, the <code>GetServiceLastAccessedDetails</code> operation returns the reason that it failed.</p> <p>The <code>GetServiceLastAccessedDetails</code> operation returns a list of services. This list includes the number of entities that have attempted to access the service and the date and time of the last attempt. It also returns the ARN of the following entity, depending on the resource ARN that you used to generate the report:</p> <ul> <li> <p> <b>User</b> – Returns the user ARN that you used to generate the report</p> </li> <li> <p> <b>Group</b> – Returns the ARN of the group member (user) that last attempted to access the service</p> </li> <li> <p> <b>Role</b> – Returns the role ARN that you used to generate the report</p> </li> <li> <p> <b>Policy</b> – Returns the ARN of the user or role that last used the policy to attempt to access the service</p> </li> </ul> <p>By default, the list is sorted by service namespace.</p>",
        "operationId": "POST GetServiceLastAccessedDetails",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetServiceLastAccessedDetails"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "JobId": {
                    "description": "The ID of the request generated by the <a>GenerateServiceLastAccessedDetails</a> operation.",
                    "type": "string",
                    "minLength": 36,
                    "maxLength": 36
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  }
                },
                "required": ["JobId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GetServiceLastAccessedDetailsResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "GetServiceLastAccessedDetails"
      }
    },
    "/#Action=GetServiceLastAccessedDetailsWithEntities": {
      "get": {
        "description": "<p>After you generate a group or policy report using the <code>GenerateServiceLastAccessedDetails</code> operation, you can use the <code>JobId</code> parameter in <code>GetServiceLastAccessedDetailsWithEntities</code>. This operation retrieves the status of your report job and a list of entities that could have used group or policy permissions to access the specified service.</p> <ul> <li> <p> <b>Group</b> – For a group report, this operation returns a list of users in the group that could have used the group’s policies in an attempt to access the service.</p> </li> <li> <p> <b>Policy</b> – For a policy report, this operation returns a list of entities (users or roles) that could have used the policy in an attempt to access the service.</p> </li> </ul> <p>You can also use this operation for user or role reports to retrieve details about those entities.</p> <p>If the operation fails, the <code>GetServiceLastAccessedDetailsWithEntities</code> operation returns the reason that it failed.</p> <p>By default, the list of associated entities is sorted by date, with the most recent access listed first.</p>",
        "operationId": "GET GetServiceLastAccessedDetailsWithEntities",
        "parameters": [
          {
            "description": "The ID of the request generated by the <code>GenerateServiceLastAccessedDetails</code> operation.",
            "in": "query",
            "name": "JobId",
            "required": true,
            "schema": { "type": "string", "minLength": 36, "maxLength": 36 }
          },
          {
            "description": "<p>The service namespace for an AWS service. Provide the service namespace to learn when the IAM entity last attempted to access the specified service.</p> <p>To learn the service namespace for a service, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_actions-resources-contextkeys.html\">Actions, Resources, and Condition Keys for AWS Services</a> in the <i>IAM User Guide</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\">AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>",
            "in": "query",
            "name": "ServiceNamespace",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w-]*" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetServiceLastAccessedDetailsWithEntities"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": { "$ref": "#/components/schemas/GetServiceLastAccessedDetailsWithEntitiesResponse" }
              }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "GetServiceLastAccessedDetailsWithEntities"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>After you generate a group or policy report using the <code>GenerateServiceLastAccessedDetails</code> operation, you can use the <code>JobId</code> parameter in <code>GetServiceLastAccessedDetailsWithEntities</code>. This operation retrieves the status of your report job and a list of entities that could have used group or policy permissions to access the specified service.</p> <ul> <li> <p> <b>Group</b> – For a group report, this operation returns a list of users in the group that could have used the group’s policies in an attempt to access the service.</p> </li> <li> <p> <b>Policy</b> – For a policy report, this operation returns a list of entities (users or roles) that could have used the policy in an attempt to access the service.</p> </li> </ul> <p>You can also use this operation for user or role reports to retrieve details about those entities.</p> <p>If the operation fails, the <code>GetServiceLastAccessedDetailsWithEntities</code> operation returns the reason that it failed.</p> <p>By default, the list of associated entities is sorted by date, with the most recent access listed first.</p>",
        "operationId": "POST GetServiceLastAccessedDetailsWithEntities",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetServiceLastAccessedDetailsWithEntities"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "JobId": {
                    "description": "The ID of the request generated by the <code>GenerateServiceLastAccessedDetails</code> operation.",
                    "type": "string",
                    "minLength": 36,
                    "maxLength": 36
                  },
                  "ServiceNamespace": {
                    "description": "<p>The service namespace for an AWS service. Provide the service namespace to learn when the IAM entity last attempted to access the specified service.</p> <p>To learn the service namespace for a service, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_actions-resources-contextkeys.html\">Actions, Resources, and Condition Keys for AWS Services</a> in the <i>IAM User Guide</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\">AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w-]*"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  }
                },
                "required": ["JobId", "ServiceNamespace"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": { "$ref": "#/components/schemas/GetServiceLastAccessedDetailsWithEntitiesResponse" }
              }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "GetServiceLastAccessedDetailsWithEntities"
      }
    },
    "/#Action=GetServiceLinkedRoleDeletionStatus": {
      "get": {
        "description": "Retrieves the status of your service-linked role deletion. After you use the <a>DeleteServiceLinkedRole</a> API operation to submit a service-linked role for deletion, you can use the <code>DeletionTaskId</code> parameter in <code>GetServiceLinkedRoleDeletionStatus</code> to check the status of the deletion. If the deletion fails, this operation returns the reason that it failed, if that information is returned by the service.",
        "operationId": "GET GetServiceLinkedRoleDeletionStatus",
        "parameters": [
          {
            "description": "The deletion task identifier. This identifier is returned by the <a>DeleteServiceLinkedRole</a> operation in the format <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.",
            "in": "query",
            "name": "DeletionTaskId",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetServiceLinkedRoleDeletionStatus"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GetServiceLinkedRoleDeletionStatusResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetServiceLinkedRoleDeletionStatus"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Retrieves the status of your service-linked role deletion. After you use the <a>DeleteServiceLinkedRole</a> API operation to submit a service-linked role for deletion, you can use the <code>DeletionTaskId</code> parameter in <code>GetServiceLinkedRoleDeletionStatus</code> to check the status of the deletion. If the deletion fails, this operation returns the reason that it failed, if that information is returned by the service.",
        "operationId": "POST GetServiceLinkedRoleDeletionStatus",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetServiceLinkedRoleDeletionStatus"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "DeletionTaskId": {
                    "description": "The deletion task identifier. This identifier is returned by the <a>DeleteServiceLinkedRole</a> operation in the format <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1000
                  }
                },
                "required": ["DeletionTaskId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/GetServiceLinkedRoleDeletionStatusResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetServiceLinkedRoleDeletionStatus"
      }
    },
    "/#Action=GetUser": {
      "get": {
        "description": "<p>Retrieves information about the specified IAM user, including the user's creation date, path, unique ID, and ARN.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID used to sign the request to this API.</p>",
        "operationId": "GET GetUser",
        "parameters": [
          {
            "description": "<p>The name of the user to get information about.</p> <p>This parameter is optional. If it is not included, it defaults to the user making the request. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["GetUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetUserResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetUser"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves information about the specified IAM user, including the user's creation date, path, unique ID, and ARN.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID used to sign the request to this API.</p>",
        "operationId": "POST GetUser",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["GetUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user to get information about.</p> <p>This parameter is optional. If it is not included, it defaults to the user making the request. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetUserResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetUser"
      }
    },
    "/#Action=GetUserPolicy": {
      "get": {
        "description": "<p>Retrieves the specified inline policy document that is embedded in the specified IAM user.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>An IAM user can also have managed policies attached to it. To retrieve a managed policy document that is attached to a user, use <a>GetPolicy</a> to determine the policy's default version. Then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET GetUserPolicy",
        "parameters": [
          {
            "description": "<p>The name of the user who the policy is associated with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetUserPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetUserPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetUserPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves the specified inline policy document that is embedded in the specified IAM user.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>An IAM user can also have managed policies attached to it. To retrieve a managed policy document that is attached to a user, use <a>GetPolicy</a> to determine the policy's default version. Then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST GetUserPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["GetUserPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user who the policy is associated with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyName": {
                    "description": "<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["UserName", "PolicyName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/GetUserPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "GetUserPolicy"
      }
    },
    "/#Action=ListAccessKeys": {
      "get": {
        "description": "<p>Returns information about the access key IDs associated with the specified IAM user. If there is none, the operation returns an empty list.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p> <note> <p>To ensure the security of your AWS account, the secret access key is accessible only during key and user creation.</p> </note>",
        "operationId": "GET ListAccessKeys",
        "parameters": [
          {
            "description": "<p>The name of the user.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAccessKeys"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListAccessKeysResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListAccessKeys"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns information about the access key IDs associated with the specified IAM user. If there is none, the operation returns an empty list.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p> <note> <p>To ensure the security of your AWS account, the secret access key is accessible only during key and user creation.</p> </note>",
        "operationId": "POST ListAccessKeys",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAccessKeys"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListAccessKeysResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListAccessKeys"
      }
    },
    "/#Action=ListAccountAliases": {
      "get": {
        "description": "Lists the account alias associated with the AWS account (Note: you can have only one). For information about using an AWS account alias, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET ListAccountAliases",
        "parameters": [
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAccountAliases"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListAccountAliasesResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListAccountAliases"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the account alias associated with the AWS account (Note: you can have only one). For information about using an AWS account alias, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST ListAccountAliases",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAccountAliases"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListAccountAliasesResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListAccountAliases"
      }
    },
    "/#Action=ListAttachedGroupPolicies": {
      "get": {
        "description": "<p>Lists all managed policies that are attached to the specified IAM group.</p> <p>An IAM group can also have inline policies embedded with it. To list the inline policies for a group, use the <a>ListGroupPolicies</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.</p>",
        "operationId": "GET ListAttachedGroupPolicies",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) of the group to list attached policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "PathPrefix",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
            }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAttachedGroupPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListAttachedGroupPoliciesResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListAttachedGroupPolicies"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists all managed policies that are attached to the specified IAM group.</p> <p>An IAM group can also have inline policies embedded with it. To list the inline policies for a group, use the <a>ListGroupPolicies</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.</p>",
        "operationId": "POST ListAttachedGroupPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAttachedGroupPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name (friendly name, not ARN) of the group to list attached policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PathPrefix": {
                    "description": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["GroupName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListAttachedGroupPoliciesResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListAttachedGroupPolicies"
      }
    },
    "/#Action=ListAttachedRolePolicies": {
      "get": {
        "description": "<p>Lists all managed policies that are attached to the specified IAM role.</p> <p>An IAM role can also have inline policies embedded with it. To list the inline policies for a role, use the <a>ListRolePolicies</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified role (or none that match the specified path prefix), the operation returns an empty list.</p>",
        "operationId": "GET ListAttachedRolePolicies",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) of the role to list attached policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "PathPrefix",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
            }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAttachedRolePolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListAttachedRolePoliciesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListAttachedRolePolicies"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists all managed policies that are attached to the specified IAM role.</p> <p>An IAM role can also have inline policies embedded with it. To list the inline policies for a role, use the <a>ListRolePolicies</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified role (or none that match the specified path prefix), the operation returns an empty list.</p>",
        "operationId": "POST ListAttachedRolePolicies",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAttachedRolePolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name (friendly name, not ARN) of the role to list attached policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PathPrefix": {
                    "description": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListAttachedRolePoliciesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListAttachedRolePolicies"
      }
    },
    "/#Action=ListAttachedUserPolicies": {
      "get": {
        "description": "<p>Lists all managed policies that are attached to the specified IAM user.</p> <p>An IAM user can also have inline policies embedded with it. To list the inline policies for a user, use the <a>ListUserPolicies</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.</p>",
        "operationId": "GET ListAttachedUserPolicies",
        "parameters": [
          {
            "description": "<p>The name (friendly name, not ARN) of the user to list attached policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "PathPrefix",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
            }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAttachedUserPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListAttachedUserPoliciesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListAttachedUserPolicies"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists all managed policies that are attached to the specified IAM user.</p> <p>An IAM user can also have inline policies embedded with it. To list the inline policies for a user, use the <a>ListUserPolicies</a> API. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.</p>",
        "operationId": "POST ListAttachedUserPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListAttachedUserPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name (friendly name, not ARN) of the user to list attached policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PathPrefix": {
                    "description": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListAttachedUserPoliciesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListAttachedUserPolicies"
      }
    },
    "/#Action=ListEntitiesForPolicy": {
      "get": {
        "description": "<p>Lists all IAM users, groups, and roles that the specified managed policy is attached to.</p> <p>You can use the optional <code>EntityFilter</code> parameter to limit the results to a particular type of entity (users, groups, or roles). For example, to list only the roles that are attached to the specified policy, set <code>EntityFilter</code> to <code>Role</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET ListEntitiesForPolicy",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "<p>The entity type to use for filtering the results.</p> <p>For example, when <code>EntityFilter</code> is <code>Role</code>, only the roles that are attached to the specified policy are returned. This parameter is optional. If it is not included, all attached entities (users, groups, and roles) are returned. The argument for this parameter must be one of the valid values listed below.</p>",
            "in": "query",
            "name": "EntityFilter",
            "required": false,
            "schema": { "type": "string", "enum": ["User", "Role", "Group", "LocalManagedPolicy", "AWSManagedPolicy"] }
          },
          {
            "description": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all entities.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "PathPrefix",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
            }
          },
          {
            "description": "<p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html\">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>",
            "in": "query",
            "name": "PolicyUsageFilter",
            "required": false,
            "schema": { "type": "string", "enum": ["PermissionsPolicy", "PermissionsBoundary"] }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListEntitiesForPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListEntitiesForPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListEntitiesForPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists all IAM users, groups, and roles that the specified managed policy is attached to.</p> <p>You can use the optional <code>EntityFilter</code> parameter to limit the results to a particular type of entity (users, groups, or roles). For example, to list only the roles that are attached to the specified policy, set <code>EntityFilter</code> to <code>Role</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST ListEntitiesForPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListEntitiesForPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "EntityFilter": {
                    "description": "<p>The entity type to use for filtering the results.</p> <p>For example, when <code>EntityFilter</code> is <code>Role</code>, only the roles that are attached to the specified policy are returned. This parameter is optional. If it is not included, all attached entities (users, groups, and roles) are returned. The argument for this parameter must be one of the valid values listed below.</p>",
                    "type": "string",
                    "enum": ["User", "Role", "Group", "LocalManagedPolicy", "AWSManagedPolicy"]
                  },
                  "PathPrefix": {
                    "description": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all entities.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
                  },
                  "PolicyUsageFilter": {
                    "description": "<p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html\">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>",
                    "type": "string",
                    "enum": ["PermissionsPolicy", "PermissionsBoundary"]
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["PolicyArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListEntitiesForPolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListEntitiesForPolicy"
      }
    },
    "/#Action=ListGroupPolicies": {
      "get": {
        "description": "<p>Lists the names of the inline policies that are embedded in the specified IAM group.</p> <p>An IAM group can also have managed policies attached to it. To list the managed policies that are attached to a group, use <a>ListAttachedGroupPolicies</a>. For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified group, the operation returns an empty list.</p>",
        "operationId": "GET ListGroupPolicies",
        "parameters": [
          {
            "description": "<p>The name of the group to list policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListGroupPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListGroupPoliciesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListGroupPolicies"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the names of the inline policies that are embedded in the specified IAM group.</p> <p>An IAM group can also have managed policies attached to it. To list the managed policies that are attached to a group, use <a>ListAttachedGroupPolicies</a>. For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified group, the operation returns an empty list.</p>",
        "operationId": "POST ListGroupPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListGroupPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name of the group to list policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["GroupName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListGroupPoliciesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListGroupPolicies"
      }
    },
    "/#Action=ListGroups": {
      "get": {
        "description": "<p>Lists the IAM groups that have the specified path prefix.</p> <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET ListGroups",
        "parameters": [
          {
            "description": "<p> The path prefix for filtering the results. For example, the prefix <code>/division_abc/subdivision_xyz/</code> gets all groups whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all groups. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "PathPrefix",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 512, "pattern": "\\u002F[\\u0021-\\u007F]*" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["ListGroups"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListGroupsResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListGroups"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the IAM groups that have the specified path prefix.</p> <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST ListGroups",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["ListGroups"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PathPrefix": {
                    "description": "<p> The path prefix for filtering the results. For example, the prefix <code>/division_abc/subdivision_xyz/</code> gets all groups whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all groups. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "\\u002F[\\u0021-\\u007F]*"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListGroupsResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListGroups"
      }
    },
    "/#Action=ListGroupsForUser": {
      "get": {
        "description": "<p>Lists the IAM groups that the specified IAM user belongs to.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET ListGroupsForUser",
        "parameters": [
          {
            "description": "<p>The name of the user to list groups for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListGroupsForUser"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListGroupsForUserResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListGroupsForUser"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the IAM groups that the specified IAM user belongs to.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST ListGroupsForUser",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListGroupsForUser"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user to list groups for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListGroupsForUserResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListGroupsForUser"
      }
    },
    "/#Action=ListInstanceProfiles": {
      "get": {
        "description": "<p>Lists the instance profiles that have the specified path prefix. If there are none, the operation returns an empty list. For more information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET ListInstanceProfiles",
        "parameters": [
          {
            "description": "<p> The path prefix for filtering the results. For example, the prefix <code>/application_abc/component_xyz/</code> gets all instance profiles whose path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all instance profiles. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "PathPrefix",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 512, "pattern": "\\u002F[\\u0021-\\u007F]*" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListInstanceProfiles"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListInstanceProfilesResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListInstanceProfiles"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the instance profiles that have the specified path prefix. If there are none, the operation returns an empty list. For more information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST ListInstanceProfiles",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListInstanceProfiles"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PathPrefix": {
                    "description": "<p> The path prefix for filtering the results. For example, the prefix <code>/application_abc/component_xyz/</code> gets all instance profiles whose path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all instance profiles. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "\\u002F[\\u0021-\\u007F]*"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListInstanceProfilesResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListInstanceProfiles"
      }
    },
    "/#Action=ListInstanceProfilesForRole": {
      "get": {
        "description": "<p>Lists the instance profiles that have the specified associated IAM role. If there are none, the operation returns an empty list. For more information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET ListInstanceProfilesForRole",
        "parameters": [
          {
            "description": "<p>The name of the role to list instance profiles for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListInstanceProfilesForRole"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListInstanceProfilesForRoleResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListInstanceProfilesForRole"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the instance profiles that have the specified associated IAM role. If there are none, the operation returns an empty list. For more information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST ListInstanceProfilesForRole",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListInstanceProfilesForRole"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name of the role to list instance profiles for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListInstanceProfilesForRoleResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListInstanceProfilesForRole"
      }
    },
    "/#Action=ListMFADevices": {
      "get": {
        "description": "<p>Lists the MFA devices for an IAM user. If the request includes a IAM user name, then this operation lists all the MFA devices associated with the specified user. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request for this API.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET ListMFADevices",
        "parameters": [
          {
            "description": "<p>The name of the user whose MFA devices you want to list.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListMFADevices"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListMFADevicesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListMFADevices"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the MFA devices for an IAM user. If the request includes a IAM user name, then this operation lists all the MFA devices associated with the specified user. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request for this API.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST ListMFADevices",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListMFADevices"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user whose MFA devices you want to list.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListMFADevicesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListMFADevices"
      }
    },
    "/#Action=ListOpenIDConnectProviders": {
      "get": {
        "description": "Lists information about the IAM OpenID Connect (OIDC) provider resource objects defined in the AWS account.",
        "operationId": "GET ListOpenIDConnectProviders",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListOpenIDConnectProviders"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListOpenIDConnectProvidersResponse" } }
            }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListOpenIDConnectProviders"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists information about the IAM OpenID Connect (OIDC) provider resource objects defined in the AWS account.",
        "operationId": "POST ListOpenIDConnectProviders",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListOpenIDConnectProviders"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListOpenIDConnectProvidersResponse" } }
            }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListOpenIDConnectProviders"
      }
    },
    "/#Action=ListPolicies": {
      "get": {
        "description": "<p>Lists all the managed policies that are available in your AWS account, including your own customer-defined managed policies and all AWS managed policies.</p> <p>You can filter the list of policies that is returned using the optional <code>OnlyAttached</code>, <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to list only the customer managed policies in your AWS account, set <code>Scope</code> to <code>Local</code>. To list only AWS managed policies, set <code>Scope</code> to <code>AWS</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>For more information about managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET ListPolicies",
        "parameters": [
          {
            "description": "<p>The scope to use for filtering the results.</p> <p>To list only AWS managed policies, set <code>Scope</code> to <code>AWS</code>. To list only the customer managed policies in your AWS account, set <code>Scope</code> to <code>Local</code>.</p> <p>This parameter is optional. If it is not included, or if it is set to <code>All</code>, all policies are returned.</p>",
            "in": "query",
            "name": "Scope",
            "required": false,
            "schema": { "type": "string", "enum": ["All", "AWS", "Local"] }
          },
          {
            "description": "<p>A flag to filter the results to only the attached policies.</p> <p>When <code>OnlyAttached</code> is <code>true</code>, the returned list contains only the policies that are attached to an IAM user, group, or role. When <code>OnlyAttached</code> is <code>false</code>, or when the parameter is not included, all policies are returned.</p>",
            "in": "query",
            "name": "OnlyAttached",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.",
            "in": "query",
            "name": "PathPrefix",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
            }
          },
          {
            "description": "<p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html\">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>",
            "in": "query",
            "name": "PolicyUsageFilter",
            "required": false,
            "schema": { "type": "string", "enum": ["PermissionsPolicy", "PermissionsBoundary"] }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListPoliciesResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListPolicies"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists all the managed policies that are available in your AWS account, including your own customer-defined managed policies and all AWS managed policies.</p> <p>You can filter the list of policies that is returned using the optional <code>OnlyAttached</code>, <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to list only the customer managed policies in your AWS account, set <code>Scope</code> to <code>Local</code>. To list only AWS managed policies, set <code>Scope</code> to <code>AWS</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>For more information about managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST ListPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Scope": {
                    "description": "<p>The scope to use for filtering the results.</p> <p>To list only AWS managed policies, set <code>Scope</code> to <code>AWS</code>. To list only the customer managed policies in your AWS account, set <code>Scope</code> to <code>Local</code>.</p> <p>This parameter is optional. If it is not included, or if it is set to <code>All</code>, all policies are returned.</p>",
                    "type": "string",
                    "enum": ["All", "AWS", "Local"]
                  },
                  "OnlyAttached": {
                    "description": "<p>A flag to filter the results to only the attached policies.</p> <p>When <code>OnlyAttached</code> is <code>true</code>, the returned list contains only the policies that are attached to an IAM user, group, or role. When <code>OnlyAttached</code> is <code>false</code>, or when the parameter is not included, all policies are returned.</p>",
                    "type": "boolean"
                  },
                  "PathPrefix": {
                    "description": "The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
                  },
                  "PolicyUsageFilter": {
                    "description": "<p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html\">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>",
                    "type": "string",
                    "enum": ["PermissionsPolicy", "PermissionsBoundary"]
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListPoliciesResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListPolicies"
      }
    },
    "/#Action=ListPoliciesGrantingServiceAccess": {
      "get": {
        "description": "<p>Retrieves a list of policies that the IAM identity (user, group, or role) can use to access each specified service.</p> <note> <p>This operation does not use other policy types when determining whether a resource could access a service. These other policy types include resource-based policies, access control lists, AWS Organizations policies, IAM permissions boundaries, and AWS STS assume role policies. It only applies permissions policy logic. For more about the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\">Evaluating Policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>The list of policies returned by the operation depends on the ARN of the identity that you provide.</p> <ul> <li> <p> <b>User</b> – The list of policies includes the managed and inline policies that are attached to the user directly. The list also includes any additional managed and inline policies that are attached to the group to which the user belongs. </p> </li> <li> <p> <b>Group</b> – The list of policies includes only the managed and inline policies that are attached to the group directly. Policies that are attached to the group’s user are not included.</p> </li> <li> <p> <b>Role</b> – The list of policies includes only the managed and inline policies that are attached to the role.</p> </li> </ul> <p>For each managed policy, this operation returns the ARN and policy name. For each inline policy, it returns the policy name and the entity to which it is attached. Inline policies do not have an ARN. For more information about these policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>Policies that are attached to users and roles as permissions boundaries are not returned. To view which managed policy is currently used to set the permissions boundary for a user or role, use the <a>GetUser</a> or <a>GetRole</a> operations.</p>",
        "operationId": "GET ListPoliciesGrantingServiceAccess",
        "parameters": [
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "Arn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "<p>The service namespace for the AWS services whose policies you want to list.</p> <p>To learn the service namespace for a service, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_actions-resources-contextkeys.html\">Actions, Resources, and Condition Keys for AWS Services</a> in the <i>IAM User Guide</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\">AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>",
            "in": "query",
            "name": "ServiceNamespaces",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListPoliciesGrantingServiceAccess"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListPoliciesGrantingServiceAccessResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "ListPoliciesGrantingServiceAccess"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Retrieves a list of policies that the IAM identity (user, group, or role) can use to access each specified service.</p> <note> <p>This operation does not use other policy types when determining whether a resource could access a service. These other policy types include resource-based policies, access control lists, AWS Organizations policies, IAM permissions boundaries, and AWS STS assume role policies. It only applies permissions policy logic. For more about the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\">Evaluating Policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>The list of policies returned by the operation depends on the ARN of the identity that you provide.</p> <ul> <li> <p> <b>User</b> – The list of policies includes the managed and inline policies that are attached to the user directly. The list also includes any additional managed and inline policies that are attached to the group to which the user belongs. </p> </li> <li> <p> <b>Group</b> – The list of policies includes only the managed and inline policies that are attached to the group directly. Policies that are attached to the group’s user are not included.</p> </li> <li> <p> <b>Role</b> – The list of policies includes only the managed and inline policies that are attached to the role.</p> </li> </ul> <p>For each managed policy, this operation returns the ARN and policy name. For each inline policy, it returns the policy name and the entity to which it is attached. Inline policies do not have an ARN. For more information about these policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>Policies that are attached to users and roles as permissions boundaries are not returned. To view which managed policy is currently used to set the permissions boundary for a user or role, use the <a>GetUser</a> or <a>GetRole</a> operations.</p>",
        "operationId": "POST ListPoliciesGrantingServiceAccess",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListPoliciesGrantingServiceAccess"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "Arn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "ServiceNamespaces": {
                    "description": "<p>The service namespace for the AWS services whose policies you want to list.</p> <p>To learn the service namespace for a service, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_actions-resources-contextkeys.html\">Actions, Resources, and Condition Keys for AWS Services</a> in the <i>IAM User Guide</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\">AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["Arn", "ServiceNamespaces"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListPoliciesGrantingServiceAccessResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          }
        },
        "x-aws-operation-name": "ListPoliciesGrantingServiceAccess"
      }
    },
    "/#Action=ListPolicyVersions": {
      "get": {
        "description": "<p>Lists information about the versions of the specified managed policy, including the version that is currently set as the policy's default version.</p> <p>For more information about managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET ListPolicyVersions",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListPolicyVersions"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListPolicyVersionsResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListPolicyVersions"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists information about the versions of the specified managed policy, including the version that is currently set as the policy's default version.</p> <p>For more information about managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST ListPolicyVersions",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListPolicyVersions"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["PolicyArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListPolicyVersionsResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListPolicyVersions"
      }
    },
    "/#Action=ListRolePolicies": {
      "get": {
        "description": "<p>Lists the names of the inline policies that are embedded in the specified IAM role.</p> <p>An IAM role can also have managed policies attached to it. To list the managed policies that are attached to a role, use <a>ListAttachedRolePolicies</a>. For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified role, the operation returns an empty list.</p>",
        "operationId": "GET ListRolePolicies",
        "parameters": [
          {
            "description": "<p>The name of the role to list policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListRolePolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListRolePoliciesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListRolePolicies"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the names of the inline policies that are embedded in the specified IAM role.</p> <p>An IAM role can also have managed policies attached to it. To list the managed policies that are attached to a role, use <a>ListAttachedRolePolicies</a>. For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified role, the operation returns an empty list.</p>",
        "operationId": "POST ListRolePolicies",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListRolePolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name of the role to list policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListRolePoliciesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListRolePolicies"
      }
    },
    "/#Action=ListRoleTags": {
      "get": {
        "description": "Lists the tags that are attached to the specified role. The returned list of tags is sorted by tag key. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET ListRoleTags",
        "parameters": [
          {
            "description": "<p>The name of the IAM role for which you want to see the list of tags.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>(Optional) Use this only when paginating results to indicate the maximum number of items that you want in the response. If additional items exist beyond the maximum that you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when more results are available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListRoleTags"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListRoleTagsResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListRoleTags"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the tags that are attached to the specified role. The returned list of tags is sorted by tag key. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST ListRoleTags",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListRoleTags"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name of the IAM role for which you want to see the list of tags.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>(Optional) Use this only when paginating results to indicate the maximum number of items that you want in the response. If additional items exist beyond the maximum that you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when more results are available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListRoleTagsResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListRoleTags"
      }
    },
    "/#Action=ListRoles": {
      "get": {
        "description": "<p>Lists the IAM roles that have the specified path prefix. If there are none, the operation returns an empty list. For more information about roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET ListRoles",
        "parameters": [
          {
            "description": "<p> The path prefix for filtering the results. For example, the prefix <code>/application_abc/component_xyz/</code> gets all roles whose path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all roles. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "PathPrefix",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 512, "pattern": "\\u002F[\\u0021-\\u007F]*" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["ListRoles"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListRolesResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListRoles"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the IAM roles that have the specified path prefix. If there are none, the operation returns an empty list. For more information about roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST ListRoles",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["ListRoles"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PathPrefix": {
                    "description": "<p> The path prefix for filtering the results. For example, the prefix <code>/application_abc/component_xyz/</code> gets all roles whose path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all roles. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "\\u002F[\\u0021-\\u007F]*"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListRolesResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListRoles"
      }
    },
    "/#Action=ListSAMLProviders": {
      "get": {
        "description": "<p>Lists the SAML provider resource objects defined in IAM in the account.</p> <note> <p> This operation requires <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> </note>",
        "operationId": "GET ListSAMLProviders",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListSAMLProviders"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListSAMLProvidersResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListSAMLProviders"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the SAML provider resource objects defined in IAM in the account.</p> <note> <p> This operation requires <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> </note>",
        "operationId": "POST ListSAMLProviders",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListSAMLProviders"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListSAMLProvidersResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListSAMLProviders"
      }
    },
    "/#Action=ListSSHPublicKeys": {
      "get": {
        "description": "<p>Returns information about the SSH public keys associated with the specified IAM user. If none exists, the operation returns an empty list.</p> <p>The SSH public keys returned by this operation are used only for authenticating the IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET ListSSHPublicKeys",
        "parameters": [
          {
            "description": "<p>The name of the IAM user to list SSH public keys for. If none is specified, the <code>UserName</code> field is determined implicitly based on the AWS access key used to sign the request.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListSSHPublicKeys"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListSSHPublicKeysResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "ListSSHPublicKeys"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns information about the SSH public keys associated with the specified IAM user. If none exists, the operation returns an empty list.</p> <p>The SSH public keys returned by this operation are used only for authenticating the IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST ListSSHPublicKeys",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListSSHPublicKeys"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user to list SSH public keys for. If none is specified, the <code>UserName</code> field is determined implicitly based on the AWS access key used to sign the request.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListSSHPublicKeysResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "ListSSHPublicKeys"
      }
    },
    "/#Action=ListServerCertificates": {
      "get": {
        "description": "<p>Lists the server certificates stored in IAM that have the specified path prefix. If none exist, the operation returns an empty list.</p> <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>For more information about working with server certificates, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html\">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic also includes a list of AWS services that can use the server certificates that you manage with IAM.</p>",
        "operationId": "GET ListServerCertificates",
        "parameters": [
          {
            "description": "<p> The path prefix for filtering the results. For example: <code>/company/servercerts</code> would get all server certificates for which the path starts with <code>/company/servercerts</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all server certificates. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "PathPrefix",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 512, "pattern": "\\u002F[\\u0021-\\u007F]*" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListServerCertificates"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListServerCertificatesResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListServerCertificates"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the server certificates stored in IAM that have the specified path prefix. If none exist, the operation returns an empty list.</p> <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>For more information about working with server certificates, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html\">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic also includes a list of AWS services that can use the server certificates that you manage with IAM.</p>",
        "operationId": "POST ListServerCertificates",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListServerCertificates"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PathPrefix": {
                    "description": "<p> The path prefix for filtering the results. For example: <code>/company/servercerts</code> would get all server certificates for which the path starts with <code>/company/servercerts</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all server certificates. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "\\u002F[\\u0021-\\u007F]*"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListServerCertificatesResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListServerCertificates"
      }
    },
    "/#Action=ListServiceSpecificCredentials": {
      "get": {
        "description": "Returns information about the service-specific credentials associated with the specified IAM user. If none exists, the operation returns an empty list. The service-specific credentials returned by this operation are used only for authenticating the IAM user to a specific service. For more information about using service-specific credentials to authenticate to an AWS service, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html\">Set Up service-specific credentials</a> in the AWS CodeCommit User Guide.",
        "operationId": "GET ListServiceSpecificCredentials",
        "parameters": [
          {
            "description": "<p>The name of the user whose service-specific credentials you want information about. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Filters the returned results to only those for the specified AWS service. If not specified, then AWS returns service-specific credentials for all services.",
            "in": "query",
            "name": "ServiceName",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListServiceSpecificCredentials"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListServiceSpecificCredentialsResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceNotSupportedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceNotSupportedException" } } }
          }
        },
        "x-aws-operation-name": "ListServiceSpecificCredentials"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Returns information about the service-specific credentials associated with the specified IAM user. If none exists, the operation returns an empty list. The service-specific credentials returned by this operation are used only for authenticating the IAM user to a specific service. For more information about using service-specific credentials to authenticate to an AWS service, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html\">Set Up service-specific credentials</a> in the AWS CodeCommit User Guide.",
        "operationId": "POST ListServiceSpecificCredentials",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListServiceSpecificCredentials"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user whose service-specific credentials you want information about. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "ServiceName": {
                    "description": "Filters the returned results to only those for the specified AWS service. If not specified, then AWS returns service-specific credentials for all services.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ListServiceSpecificCredentialsResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceNotSupportedException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceNotSupportedException" } } }
          }
        },
        "x-aws-operation-name": "ListServiceSpecificCredentials"
      }
    },
    "/#Action=ListSigningCertificates": {
      "get": {
        "description": "<p>Returns information about the signing certificates associated with the specified IAM user. If none exists, the operation returns an empty list.</p> <p>Although each user is limited to a small number of signing certificates, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request for this API. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p>",
        "operationId": "GET ListSigningCertificates",
        "parameters": [
          {
            "description": "<p>The name of the IAM user whose signing certificates you want to examine.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListSigningCertificates"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListSigningCertificatesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListSigningCertificates"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Returns information about the signing certificates associated with the specified IAM user. If none exists, the operation returns an empty list.</p> <p>Although each user is limited to a small number of signing certificates, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request for this API. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p>",
        "operationId": "POST ListSigningCertificates",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListSigningCertificates"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user whose signing certificates you want to examine.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListSigningCertificatesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListSigningCertificates"
      }
    },
    "/#Action=ListUserPolicies": {
      "get": {
        "description": "<p>Lists the names of the inline policies embedded in the specified IAM user.</p> <p>An IAM user can also have managed policies attached to it. To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>. For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified user, the operation returns an empty list.</p>",
        "operationId": "GET ListUserPolicies",
        "parameters": [
          {
            "description": "<p>The name of the user to list policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListUserPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListUserPoliciesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListUserPolicies"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the names of the inline policies embedded in the specified IAM user.</p> <p>An IAM user can also have managed policies attached to it. To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>. For more information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified user, the operation returns an empty list.</p>",
        "operationId": "POST ListUserPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListUserPolicies"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user to list policies for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListUserPoliciesResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListUserPolicies"
      }
    },
    "/#Action=ListUserTags": {
      "get": {
        "description": "Lists the tags that are attached to the specified user. The returned list of tags is sorted by tag key. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET ListUserTags",
        "parameters": [
          {
            "description": "<p>The name of the IAM user whose tags you want to see.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>(Optional) Use this only when paginating results to indicate the maximum number of items that you want in the response. If additional items exist beyond the maximum that you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when more results are available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListUserTags"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListUserTagsResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListUserTags"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Lists the tags that are attached to the specified user. The returned list of tags is sorted by tag key. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST ListUserTags",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListUserTags"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user whose tags you want to see.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>(Optional) Use this only when paginating results to indicate the maximum number of items that you want in the response. If additional items exist beyond the maximum that you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when more results are available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListUserTagsResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListUserTags"
      }
    },
    "/#Action=ListUsers": {
      "get": {
        "description": "<p>Lists the IAM users that have the specified path prefix. If no path prefix is specified, the operation returns all users in the AWS account. If there are none, the operation returns an empty list.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET ListUsers",
        "parameters": [
          {
            "description": "<p> The path prefix for filtering the results. For example: <code>/division_abc/subdivision_xyz/</code>, which would get all user names whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all user names. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "PathPrefix",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 512, "pattern": "\\u002F[\\u0021-\\u007F]*" }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["ListUsers"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListUsersResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListUsers"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the IAM users that have the specified path prefix. If no path prefix is specified, the operation returns all users in the AWS account. If there are none, the operation returns an empty list.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST ListUsers",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["ListUsers"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PathPrefix": {
                    "description": "<p> The path prefix for filtering the results. For example: <code>/division_abc/subdivision_xyz/</code>, which would get all user names whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all user names. This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "\\u002F[\\u0021-\\u007F]*"
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListUsersResponse" } } }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ListUsers"
      }
    },
    "/#Action=ListVirtualMFADevices": {
      "get": {
        "description": "<p>Lists the virtual MFA devices defined in the AWS account by assignment status. If you do not specify an assignment status, the operation returns a list of all virtual MFA devices. Assignment status can be <code>Assigned</code>, <code>Unassigned</code>, or <code>Any</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "GET ListVirtualMFADevices",
        "parameters": [
          {
            "description": " The status (<code>Unassigned</code> or <code>Assigned</code>) of the devices to list. If you do not specify an <code>AssignmentStatus</code>, the operation defaults to <code>Any</code>, which lists both assigned and unassigned virtual MFA devices.,",
            "in": "query",
            "name": "AssignmentStatus",
            "required": false,
            "schema": { "type": "string", "enum": ["Assigned", "Unassigned", "Any"] }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListVirtualMFADevices"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListVirtualMFADevicesResponse" } } }
          }
        },
        "x-aws-operation-name": "ListVirtualMFADevices"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Lists the virtual MFA devices defined in the AWS account by assignment status. If you do not specify an assignment status, the operation returns a list of all virtual MFA devices. Assignment status can be <code>Assigned</code>, <code>Unassigned</code>, or <code>Any</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
        "operationId": "POST ListVirtualMFADevices",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ListVirtualMFADevices"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AssignmentStatus": {
                    "description": " The status (<code>Unassigned</code> or <code>Assigned</code>) of the devices to list. If you do not specify an <code>AssignmentStatus</code>, the operation defaults to <code>Any</code>, which lists both assigned and unassigned virtual MFA devices.,",
                    "type": "string",
                    "enum": ["Assigned", "Unassigned", "Any"]
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ListVirtualMFADevicesResponse" } } }
          }
        },
        "x-aws-operation-name": "ListVirtualMFADevices"
      }
    },
    "/#Action=PutGroupPolicy": {
      "get": {
        "description": "<p>Adds or updates an inline policy document that is embedded in the specified IAM group.</p> <p>A user can also have managed policies attached to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of inline policies that you can embed in a group, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>. For general information about using the Query API with IAM, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "GET PutGroupPolicy",
        "parameters": [
          {
            "description": "<p>The name of the group to associate the policy with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the policy document.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PolicyDocument",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 131072,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["PutGroupPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "PutGroupPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds or updates an inline policy document that is embedded in the specified IAM group.</p> <p>A user can also have managed policies attached to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of inline policies that you can embed in a group, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>. For general information about using the Query API with IAM, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "POST PutGroupPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["PutGroupPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name of the group to associate the policy with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyName": {
                    "description": "<p>The name of the policy document.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyDocument": {
                    "description": "<p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 131072,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  }
                },
                "required": ["GroupName", "PolicyName", "PolicyDocument"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "PutGroupPolicy"
      }
    },
    "/#Action=PutRolePermissionsBoundary": {
      "get": {
        "description": "<p>Adds or updates the policy that is specified as the IAM role's permissions boundary. You can use an AWS managed policy or a customer managed policy to set the boundary for a role. Use the boundary to control the maximum permissions that the role can have. Setting a permissions boundary is an advanced feature that can affect the permissions for the role.</p> <p>You cannot set the boundary for a service-linked role. </p> <important> <p>Policies used as permissions boundaries do not provide permissions. You must also attach a permissions policy to the role. To learn how the effective permissions for a role are evaluated, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html\">IAM JSON Policy Evaluation Logic</a> in the IAM User Guide. </p> </important>",
        "operationId": "GET PutRolePermissionsBoundary",
        "parameters": [
          {
            "description": "The name (friendly name, not ARN) of the IAM role for which you want to set the permissions boundary.",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PermissionsBoundary",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["PutRolePermissionsBoundary"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "483": {
            "description": "PolicyNotAttachableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotAttachableException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "PutRolePermissionsBoundary"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds or updates the policy that is specified as the IAM role's permissions boundary. You can use an AWS managed policy or a customer managed policy to set the boundary for a role. Use the boundary to control the maximum permissions that the role can have. Setting a permissions boundary is an advanced feature that can affect the permissions for the role.</p> <p>You cannot set the boundary for a service-linked role. </p> <important> <p>Policies used as permissions boundaries do not provide permissions. You must also attach a permissions policy to the role. To learn how the effective permissions for a role are evaluated, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html\">IAM JSON Policy Evaluation Logic</a> in the IAM User Guide. </p> </important>",
        "operationId": "POST PutRolePermissionsBoundary",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["PutRolePermissionsBoundary"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "The name (friendly name, not ARN) of the IAM role for which you want to set the permissions boundary.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PermissionsBoundary": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  }
                },
                "required": ["RoleName", "PermissionsBoundary"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "483": {
            "description": "PolicyNotAttachableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotAttachableException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "PutRolePermissionsBoundary"
      }
    },
    "/#Action=PutRolePolicy": {
      "get": {
        "description": "<p>Adds or updates an inline policy document that is embedded in the specified IAM role.</p> <p>When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>. For more information about IAM roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html\">Using Roles to Delegate Permissions and Federate Identities</a>.</p> <p>A role can also have a managed policy attached to it. To attach a managed policy to a role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of inline policies that you can embed with a role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>. For general information about using the Query API with IAM, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "GET PutRolePolicy",
        "parameters": [
          {
            "description": "<p>The name of the role to associate the policy with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the policy document.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PolicyDocument",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 131072,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["PutRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "PutRolePolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds or updates an inline policy document that is embedded in the specified IAM role.</p> <p>When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>. For more information about IAM roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html\">Using Roles to Delegate Permissions and Federate Identities</a>.</p> <p>A role can also have a managed policy attached to it. To attach a managed policy to a role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of inline policies that you can embed with a role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>. For general information about using the Query API with IAM, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "POST PutRolePolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["PutRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name of the role to associate the policy with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyName": {
                    "description": "<p>The name of the policy document.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyDocument": {
                    "description": "<p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 131072,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  }
                },
                "required": ["RoleName", "PolicyName", "PolicyDocument"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "PutRolePolicy"
      }
    },
    "/#Action=PutUserPermissionsBoundary": {
      "get": {
        "description": "<p>Adds or updates the policy that is specified as the IAM user's permissions boundary. You can use an AWS managed policy or a customer managed policy to set the boundary for a user. Use the boundary to control the maximum permissions that the user can have. Setting a permissions boundary is an advanced feature that can affect the permissions for the user.</p> <important> <p>Policies that are used as permissions boundaries do not provide permissions. You must also attach a permissions policy to the user. To learn how the effective permissions for a user are evaluated, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html\">IAM JSON Policy Evaluation Logic</a> in the IAM User Guide. </p> </important>",
        "operationId": "GET PutUserPermissionsBoundary",
        "parameters": [
          {
            "description": "The name (friendly name, not ARN) of the IAM user for which you want to set the permissions boundary.",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PermissionsBoundary",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["PutUserPermissionsBoundary"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "PolicyNotAttachableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotAttachableException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "PutUserPermissionsBoundary"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds or updates the policy that is specified as the IAM user's permissions boundary. You can use an AWS managed policy or a customer managed policy to set the boundary for a user. Use the boundary to control the maximum permissions that the user can have. Setting a permissions boundary is an advanced feature that can affect the permissions for the user.</p> <important> <p>Policies that are used as permissions boundaries do not provide permissions. You must also attach a permissions policy to the user. To learn how the effective permissions for a user are evaluated, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html\">IAM JSON Policy Evaluation Logic</a> in the IAM User Guide. </p> </important>",
        "operationId": "POST PutUserPermissionsBoundary",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["PutUserPermissionsBoundary"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "The name (friendly name, not ARN) of the IAM user for which you want to set the permissions boundary.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PermissionsBoundary": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  }
                },
                "required": ["UserName", "PermissionsBoundary"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "PolicyNotAttachableException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyNotAttachableException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "PutUserPermissionsBoundary"
      }
    },
    "/#Action=PutUserPolicy": {
      "get": {
        "description": "<p>Adds or updates an inline policy document that is embedded in the specified IAM user.</p> <p>An IAM user can also have a managed policy attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of inline policies that you can embed in a user, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>. For general information about using the Query API with IAM, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "GET PutUserPolicy",
        "parameters": [
          {
            "description": "<p>The name of the user to associate the policy with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the policy document.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "PolicyName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PolicyDocument",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 131072,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["PutUserPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "PutUserPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds or updates an inline policy document that is embedded in the specified IAM user.</p> <p>An IAM user can also have a managed policy attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of inline policies that you can embed in a user, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>. For general information about using the Query API with IAM, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "POST PutUserPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["PutUserPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user to associate the policy with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyName": {
                    "description": "<p>The name of the policy document.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyDocument": {
                    "description": "<p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 131072,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  }
                },
                "required": ["UserName", "PolicyName", "PolicyDocument"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "PutUserPolicy"
      }
    },
    "/#Action=RemoveClientIDFromOpenIDConnectProvider": {
      "get": {
        "description": "<p>Removes the specified client ID (also known as audience) from the list of client IDs registered for the specified IAM OpenID Connect (OIDC) provider resource object.</p> <p>This operation is idempotent; it does not fail or return an error if you try to remove a client ID that does not exist.</p>",
        "operationId": "GET RemoveClientIDFromOpenIDConnectProvider",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "OpenIDConnectProviderArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "The client ID (also known as audience) to remove from the IAM OIDC provider resource. For more information about client IDs, see <a>CreateOpenIDConnectProvider</a>.",
            "in": "query",
            "name": "ClientID",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 255 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RemoveClientIDFromOpenIDConnectProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "RemoveClientIDFromOpenIDConnectProvider"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Removes the specified client ID (also known as audience) from the list of client IDs registered for the specified IAM OpenID Connect (OIDC) provider resource object.</p> <p>This operation is idempotent; it does not fail or return an error if you try to remove a client ID that does not exist.</p>",
        "operationId": "POST RemoveClientIDFromOpenIDConnectProvider",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RemoveClientIDFromOpenIDConnectProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "OpenIDConnectProviderArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "ClientID": {
                    "description": "The client ID (also known as audience) to remove from the IAM OIDC provider resource. For more information about client IDs, see <a>CreateOpenIDConnectProvider</a>.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  }
                },
                "required": ["OpenIDConnectProviderArn", "ClientID"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "RemoveClientIDFromOpenIDConnectProvider"
      }
    },
    "/#Action=RemoveRoleFromInstanceProfile": {
      "get": {
        "description": "<p>Removes the specified IAM role from the specified EC2 instance profile.</p> <important> <p>Make sure that you do not have any Amazon EC2 instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is associated with a running instance might break any applications running on the instance.</p> </important> <p> For more information about IAM roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. For more information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p>",
        "operationId": "GET RemoveRoleFromInstanceProfile",
        "parameters": [
          {
            "description": "<p>The name of the instance profile to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "InstanceProfileName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the role to remove.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RemoveRoleFromInstanceProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "RemoveRoleFromInstanceProfile"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Removes the specified IAM role from the specified EC2 instance profile.</p> <important> <p>Make sure that you do not have any Amazon EC2 instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is associated with a running instance might break any applications running on the instance.</p> </important> <p> For more information about IAM roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. For more information about instance profiles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p>",
        "operationId": "POST RemoveRoleFromInstanceProfile",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RemoveRoleFromInstanceProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "InstanceProfileName": {
                    "description": "<p>The name of the instance profile to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "RoleName": {
                    "description": "<p>The name of the role to remove.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["InstanceProfileName", "RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "RemoveRoleFromInstanceProfile"
      }
    },
    "/#Action=RemoveUserFromGroup": {
      "get": {
        "description": "Removes the specified user from the specified group.",
        "operationId": "GET RemoveUserFromGroup",
        "parameters": [
          {
            "description": "<p>The name of the group to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The name of the user to remove.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RemoveUserFromGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "RemoveUserFromGroup"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes the specified user from the specified group.",
        "operationId": "POST RemoveUserFromGroup",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["RemoveUserFromGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>The name of the group to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "UserName": {
                    "description": "<p>The name of the user to remove.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["GroupName", "UserName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "RemoveUserFromGroup"
      }
    },
    "/#Action=ResetServiceSpecificCredential": {
      "get": {
        "description": "Resets the password for a service-specific credential. The new password is AWS generated and cryptographically strong. It cannot be configured by the user. Resetting the password immediately invalidates the previous password associated with this user.",
        "operationId": "GET ResetServiceSpecificCredential",
        "parameters": [
          {
            "description": "<p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
            "in": "query",
            "name": "ServiceSpecificCredentialId",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ResetServiceSpecificCredential"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ResetServiceSpecificCredentialResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "ResetServiceSpecificCredential"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Resets the password for a service-specific credential. The new password is AWS generated and cryptographically strong. It cannot be configured by the user. Resetting the password immediately invalidates the previous password associated with this user.",
        "operationId": "POST ResetServiceSpecificCredential",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ResetServiceSpecificCredential"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "ServiceSpecificCredentialId": {
                    "description": "<p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  }
                },
                "required": ["ServiceSpecificCredentialId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/ResetServiceSpecificCredentialResponse" } }
            }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "ResetServiceSpecificCredential"
      }
    },
    "/#Action=ResyncMFADevice": {
      "get": {
        "description": "<p>Synchronizes the specified MFA device with its IAM resource object on the AWS servers.</p> <p>For more information about creating and working with virtual MFA devices, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\">Using a Virtual MFA Device</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET ResyncMFADevice",
        "parameters": [
          {
            "description": "<p>The name of the user whose MFA device you want to resynchronize.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>Serial number that uniquely identifies the MFA device.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "SerialNumber",
            "required": true,
            "schema": { "type": "string", "minLength": 9, "maxLength": 256, "pattern": "[\\w+=/:,.@-]+" }
          },
          {
            "description": "<p>An authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>",
            "in": "query",
            "name": "AuthenticationCode1",
            "required": true,
            "schema": { "type": "string", "minLength": 6, "maxLength": 6, "pattern": "[\\d]+" }
          },
          {
            "description": "<p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>",
            "in": "query",
            "name": "AuthenticationCode2",
            "required": true,
            "schema": { "type": "string", "minLength": 6, "maxLength": 6, "pattern": "[\\d]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ResyncMFADevice"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidAuthenticationCodeException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidAuthenticationCodeException" } }
            }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ResyncMFADevice"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Synchronizes the specified MFA device with its IAM resource object on the AWS servers.</p> <p>For more information about creating and working with virtual MFA devices, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\">Using a Virtual MFA Device</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST ResyncMFADevice",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["ResyncMFADevice"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user whose MFA device you want to resynchronize.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "SerialNumber": {
                    "description": "<p>Serial number that uniquely identifies the MFA device.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 256,
                    "pattern": "[\\w+=/:,.@-]+"
                  },
                  "AuthenticationCode1": {
                    "description": "<p>An authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>",
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 6,
                    "pattern": "[\\d]+"
                  },
                  "AuthenticationCode2": {
                    "description": "<p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>",
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 6,
                    "pattern": "[\\d]+"
                  }
                },
                "required": ["UserName", "SerialNumber", "AuthenticationCode1", "AuthenticationCode2"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidAuthenticationCodeException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidAuthenticationCodeException" } }
            }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "ResyncMFADevice"
      }
    },
    "/#Action=SetDefaultPolicyVersion": {
      "get": {
        "description": "<p>Sets the specified version of the specified policy as the policy's default (operative) version.</p> <p>This operation affects all users, groups, and roles that the policy is attached to. To list the users, groups, and roles that the policy is attached to, use the <a>ListEntitiesForPolicy</a> API.</p> <p>For information about managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET SetDefaultPolicyVersion",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicyArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "<p>The version of the policy to set as the default (operative) version.</p> <p>For more information about managed policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
            "in": "query",
            "name": "VersionId",
            "required": true,
            "schema": { "type": "string", "pattern": "v[1-9][0-9]*(\\.[A-Za-z0-9-]*)?" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetDefaultPolicyVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "SetDefaultPolicyVersion"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Sets the specified version of the specified policy as the policy's default (operative) version.</p> <p>This operation affects all users, groups, and roles that the policy is attached to. To list the users, groups, and roles that the policy is attached to, use the <a>ListEntitiesForPolicy</a> API.</p> <p>For information about managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST SetDefaultPolicyVersion",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetDefaultPolicyVersion"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicyArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "VersionId": {
                    "description": "<p>The version of the policy to set as the default (operative) version.</p> <p>For more information about managed policy versions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>",
                    "type": "string",
                    "pattern": "v[1-9][0-9]*(\\.[A-Za-z0-9-]*)?"
                  }
                },
                "required": ["PolicyArn", "VersionId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "SetDefaultPolicyVersion"
      }
    },
    "/#Action=SetSecurityTokenServicePreferences": {
      "get": {
        "description": "<p>Sets the specified version of the global endpoint token as the token version used for the AWS account.</p> <p>By default, AWS Security Token Service (STS) is available as a global service, and all STS requests go to a single endpoint at <code>https://sts.amazonaws.com</code>. AWS recommends using Regional STS endpoints to reduce latency, build in redundancy, and increase session token availability. For information about Regional endpoints for STS, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region\">AWS Regions and Endpoints</a> in the <i>AWS General Reference</i>.</p> <p>If you make an STS call to the global endpoint, the resulting session tokens might be valid in some Regions but not others. It depends on the version that is set in this operation. Version 1 tokens are valid only in AWS Regions that are available by default. These tokens do not work in manually enabled Regions, such as Asia Pacific (Hong Kong). Version 2 tokens are valid in all Regions. However, version 2 tokens are longer and might affect systems where you temporarily store tokens. For information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html\">Activating and Deactivating STS in an AWS Region</a> in the <i>IAM User Guide</i>.</p> <p>To view the current session token version, see the <code>GlobalEndpointTokenVersion</code> entry in the response of the <a>GetAccountSummary</a> operation.</p>",
        "operationId": "GET SetSecurityTokenServicePreferences",
        "parameters": [
          {
            "description": "<p>The version of the global endpoint token. Version 1 tokens are valid only in AWS Regions that are available by default. These tokens do not work in manually enabled Regions, such as Asia Pacific (Hong Kong). Version 2 tokens are valid in all Regions. However, version 2 tokens are longer and might affect systems where you temporarily store tokens.</p> <p>For information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html\">Activating and Deactivating STS in an AWS Region</a> in the <i>IAM User Guide</i>.</p>",
            "in": "query",
            "name": "GlobalEndpointTokenVersion",
            "required": true,
            "schema": { "type": "string", "enum": ["v1Token", "v2Token"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetSecurityTokenServicePreferences"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "SetSecurityTokenServicePreferences"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Sets the specified version of the global endpoint token as the token version used for the AWS account.</p> <p>By default, AWS Security Token Service (STS) is available as a global service, and all STS requests go to a single endpoint at <code>https://sts.amazonaws.com</code>. AWS recommends using Regional STS endpoints to reduce latency, build in redundancy, and increase session token availability. For information about Regional endpoints for STS, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region\">AWS Regions and Endpoints</a> in the <i>AWS General Reference</i>.</p> <p>If you make an STS call to the global endpoint, the resulting session tokens might be valid in some Regions but not others. It depends on the version that is set in this operation. Version 1 tokens are valid only in AWS Regions that are available by default. These tokens do not work in manually enabled Regions, such as Asia Pacific (Hong Kong). Version 2 tokens are valid in all Regions. However, version 2 tokens are longer and might affect systems where you temporarily store tokens. For information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html\">Activating and Deactivating STS in an AWS Region</a> in the <i>IAM User Guide</i>.</p> <p>To view the current session token version, see the <code>GlobalEndpointTokenVersion</code> entry in the response of the <a>GetAccountSummary</a> operation.</p>",
        "operationId": "POST SetSecurityTokenServicePreferences",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SetSecurityTokenServicePreferences"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GlobalEndpointTokenVersion": {
                    "description": "<p>The version of the global endpoint token. Version 1 tokens are valid only in AWS Regions that are available by default. These tokens do not work in manually enabled Regions, such as Asia Pacific (Hong Kong). Version 2 tokens are valid in all Regions. However, version 2 tokens are longer and might affect systems where you temporarily store tokens.</p> <p>For information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html\">Activating and Deactivating STS in an AWS Region</a> in the <i>IAM User Guide</i>.</p>",
                    "type": "string",
                    "enum": ["v1Token", "v2Token"]
                  }
                },
                "required": ["GlobalEndpointTokenVersion"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "SetSecurityTokenServicePreferences"
      }
    },
    "/#Action=SimulateCustomPolicy": {
      "get": {
        "description": "<p>Simulate how a set of IAM policies and optionally a resource-based policy works with a list of API operations and AWS resources to determine the policies' effective permissions. The policies are provided as strings.</p> <p>The simulation does not perform the API operations; it only checks the authorization to determine if the simulated policies allow or deny the operations.</p> <p>If you want to simulate existing policies attached to an IAM user, group, or role, use <a>SimulatePrincipalPolicy</a> instead.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. You can use the <code>Condition</code> element of an IAM policy to evaluate context keys. To get the list of context keys that the policies require for correct simulation, use <a>GetContextKeysForCustomPolicy</a>.</p> <p>If the output is long, you can use <code>MaxItems</code> and <code>Marker</code> parameters to paginate the results.</p>",
        "operationId": "GET SimulateCustomPolicy",
        "parameters": [
          {
            "description": "<p>A list of policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy. Do not include any resource-based policies in this parameter. Any resource-based policy must be submitted with the <code>ResourcePolicy</code> parameter. The policies cannot be \"scope-down\" policies, such as you could include in a call to <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetFederationToken.html\">GetFederationToken</a> or one of the <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_AssumeRole.html\">AssumeRole</a> API operations. In other words, do not use policies designed to restrict what a user can do while using the temporary credentials.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PolicyInputList",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "A list of names of API operations to evaluate in the simulation. Each operation is evaluated against each resource. Each operation must include the service identifier, such as <code>iam:CreateUser</code>. This operation does not support using wildcards (*) in an action name.",
            "in": "query",
            "name": "ActionNames",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>A list of ARNs of AWS resources to include in the simulation. If this parameter is not provided, then the value defaults to <code>*</code> (all resources). Each API in the <code>ActionNames</code> parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response.</p> <p>The simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the <code>ResourcePolicy</code> parameter.</p> <p>If you include a <code>ResourcePolicy</code>, then it must be applicable to all of the resources included in the simulation or you receive an invalid input error.</p> <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>",
            "in": "query",
            "name": "ResourceArns",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "ResourcePolicy",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 131072,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "description": "<p>An ARN representing the AWS account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN. Examples of resource ARNs include an S3 bucket or object. If <code>ResourceOwner</code> is specified, it is also used as the account owner of any <code>ResourcePolicy</code> included in the simulation. If the <code>ResourceOwner</code> parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in <code>CallerArn</code>. This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user <code>CallerArn</code>.</p> <p>The ARN for an account uses the following syntax: <code>arn:aws:iam::<i>AWS-account-ID</i>:root</code>. For example, to represent the account with the 112233445566 ID, use the following ARN: <code>arn:aws:iam::112233445566-ID:root</code>. </p>",
            "in": "query",
            "name": "ResourceOwner",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 2048 }
          },
          {
            "description": "<p>The ARN of the IAM user that you want to use as the simulated caller of the API operations. <code>CallerArn</code> is required if you include a <code>ResourcePolicy</code> so that the policy's <code>Principal</code> element has a value to use in evaluating the policy.</p> <p>You can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.</p>",
            "in": "query",
            "name": "CallerArn",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 2048 }
          },
          {
            "description": "A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permissions policies, the corresponding value is supplied.",
            "in": "query",
            "name": "ContextEntries",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>Specifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.</p> <p>Each of the EC2 scenarios requires that you specify instance, image, and security-group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network-interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html\">Supported Platforms</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p> <b>EC2-Classic-InstanceStore</b> </p> <p>instance, image, security-group</p> </li> <li> <p> <b>EC2-Classic-EBS</b> </p> <p>instance, image, security-group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b> </p> <p>instance, image, security-group, network-interface</p> </li> <li> <p> <b>EC2-VPC-InstanceStore-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet</p> </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance, image, security-group, network-interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet, volume</p> </li> </ul>",
            "in": "query",
            "name": "ResourceHandlingOption",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64 }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SimulateCustomPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SimulatePolicyResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "PolicyEvaluationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyEvaluationException" } } }
          }
        },
        "x-aws-operation-name": "SimulateCustomPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Simulate how a set of IAM policies and optionally a resource-based policy works with a list of API operations and AWS resources to determine the policies' effective permissions. The policies are provided as strings.</p> <p>The simulation does not perform the API operations; it only checks the authorization to determine if the simulated policies allow or deny the operations.</p> <p>If you want to simulate existing policies attached to an IAM user, group, or role, use <a>SimulatePrincipalPolicy</a> instead.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. You can use the <code>Condition</code> element of an IAM policy to evaluate context keys. To get the list of context keys that the policies require for correct simulation, use <a>GetContextKeysForCustomPolicy</a>.</p> <p>If the output is long, you can use <code>MaxItems</code> and <code>Marker</code> parameters to paginate the results.</p>",
        "operationId": "POST SimulateCustomPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SimulateCustomPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicyInputList": {
                    "description": "<p>A list of policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy. Do not include any resource-based policies in this parameter. Any resource-based policy must be submitted with the <code>ResourcePolicy</code> parameter. The policies cannot be \"scope-down\" policies, such as you could include in a call to <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetFederationToken.html\">GetFederationToken</a> or one of the <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_AssumeRole.html\">AssumeRole</a> API operations. In other words, do not use policies designed to restrict what a user can do while using the temporary credentials.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "ActionNames": {
                    "description": "A list of names of API operations to evaluate in the simulation. Each operation is evaluated against each resource. Each operation must include the service identifier, such as <code>iam:CreateUser</code>. This operation does not support using wildcards (*) in an action name.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "ResourceArns": {
                    "description": "<p>A list of ARNs of AWS resources to include in the simulation. If this parameter is not provided, then the value defaults to <code>*</code> (all resources). Each API in the <code>ActionNames</code> parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response.</p> <p>The simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the <code>ResourcePolicy</code> parameter.</p> <p>If you include a <code>ResourcePolicy</code>, then it must be applicable to all of the resources included in the simulation or you receive an invalid input error.</p> <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "ResourcePolicy": {
                    "description": "<p>A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 131072,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  },
                  "ResourceOwner": {
                    "description": "<p>An ARN representing the AWS account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN. Examples of resource ARNs include an S3 bucket or object. If <code>ResourceOwner</code> is specified, it is also used as the account owner of any <code>ResourcePolicy</code> included in the simulation. If the <code>ResourceOwner</code> parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in <code>CallerArn</code>. This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user <code>CallerArn</code>.</p> <p>The ARN for an account uses the following syntax: <code>arn:aws:iam::<i>AWS-account-ID</i>:root</code>. For example, to represent the account with the 112233445566 ID, use the following ARN: <code>arn:aws:iam::112233445566-ID:root</code>. </p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2048
                  },
                  "CallerArn": {
                    "description": "<p>The ARN of the IAM user that you want to use as the simulated caller of the API operations. <code>CallerArn</code> is required if you include a <code>ResourcePolicy</code> so that the policy's <code>Principal</code> element has a value to use in evaluating the policy.</p> <p>You can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2048
                  },
                  "ContextEntries": {
                    "description": "A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permissions policies, the corresponding value is supplied.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "ResourceHandlingOption": {
                    "description": "<p>Specifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.</p> <p>Each of the EC2 scenarios requires that you specify instance, image, and security-group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network-interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html\">Supported Platforms</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p> <b>EC2-Classic-InstanceStore</b> </p> <p>instance, image, security-group</p> </li> <li> <p> <b>EC2-Classic-EBS</b> </p> <p>instance, image, security-group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b> </p> <p>instance, image, security-group, network-interface</p> </li> <li> <p> <b>EC2-VPC-InstanceStore-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet</p> </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance, image, security-group, network-interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet, volume</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  }
                },
                "required": ["PolicyInputList", "ActionNames"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SimulatePolicyResponse" } } }
          },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "PolicyEvaluationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyEvaluationException" } } }
          }
        },
        "x-aws-operation-name": "SimulateCustomPolicy"
      }
    },
    "/#Action=SimulatePrincipalPolicy": {
      "get": {
        "description": "<p>Simulate how a set of IAM policies attached to an IAM entity works with a list of API operations and AWS resources to determine the policies' effective permissions. The entity can be an IAM user, group, or role. If you specify a user, then the simulation also includes all of the policies that are attached to groups that the user belongs to.</p> <p>You can optionally include a list of one or more additional policies specified as strings to include in the simulation. If you want to simulate only policies specified as strings, use <a>SimulateCustomPolicy</a> instead.</p> <p>You can also optionally include one resource-based policy to be evaluated with each of the resources included in the simulation.</p> <p>The simulation does not perform the API operations; it only checks the authorization to determine if the simulated policies allow or deny the operations.</p> <p> <b>Note:</b> This API discloses information about the permissions granted to other users. If you do not want users to see other user's permissions, then consider allowing them to use <a>SimulateCustomPolicy</a> instead.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. You can use the <code>Condition</code> element of an IAM policy to evaluate context keys. To get the list of context keys that the policies require for correct simulation, use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>If the output is long, you can use the <code>MaxItems</code> and <code>Marker</code> parameters to paginate the results.</p>",
        "operationId": "GET SimulatePrincipalPolicy",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "PolicySourceArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "<p>An optional list of additional policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PolicyInputList",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "A list of names of API operations to evaluate in the simulation. Each operation is evaluated for each resource. Each operation must include the service identifier, such as <code>iam:CreateUser</code>.",
            "in": "query",
            "name": "ActionNames",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>A list of ARNs of AWS resources to include in the simulation. If this parameter is not provided, then the value defaults to <code>*</code> (all resources). Each API in the <code>ActionNames</code> parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response.</p> <p>The simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the <code>ResourcePolicy</code> parameter.</p> <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>",
            "in": "query",
            "name": "ResourceArns",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "ResourcePolicy",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 131072,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "description": "An AWS account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN. Examples of resource ARNs include an S3 bucket or object. If <code>ResourceOwner</code> is specified, it is also used as the account owner of any <code>ResourcePolicy</code> included in the simulation. If the <code>ResourceOwner</code> parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in <code>CallerArn</code>. This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user <code>CallerArn</code>.",
            "in": "query",
            "name": "ResourceOwner",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 2048 }
          },
          {
            "description": "<p>The ARN of the IAM user that you want to specify as the simulated caller of the API operations. If you do not specify a <code>CallerArn</code>, it defaults to the ARN of the user that you specify in <code>PolicySourceArn</code>, if you specified a user. If you include both a <code>PolicySourceArn</code> (for example, <code>arn:aws:iam::123456789012:user/David</code>) and a <code>CallerArn</code> (for example, <code>arn:aws:iam::123456789012:user/Bob</code>), the result is that you simulate calling the API operations as Bob, as if Bob had David's policies.</p> <p>You can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.</p> <p> <code>CallerArn</code> is required if you include a <code>ResourcePolicy</code> and the <code>PolicySourceArn</code> is not the ARN for an IAM user. This is required so that the resource-based policy's <code>Principal</code> element has a value to use in evaluating the policy.</p> <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>",
            "in": "query",
            "name": "CallerArn",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 2048 }
          },
          {
            "description": "A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permissions policies, the corresponding value is supplied.",
            "in": "query",
            "name": "ContextEntries",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "description": "<p>Specifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.</p> <p>Each of the EC2 scenarios requires that you specify instance, image, and security group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html\">Supported Platforms</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p> <b>EC2-Classic-InstanceStore</b> </p> <p>instance, image, security group</p> </li> <li> <p> <b>EC2-Classic-EBS</b> </p> <p>instance, image, security group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b> </p> <p>instance, image, security group, network interface</p> </li> <li> <p> <b>EC2-VPC-InstanceStore-Subnet</b> </p> <p>instance, image, security group, network interface, subnet</p> </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance, image, security group, network interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b> </p> <p>instance, image, security group, network interface, subnet, volume</p> </li> </ul>",
            "in": "query",
            "name": "ResourceHandlingOption",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64 }
          },
          {
            "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000 }
          },
          {
            "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
            "in": "query",
            "name": "Marker",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 320, "pattern": "[\\u0020-\\u00FF]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SimulatePrincipalPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SimulatePolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "PolicyEvaluationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyEvaluationException" } } }
          }
        },
        "x-aws-operation-name": "SimulatePrincipalPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Simulate how a set of IAM policies attached to an IAM entity works with a list of API operations and AWS resources to determine the policies' effective permissions. The entity can be an IAM user, group, or role. If you specify a user, then the simulation also includes all of the policies that are attached to groups that the user belongs to.</p> <p>You can optionally include a list of one or more additional policies specified as strings to include in the simulation. If you want to simulate only policies specified as strings, use <a>SimulateCustomPolicy</a> instead.</p> <p>You can also optionally include one resource-based policy to be evaluated with each of the resources included in the simulation.</p> <p>The simulation does not perform the API operations; it only checks the authorization to determine if the simulated policies allow or deny the operations.</p> <p> <b>Note:</b> This API discloses information about the permissions granted to other users. If you do not want users to see other user's permissions, then consider allowing them to use <a>SimulateCustomPolicy</a> instead.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. You can use the <code>Condition</code> element of an IAM policy to evaluate context keys. To get the list of context keys that the policies require for correct simulation, use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>If the output is long, you can use the <code>MaxItems</code> and <code>Marker</code> parameters to paginate the results.</p>",
        "operationId": "POST SimulatePrincipalPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["SimulatePrincipalPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "PolicySourceArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "PolicyInputList": {
                    "description": "<p>An optional list of additional policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "ActionNames": {
                    "description": "A list of names of API operations to evaluate in the simulation. Each operation is evaluated for each resource. Each operation must include the service identifier, such as <code>iam:CreateUser</code>.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "ResourceArns": {
                    "description": "<p>A list of ARNs of AWS resources to include in the simulation. If this parameter is not provided, then the value defaults to <code>*</code> (all resources). Each API in the <code>ActionNames</code> parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response.</p> <p>The simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the <code>ResourcePolicy</code> parameter.</p> <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "ResourcePolicy": {
                    "description": "<p>A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 131072,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  },
                  "ResourceOwner": {
                    "description": "An AWS account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN. Examples of resource ARNs include an S3 bucket or object. If <code>ResourceOwner</code> is specified, it is also used as the account owner of any <code>ResourcePolicy</code> included in the simulation. If the <code>ResourceOwner</code> parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in <code>CallerArn</code>. This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user <code>CallerArn</code>.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2048
                  },
                  "CallerArn": {
                    "description": "<p>The ARN of the IAM user that you want to specify as the simulated caller of the API operations. If you do not specify a <code>CallerArn</code>, it defaults to the ARN of the user that you specify in <code>PolicySourceArn</code>, if you specified a user. If you include both a <code>PolicySourceArn</code> (for example, <code>arn:aws:iam::123456789012:user/David</code>) and a <code>CallerArn</code> (for example, <code>arn:aws:iam::123456789012:user/Bob</code>), the result is that you simulate calling the API operations as Bob, as if Bob had David's policies.</p> <p>You can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.</p> <p> <code>CallerArn</code> is required if you include a <code>ResourcePolicy</code> and the <code>PolicySourceArn</code> is not the ARN for an IAM user. This is required so that the resource-based policy's <code>Principal</code> element has a value to use in evaluating the policy.</p> <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2048
                  },
                  "ContextEntries": {
                    "description": "A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permissions policies, the corresponding value is supplied.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "ResourceHandlingOption": {
                    "description": "<p>Specifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.</p> <p>Each of the EC2 scenarios requires that you specify instance, image, and security group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html\">Supported Platforms</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p> <b>EC2-Classic-InstanceStore</b> </p> <p>instance, image, security group</p> </li> <li> <p> <b>EC2-Classic-EBS</b> </p> <p>instance, image, security group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b> </p> <p>instance, image, security group, network interface</p> </li> <li> <p> <b>EC2-VPC-InstanceStore-Subnet</b> </p> <p>instance, image, security group, network interface, subnet</p> </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance, image, security group, network interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b> </p> <p>instance, image, security group, network interface, subnet, volume</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                  },
                  "MaxItems": {
                    "description": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000
                  },
                  "Marker": {
                    "description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 320,
                    "pattern": "[\\u0020-\\u00FF]+"
                  }
                },
                "required": ["PolicySourceArn", "ActionNames"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/SimulatePolicyResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "PolicyEvaluationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PolicyEvaluationException" } } }
          }
        },
        "x-aws-operation-name": "SimulatePrincipalPolicy"
      }
    },
    "/#Action=TagRole": {
      "get": {
        "description": "<p>Adds one or more tags to an IAM role. The role can be a regular role or a service-linked role. If a tag with the same key name already exists, then that tag is overwritten with the new value.</p> <p>A tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name <i>Project</i> and the value <i>MyImportantProject</i>. Or search for all resources with the key name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Reference tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM user or role that has a specified tag attached. You can also restrict access to only those resources that have a certain tag attached. For examples of policies that show how to use tags to control access, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\">Control Access Using IAM Tags</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p> <b>Cost allocation</b> - Use tags to help track which individuals and teams are using which AWS resources.</p> </li> </ul> <note> <ul> <li> <p>Make sure that you have no invalid tags and that you do not exceed the allowed number of tags per role. In either case, the entire request fails and <i>no</i> tags are added to the role.</p> </li> <li> <p>AWS always interprets the tag <code>Value</code> as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.</p> </li> </ul> </note> <p>For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET TagRole",
        "parameters": [
          {
            "description": "<p>The name of the role that you want to add tags to.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "The list of tags that you want to attach to the role. Each tag consists of a key name and an associated value. You can specify this with a JSON string.",
            "in": "query",
            "name": "Tags",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["TagRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "TagRole"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds one or more tags to an IAM role. The role can be a regular role or a service-linked role. If a tag with the same key name already exists, then that tag is overwritten with the new value.</p> <p>A tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name <i>Project</i> and the value <i>MyImportantProject</i>. Or search for all resources with the key name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Reference tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM user or role that has a specified tag attached. You can also restrict access to only those resources that have a certain tag attached. For examples of policies that show how to use tags to control access, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\">Control Access Using IAM Tags</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p> <b>Cost allocation</b> - Use tags to help track which individuals and teams are using which AWS resources.</p> </li> </ul> <note> <ul> <li> <p>Make sure that you have no invalid tags and that you do not exceed the allowed number of tags per role. In either case, the entire request fails and <i>no</i> tags are added to the role.</p> </li> <li> <p>AWS always interprets the tag <code>Value</code> as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.</p> </li> </ul> </note> <p>For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST TagRole",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["TagRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name of the role that you want to add tags to.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Tags": {
                    "description": "The list of tags that you want to attach to the role. Each tag consists of a key name and an associated value. You can specify this with a JSON string.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["RoleName", "Tags"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "TagRole"
      }
    },
    "/#Action=TagUser": {
      "get": {
        "description": "<p>Adds one or more tags to an IAM user. If a tag with the same key name already exists, then that tag is overwritten with the new value.</p> <p>A tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name <i>Project</i> and the value <i>MyImportantProject</i>. Or search for all resources with the key name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Reference tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM requesting user or to a role that has a specified tag attached. You can also restrict access to only those resources that have a certain tag attached. For examples of policies that show how to use tags to control access, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\">Control Access Using IAM Tags</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p> <b>Cost allocation</b> - Use tags to help track which individuals and teams are using which AWS resources.</p> </li> </ul> <note> <ul> <li> <p>Make sure that you have no invalid tags and that you do not exceed the allowed number of tags per role. In either case, the entire request fails and <i>no</i> tags are added to the role.</p> </li> <li> <p>AWS always interprets the tag <code>Value</code> as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.</p> </li> </ul> </note> <p>For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET TagUser",
        "parameters": [
          {
            "description": "<p>The name of the user that you want to add tags to.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "The list of tags that you want to attach to the user. Each tag consists of a key name and an associated value.",
            "in": "query",
            "name": "Tags",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["TagUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "TagUser"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Adds one or more tags to an IAM user. If a tag with the same key name already exists, then that tag is overwritten with the new value.</p> <p>A tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name <i>Project</i> and the value <i>MyImportantProject</i>. Or search for all resources with the key name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Reference tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM requesting user or to a role that has a specified tag attached. You can also restrict access to only those resources that have a certain tag attached. For examples of policies that show how to use tags to control access, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\">Control Access Using IAM Tags</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p> <b>Cost allocation</b> - Use tags to help track which individuals and teams are using which AWS resources.</p> </li> </ul> <note> <ul> <li> <p>Make sure that you have no invalid tags and that you do not exceed the allowed number of tags per role. In either case, the entire request fails and <i>no</i> tags are added to the role.</p> </li> <li> <p>AWS always interprets the tag <code>Value</code> as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.</p> </li> </ul> </note> <p>For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST TagUser",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["TagUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user that you want to add tags to.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Tags": {
                    "description": "The list of tags that you want to attach to the user. Each tag consists of a key name and an associated value.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["UserName", "Tags"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "483": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "TagUser"
      }
    },
    "/#Action=UntagRole": {
      "get": {
        "description": "Removes the specified tags from the role. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET UntagRole",
        "parameters": [
          {
            "description": "<p>The name of the IAM role from which you want to remove tags.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified role.",
            "in": "query",
            "name": "TagKeys",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["UntagRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UntagRole"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes the specified tags from the role. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST UntagRole",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["UntagRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name of the IAM role from which you want to remove tags.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "TagKeys": {
                    "description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified role.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["RoleName", "TagKeys"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UntagRole"
      }
    },
    "/#Action=UntagUser": {
      "get": {
        "description": "Removes the specified tags from the user. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.",
        "operationId": "GET UntagUser",
        "parameters": [
          {
            "description": "<p>The name of the IAM user from which you want to remove tags.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified user.",
            "in": "query",
            "name": "TagKeys",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["UntagUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UntagUser"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Removes the specified tags from the user. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.",
        "operationId": "POST UntagUser",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["UntagUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user from which you want to remove tags.</p> <p>This parameter accepts (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "TagKeys": {
                    "description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified user.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["UserName", "TagKeys"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UntagUser"
      }
    },
    "/#Action=UpdateAccessKey": {
      "get": {
        "description": "<p>Changes the status of the specified access key from Active to Inactive, or vice versa. This operation can be used to disable a user's key as part of a key rotation workflow.</p> <p>If the <code>UserName</code> is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p> <p>For information about rotating keys, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html\">Managing Keys and Certificates</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET UpdateAccessKey",
        "parameters": [
          {
            "description": "<p>The name of the user whose key you want to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The access key ID of the secret access key you want to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
            "in": "query",
            "name": "AccessKeyId",
            "required": true,
            "schema": { "type": "string", "minLength": 16, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "description": " The status you want to assign to the secret access key. <code>Active</code> means that the key can be used for API calls to AWS, while <code>Inactive</code> means that the key cannot be used.",
            "in": "query",
            "name": "Status",
            "required": true,
            "schema": { "type": "string", "enum": ["Active", "Inactive"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateAccessKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateAccessKey"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Changes the status of the specified access key from Active to Inactive, or vice versa. This operation can be used to disable a user's key as part of a key rotation workflow.</p> <p>If the <code>UserName</code> is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p> <p>For information about rotating keys, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html\">Managing Keys and Certificates</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST UpdateAccessKey",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateAccessKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user whose key you want to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "AccessKeyId": {
                    "description": "<p>The access key ID of the secret access key you want to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
                    "type": "string",
                    "minLength": 16,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  },
                  "Status": {
                    "description": " The status you want to assign to the secret access key. <code>Active</code> means that the key can be used for API calls to AWS, while <code>Inactive</code> means that the key cannot be used.",
                    "type": "string",
                    "enum": ["Active", "Inactive"]
                  }
                },
                "required": ["AccessKeyId", "Status"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateAccessKey"
      }
    },
    "/#Action=UpdateAccountPasswordPolicy": {
      "get": {
        "description": "<p>Updates the password policy settings for the AWS account.</p> <note> <ul> <li> <p>This operation does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter's value reverts to its default value. See the <b>Request Parameters</b> section for each parameter's default value. Also note that some parameters do not allow the default parameter to be explicitly set. Instead, to invoke the default value, do not include that parameter when you invoke the operation.</p> </li> </ul> </note> <p> For more information about using a password policy, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an IAM Password Policy</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET UpdateAccountPasswordPolicy",
        "parameters": [
          {
            "description": "<p>The minimum number of characters allowed in an IAM user password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>6</code>.</p>",
            "in": "query",
            "name": "MinimumPasswordLength",
            "required": false,
            "schema": { "type": "integer", "minimum": 6, "maximum": 128 }
          },
          {
            "description": "<p>Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:</p> <p>! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | '</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one symbol character.</p>",
            "in": "query",
            "name": "RequireSymbols",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "<p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one numeric character.</p>",
            "in": "query",
            "name": "RequireNumbers",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "<p>Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one uppercase character.</p>",
            "in": "query",
            "name": "RequireUppercaseCharacters",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "<p>Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one lowercase character.</p>",
            "in": "query",
            "name": "RequireLowercaseCharacters",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "<p> Allows all IAM users in your account to use the AWS Management Console to change their own passwords. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/HowToPwdIAMUser.html\">Letting IAM Users Change Their Own Passwords</a> in the <i>IAM User Guide</i>.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users in the account do not automatically have permissions to change their own password.</p>",
            "in": "query",
            "name": "AllowUsersToChangePassword",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "<p>The number of days that an IAM user password is valid.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM user passwords never expire.</p>",
            "in": "query",
            "name": "MaxPasswordAge",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 1095 }
          },
          {
            "description": "<p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM users are not prevented from reusing previous passwords.</p>",
            "in": "query",
            "name": "PasswordReusePrevention",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "maximum": 24 }
          },
          {
            "description": "<p>Prevents IAM users from setting a new password after their password has expired. The IAM user cannot be accessed until an administrator resets the password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users can change their passwords after they expire and continue to sign in as the user.</p>",
            "in": "query",
            "name": "HardExpiry",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateAccountPasswordPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateAccountPasswordPolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the password policy settings for the AWS account.</p> <note> <ul> <li> <p>This operation does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter's value reverts to its default value. See the <b>Request Parameters</b> section for each parameter's default value. Also note that some parameters do not allow the default parameter to be explicitly set. Instead, to invoke the default value, do not include that parameter when you invoke the operation.</p> </li> </ul> </note> <p> For more information about using a password policy, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an IAM Password Policy</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST UpdateAccountPasswordPolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateAccountPasswordPolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "MinimumPasswordLength": {
                    "description": "<p>The minimum number of characters allowed in an IAM user password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>6</code>.</p>",
                    "type": "integer",
                    "minimum": 6,
                    "maximum": 128
                  },
                  "RequireSymbols": {
                    "description": "<p>Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:</p> <p>! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | '</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one symbol character.</p>",
                    "type": "boolean"
                  },
                  "RequireNumbers": {
                    "description": "<p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one numeric character.</p>",
                    "type": "boolean"
                  },
                  "RequireUppercaseCharacters": {
                    "description": "<p>Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one uppercase character.</p>",
                    "type": "boolean"
                  },
                  "RequireLowercaseCharacters": {
                    "description": "<p>Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one lowercase character.</p>",
                    "type": "boolean"
                  },
                  "AllowUsersToChangePassword": {
                    "description": "<p> Allows all IAM users in your account to use the AWS Management Console to change their own passwords. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/HowToPwdIAMUser.html\">Letting IAM Users Change Their Own Passwords</a> in the <i>IAM User Guide</i>.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users in the account do not automatically have permissions to change their own password.</p>",
                    "type": "boolean"
                  },
                  "MaxPasswordAge": {
                    "description": "<p>The number of days that an IAM user password is valid.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM user passwords never expire.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1095
                  },
                  "PasswordReusePrevention": {
                    "description": "<p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM users are not prevented from reusing previous passwords.</p>",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 24
                  },
                  "HardExpiry": {
                    "description": "<p>Prevents IAM users from setting a new password after their password has expired. The IAM user cannot be accessed until an administrator resets the password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users can change their passwords after they expire and continue to sign in as the user.</p>",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateAccountPasswordPolicy"
      }
    },
    "/#Action=UpdateAssumeRolePolicy": {
      "get": {
        "description": "Updates the policy that grants an IAM entity permission to assume a role. This is typically referred to as the \"role trust policy\". For more information about roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html\">Using Roles to Delegate Permissions and Federate Identities</a>.",
        "operationId": "GET UpdateAssumeRolePolicy",
        "parameters": [
          {
            "description": "<p>The name of the role to update with the new policy.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The policy that grants an entity permission to assume the role.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PolicyDocument",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 131072,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateAssumeRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateAssumeRolePolicy"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates the policy that grants an IAM entity permission to assume a role. This is typically referred to as the \"role trust policy\". For more information about roles, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html\">Using Roles to Delegate Permissions and Federate Identities</a>.",
        "operationId": "POST UpdateAssumeRolePolicy",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateAssumeRolePolicy"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "<p>The name of the role to update with the new policy.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "PolicyDocument": {
                    "description": "<p>The policy that grants an entity permission to assume the role.</p> <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 131072,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  }
                },
                "required": ["RoleName", "PolicyDocument"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "MalformedPolicyDocumentException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedPolicyDocumentException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateAssumeRolePolicy"
      }
    },
    "/#Action=UpdateGroup": {
      "get": {
        "description": "<p>Updates the name and/or the path of the specified IAM group.</p> <important> <p> You should understand the implications of changing a group's path or name. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html\">Renaming Users and Groups</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p>The person making the request (the principal), must have permission to change the role group with the old name and the new name. For example, to change the group named <code>Managers</code> to <code>MGRs</code>, the principal must have a policy that allows them to update both groups. If the principal has permission to update the <code>Managers</code> group, but not the <code>MGRs</code> group, then the update fails. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html\">Access Management</a>. </p> </note>",
        "operationId": "GET UpdateGroup",
        "parameters": [
          {
            "description": "<p>Name of the IAM group to update. If you're changing the name of the group, this is the original name.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "GroupName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>New path for the IAM group. Only include this if changing the group's path.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "NewPath",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
            }
          },
          {
            "description": "<p>New name for the IAM group. Only include this if changing the group's name.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
            "in": "query",
            "name": "NewGroupName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateGroup"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the name and/or the path of the specified IAM group.</p> <important> <p> You should understand the implications of changing a group's path or name. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html\">Renaming Users and Groups</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p>The person making the request (the principal), must have permission to change the role group with the old name and the new name. For example, to change the group named <code>Managers</code> to <code>MGRs</code>, the principal must have a policy that allows them to update both groups. If the principal has permission to update the <code>Managers</code> group, but not the <code>MGRs</code> group, then the update fails. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html\">Access Management</a>. </p> </note>",
        "operationId": "POST UpdateGroup",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateGroup"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "GroupName": {
                    "description": "<p>Name of the IAM group to update. If you're changing the name of the group, this is the original name.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "NewPath": {
                    "description": "<p>New path for the IAM group. Only include this if changing the group's path.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
                  },
                  "NewGroupName": {
                    "description": "<p>New name for the IAM group. Only include this if changing the group's name.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["GroupName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateGroup"
      }
    },
    "/#Action=UpdateLoginProfile": {
      "get": {
        "description": "<p>Changes the password for the specified IAM user.</p> <p>IAM users can change their own passwords by calling <a>ChangePassword</a>. For more information about modifying passwords, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "GET UpdateLoginProfile",
        "parameters": [
          {
            "description": "<p>The name of the user whose password you want to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The new password for the specified IAM user.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul> <p>However, the format can be further restricted by the account administrator by setting a password policy on the AWS account. For more information, see <a>UpdateAccountPasswordPolicy</a>.</p>",
            "in": "query",
            "name": "Password",
            "required": false,
            "schema": {
              "type": "string",
              "format": "password",
              "minLength": 1,
              "maxLength": 128,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "description": "Allows this new password to be used only once by requiring the specified IAM user to set a new password on next sign-in.",
            "in": "query",
            "name": "PasswordResetRequired",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateLoginProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "PasswordPolicyViolationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PasswordPolicyViolationException" } } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateLoginProfile"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Changes the password for the specified IAM user.</p> <p>IAM users can change their own passwords by calling <a>ChangePassword</a>. For more information about modifying passwords, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>IAM User Guide</i>.</p>",
        "operationId": "POST UpdateLoginProfile",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateLoginProfile"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user whose password you want to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Password": {
                    "description": "<p>The new password for the specified IAM user.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul> <p>However, the format can be further restricted by the account administrator by setting a password policy on the AWS account. For more information, see <a>UpdateAccountPasswordPolicy</a>.</p>",
                    "type": "string",
                    "format": "password",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  },
                  "PasswordResetRequired": {
                    "description": "Allows this new password to be used only once by requiring the specified IAM user to set a new password on next sign-in.",
                    "type": "boolean"
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "PasswordPolicyViolationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/PasswordPolicyViolationException" } } }
          },
          "483": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateLoginProfile"
      }
    },
    "/#Action=UpdateOpenIDConnectProviderThumbprint": {
      "get": {
        "description": "<p>Replaces the existing list of server certificate thumbprints associated with an OpenID Connect (OIDC) provider resource object with a new list of thumbprints.</p> <p>The list that you pass with this operation completely replaces the existing list of thumbprints. (The lists are not merged.)</p> <p>Typically, you need to update a thumbprint only when the identity provider's certificate changes, which occurs rarely. However, if the provider's certificate <i>does</i> change, any attempt to assume an IAM role that specifies the OIDC provider as a principal fails until the certificate thumbprint is updated.</p> <note> <p>Trust for the OIDC provider is derived from the provider's certificate and is validated by the thumbprint. Therefore, it is best to limit access to the <code>UpdateOpenIDConnectProviderThumbprint</code> operation to highly privileged users.</p> </note>",
        "operationId": "GET UpdateOpenIDConnectProviderThumbprint",
        "parameters": [
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "OpenIDConnectProviderArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "description": "Contains a list of thumbprints of identity provider server certificates.",
            "in": "query",
            "name": "ThumbprintList",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateOpenIDConnectProviderThumbprint"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateOpenIDConnectProviderThumbprint"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Replaces the existing list of server certificate thumbprints associated with an OpenID Connect (OIDC) provider resource object with a new list of thumbprints.</p> <p>The list that you pass with this operation completely replaces the existing list of thumbprints. (The lists are not merged.)</p> <p>Typically, you need to update a thumbprint only when the identity provider's certificate changes, which occurs rarely. However, if the provider's certificate <i>does</i> change, any attempt to assume an IAM role that specifies the OIDC provider as a principal fails until the certificate thumbprint is updated.</p> <note> <p>Trust for the OIDC provider is derived from the provider's certificate and is validated by the thumbprint. Therefore, it is best to limit access to the <code>UpdateOpenIDConnectProviderThumbprint</code> operation to highly privileged users.</p> </note>",
        "operationId": "POST UpdateOpenIDConnectProviderThumbprint",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateOpenIDConnectProviderThumbprint"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "OpenIDConnectProviderArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  },
                  "ThumbprintList": {
                    "description": "Contains a list of thumbprints of identity provider server certificates.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["OpenIDConnectProviderArn", "ThumbprintList"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateOpenIDConnectProviderThumbprint"
      }
    },
    "/#Action=UpdateRole": {
      "get": {
        "description": "Updates the description or maximum session duration setting of a role.",
        "operationId": "GET UpdateRole",
        "parameters": [
          {
            "description": "The name of the role that you want to modify.",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "The new description that you want to apply to the specified role.",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": { "type": "string", "maxLength": 1000, "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*" }
          },
          {
            "description": "<p>The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.</p> <p>Anyone who assumes the role from the AWS CLI or API can use the <code>DurationSeconds</code> API parameter or the <code>duration-seconds</code> CLI parameter to request a longer session. The <code>MaxSessionDuration</code> setting determines the maximum duration that can be requested using the <code>DurationSeconds</code> parameter. If users don't specify a value for the <code>DurationSeconds</code> parameter, their security credentials are valid for one hour by default. This applies when you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI operations but does not apply when you use those operations to create a console URL. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\">Using IAM Roles</a> in the <i>IAM User Guide</i>.</p>",
            "in": "query",
            "name": "MaxSessionDuration",
            "required": false,
            "schema": { "type": "integer", "minimum": 3600, "maximum": 43200 }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["UpdateRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UpdateRoleResponse" } } }
          },
          "480": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateRole"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Updates the description or maximum session duration setting of a role.",
        "operationId": "POST UpdateRole",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["UpdateRole"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "The name of the role that you want to modify.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Description": {
                    "description": "The new description that you want to apply to the specified role.",
                    "type": "string",
                    "maxLength": 1000,
                    "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*"
                  },
                  "MaxSessionDuration": {
                    "description": "<p>The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.</p> <p>Anyone who assumes the role from the AWS CLI or API can use the <code>DurationSeconds</code> API parameter or the <code>duration-seconds</code> CLI parameter to request a longer session. The <code>MaxSessionDuration</code> setting determines the maximum duration that can be requested using the <code>DurationSeconds</code> parameter. If users don't specify a value for the <code>DurationSeconds</code> parameter, their security credentials are valid for one hour by default. This applies when you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI operations but does not apply when you use those operations to create a console URL. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\">Using IAM Roles</a> in the <i>IAM User Guide</i>.</p>",
                    "type": "integer",
                    "minimum": 3600,
                    "maximum": 43200
                  }
                },
                "required": ["RoleName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UpdateRoleResponse" } } }
          },
          "480": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateRole"
      }
    },
    "/#Action=UpdateRoleDescription": {
      "get": {
        "description": "<p>Use <a>UpdateRole</a> instead.</p> <p>Modifies only the description of a role. This operation performs the same function as the <code>Description</code> parameter in the <code>UpdateRole</code> operation.</p>",
        "operationId": "GET UpdateRoleDescription",
        "parameters": [
          {
            "description": "The name of the role that you want to modify.",
            "in": "query",
            "name": "RoleName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "The new description that you want to apply to the specified role.",
            "in": "query",
            "name": "Description",
            "required": true,
            "schema": { "type": "string", "maxLength": 1000, "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateRoleDescription"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UpdateRoleDescriptionResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateRoleDescription"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Use <a>UpdateRole</a> instead.</p> <p>Modifies only the description of a role. This operation performs the same function as the <code>Description</code> parameter in the <code>UpdateRole</code> operation.</p>",
        "operationId": "POST UpdateRoleDescription",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateRoleDescription"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "RoleName": {
                    "description": "The name of the role that you want to modify.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "Description": {
                    "description": "The new description that you want to apply to the specified role.",
                    "type": "string",
                    "maxLength": 1000,
                    "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*"
                  }
                },
                "required": ["RoleName", "Description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UpdateRoleDescriptionResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "UnmodifiableEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UnmodifiableEntityException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateRoleDescription"
      }
    },
    "/#Action=UpdateSAMLProvider": {
      "get": {
        "description": "<p>Updates the metadata document for an existing SAML provider resource object.</p> <note> <p>This operation requires <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> </note>",
        "operationId": "GET UpdateSAMLProvider",
        "parameters": [
          {
            "description": "An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.",
            "in": "query",
            "name": "SAMLMetadataDocument",
            "required": true,
            "schema": { "type": "string", "minLength": 1000, "maxLength": 10000000 }
          },
          {
            "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
            "in": "query",
            "name": "SAMLProviderArn",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 2048 }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateSAMLProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UpdateSAMLProviderResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateSAMLProvider"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the metadata document for an existing SAML provider resource object.</p> <note> <p>This operation requires <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p> </note>",
        "operationId": "POST UpdateSAMLProvider",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateSAMLProvider"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "SAMLMetadataDocument": {
                    "description": "An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.",
                    "type": "string",
                    "minLength": 1000,
                    "maxLength": 10000000
                  },
                  "SAMLProviderArn": {
                    "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 2048
                  }
                },
                "required": ["SAMLMetadataDocument", "SAMLProviderArn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UpdateSAMLProviderResponse" } } }
          },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "InvalidInputException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidInputException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateSAMLProvider"
      }
    },
    "/#Action=UpdateSSHPublicKey": {
      "get": {
        "description": "<p>Sets the status of an IAM user's SSH public key to active or inactive. SSH public keys that are inactive cannot be used for authentication. This operation can be used to disable a user's SSH public key as part of a key rotation work flow.</p> <p>The SSH public key affected by this operation is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
        "operationId": "GET UpdateSSHPublicKey",
        "parameters": [
          {
            "description": "<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
            "in": "query",
            "name": "SSHPublicKeyId",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "description": "The status to assign to the SSH public key. <code>Active</code> means that the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means that the key cannot be used.",
            "in": "query",
            "name": "Status",
            "required": true,
            "schema": { "type": "string", "enum": ["Active", "Inactive"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateSSHPublicKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "UpdateSSHPublicKey"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Sets the status of an IAM user's SSH public key to active or inactive. SSH public keys that are inactive cannot be used for authentication. This operation can be used to disable a user's SSH public key as part of a key rotation work flow.</p> <p>The SSH public key affected by this operation is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
        "operationId": "POST UpdateSSHPublicKey",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateSSHPublicKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "SSHPublicKeyId": {
                    "description": "<p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  },
                  "Status": {
                    "description": "The status to assign to the SSH public key. <code>Active</code> means that the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means that the key cannot be used.",
                    "type": "string",
                    "enum": ["Active", "Inactive"]
                  }
                },
                "required": ["UserName", "SSHPublicKeyId", "Status"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "UpdateSSHPublicKey"
      }
    },
    "/#Action=UpdateServerCertificate": {
      "get": {
        "description": "<p>Updates the name and/or the path of the specified server certificate stored in IAM.</p> <p>For more information about working with server certificates, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html\">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic also includes a list of AWS services that can use the server certificates that you manage with IAM.</p> <important> <p>You should understand the implications of changing a server certificate's path or name. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs_manage.html#RenamingServerCerts\">Renaming a Server Certificate</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p>The person making the request (the principal), must have permission to change the server certificate with the old name and the new name. For example, to change the certificate named <code>ProductionCert</code> to <code>ProdCert</code>, the principal must have a policy that allows them to update both certificates. If the principal has permission to update the <code>ProductionCert</code> group, but not the <code>ProdCert</code> certificate, then the update fails. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html\">Access Management</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "GET UpdateServerCertificate",
        "parameters": [
          {
            "description": "<p>The name of the server certificate that you want to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "ServerCertificateName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The new path for the server certificate. Include this only if you are updating the server certificate's path.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "NewPath",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
            }
          },
          {
            "description": "<p>The new name for the server certificate. Include this only if you are updating the server certificate's name. The name of the certificate cannot contain any spaces.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "NewServerCertificateName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateServerCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateServerCertificate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the name and/or the path of the specified server certificate stored in IAM.</p> <p>For more information about working with server certificates, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html\">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic also includes a list of AWS services that can use the server certificates that you manage with IAM.</p> <important> <p>You should understand the implications of changing a server certificate's path or name. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs_manage.html#RenamingServerCerts\">Renaming a Server Certificate</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p>The person making the request (the principal), must have permission to change the server certificate with the old name and the new name. For example, to change the certificate named <code>ProductionCert</code> to <code>ProdCert</code>, the principal must have a policy that allows them to update both certificates. If the principal has permission to update the <code>ProductionCert</code> group, but not the <code>ProdCert</code> certificate, then the update fails. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html\">Access Management</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "POST UpdateServerCertificate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateServerCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ServerCertificateName": {
                    "description": "<p>The name of the server certificate that you want to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "NewPath": {
                    "description": "<p>The new path for the server certificate. Include this only if you are updating the server certificate's path.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
                  },
                  "NewServerCertificateName": {
                    "description": "<p>The new name for the server certificate. Include this only if you are updating the server certificate's name. The name of the certificate cannot contain any spaces.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["ServerCertificateName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "483": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateServerCertificate"
      }
    },
    "/#Action=UpdateServiceSpecificCredential": {
      "get": {
        "description": "Sets the status of a service-specific credential to <code>Active</code> or <code>Inactive</code>. Service-specific credentials that are inactive cannot be used for authentication to the service. This operation can be used to disable a user's service-specific credential as part of a credential rotation work flow.",
        "operationId": "GET UpdateServiceSpecificCredential",
        "parameters": [
          {
            "description": "<p>The name of the IAM user associated with the service-specific credential. If you do not specify this value, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
            "in": "query",
            "name": "ServiceSpecificCredentialId",
            "required": true,
            "schema": { "type": "string", "minLength": 20, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "description": "The status to be assigned to the service-specific credential.",
            "in": "query",
            "name": "Status",
            "required": true,
            "schema": { "type": "string", "enum": ["Active", "Inactive"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateServiceSpecificCredential"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "UpdateServiceSpecificCredential"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "Sets the status of a service-specific credential to <code>Active</code> or <code>Inactive</code>. Service-specific credentials that are inactive cannot be used for authentication to the service. This operation can be used to disable a user's service-specific credential as part of a credential rotation work flow.",
        "operationId": "POST UpdateServiceSpecificCredential",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateServiceSpecificCredential"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user associated with the service-specific credential. If you do not specify this value, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "ServiceSpecificCredentialId": {
                    "description": "<p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  },
                  "Status": {
                    "description": "The status to be assigned to the service-specific credential.",
                    "type": "string",
                    "enum": ["Active", "Inactive"]
                  }
                },
                "required": ["ServiceSpecificCredentialId", "Status"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          }
        },
        "x-aws-operation-name": "UpdateServiceSpecificCredential"
      }
    },
    "/#Action=UpdateSigningCertificate": {
      "get": {
        "description": "<p>Changes the status of the specified user signing certificate from active to disabled, or vice versa. This operation can be used to disable an IAM user's signing certificate as part of a certificate rotation work flow.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p>",
        "operationId": "GET UpdateSigningCertificate",
        "parameters": [
          {
            "description": "<p>The name of the IAM user the signing certificate belongs to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The ID of the signing certificate you want to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
            "in": "query",
            "name": "CertificateId",
            "required": true,
            "schema": { "type": "string", "minLength": 24, "maxLength": 128, "pattern": "[\\w]+" }
          },
          {
            "description": " The status you want to assign to the certificate. <code>Active</code> means that the certificate can be used for API calls to AWS <code>Inactive</code> means that the certificate cannot be used.",
            "in": "query",
            "name": "Status",
            "required": true,
            "schema": { "type": "string", "enum": ["Active", "Inactive"] }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateSigningCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateSigningCertificate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Changes the status of the specified user signing certificate from active to disabled, or vice versa. This operation can be used to disable an IAM user's signing certificate as part of a certificate rotation work flow.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p>",
        "operationId": "POST UpdateSigningCertificate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UpdateSigningCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user the signing certificate belongs to.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "CertificateId": {
                    "description": "<p>The ID of the signing certificate you want to update.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>",
                    "type": "string",
                    "minLength": 24,
                    "maxLength": 128,
                    "pattern": "[\\w]+"
                  },
                  "Status": {
                    "description": " The status you want to assign to the certificate. <code>Active</code> means that the certificate can be used for API calls to AWS <code>Inactive</code> means that the certificate cannot be used.",
                    "type": "string",
                    "enum": ["Active", "Inactive"]
                  }
                },
                "required": ["CertificateId", "Status"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateSigningCertificate"
      }
    },
    "/#Action=UpdateUser": {
      "get": {
        "description": "<p>Updates the name and/or the path of the specified IAM user.</p> <important> <p> You should understand the implications of changing an IAM user's path or name. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_manage.html#id_users_renaming\">Renaming an IAM User</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups_manage_rename.html\">Renaming an IAM Group</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p> To change a user name, the requester must have appropriate permissions on both the source object and the target object. For example, to change Bob to Robert, the entity making the request must have permission on Bob and Robert, or must have permission on all (*). For more information about permissions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html\">Permissions and Policies</a>. </p> </note>",
        "operationId": "GET UpdateUser",
        "parameters": [
          {
            "description": "<p>Name of the user to update. If you're changing the name of the user, this is the original user name.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>New path for the IAM user. Include this parameter only if you're changing the user's path.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
            "in": "query",
            "name": "NewPath",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
            }
          },
          {
            "description": "<p>New name for the user. Include this parameter only if you're changing the user's name.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
            "in": "query",
            "name": "NewUserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["UpdateUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "483": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "484": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateUser"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Updates the name and/or the path of the specified IAM user.</p> <important> <p> You should understand the implications of changing an IAM user's path or name. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_manage.html#id_users_renaming\">Renaming an IAM User</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups_manage_rename.html\">Renaming an IAM Group</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p> To change a user name, the requester must have appropriate permissions on both the source object and the target object. For example, to change Bob to Robert, the entity making the request must have permission on Bob and Robert, or must have permission on all (*). For more information about permissions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html\">Permissions and Policies</a>. </p> </note>",
        "operationId": "POST UpdateUser",
        "parameters": [
          { "in": "query", "name": "Action", "required": true, "schema": { "type": "string", "enum": ["UpdateUser"] } },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>Name of the user to update. If you're changing the name of the user, this is the original user name.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "NewPath": {
                    "description": "<p>New path for the IAM user. Include this parameter only if you're changing the user's path.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
                  },
                  "NewUserName": {
                    "description": "<p>New name for the user. Include this parameter only if you're changing the user's name.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  }
                },
                "required": ["UserName"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "480": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "481": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "482": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "483": {
            "description": "EntityTemporarilyUnmodifiableException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/EntityTemporarilyUnmodifiableException" } }
            }
          },
          "484": {
            "description": "ConcurrentModificationException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ConcurrentModificationException" } } }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UpdateUser"
      }
    },
    "/#Action=UploadSSHPublicKey": {
      "get": {
        "description": "<p>Uploads an SSH public key and associates it with the specified IAM user.</p> <p>The SSH public key uploaded by this operation can be used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
        "operationId": "GET UploadSSHPublicKey",
        "parameters": [
          {
            "description": "<p>The name of the IAM user to associate the SSH public key with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 64, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The SSH public key. The public key must be encoded in ssh-rsa format or PEM format. The minimum bit-length of the public key is 2048 bits. For example, you can generate a 2048-bit key, and the resulting PEM file is 1679 bytes long.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "SSHPublicKeyBody",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 16384,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UploadSSHPublicKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UploadSSHPublicKeyResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "InvalidPublicKeyException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidPublicKeyException" } } }
          },
          "483": {
            "description": "DuplicateSSHPublicKeyException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateSSHPublicKeyException" } } }
          },
          "484": {
            "description": "UnrecognizedPublicKeyEncodingException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/UnrecognizedPublicKeyEncodingException" } }
            }
          }
        },
        "x-aws-operation-name": "UploadSSHPublicKey"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Uploads an SSH public key and associates it with the specified IAM user.</p> <p>The SSH public key uploaded by this operation can be used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
        "operationId": "POST UploadSSHPublicKey",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UploadSSHPublicKey"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the IAM user to associate the SSH public key with.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "SSHPublicKeyBody": {
                    "description": "<p>The SSH public key. The public key must be encoded in ssh-rsa format or PEM format. The minimum bit-length of the public key is 2048 bits. For example, you can generate a 2048-bit key, and the resulting PEM file is 1679 bytes long.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 16384,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  }
                },
                "required": ["UserName", "SSHPublicKeyBody"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UploadSSHPublicKeyResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "482": {
            "description": "InvalidPublicKeyException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidPublicKeyException" } } }
          },
          "483": {
            "description": "DuplicateSSHPublicKeyException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateSSHPublicKeyException" } } }
          },
          "484": {
            "description": "UnrecognizedPublicKeyEncodingException",
            "content": {
              "text/xml": { "schema": { "$ref": "#/components/schemas/UnrecognizedPublicKeyEncodingException" } }
            }
          }
        },
        "x-aws-operation-name": "UploadSSHPublicKey"
      }
    },
    "/#Action=UploadServerCertificate": {
      "get": {
        "description": "<p>Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded.</p> <p>We recommend that you use <a href=\"https://docs.aws.amazon.com/acm/\">AWS Certificate Manager</a> to provision, manage, and deploy your server certificates. With ACM you can request a certificate, deploy it to AWS resources, and let ACM handle certificate renewals for you. Certificates provided by ACM are free. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">AWS Certificate Manager User Guide</a>.</p> <p>For more information about working with server certificates, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html\">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic includes a list of AWS services that can use the server certificates that you manage with IAM.</p> <p>For information about the number of server certificates you can upload, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html\">Limitations on IAM Entities and Objects</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because the body of the public key certificate, private key, and the certificate chain can be large, you should use POST rather than GET when calling <code>UploadServerCertificate</code>. For information about setting up signatures and authorization through the API, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about using the Query API with IAM, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/programming.html\">Calling the API by Making HTTP Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "GET UploadServerCertificate",
        "parameters": [
          {
            "description": "<p>The path for the server certificate. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p> <note> <p> If you are uploading a server certificate specifically for use with Amazon CloudFront distributions, you must specify a path using the <code>path</code> parameter. The path must begin with <code>/cloudfront</code> and must include a trailing slash (for example, <code>/cloudfront/test/</code>).</p> </note>",
            "in": "query",
            "name": "Path",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
            }
          },
          {
            "description": "<p>The name for the server certificate. Do not include the path in this value. The name of the certificate cannot contain any spaces.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "ServerCertificateName",
            "required": true,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The contents of the public key certificate in PEM-encoded format.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "CertificateBody",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 16384,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "description": "<p>The contents of the private key in PEM-encoded format.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "PrivateKey",
            "required": true,
            "schema": {
              "type": "string",
              "format": "password",
              "minLength": 1,
              "maxLength": 16384,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "description": "<p>The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "CertificateChain",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 2097152,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UploadServerCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UploadServerCertificateResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "MalformedCertificateException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedCertificateException" } } }
          },
          "483": {
            "description": "KeyPairMismatchException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/KeyPairMismatchException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UploadServerCertificate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded.</p> <p>We recommend that you use <a href=\"https://docs.aws.amazon.com/acm/\">AWS Certificate Manager</a> to provision, manage, and deploy your server certificates. With ACM you can request a certificate, deploy it to AWS resources, and let ACM handle certificate renewals for you. Certificates provided by ACM are free. For more information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">AWS Certificate Manager User Guide</a>.</p> <p>For more information about working with server certificates, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html\">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic includes a list of AWS services that can use the server certificates that you manage with IAM.</p> <p>For information about the number of server certificates you can upload, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html\">Limitations on IAM Entities and Objects</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because the body of the public key certificate, private key, and the certificate chain can be large, you should use POST rather than GET when calling <code>UploadServerCertificate</code>. For information about setting up signatures and authorization through the API, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about using the Query API with IAM, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/programming.html\">Calling the API by Making HTTP Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "POST UploadServerCertificate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UploadServerCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "Path": {
                    "description": "<p>The path for the server certificate. For more information about paths, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021) through the DEL character (\\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p> <note> <p> If you are uploading a server certificate specifically for use with Amazon CloudFront distributions, you must specify a path using the <code>path</code> parameter. The path must begin with <code>/cloudfront</code> and must include a trailing slash (for example, <code>/cloudfront/test/</code>).</p> </note>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 512,
                    "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)"
                  },
                  "ServerCertificateName": {
                    "description": "<p>The name for the server certificate. Do not include the path in this value. The name of the certificate cannot contain any spaces.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "CertificateBody": {
                    "description": "<p>The contents of the public key certificate in PEM-encoded format.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 16384,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  },
                  "PrivateKey": {
                    "description": "<p>The contents of the private key in PEM-encoded format.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "format": "password",
                    "minLength": 1,
                    "maxLength": 16384,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  },
                  "CertificateChain": {
                    "description": "<p>The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2097152,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  }
                },
                "required": ["ServerCertificateName", "CertificateBody", "PrivateKey"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UploadServerCertificateResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "MalformedCertificateException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedCertificateException" } } }
          },
          "483": {
            "description": "KeyPairMismatchException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/KeyPairMismatchException" } } }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UploadServerCertificate"
      }
    },
    "/#Action=UploadSigningCertificate": {
      "get": {
        "description": "<p>Uploads an X.509 signing certificate and associates it with the specified IAM user. Some AWS services use X.509 signing certificates to validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <code>Active</code>.</p> <p>If the <code>UserName</code> is not specified, the IAM user name is determined implicitly based on the AWS access key ID used to sign the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p> <note> <p>Because the body of an X.509 certificate can be large, you should use POST rather than GET when calling <code>UploadSigningCertificate</code>. For information about setting up signatures and authorization through the API, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about using the Query API with IAM, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "GET UploadSigningCertificate",
        "parameters": [
          {
            "description": "<p>The name of the user the signing certificate is for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
            "in": "query",
            "name": "UserName",
            "required": false,
            "schema": { "type": "string", "minLength": 1, "maxLength": 128, "pattern": "[\\w+=,.@-]+" }
          },
          {
            "description": "<p>The contents of the signing certificate.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
            "in": "query",
            "name": "CertificateBody",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 16384,
              "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
            }
          },
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UploadSigningCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UploadSigningCertificateResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "MalformedCertificateException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedCertificateException" } } }
          },
          "483": {
            "description": "InvalidCertificateException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidCertificateException" } } }
          },
          "484": {
            "description": "DuplicateCertificateException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateCertificateException" } } }
          },
          "485": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UploadSigningCertificate"
      },
      "parameters": [
        { "$ref": "#/components/parameters/X-Amz-Content-Sha256" },
        { "$ref": "#/components/parameters/X-Amz-Date" },
        { "$ref": "#/components/parameters/X-Amz-Algorithm" },
        { "$ref": "#/components/parameters/X-Amz-Credential" },
        { "$ref": "#/components/parameters/X-Amz-Security-Token" },
        { "$ref": "#/components/parameters/X-Amz-Signature" },
        { "$ref": "#/components/parameters/X-Amz-SignedHeaders" }
      ],
      "post": {
        "description": "<p>Uploads an X.509 signing certificate and associates it with the specified IAM user. Some AWS services use X.509 signing certificates to validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <code>Active</code>.</p> <p>If the <code>UserName</code> is not specified, the IAM user name is determined implicitly based on the AWS access key ID used to sign the request. This operation works for access keys under the AWS account. Consequently, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p> <note> <p>Because the body of an X.509 certificate can be large, you should use POST rather than GET when calling <code>UploadSigningCertificate</code>. For information about setting up signatures and authorization through the API, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about using the Query API with IAM, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>",
        "operationId": "POST UploadSigningCertificate",
        "parameters": [
          {
            "in": "query",
            "name": "Action",
            "required": true,
            "schema": { "type": "string", "enum": ["UploadSigningCertificate"] }
          },
          { "in": "query", "name": "Version", "required": true, "schema": { "type": "string", "enum": ["2010-05-08"] } }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "description": "<p>The name of the user the signing certificate is for.</p> <p>This parameter allows (through its <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "[\\w+=,.@-]+"
                  },
                  "CertificateBody": {
                    "description": "<p>The contents of the signing certificate.</p> <p>The <a href=\"http://wikipedia.org/wiki/regex\">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF)</p> </li> <li> <p>The special characters tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)</p> </li> </ul>",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 16384,
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
                  }
                },
                "required": ["CertificateBody"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/UploadSigningCertificateResponse" } } }
          },
          "480": {
            "description": "LimitExceededException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/LimitExceededException" } } }
          },
          "481": {
            "description": "EntityAlreadyExistsException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/EntityAlreadyExistsException" } } }
          },
          "482": {
            "description": "MalformedCertificateException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/MalformedCertificateException" } } }
          },
          "483": {
            "description": "InvalidCertificateException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/InvalidCertificateException" } } }
          },
          "484": {
            "description": "DuplicateCertificateException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/DuplicateCertificateException" } } }
          },
          "485": {
            "description": "NoSuchEntityException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/NoSuchEntityException" } } }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": { "text/xml": { "schema": { "$ref": "#/components/schemas/ServiceFailureException" } } }
          }
        },
        "x-aws-operation-name": "UploadSigningCertificate"
      }
    }
  },
  "servers": [
    { "description": "The general IAM multi-region endpoint", "url": "https://iam.amazonaws.com", "variables": {} },
    {
      "description": "The general IAM endpoint for AWS GovCloud (US) and AWS GovCloud (US-East)",
      "url": "http://iam.us-gov.amazonaws.com",
      "variables": {}
    },
    {
      "description": "The general IAM endpoint for AWS GovCloud (US) and AWS GovCloud (US-East)",
      "url": "https://iam.us-gov.amazonaws.com",
      "variables": {}
    },
    {
      "description": "The IAM endpoint for China (Beijing) and China (Ningxia)",
      "url": "http://iam.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    },
    {
      "description": "The IAM endpoint for China (Beijing) and China (Ningxia)",
      "url": "https://iam.{region}.amazonaws.com.cn",
      "variables": {
        "region": { "default": "cn-north-1", "description": "The AWS region", "enum": ["cn-north-1", "cn-northwest-1"] }
      }
    }
  ],
  "components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Date": { "in": "header", "name": "X-Amz-Date", "required": false, "schema": { "type": "string" } },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "schema": { "type": "string" }
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "schema": { "type": "string" }
      }
    },
    "requestBodies": {
      "POST_DeleteSAMLProvider": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "SAMLProviderArn": {
                  "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                  "type": "string",
                  "minLength": 20,
                  "maxLength": 2048
                }
              },
              "required": ["SAMLProviderArn"]
            }
          }
        }
      },
      "POST_DeleteOpenIDConnectProvider": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "OpenIDConnectProviderArn": {
                  "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                  "type": "string",
                  "minLength": 20,
                  "maxLength": 2048
                }
              },
              "required": ["OpenIDConnectProviderArn"]
            }
          }
        }
      },
      "POST_DeletePolicy": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "PolicyArn": {
                  "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
                  "type": "string",
                  "minLength": 20,
                  "maxLength": 2048
                }
              },
              "required": ["PolicyArn"]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "hmac": {
        "description": "Amazon Signature authorization v4",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AccessDetail": {
        "description": "<p>An object that contains details about when a principal in the reported AWS Organizations entity last attempted to access an AWS service. A principal can be an IAM user, an IAM role, or the AWS account root user within the reported Organizations entity.</p> <p>This data type is a response element in the <a>GetOrganizationsAccessReport</a> operation.</p>",
        "properties": {
          "EntityPath": { "$ref": "#/components/schemas/organizationsEntityPathType" },
          "LastAuthenticatedTime": { "$ref": "#/components/schemas/dateType" },
          "Region": { "$ref": "#/components/schemas/stringType" },
          "ServiceName": { "$ref": "#/components/schemas/serviceNameType" },
          "ServiceNamespace": { "$ref": "#/components/schemas/serviceNamespaceType" },
          "TotalAuthenticatedEntities": { "$ref": "#/components/schemas/integerType" }
        },
        "required": ["ServiceName", "ServiceNamespace"],
        "type": "object"
      },
      "AccessDetails": { "items": { "$ref": "#/components/schemas/AccessDetail" }, "type": "array" },
      "AccessKey": {
        "description": "<p>Contains information about an AWS access key.</p> <p> This data type is used as a response element in the <a>CreateAccessKey</a> and <a>ListAccessKeys</a> operations. </p> <note> <p>The <code>SecretAccessKey</code> value is returned only in response to <a>CreateAccessKey</a>. You can get a secret access key only when you first create an access key; you cannot recover the secret access key later. If you lose a secret access key, you must create a new access key.</p> </note>",
        "properties": {
          "AccessKeyId": { "$ref": "#/components/schemas/accessKeyIdType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "SecretAccessKey": { "$ref": "#/components/schemas/accessKeySecretType" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "AccessKeyId", "Status", "SecretAccessKey"],
        "type": "object"
      },
      "AccessKeyLastUsed": {
        "description": "<p>Contains information about the last time an AWS access key was used since IAM began tracking this information on April 22, 2015.</p> <p>This data type is used as a response element in the <a>GetAccessKeyLastUsed</a> operation.</p>",
        "properties": {
          "LastUsedDate": { "$ref": "#/components/schemas/dateType" },
          "Region": { "$ref": "#/components/schemas/stringType" },
          "ServiceName": { "$ref": "#/components/schemas/stringType" }
        },
        "required": ["LastUsedDate", "ServiceName", "Region"],
        "type": "object"
      },
      "AccessKeyMetadata": {
        "description": "<p>Contains information about an AWS access key, without its secret key.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> operation.</p>",
        "properties": {
          "AccessKeyId": { "$ref": "#/components/schemas/accessKeyIdType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "type": "object"
      },
      "ActionNameListType": { "items": { "$ref": "#/components/schemas/ActionNameType" }, "type": "array" },
      "ActionNameType": { "maxLength": 128, "minLength": 3, "type": "string" },
      "AddClientIDToOpenIDConnectProviderRequest": {
        "properties": {
          "ClientID": { "$ref": "#/components/schemas/clientIDType" },
          "OpenIDConnectProviderArn": { "$ref": "#/components/schemas/arnType" }
        },
        "required": ["OpenIDConnectProviderArn", "ClientID"],
        "type": "object"
      },
      "AddRoleToInstanceProfileRequest": {
        "properties": {
          "InstanceProfileName": { "$ref": "#/components/schemas/instanceProfileNameType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["InstanceProfileName", "RoleName"],
        "type": "object"
      },
      "AddUserToGroupRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["GroupName", "UserName"],
        "type": "object"
      },
      "ArnListType": { "items": { "$ref": "#/components/schemas/arnType" }, "type": "array" },
      "AttachGroupPolicyRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "PolicyArn": { "$ref": "#/components/schemas/arnType" }
        },
        "required": ["GroupName", "PolicyArn"],
        "type": "object"
      },
      "AttachRolePolicyRequest": {
        "properties": {
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName", "PolicyArn"],
        "type": "object"
      },
      "AttachUserPolicyRequest": {
        "properties": {
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "PolicyArn"],
        "type": "object"
      },
      "AttachedPermissionsBoundary": {
        "description": "<p>Contains information about an attached permissions boundary.</p> <p>An attached permissions boundary is a managed policy that has been attached to a user or role to set the permissions boundary.</p> <p>For more information about permissions boundaries, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html\">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>",
        "properties": {
          "PermissionsBoundaryArn": { "$ref": "#/components/schemas/arnType" },
          "PermissionsBoundaryType": { "$ref": "#/components/schemas/PermissionsBoundaryAttachmentType" }
        },
        "type": "object"
      },
      "AttachedPolicy": {
        "description": "<p>Contains information about an attached policy.</p> <p>An attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the <a>ListAttachedGroupPolicies</a>, <a>ListAttachedRolePolicies</a>, <a>ListAttachedUserPolicies</a>, and <a>GetAccountAuthorizationDetails</a> operations. </p> <p>For more information about managed policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
        "properties": {
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" }
        },
        "type": "object"
      },
      "BootstrapDatum": { "format": "password", "type": "string" },
      "ChangePasswordRequest": {
        "properties": {
          "NewPassword": { "$ref": "#/components/schemas/passwordType" },
          "OldPassword": { "$ref": "#/components/schemas/passwordType" }
        },
        "required": ["OldPassword", "NewPassword"],
        "type": "object"
      },
      "ColumnNumber": { "type": "integer" },
      "ConcurrentModificationException": {},
      "ContextEntry": {
        "description": "<p>Contains information about a condition context key. It includes the name of the key and specifies the value (or values, if the context key supports multiple values) to use in the simulation. This information is used when evaluating the <code>Condition</code> elements of the input policies.</p> <p>This data type is used as an input parameter to <code> <a>SimulateCustomPolicy</a> </code> and <code> <a>SimulateCustomPolicy</a> </code>.</p>",
        "properties": {
          "ContextKeyName": { "$ref": "#/components/schemas/ContextKeyNameType" },
          "ContextKeyType": { "$ref": "#/components/schemas/ContextKeyTypeEnum" },
          "ContextKeyValues": { "$ref": "#/components/schemas/ContextKeyValueListType" }
        },
        "type": "object"
      },
      "ContextEntryListType": { "items": { "$ref": "#/components/schemas/ContextEntry" }, "type": "array" },
      "ContextKeyNameType": { "maxLength": 256, "minLength": 5, "type": "string" },
      "ContextKeyNamesResultListType": {
        "items": { "$ref": "#/components/schemas/ContextKeyNameType" },
        "type": "array"
      },
      "ContextKeyTypeEnum": {
        "enum": [
          "string",
          "stringList",
          "numeric",
          "numericList",
          "boolean",
          "booleanList",
          "ip",
          "ipList",
          "binary",
          "binaryList",
          "date",
          "dateList"
        ],
        "type": "string"
      },
      "ContextKeyValueListType": { "items": { "$ref": "#/components/schemas/ContextKeyValueType" }, "type": "array" },
      "ContextKeyValueType": { "type": "string" },
      "CreateAccessKeyRequest": {
        "properties": { "UserName": { "$ref": "#/components/schemas/existingUserNameType" } },
        "type": "object"
      },
      "CreateAccessKeyResponse": {
        "description": "Contains the response to a successful <a>CreateAccessKey</a> request. ",
        "example": {
          "AccessKey": {
            "AccessKeyId": "AKIAIOSFODNN7EXAMPLE",
            "CreateDate": "2015-03-09T18:39:23.411Z",
            "SecretAccessKey": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY",
            "Status": "Active",
            "UserName": "Bob"
          }
        },
        "properties": { "AccessKey": { "$ref": "#/components/schemas/AccessKey" } },
        "required": ["AccessKey"],
        "type": "object"
      },
      "CreateAccountAliasRequest": {
        "properties": { "AccountAlias": { "$ref": "#/components/schemas/accountAliasType" } },
        "required": ["AccountAlias"],
        "type": "object"
      },
      "CreateGroupRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "Path": { "$ref": "#/components/schemas/pathType" }
        },
        "required": ["GroupName"],
        "type": "object"
      },
      "CreateGroupResponse": {
        "description": "Contains the response to a successful <a>CreateGroup</a> request. ",
        "example": {
          "Group": {
            "Arn": "arn:aws:iam::123456789012:group/Admins",
            "CreateDate": "2015-03-09T20:30:24.940Z",
            "GroupId": "AIDGPMS9RO4H3FEXAMPLE",
            "GroupName": "Admins",
            "Path": "/"
          }
        },
        "properties": { "Group": { "$ref": "#/components/schemas/Group" } },
        "required": ["Group"],
        "type": "object"
      },
      "CreateInstanceProfileRequest": {
        "properties": {
          "InstanceProfileName": { "$ref": "#/components/schemas/instanceProfileNameType" },
          "Path": { "$ref": "#/components/schemas/pathType" }
        },
        "required": ["InstanceProfileName"],
        "type": "object"
      },
      "CreateInstanceProfileResponse": {
        "description": "Contains the response to a successful <a>CreateInstanceProfile</a> request. ",
        "example": {
          "InstanceProfile": {
            "Arn": "arn:aws:iam::123456789012:instance-profile/Webserver",
            "CreateDate": "2015-03-09T20:33:19.626Z",
            "InstanceProfileId": "AIPAJMBYC7DLSPEXAMPLE",
            "InstanceProfileName": "Webserver",
            "Path": "/",
            "Roles": []
          }
        },
        "properties": { "InstanceProfile": { "$ref": "#/components/schemas/InstanceProfile" } },
        "required": ["InstanceProfile"],
        "type": "object"
      },
      "CreateLoginProfileRequest": {
        "properties": {
          "Password": { "$ref": "#/components/schemas/passwordType" },
          "PasswordResetRequired": { "$ref": "#/components/schemas/booleanType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "Password"],
        "type": "object"
      },
      "CreateLoginProfileResponse": {
        "description": "Contains the response to a successful <a>CreateLoginProfile</a> request. ",
        "example": {
          "LoginProfile": { "CreateDate": "2015-03-10T20:55:40.274Z", "PasswordResetRequired": true, "UserName": "Bob" }
        },
        "properties": { "LoginProfile": { "$ref": "#/components/schemas/LoginProfile" } },
        "required": ["LoginProfile"],
        "type": "object"
      },
      "CreateOpenIDConnectProviderRequest": {
        "properties": {
          "ClientIDList": { "$ref": "#/components/schemas/clientIDListType" },
          "ThumbprintList": { "$ref": "#/components/schemas/thumbprintListType" },
          "Url": { "$ref": "#/components/schemas/OpenIDConnectProviderUrlType" }
        },
        "required": ["Url", "ThumbprintList"],
        "type": "object"
      },
      "CreateOpenIDConnectProviderResponse": {
        "description": "Contains the response to a successful <a>CreateOpenIDConnectProvider</a> request. ",
        "example": { "OpenIDConnectProviderArn": "arn:aws:iam::123456789012:oidc-provider/server.example.com" },
        "properties": { "OpenIDConnectProviderArn": { "$ref": "#/components/schemas/arnType" } },
        "type": "object"
      },
      "CreatePolicyRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/policyDescriptionType" },
          "Path": { "$ref": "#/components/schemas/policyPathType" },
          "PolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" }
        },
        "required": ["PolicyName", "PolicyDocument"],
        "type": "object"
      },
      "CreatePolicyResponse": {
        "description": "Contains the response to a successful <a>CreatePolicy</a> request. ",
        "properties": { "Policy": { "$ref": "#/components/schemas/Policy" } },
        "type": "object"
      },
      "CreatePolicyVersionRequest": {
        "properties": {
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "PolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "SetAsDefault": { "$ref": "#/components/schemas/booleanType" }
        },
        "required": ["PolicyArn", "PolicyDocument"],
        "type": "object"
      },
      "CreatePolicyVersionResponse": {
        "description": "Contains the response to a successful <a>CreatePolicyVersion</a> request. ",
        "properties": { "PolicyVersion": { "$ref": "#/components/schemas/PolicyVersion" } },
        "type": "object"
      },
      "CreateRoleRequest": {
        "properties": {
          "AssumeRolePolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "Description": { "$ref": "#/components/schemas/roleDescriptionType" },
          "MaxSessionDuration": { "$ref": "#/components/schemas/roleMaxSessionDurationType" },
          "Path": { "$ref": "#/components/schemas/pathType" },
          "PermissionsBoundary": { "$ref": "#/components/schemas/arnType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" },
          "Tags": { "$ref": "#/components/schemas/tagListType" }
        },
        "required": ["RoleName", "AssumeRolePolicyDocument"],
        "type": "object"
      },
      "CreateRoleResponse": {
        "description": "Contains the response to a successful <a>CreateRole</a> request. ",
        "example": {
          "Role": {
            "Arn": "arn:aws:iam::123456789012:role/Test-Role",
            "AssumeRolePolicyDocument": "<URL-encoded-JSON>",
            "CreateDate": "2013-06-07T20:43:32.821Z",
            "Path": "/",
            "RoleId": "AKIAIOSFODNN7EXAMPLE",
            "RoleName": "Test-Role"
          }
        },
        "properties": { "Role": { "$ref": "#/components/schemas/Role" } },
        "required": ["Role"],
        "type": "object"
      },
      "CreateSAMLProviderRequest": {
        "properties": {
          "Name": { "$ref": "#/components/schemas/SAMLProviderNameType" },
          "SAMLMetadataDocument": { "$ref": "#/components/schemas/SAMLMetadataDocumentType" }
        },
        "required": ["SAMLMetadataDocument", "Name"],
        "type": "object"
      },
      "CreateSAMLProviderResponse": {
        "description": "Contains the response to a successful <a>CreateSAMLProvider</a> request. ",
        "properties": { "SAMLProviderArn": { "$ref": "#/components/schemas/arnType" } },
        "type": "object"
      },
      "CreateServiceLinkedRoleRequest": {
        "properties": {
          "AWSServiceName": { "$ref": "#/components/schemas/groupNameType" },
          "CustomSuffix": { "$ref": "#/components/schemas/customSuffixType" },
          "Description": { "$ref": "#/components/schemas/roleDescriptionType" }
        },
        "required": ["AWSServiceName"],
        "type": "object"
      },
      "CreateServiceLinkedRoleResponse": {
        "properties": { "Role": { "$ref": "#/components/schemas/Role" } },
        "type": "object"
      },
      "CreateServiceSpecificCredentialRequest": {
        "properties": {
          "ServiceName": { "$ref": "#/components/schemas/serviceName" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "ServiceName"],
        "type": "object"
      },
      "CreateServiceSpecificCredentialResponse": {
        "properties": { "ServiceSpecificCredential": { "$ref": "#/components/schemas/ServiceSpecificCredential" } },
        "type": "object"
      },
      "CreateUserRequest": {
        "properties": {
          "Path": { "$ref": "#/components/schemas/pathType" },
          "PermissionsBoundary": { "$ref": "#/components/schemas/arnType" },
          "Tags": { "$ref": "#/components/schemas/tagListType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName"],
        "type": "object"
      },
      "CreateUserResponse": {
        "description": "Contains the response to a successful <a>CreateUser</a> request. ",
        "example": {
          "User": {
            "Arn": "arn:aws:iam::123456789012:user/Bob",
            "CreateDate": "2013-06-08T03:20:41.270Z",
            "Path": "/",
            "UserId": "AKIAIOSFODNN7EXAMPLE",
            "UserName": "Bob"
          }
        },
        "properties": { "User": { "$ref": "#/components/schemas/User" } },
        "type": "object"
      },
      "CreateVirtualMFADeviceRequest": {
        "properties": {
          "Path": { "$ref": "#/components/schemas/pathType" },
          "VirtualMFADeviceName": { "$ref": "#/components/schemas/virtualMFADeviceName" }
        },
        "required": ["VirtualMFADeviceName"],
        "type": "object"
      },
      "CreateVirtualMFADeviceResponse": {
        "description": "Contains the response to a successful <a>CreateVirtualMFADevice</a> request. ",
        "properties": { "VirtualMFADevice": { "$ref": "#/components/schemas/VirtualMFADevice" } },
        "required": ["VirtualMFADevice"],
        "type": "object"
      },
      "CredentialReportExpiredException": {},
      "CredentialReportNotPresentException": {},
      "CredentialReportNotReadyException": {},
      "DeactivateMFADeviceRequest": {
        "properties": {
          "SerialNumber": { "$ref": "#/components/schemas/serialNumberType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName", "SerialNumber"],
        "type": "object"
      },
      "DeleteAccessKeyRequest": {
        "properties": {
          "AccessKeyId": { "$ref": "#/components/schemas/accessKeyIdType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["AccessKeyId"],
        "type": "object"
      },
      "DeleteAccountAliasRequest": {
        "properties": { "AccountAlias": { "$ref": "#/components/schemas/accountAliasType" } },
        "required": ["AccountAlias"],
        "type": "object"
      },
      "DeleteConflictException": {},
      "DeleteGroupPolicyRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" }
        },
        "required": ["GroupName", "PolicyName"],
        "type": "object"
      },
      "DeleteGroupRequest": {
        "properties": { "GroupName": { "$ref": "#/components/schemas/groupNameType" } },
        "required": ["GroupName"],
        "type": "object"
      },
      "DeleteInstanceProfileRequest": {
        "properties": { "InstanceProfileName": { "$ref": "#/components/schemas/instanceProfileNameType" } },
        "required": ["InstanceProfileName"],
        "type": "object"
      },
      "DeleteLoginProfileRequest": {
        "properties": { "UserName": { "$ref": "#/components/schemas/userNameType" } },
        "required": ["UserName"],
        "type": "object"
      },
      "DeleteOpenIDConnectProviderRequest": {
        "properties": { "OpenIDConnectProviderArn": { "$ref": "#/components/schemas/arnType" } },
        "required": ["OpenIDConnectProviderArn"],
        "type": "object"
      },
      "DeletePolicyRequest": {
        "properties": { "PolicyArn": { "$ref": "#/components/schemas/arnType" } },
        "required": ["PolicyArn"],
        "type": "object"
      },
      "DeletePolicyVersionRequest": {
        "properties": {
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "VersionId": { "$ref": "#/components/schemas/policyVersionIdType" }
        },
        "required": ["PolicyArn", "VersionId"],
        "type": "object"
      },
      "DeleteRolePermissionsBoundaryRequest": {
        "properties": { "RoleName": { "$ref": "#/components/schemas/roleNameType" } },
        "required": ["RoleName"],
        "type": "object"
      },
      "DeleteRolePolicyRequest": {
        "properties": {
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName", "PolicyName"],
        "type": "object"
      },
      "DeleteRoleRequest": {
        "properties": { "RoleName": { "$ref": "#/components/schemas/roleNameType" } },
        "required": ["RoleName"],
        "type": "object"
      },
      "DeleteSAMLProviderRequest": {
        "properties": { "SAMLProviderArn": { "$ref": "#/components/schemas/arnType" } },
        "required": ["SAMLProviderArn"],
        "type": "object"
      },
      "DeleteSSHPublicKeyRequest": {
        "properties": {
          "SSHPublicKeyId": { "$ref": "#/components/schemas/publicKeyIdType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "SSHPublicKeyId"],
        "type": "object"
      },
      "DeleteServerCertificateRequest": {
        "properties": { "ServerCertificateName": { "$ref": "#/components/schemas/serverCertificateNameType" } },
        "required": ["ServerCertificateName"],
        "type": "object"
      },
      "DeleteServiceLinkedRoleRequest": {
        "properties": { "RoleName": { "$ref": "#/components/schemas/roleNameType" } },
        "required": ["RoleName"],
        "type": "object"
      },
      "DeleteServiceLinkedRoleResponse": {
        "properties": { "DeletionTaskId": { "$ref": "#/components/schemas/DeletionTaskIdType" } },
        "required": ["DeletionTaskId"],
        "type": "object"
      },
      "DeleteServiceSpecificCredentialRequest": {
        "properties": {
          "ServiceSpecificCredentialId": { "$ref": "#/components/schemas/serviceSpecificCredentialId" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["ServiceSpecificCredentialId"],
        "type": "object"
      },
      "DeleteSigningCertificateRequest": {
        "properties": {
          "CertificateId": { "$ref": "#/components/schemas/certificateIdType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["CertificateId"],
        "type": "object"
      },
      "DeleteUserPermissionsBoundaryRequest": {
        "properties": { "UserName": { "$ref": "#/components/schemas/userNameType" } },
        "required": ["UserName"],
        "type": "object"
      },
      "DeleteUserPolicyRequest": {
        "properties": {
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName", "PolicyName"],
        "type": "object"
      },
      "DeleteUserRequest": {
        "properties": { "UserName": { "$ref": "#/components/schemas/existingUserNameType" } },
        "required": ["UserName"],
        "type": "object"
      },
      "DeleteVirtualMFADeviceRequest": {
        "properties": { "SerialNumber": { "$ref": "#/components/schemas/serialNumberType" } },
        "required": ["SerialNumber"],
        "type": "object"
      },
      "DeletionTaskFailureReasonType": {
        "description": "<p>The reason that the service-linked role deletion failed.</p> <p>This data type is used as a response element in the <a>GetServiceLinkedRoleDeletionStatus</a> operation.</p>",
        "properties": {
          "Reason": { "$ref": "#/components/schemas/ReasonType" },
          "RoleUsageList": { "$ref": "#/components/schemas/RoleUsageListType" }
        },
        "type": "object"
      },
      "DeletionTaskIdType": { "maxLength": 1000, "minLength": 1, "type": "string" },
      "DeletionTaskStatusType": { "enum": ["SUCCEEDED", "IN_PROGRESS", "FAILED", "NOT_STARTED"], "type": "string" },
      "DetachGroupPolicyRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "PolicyArn": { "$ref": "#/components/schemas/arnType" }
        },
        "required": ["GroupName", "PolicyArn"],
        "type": "object"
      },
      "DetachRolePolicyRequest": {
        "properties": {
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName", "PolicyArn"],
        "type": "object"
      },
      "DetachUserPolicyRequest": {
        "properties": {
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "PolicyArn"],
        "type": "object"
      },
      "DuplicateCertificateException": {},
      "DuplicateSSHPublicKeyException": {},
      "EnableMFADeviceRequest": {
        "properties": {
          "AuthenticationCode1": { "$ref": "#/components/schemas/authenticationCodeType" },
          "AuthenticationCode2": { "$ref": "#/components/schemas/authenticationCodeType" },
          "SerialNumber": { "$ref": "#/components/schemas/serialNumberType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName", "SerialNumber", "AuthenticationCode1", "AuthenticationCode2"],
        "type": "object"
      },
      "EntityAlreadyExistsException": {},
      "EntityDetails": {
        "description": "<p>An object that contains details about when the IAM entities (users or roles) were last used in an attempt to access the specified AWS service.</p> <p>This data type is a response element in the <a>GetServiceLastAccessedDetailsWithEntities</a> operation.</p>",
        "properties": {
          "EntityInfo": { "$ref": "#/components/schemas/EntityInfo" },
          "LastAuthenticated": { "$ref": "#/components/schemas/dateType" }
        },
        "required": ["EntityInfo"],
        "type": "object"
      },
      "EntityInfo": {
        "description": "<p>Contains details about the specified entity (user or role).</p> <p>This data type is an element of the <a>EntityDetails</a> object.</p>",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "Id": { "$ref": "#/components/schemas/idType" },
          "Name": { "$ref": "#/components/schemas/userNameType" },
          "Path": { "$ref": "#/components/schemas/pathType" },
          "Type": { "$ref": "#/components/schemas/policyOwnerEntityType" }
        },
        "required": ["Arn", "Name", "Type", "Id"],
        "type": "object"
      },
      "EntityTemporarilyUnmodifiableException": {},
      "EntityType": { "enum": ["User", "Role", "Group", "LocalManagedPolicy", "AWSManagedPolicy"], "type": "string" },
      "ErrorDetails": {
        "description": "<p>Contains information about the reason that the operation failed.</p> <p>This data type is used as a response element in the <a>GetOrganizationsAccessReport</a>, <a>GetServiceLastAccessedDetails</a>, and <a>GetServiceLastAccessedDetailsWithEntities</a> operations.</p>",
        "properties": {
          "Code": { "$ref": "#/components/schemas/stringType" },
          "Message": { "$ref": "#/components/schemas/stringType" }
        },
        "required": ["Message", "Code"],
        "type": "object"
      },
      "EvalDecisionDetailsType": {
        "additionalProperties": { "$ref": "#/components/schemas/PolicyEvaluationDecisionType" },
        "type": "object"
      },
      "EvalDecisionSourceType": { "maxLength": 256, "minLength": 3, "type": "string" },
      "EvaluationResult": {
        "description": "<p>Contains the results of a simulation.</p> <p>This data type is used by the return parameter of <code> <a>SimulateCustomPolicy</a> </code> and <code> <a>SimulatePrincipalPolicy</a> </code>.</p>",
        "properties": {
          "EvalActionName": { "$ref": "#/components/schemas/ActionNameType" },
          "EvalDecision": { "$ref": "#/components/schemas/PolicyEvaluationDecisionType" },
          "EvalDecisionDetails": { "$ref": "#/components/schemas/EvalDecisionDetailsType" },
          "EvalResourceName": { "$ref": "#/components/schemas/ResourceNameType" },
          "MatchedStatements": { "$ref": "#/components/schemas/StatementListType" },
          "MissingContextValues": { "$ref": "#/components/schemas/ContextKeyNamesResultListType" },
          "OrganizationsDecisionDetail": { "$ref": "#/components/schemas/OrganizationsDecisionDetail" },
          "ResourceSpecificResults": { "$ref": "#/components/schemas/ResourceSpecificResultListType" }
        },
        "required": ["EvalActionName", "EvalDecision"],
        "type": "object"
      },
      "EvaluationResultsListType": { "items": { "$ref": "#/components/schemas/EvaluationResult" }, "type": "array" },
      "GenerateCredentialReportResponse": {
        "description": "Contains the response to a successful <a>GenerateCredentialReport</a> request. ",
        "properties": {
          "Description": { "$ref": "#/components/schemas/ReportStateDescriptionType" },
          "State": { "$ref": "#/components/schemas/ReportStateType" }
        },
        "type": "object"
      },
      "GenerateOrganizationsAccessReportRequest": {
        "properties": {
          "EntityPath": { "$ref": "#/components/schemas/organizationsEntityPathType" },
          "OrganizationsPolicyId": { "$ref": "#/components/schemas/organizationsPolicyIdType" }
        },
        "required": ["EntityPath"],
        "type": "object"
      },
      "GenerateOrganizationsAccessReportResponse": {
        "example": { "JobId": "examplea-1234-b567-cde8-90fg123abcd4" },
        "properties": { "JobId": { "$ref": "#/components/schemas/jobIDType" } },
        "type": "object"
      },
      "GenerateServiceLastAccessedDetailsRequest": {
        "properties": { "Arn": { "$ref": "#/components/schemas/arnType" } },
        "required": ["Arn"],
        "type": "object"
      },
      "GenerateServiceLastAccessedDetailsResponse": {
        "example": { "JobId": "examplef-1305-c245-eba4-71fe298bcda7" },
        "properties": { "JobId": { "$ref": "#/components/schemas/jobIDType" } },
        "type": "object"
      },
      "GetAccessKeyLastUsedRequest": {
        "properties": { "AccessKeyId": { "$ref": "#/components/schemas/accessKeyIdType" } },
        "required": ["AccessKeyId"],
        "type": "object"
      },
      "GetAccessKeyLastUsedResponse": {
        "description": "Contains the response to a successful <a>GetAccessKeyLastUsed</a> request. It is also returned as a member of the <a>AccessKeyMetaData</a> structure returned by the <a>ListAccessKeys</a> action.",
        "properties": {
          "AccessKeyLastUsed": { "$ref": "#/components/schemas/AccessKeyLastUsed" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "type": "object"
      },
      "GetAccountAuthorizationDetailsRequest": {
        "properties": {
          "Filter": { "$ref": "#/components/schemas/entityListType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" }
        },
        "type": "object"
      },
      "GetAccountAuthorizationDetailsResponse": {
        "description": "Contains the response to a successful <a>GetAccountAuthorizationDetails</a> request. ",
        "properties": {
          "GroupDetailList": { "$ref": "#/components/schemas/groupDetailListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "Policies": { "$ref": "#/components/schemas/ManagedPolicyDetailListType" },
          "RoleDetailList": { "$ref": "#/components/schemas/roleDetailListType" },
          "UserDetailList": { "$ref": "#/components/schemas/userDetailListType" }
        },
        "type": "object"
      },
      "GetAccountPasswordPolicyResponse": {
        "description": "Contains the response to a successful <a>GetAccountPasswordPolicy</a> request. ",
        "example": {
          "PasswordPolicy": {
            "AllowUsersToChangePassword": false,
            "ExpirePasswords": false,
            "HardExpiry": false,
            "MaxPasswordAge": 90,
            "MinimumPasswordLength": 8,
            "PasswordReusePrevention": 12,
            "RequireLowercaseCharacters": false,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercaseCharacters": false
          }
        },
        "properties": { "PasswordPolicy": { "$ref": "#/components/schemas/PasswordPolicy" } },
        "required": ["PasswordPolicy"],
        "type": "object"
      },
      "GetAccountSummaryResponse": {
        "description": "Contains the response to a successful <a>GetAccountSummary</a> request. ",
        "example": {
          "SummaryMap": {
            "AccessKeysPerUserQuota": 2,
            "AccountAccessKeysPresent": 1,
            "AccountMFAEnabled": 0,
            "AccountSigningCertificatesPresent": 0,
            "AttachedPoliciesPerGroupQuota": 10,
            "AttachedPoliciesPerRoleQuota": 10,
            "AttachedPoliciesPerUserQuota": 10,
            "GlobalEndpointTokenVersion": 2,
            "GroupPolicySizeQuota": 5120,
            "Groups": 15,
            "GroupsPerUserQuota": 10,
            "GroupsQuota": 100,
            "MFADevices": 6,
            "MFADevicesInUse": 3,
            "Policies": 8,
            "PoliciesQuota": 1000,
            "PolicySizeQuota": 5120,
            "PolicyVersionsInUse": 22,
            "PolicyVersionsInUseQuota": 10000,
            "ServerCertificates": 1,
            "ServerCertificatesQuota": 20,
            "SigningCertificatesPerUserQuota": 2,
            "UserPolicySizeQuota": 2048,
            "Users": 27,
            "UsersQuota": 5000,
            "VersionsPerPolicyQuota": 5
          }
        },
        "properties": { "SummaryMap": { "$ref": "#/components/schemas/summaryMapType" } },
        "type": "object"
      },
      "GetContextKeysForCustomPolicyRequest": {
        "properties": { "PolicyInputList": { "$ref": "#/components/schemas/SimulationPolicyListType" } },
        "required": ["PolicyInputList"],
        "type": "object"
      },
      "GetContextKeysForPolicyResponse": {
        "description": "Contains the response to a successful <a>GetContextKeysForPrincipalPolicy</a> or <a>GetContextKeysForCustomPolicy</a> request. ",
        "properties": { "ContextKeyNames": { "$ref": "#/components/schemas/ContextKeyNamesResultListType" } },
        "type": "object"
      },
      "GetContextKeysForPrincipalPolicyRequest": {
        "properties": {
          "PolicyInputList": { "$ref": "#/components/schemas/SimulationPolicyListType" },
          "PolicySourceArn": { "$ref": "#/components/schemas/arnType" }
        },
        "required": ["PolicySourceArn"],
        "type": "object"
      },
      "GetCredentialReportResponse": {
        "description": "Contains the response to a successful <a>GetCredentialReport</a> request. ",
        "properties": {
          "Content": { "$ref": "#/components/schemas/ReportContentType" },
          "GeneratedTime": { "$ref": "#/components/schemas/dateType" },
          "ReportFormat": { "$ref": "#/components/schemas/ReportFormatType" }
        },
        "type": "object"
      },
      "GetGroupPolicyRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" }
        },
        "required": ["GroupName", "PolicyName"],
        "type": "object"
      },
      "GetGroupPolicyResponse": {
        "description": "Contains the response to a successful <a>GetGroupPolicy</a> request. ",
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "PolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" }
        },
        "required": ["GroupName", "PolicyName", "PolicyDocument"],
        "type": "object"
      },
      "GetGroupRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" }
        },
        "required": ["GroupName"],
        "type": "object"
      },
      "GetGroupResponse": {
        "description": "Contains the response to a successful <a>GetGroup</a> request. ",
        "properties": {
          "Group": { "$ref": "#/components/schemas/Group" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "Users": { "$ref": "#/components/schemas/userListType" }
        },
        "required": ["Group", "Users"],
        "type": "object"
      },
      "GetInstanceProfileRequest": {
        "properties": { "InstanceProfileName": { "$ref": "#/components/schemas/instanceProfileNameType" } },
        "required": ["InstanceProfileName"],
        "type": "object"
      },
      "GetInstanceProfileResponse": {
        "description": "Contains the response to a successful <a>GetInstanceProfile</a> request. ",
        "example": {
          "InstanceProfile": {
            "Arn": "arn:aws:iam::336924118301:instance-profile/ExampleInstanceProfile",
            "CreateDate": "2013-06-12T23:52:02Z",
            "InstanceProfileId": "AID2MAB8DPLSRHEXAMPLE",
            "InstanceProfileName": "ExampleInstanceProfile",
            "Path": "/",
            "Roles": [
              {
                "Arn": "arn:aws:iam::336924118301:role/Test-Role",
                "AssumeRolePolicyDocument": "<URL-encoded-JSON>",
                "CreateDate": "2013-01-09T06:33:26Z",
                "Path": "/",
                "RoleId": "AIDGPMS9RO4H3FEXAMPLE",
                "RoleName": "Test-Role"
              }
            ]
          }
        },
        "properties": { "InstanceProfile": { "$ref": "#/components/schemas/InstanceProfile" } },
        "required": ["InstanceProfile"],
        "type": "object"
      },
      "GetLoginProfileRequest": {
        "properties": { "UserName": { "$ref": "#/components/schemas/userNameType" } },
        "required": ["UserName"],
        "type": "object"
      },
      "GetLoginProfileResponse": {
        "description": "Contains the response to a successful <a>GetLoginProfile</a> request. ",
        "example": { "LoginProfile": { "CreateDate": "2012-09-21T23:03:39Z", "UserName": "Anika" } },
        "properties": { "LoginProfile": { "$ref": "#/components/schemas/LoginProfile" } },
        "required": ["LoginProfile"],
        "type": "object"
      },
      "GetOpenIDConnectProviderRequest": {
        "properties": { "OpenIDConnectProviderArn": { "$ref": "#/components/schemas/arnType" } },
        "required": ["OpenIDConnectProviderArn"],
        "type": "object"
      },
      "GetOpenIDConnectProviderResponse": {
        "description": "Contains the response to a successful <a>GetOpenIDConnectProvider</a> request. ",
        "properties": {
          "ClientIDList": { "$ref": "#/components/schemas/clientIDListType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "ThumbprintList": { "$ref": "#/components/schemas/thumbprintListType" },
          "Url": { "$ref": "#/components/schemas/OpenIDConnectProviderUrlType" }
        },
        "type": "object"
      },
      "GetOrganizationsAccessReportRequest": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/jobIDType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "SortKey": { "$ref": "#/components/schemas/sortKeyType" }
        },
        "required": ["JobId"],
        "type": "object"
      },
      "GetOrganizationsAccessReportResponse": {
        "example": {
          "AccessDetails": [
            {
              "EntityPath": "o-a1b2c3d4e5/r-f6g7h8i9j0example/ou-1a2b3c-k9l8m7n6o5example/111122223333",
              "LastAuthenticatedTime": "2019-05-25T16:29:52Z",
              "Region": "us-east-1",
              "ServiceName": "Amazon DynamoDB",
              "ServiceNamespace": "dynamodb",
              "TotalAuthenticatedEntities": 2
            },
            {
              "EntityPath": "o-a1b2c3d4e5/r-f6g7h8i9j0example/ou-1a2b3c-k9l8m7n6o5example/123456789012",
              "LastAuthenticatedTime": "2019-06-15T13:12:06Z",
              "Region": "us-east-1",
              "ServiceName": "AWS Identity and Access Management",
              "ServiceNamespace": "iam",
              "TotalAuthenticatedEntities": 4
            },
            {
              "ServiceName": "Amazon Simple Storage Service",
              "ServiceNamespace": "s3",
              "TotalAuthenticatedEntities": 0
            }
          ],
          "IsTruncated": false,
          "JobCompletionDate": "2019-06-18T19:47:35.241Z",
          "JobCreationDate": "2019-06-18T19:47:31.466Z",
          "JobStatus": "COMPLETED",
          "NumberOfServicesAccessible": 3,
          "NumberOfServicesNotAccessed": 1
        },
        "properties": {
          "AccessDetails": { "$ref": "#/components/schemas/AccessDetails" },
          "ErrorDetails": { "$ref": "#/components/schemas/ErrorDetails" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "JobCompletionDate": { "$ref": "#/components/schemas/dateType" },
          "JobCreationDate": { "$ref": "#/components/schemas/dateType" },
          "JobStatus": { "$ref": "#/components/schemas/jobStatusType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "NumberOfServicesAccessible": { "$ref": "#/components/schemas/integerType" },
          "NumberOfServicesNotAccessed": { "$ref": "#/components/schemas/integerType" }
        },
        "required": ["JobStatus", "JobCreationDate"],
        "type": "object"
      },
      "GetPolicyRequest": {
        "properties": { "PolicyArn": { "$ref": "#/components/schemas/arnType" } },
        "required": ["PolicyArn"],
        "type": "object"
      },
      "GetPolicyResponse": {
        "description": "Contains the response to a successful <a>GetPolicy</a> request. ",
        "properties": { "Policy": { "$ref": "#/components/schemas/Policy" } },
        "type": "object"
      },
      "GetPolicyVersionRequest": {
        "properties": {
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "VersionId": { "$ref": "#/components/schemas/policyVersionIdType" }
        },
        "required": ["PolicyArn", "VersionId"],
        "type": "object"
      },
      "GetPolicyVersionResponse": {
        "description": "Contains the response to a successful <a>GetPolicyVersion</a> request. ",
        "properties": { "PolicyVersion": { "$ref": "#/components/schemas/PolicyVersion" } },
        "type": "object"
      },
      "GetRolePolicyRequest": {
        "properties": {
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName", "PolicyName"],
        "type": "object"
      },
      "GetRolePolicyResponse": {
        "description": "Contains the response to a successful <a>GetRolePolicy</a> request. ",
        "properties": {
          "PolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName", "PolicyName", "PolicyDocument"],
        "type": "object"
      },
      "GetRoleRequest": {
        "properties": { "RoleName": { "$ref": "#/components/schemas/roleNameType" } },
        "required": ["RoleName"],
        "type": "object"
      },
      "GetRoleResponse": {
        "description": "Contains the response to a successful <a>GetRole</a> request. ",
        "example": {
          "Role": {
            "Arn": "arn:aws:iam::123456789012:role/Test-Role",
            "AssumeRolePolicyDocument": "<URL-encoded-JSON>",
            "CreateDate": "2013-04-18T05:01:58Z",
            "Path": "/",
            "RoleId": "AIDIODR4TAW7CSEXAMPLE",
            "RoleName": "Test-Role"
          }
        },
        "properties": { "Role": { "$ref": "#/components/schemas/Role" } },
        "required": ["Role"],
        "type": "object"
      },
      "GetSAMLProviderRequest": {
        "properties": { "SAMLProviderArn": { "$ref": "#/components/schemas/arnType" } },
        "required": ["SAMLProviderArn"],
        "type": "object"
      },
      "GetSAMLProviderResponse": {
        "description": "Contains the response to a successful <a>GetSAMLProvider</a> request. ",
        "properties": {
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "SAMLMetadataDocument": { "$ref": "#/components/schemas/SAMLMetadataDocumentType" },
          "ValidUntil": { "$ref": "#/components/schemas/dateType" }
        },
        "type": "object"
      },
      "GetSSHPublicKeyRequest": {
        "properties": {
          "Encoding": { "$ref": "#/components/schemas/encodingType" },
          "SSHPublicKeyId": { "$ref": "#/components/schemas/publicKeyIdType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "SSHPublicKeyId", "Encoding"],
        "type": "object"
      },
      "GetSSHPublicKeyResponse": {
        "description": "Contains the response to a successful <a>GetSSHPublicKey</a> request.",
        "properties": { "SSHPublicKey": { "$ref": "#/components/schemas/SSHPublicKey" } },
        "type": "object"
      },
      "GetServerCertificateRequest": {
        "properties": { "ServerCertificateName": { "$ref": "#/components/schemas/serverCertificateNameType" } },
        "required": ["ServerCertificateName"],
        "type": "object"
      },
      "GetServerCertificateResponse": {
        "description": "Contains the response to a successful <a>GetServerCertificate</a> request. ",
        "properties": { "ServerCertificate": { "$ref": "#/components/schemas/ServerCertificate" } },
        "required": ["ServerCertificate"],
        "type": "object"
      },
      "GetServiceLastAccessedDetailsRequest": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/jobIDType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" }
        },
        "required": ["JobId"],
        "type": "object"
      },
      "GetServiceLastAccessedDetailsResponse": {
        "example": {
          "IsTruncated": false,
          "JobCompletionDate": "2018-10-24T19:47:35.241Z",
          "JobCreationDate": "2018-10-24T19:47:31.466Z",
          "JobStatus": "COMPLETED",
          "ServicesLastAccessed": [
            {
              "LastAuthenticated": "2018-10-24T19:11:00Z",
              "LastAuthenticatedEntity": "arn:aws:iam::123456789012:user/AWSExampleUser01",
              "ServiceName": "AWS Identity and Access Management",
              "ServiceNamespace": "iam",
              "TotalAuthenticatedEntities": 2
            },
            {
              "ServiceName": "Amazon Simple Storage Service",
              "ServiceNamespace": "s3",
              "TotalAuthenticatedEntities": 0
            }
          ]
        },
        "properties": {
          "Error": { "$ref": "#/components/schemas/ErrorDetails" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "JobCompletionDate": { "$ref": "#/components/schemas/dateType" },
          "JobCreationDate": { "$ref": "#/components/schemas/dateType" },
          "JobStatus": { "$ref": "#/components/schemas/jobStatusType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "ServicesLastAccessed": { "$ref": "#/components/schemas/ServicesLastAccessed" }
        },
        "required": ["JobStatus", "JobCreationDate", "ServicesLastAccessed", "JobCompletionDate"],
        "type": "object"
      },
      "GetServiceLastAccessedDetailsWithEntitiesRequest": {
        "properties": {
          "JobId": { "$ref": "#/components/schemas/jobIDType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "ServiceNamespace": { "$ref": "#/components/schemas/serviceNamespaceType" }
        },
        "required": ["JobId", "ServiceNamespace"],
        "type": "object"
      },
      "GetServiceLastAccessedDetailsWithEntitiesResponse": {
        "example": {
          "EntityDetailsList": [
            {
              "EntityInfo": {
                "Arn": "arn:aws:iam::123456789012:user/AWSExampleUser01",
                "Id": "AIDAEX2EXAMPLEB6IGCDC",
                "Name": "AWSExampleUser01",
                "Path": "/",
                "Type": "USER"
              },
              "LastAuthenticated": "2018-10-24T19:10:00Z"
            },
            {
              "EntityInfo": {
                "Arn": "arn:aws:iam::123456789012:role/AWSExampleRole01",
                "Id": "AROAEAEXAMPLEIANXSIU4",
                "Name": "AWSExampleRole01",
                "Path": "/",
                "Type": "ROLE"
              }
            }
          ],
          "IsTruncated": false,
          "JobCompletionDate": "2018-10-24T19:47:35.241Z",
          "JobCreationDate": "2018-10-24T19:47:31.466Z",
          "JobStatus": "COMPLETED"
        },
        "properties": {
          "EntityDetailsList": { "$ref": "#/components/schemas/entityDetailsListType" },
          "Error": { "$ref": "#/components/schemas/ErrorDetails" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "JobCompletionDate": { "$ref": "#/components/schemas/dateType" },
          "JobCreationDate": { "$ref": "#/components/schemas/dateType" },
          "JobStatus": { "$ref": "#/components/schemas/jobStatusType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "required": ["JobStatus", "JobCreationDate", "JobCompletionDate", "EntityDetailsList"],
        "type": "object"
      },
      "GetServiceLinkedRoleDeletionStatusRequest": {
        "properties": { "DeletionTaskId": { "$ref": "#/components/schemas/DeletionTaskIdType" } },
        "required": ["DeletionTaskId"],
        "type": "object"
      },
      "GetServiceLinkedRoleDeletionStatusResponse": {
        "properties": {
          "Reason": { "$ref": "#/components/schemas/DeletionTaskFailureReasonType" },
          "Status": { "$ref": "#/components/schemas/DeletionTaskStatusType" }
        },
        "required": ["Status"],
        "type": "object"
      },
      "GetUserPolicyRequest": {
        "properties": {
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName", "PolicyName"],
        "type": "object"
      },
      "GetUserPolicyResponse": {
        "description": "Contains the response to a successful <a>GetUserPolicy</a> request. ",
        "properties": {
          "PolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName", "PolicyName", "PolicyDocument"],
        "type": "object"
      },
      "GetUserRequest": {
        "properties": { "UserName": { "$ref": "#/components/schemas/existingUserNameType" } },
        "type": "object"
      },
      "GetUserResponse": {
        "description": "Contains the response to a successful <a>GetUser</a> request. ",
        "example": {
          "User": {
            "Arn": "arn:aws:iam::123456789012:user/Bob",
            "CreateDate": "2012-09-21T23:03:13Z",
            "Path": "/",
            "UserId": "AKIAIOSFODNN7EXAMPLE",
            "UserName": "Bob"
          }
        },
        "properties": { "User": { "$ref": "#/components/schemas/User" } },
        "required": ["User"],
        "type": "object"
      },
      "Group": {
        "description": "<p>Contains information about an IAM group entity.</p> <p>This data type is used as a response element in the following operations:</p> <ul> <li> <p> <a>CreateGroup</a> </p> </li> <li> <p> <a>GetGroup</a> </p> </li> <li> <p> <a>ListGroups</a> </p> </li> </ul>",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "GroupId": { "$ref": "#/components/schemas/idType" },
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "Path": { "$ref": "#/components/schemas/pathType" }
        },
        "required": ["Path", "GroupName", "GroupId", "Arn", "CreateDate"],
        "type": "object"
      },
      "GroupDetail": {
        "description": "<p>Contains information about an IAM group, including all of the group's policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "AttachedManagedPolicies": { "$ref": "#/components/schemas/attachedPoliciesListType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "GroupId": { "$ref": "#/components/schemas/idType" },
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "GroupPolicyList": { "$ref": "#/components/schemas/policyDetailListType" },
          "Path": { "$ref": "#/components/schemas/pathType" }
        },
        "type": "object"
      },
      "InstanceProfile": {
        "description": "<p>Contains information about an instance profile.</p> <p>This data type is used as a response element in the following operations:</p> <ul> <li> <p> <a>CreateInstanceProfile</a> </p> </li> <li> <p> <a>GetInstanceProfile</a> </p> </li> <li> <p> <a>ListInstanceProfiles</a> </p> </li> <li> <p> <a>ListInstanceProfilesForRole</a> </p> </li> </ul>",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "InstanceProfileId": { "$ref": "#/components/schemas/idType" },
          "InstanceProfileName": { "$ref": "#/components/schemas/instanceProfileNameType" },
          "Path": { "$ref": "#/components/schemas/pathType" },
          "Roles": { "$ref": "#/components/schemas/roleListType" }
        },
        "required": ["Path", "InstanceProfileName", "InstanceProfileId", "Arn", "CreateDate", "Roles"],
        "type": "object"
      },
      "InvalidAuthenticationCodeException": {},
      "InvalidCertificateException": {},
      "InvalidInputException": {},
      "InvalidPublicKeyException": {},
      "InvalidUserTypeException": {},
      "KeyPairMismatchException": {},
      "LimitExceededException": {},
      "LineNumber": { "type": "integer" },
      "ListAccessKeysRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "type": "object"
      },
      "ListAccessKeysResponse": {
        "description": "Contains the response to a successful <a>ListAccessKeys</a> request. ",
        "example": {
          "AccessKeyMetadata": [
            {
              "AccessKeyId": "AKIA111111111EXAMPLE",
              "CreateDate": "2016-12-01T22:19:58Z",
              "Status": "Active",
              "UserName": "Alice"
            },
            {
              "AccessKeyId": "AKIA222222222EXAMPLE",
              "CreateDate": "2016-12-01T22:20:01Z",
              "Status": "Active",
              "UserName": "Alice"
            }
          ]
        },
        "properties": {
          "AccessKeyMetadata": { "$ref": "#/components/schemas/accessKeyMetadataListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "required": ["AccessKeyMetadata"],
        "type": "object"
      },
      "ListAccountAliasesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" }
        },
        "type": "object"
      },
      "ListAccountAliasesResponse": {
        "description": "Contains the response to a successful <a>ListAccountAliases</a> request. ",
        "example": { "AccountAliases": ["exmaple-corporation"] },
        "properties": {
          "AccountAliases": { "$ref": "#/components/schemas/accountAliasListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "required": ["AccountAliases"],
        "type": "object"
      },
      "ListAttachedGroupPoliciesRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PathPrefix": { "$ref": "#/components/schemas/policyPathType" }
        },
        "required": ["GroupName"],
        "type": "object"
      },
      "ListAttachedGroupPoliciesResponse": {
        "description": "Contains the response to a successful <a>ListAttachedGroupPolicies</a> request. ",
        "properties": {
          "AttachedPolicies": { "$ref": "#/components/schemas/attachedPoliciesListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "type": "object"
      },
      "ListAttachedRolePoliciesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PathPrefix": { "$ref": "#/components/schemas/policyPathType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName"],
        "type": "object"
      },
      "ListAttachedRolePoliciesResponse": {
        "description": "Contains the response to a successful <a>ListAttachedRolePolicies</a> request. ",
        "properties": {
          "AttachedPolicies": { "$ref": "#/components/schemas/attachedPoliciesListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "type": "object"
      },
      "ListAttachedUserPoliciesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PathPrefix": { "$ref": "#/components/schemas/policyPathType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName"],
        "type": "object"
      },
      "ListAttachedUserPoliciesResponse": {
        "description": "Contains the response to a successful <a>ListAttachedUserPolicies</a> request. ",
        "properties": {
          "AttachedPolicies": { "$ref": "#/components/schemas/attachedPoliciesListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "type": "object"
      },
      "ListEntitiesForPolicyRequest": {
        "properties": {
          "EntityFilter": { "$ref": "#/components/schemas/EntityType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PathPrefix": { "$ref": "#/components/schemas/pathType" },
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "PolicyUsageFilter": { "$ref": "#/components/schemas/PolicyUsageType" }
        },
        "required": ["PolicyArn"],
        "type": "object"
      },
      "ListEntitiesForPolicyResponse": {
        "description": "Contains the response to a successful <a>ListEntitiesForPolicy</a> request. ",
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "PolicyGroups": { "$ref": "#/components/schemas/PolicyGroupListType" },
          "PolicyRoles": { "$ref": "#/components/schemas/PolicyRoleListType" },
          "PolicyUsers": { "$ref": "#/components/schemas/PolicyUserListType" }
        },
        "type": "object"
      },
      "ListGroupPoliciesRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" }
        },
        "required": ["GroupName"],
        "type": "object"
      },
      "ListGroupPoliciesResponse": {
        "description": "Contains the response to a successful <a>ListGroupPolicies</a> request. ",
        "example": { "PolicyNames": ["AdminRoot", "KeyPolicy"] },
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "PolicyNames": { "$ref": "#/components/schemas/policyNameListType" }
        },
        "required": ["PolicyNames"],
        "type": "object"
      },
      "ListGroupsForUserRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName"],
        "type": "object"
      },
      "ListGroupsForUserResponse": {
        "description": "Contains the response to a successful <a>ListGroupsForUser</a> request. ",
        "example": {
          "Groups": [
            {
              "Arn": "arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/engineering/Test",
              "CreateDate": "2016-11-30T14:10:01.156Z",
              "GroupId": "AGP2111111111EXAMPLE",
              "GroupName": "Test",
              "Path": "/division_abc/subdivision_xyz/product_1234/engineering/"
            },
            {
              "Arn": "arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/Managers",
              "CreateDate": "2016-06-12T20:14:52.032Z",
              "GroupId": "AGPI222222222SEXAMPLE",
              "GroupName": "Managers",
              "Path": "/division_abc/subdivision_xyz/product_1234/"
            }
          ]
        },
        "properties": {
          "Groups": { "$ref": "#/components/schemas/groupListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "required": ["Groups"],
        "type": "object"
      },
      "ListGroupsRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PathPrefix": { "$ref": "#/components/schemas/pathPrefixType" }
        },
        "type": "object"
      },
      "ListGroupsResponse": {
        "description": "Contains the response to a successful <a>ListGroups</a> request. ",
        "example": {
          "Groups": [
            {
              "Arn": "arn:aws:iam::123456789012:group/Admins",
              "CreateDate": "2016-12-15T21:40:08.121Z",
              "GroupId": "AGPA1111111111EXAMPLE",
              "GroupName": "Admins",
              "Path": "/division_abc/subdivision_xyz/"
            },
            {
              "Arn": "arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/engineering/Test",
              "CreateDate": "2016-11-30T14:10:01.156Z",
              "GroupId": "AGP22222222222EXAMPLE",
              "GroupName": "Test",
              "Path": "/division_abc/subdivision_xyz/product_1234/engineering/"
            },
            {
              "Arn": "arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/Managers",
              "CreateDate": "2016-06-12T20:14:52.032Z",
              "GroupId": "AGPI3333333333EXAMPLE",
              "GroupName": "Managers",
              "Path": "/division_abc/subdivision_xyz/product_1234/"
            }
          ]
        },
        "properties": {
          "Groups": { "$ref": "#/components/schemas/groupListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "required": ["Groups"],
        "type": "object"
      },
      "ListInstanceProfilesForRoleRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName"],
        "type": "object"
      },
      "ListInstanceProfilesForRoleResponse": {
        "description": "Contains the response to a successful <a>ListInstanceProfilesForRole</a> request. ",
        "properties": {
          "InstanceProfiles": { "$ref": "#/components/schemas/instanceProfileListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "required": ["InstanceProfiles"],
        "type": "object"
      },
      "ListInstanceProfilesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PathPrefix": { "$ref": "#/components/schemas/pathPrefixType" }
        },
        "type": "object"
      },
      "ListInstanceProfilesResponse": {
        "description": "Contains the response to a successful <a>ListInstanceProfiles</a> request. ",
        "properties": {
          "InstanceProfiles": { "$ref": "#/components/schemas/instanceProfileListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "required": ["InstanceProfiles"],
        "type": "object"
      },
      "ListMFADevicesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "type": "object"
      },
      "ListMFADevicesResponse": {
        "description": "Contains the response to a successful <a>ListMFADevices</a> request. ",
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "MFADevices": { "$ref": "#/components/schemas/mfaDeviceListType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "required": ["MFADevices"],
        "type": "object"
      },
      "ListOpenIDConnectProvidersRequest": { "properties": {}, "type": "object" },
      "ListOpenIDConnectProvidersResponse": {
        "description": "Contains the response to a successful <a>ListOpenIDConnectProviders</a> request. ",
        "properties": { "OpenIDConnectProviderList": { "$ref": "#/components/schemas/OpenIDConnectProviderListType" } },
        "type": "object"
      },
      "ListPoliciesGrantingServiceAccessEntry": {
        "description": "<p>Contains details about the permissions policies that are attached to the specified identity (user, group, or role).</p> <p>This data type is used as a response element in the <a>ListPoliciesGrantingServiceAccess</a> operation.</p>",
        "properties": {
          "Policies": { "$ref": "#/components/schemas/policyGrantingServiceAccessListType" },
          "ServiceNamespace": { "$ref": "#/components/schemas/serviceNamespaceType" }
        },
        "type": "object"
      },
      "ListPoliciesGrantingServiceAccessRequest": {
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "ServiceNamespaces": { "$ref": "#/components/schemas/serviceNamespaceListType" }
        },
        "required": ["Arn", "ServiceNamespaces"],
        "type": "object"
      },
      "ListPoliciesGrantingServiceAccessResponse": {
        "example": {
          "IsTruncated": false,
          "PoliciesGrantingServiceAccess": [
            {
              "Policies": [
                {
                  "PolicyArn": "arn:aws:iam::123456789012:policy/ExampleIamPolicy",
                  "PolicyName": "ExampleIamPolicy",
                  "PolicyType": "MANAGED"
                },
                {
                  "EntityName": "AWSExampleGroup1",
                  "EntityType": "GROUP",
                  "PolicyName": "ExampleGroup1Policy",
                  "PolicyType": "INLINE"
                }
              ],
              "ServiceNamespace": "iam"
            },
            {
              "Policies": [
                {
                  "PolicyArn": "arn:aws:iam::123456789012:policy/ExampleEc2Policy",
                  "PolicyName": "ExampleEc2Policy",
                  "PolicyType": "MANAGED"
                }
              ],
              "ServiceNamespace": "ec2"
            }
          ]
        },
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "PoliciesGrantingServiceAccess": {
            "$ref": "#/components/schemas/listPolicyGrantingServiceAccessResponseListType"
          }
        },
        "required": ["PoliciesGrantingServiceAccess"],
        "type": "object"
      },
      "ListPoliciesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "OnlyAttached": { "$ref": "#/components/schemas/booleanType" },
          "PathPrefix": { "$ref": "#/components/schemas/policyPathType" },
          "PolicyUsageFilter": { "$ref": "#/components/schemas/PolicyUsageType" },
          "Scope": { "$ref": "#/components/schemas/policyScopeType" }
        },
        "type": "object"
      },
      "ListPoliciesResponse": {
        "description": "Contains the response to a successful <a>ListPolicies</a> request. ",
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "Policies": { "$ref": "#/components/schemas/policyListType" }
        },
        "type": "object"
      },
      "ListPolicyVersionsRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PolicyArn": { "$ref": "#/components/schemas/arnType" }
        },
        "required": ["PolicyArn"],
        "type": "object"
      },
      "ListPolicyVersionsResponse": {
        "description": "Contains the response to a successful <a>ListPolicyVersions</a> request. ",
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "Versions": { "$ref": "#/components/schemas/policyDocumentVersionListType" }
        },
        "type": "object"
      },
      "ListRolePoliciesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName"],
        "type": "object"
      },
      "ListRolePoliciesResponse": {
        "description": "Contains the response to a successful <a>ListRolePolicies</a> request. ",
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "PolicyNames": { "$ref": "#/components/schemas/policyNameListType" }
        },
        "required": ["PolicyNames"],
        "type": "object"
      },
      "ListRoleTagsRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName"],
        "type": "object"
      },
      "ListRoleTagsResponse": {
        "example": {
          "IsTruncated": false,
          "Tags": [{ "Key": "Dept", "Value": "12345" }, { "Key": "Team", "Value": "Accounting" }]
        },
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "Tags": { "$ref": "#/components/schemas/tagListType" }
        },
        "required": ["Tags"],
        "type": "object"
      },
      "ListRolesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PathPrefix": { "$ref": "#/components/schemas/pathPrefixType" }
        },
        "type": "object"
      },
      "ListRolesResponse": {
        "description": "Contains the response to a successful <a>ListRoles</a> request. ",
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "Roles": { "$ref": "#/components/schemas/roleListType" }
        },
        "required": ["Roles"],
        "type": "object"
      },
      "ListSAMLProvidersRequest": { "properties": {}, "type": "object" },
      "ListSAMLProvidersResponse": {
        "description": "Contains the response to a successful <a>ListSAMLProviders</a> request. ",
        "properties": { "SAMLProviderList": { "$ref": "#/components/schemas/SAMLProviderListType" } },
        "type": "object"
      },
      "ListSSHPublicKeysRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "type": "object"
      },
      "ListSSHPublicKeysResponse": {
        "description": "Contains the response to a successful <a>ListSSHPublicKeys</a> request.",
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "SSHPublicKeys": { "$ref": "#/components/schemas/SSHPublicKeyListType" }
        },
        "type": "object"
      },
      "ListServerCertificatesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PathPrefix": { "$ref": "#/components/schemas/pathPrefixType" }
        },
        "type": "object"
      },
      "ListServerCertificatesResponse": {
        "description": "Contains the response to a successful <a>ListServerCertificates</a> request. ",
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "ServerCertificateMetadataList": { "$ref": "#/components/schemas/serverCertificateMetadataListType" }
        },
        "required": ["ServerCertificateMetadataList"],
        "type": "object"
      },
      "ListServiceSpecificCredentialsRequest": {
        "properties": {
          "ServiceName": { "$ref": "#/components/schemas/serviceName" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "type": "object"
      },
      "ListServiceSpecificCredentialsResponse": {
        "properties": {
          "ServiceSpecificCredentials": { "$ref": "#/components/schemas/ServiceSpecificCredentialsListType" }
        },
        "type": "object"
      },
      "ListSigningCertificatesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "type": "object"
      },
      "ListSigningCertificatesResponse": {
        "description": "Contains the response to a successful <a>ListSigningCertificates</a> request. ",
        "example": {
          "Certificates": [
            {
              "CertificateBody": "-----BEGIN CERTIFICATE-----<certificate-body>-----END CERTIFICATE-----",
              "CertificateId": "TA7SMP42TDN5Z26OBPJE7EXAMPLE",
              "Status": "Active",
              "UploadDate": "2013-06-06T21:40:08Z",
              "UserName": "Bob"
            }
          ]
        },
        "properties": {
          "Certificates": { "$ref": "#/components/schemas/certificateListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "required": ["Certificates"],
        "type": "object"
      },
      "ListUserPoliciesRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName"],
        "type": "object"
      },
      "ListUserPoliciesResponse": {
        "description": "Contains the response to a successful <a>ListUserPolicies</a> request. ",
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "PolicyNames": { "$ref": "#/components/schemas/policyNameListType" }
        },
        "required": ["PolicyNames"],
        "type": "object"
      },
      "ListUserTagsRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName"],
        "type": "object"
      },
      "ListUserTagsResponse": {
        "example": {
          "IsTruncated": false,
          "Tags": [{ "Key": "Dept", "Value": "12345" }, { "Key": "Team", "Value": "Accounting" }]
        },
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "Tags": { "$ref": "#/components/schemas/tagListType" }
        },
        "required": ["Tags"],
        "type": "object"
      },
      "ListUsersRequest": {
        "properties": {
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PathPrefix": { "$ref": "#/components/schemas/pathPrefixType" }
        },
        "type": "object"
      },
      "ListUsersResponse": {
        "description": "Contains the response to a successful <a>ListUsers</a> request. ",
        "example": {
          "Users": [
            {
              "Arn": "arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/engineering/Juan",
              "CreateDate": "2012-09-05T19:38:48Z",
              "PasswordLastUsed": "2016-09-08T21:47:36Z",
              "Path": "/division_abc/subdivision_xyz/engineering/",
              "UserId": "AID2MAB8DPLSRHEXAMPLE",
              "UserName": "Juan"
            },
            {
              "Arn": "arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/engineering/Anika",
              "CreateDate": "2014-04-09T15:43:45Z",
              "PasswordLastUsed": "2016-09-24T16:18:07Z",
              "Path": "/division_abc/subdivision_xyz/engineering/",
              "UserId": "AIDIODR4TAW7CSEXAMPLE",
              "UserName": "Anika"
            }
          ]
        },
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "Users": { "$ref": "#/components/schemas/userListType" }
        },
        "required": ["Users"],
        "type": "object"
      },
      "ListVirtualMFADevicesRequest": {
        "properties": {
          "AssignmentStatus": { "$ref": "#/components/schemas/assignmentStatusType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" }
        },
        "type": "object"
      },
      "ListVirtualMFADevicesResponse": {
        "description": "Contains the response to a successful <a>ListVirtualMFADevices</a> request. ",
        "example": {
          "VirtualMFADevices": [
            { "SerialNumber": "arn:aws:iam::123456789012:mfa/ExampleMFADevice" },
            { "SerialNumber": "arn:aws:iam::123456789012:mfa/Juan" }
          ]
        },
        "properties": {
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" },
          "VirtualMFADevices": { "$ref": "#/components/schemas/virtualMFADeviceListType" }
        },
        "required": ["VirtualMFADevices"],
        "type": "object"
      },
      "LoginProfile": {
        "description": "<p>Contains the user name and password create date for a user.</p> <p> This data type is used as a response element in the <a>CreateLoginProfile</a> and <a>GetLoginProfile</a> operations. </p>",
        "properties": {
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "PasswordResetRequired": { "$ref": "#/components/schemas/booleanType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "CreateDate"],
        "type": "object"
      },
      "MFADevice": {
        "description": "<p>Contains information about an MFA device.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> operation.</p>",
        "properties": {
          "EnableDate": { "$ref": "#/components/schemas/dateType" },
          "SerialNumber": { "$ref": "#/components/schemas/serialNumberType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "SerialNumber", "EnableDate"],
        "type": "object"
      },
      "MalformedCertificateException": {},
      "MalformedPolicyDocumentException": {},
      "ManagedPolicyDetail": {
        "description": "<p>Contains information about a managed policy, including the policy's ARN, versions, and the number of principal entities (users, groups, and roles) that the policy is attached to.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p> <p>For more information about managed policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "AttachmentCount": { "$ref": "#/components/schemas/attachmentCountType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "DefaultVersionId": { "$ref": "#/components/schemas/policyVersionIdType" },
          "Description": { "$ref": "#/components/schemas/policyDescriptionType" },
          "IsAttachable": { "$ref": "#/components/schemas/booleanType" },
          "Path": { "$ref": "#/components/schemas/policyPathType" },
          "PermissionsBoundaryUsageCount": { "$ref": "#/components/schemas/attachmentCountType" },
          "PolicyId": { "$ref": "#/components/schemas/idType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "PolicyVersionList": { "$ref": "#/components/schemas/policyDocumentVersionListType" },
          "UpdateDate": { "$ref": "#/components/schemas/dateType" }
        },
        "type": "object"
      },
      "ManagedPolicyDetailListType": {
        "items": { "$ref": "#/components/schemas/ManagedPolicyDetail" },
        "type": "array"
      },
      "NoSuchEntityException": {},
      "OpenIDConnectProviderListEntry": {
        "description": "Contains the Amazon Resource Name (ARN) for an IAM OpenID Connect provider.",
        "properties": { "Arn": { "$ref": "#/components/schemas/arnType" } },
        "type": "object"
      },
      "OpenIDConnectProviderListType": {
        "description": "Contains a list of IAM OpenID Connect providers.",
        "items": { "$ref": "#/components/schemas/OpenIDConnectProviderListEntry" },
        "type": "array"
      },
      "OpenIDConnectProviderUrlType": {
        "description": "Contains a URL that specifies the endpoint for an OpenID Connect provider.",
        "maxLength": 255,
        "minLength": 1,
        "type": "string"
      },
      "OrganizationsDecisionDetail": {
        "description": "Contains information about the effect that Organizations has on a policy simulation.",
        "properties": { "AllowedByOrganizations": { "$ref": "#/components/schemas/booleanType" } },
        "type": "object"
      },
      "PasswordPolicy": {
        "description": "<p>Contains information about the account password policy.</p> <p> This data type is used as a response element in the <a>GetAccountPasswordPolicy</a> operation. </p>",
        "properties": {
          "AllowUsersToChangePassword": { "$ref": "#/components/schemas/booleanType" },
          "ExpirePasswords": { "$ref": "#/components/schemas/booleanType" },
          "HardExpiry": { "$ref": "#/components/schemas/booleanObjectType" },
          "MaxPasswordAge": { "$ref": "#/components/schemas/maxPasswordAgeType" },
          "MinimumPasswordLength": { "$ref": "#/components/schemas/minimumPasswordLengthType" },
          "PasswordReusePrevention": { "$ref": "#/components/schemas/passwordReusePreventionType" },
          "RequireLowercaseCharacters": { "$ref": "#/components/schemas/booleanType" },
          "RequireNumbers": { "$ref": "#/components/schemas/booleanType" },
          "RequireSymbols": { "$ref": "#/components/schemas/booleanType" },
          "RequireUppercaseCharacters": { "$ref": "#/components/schemas/booleanType" }
        },
        "type": "object"
      },
      "PasswordPolicyViolationException": {},
      "PermissionsBoundaryAttachmentType": { "enum": ["PermissionsBoundaryPolicy"], "type": "string" },
      "Policy": {
        "description": "<p>Contains information about a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicy</a>, <a>GetPolicy</a>, and <a>ListPolicies</a> operations. </p> <p>For more information about managed policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "AttachmentCount": { "$ref": "#/components/schemas/attachmentCountType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "DefaultVersionId": { "$ref": "#/components/schemas/policyVersionIdType" },
          "Description": { "$ref": "#/components/schemas/policyDescriptionType" },
          "IsAttachable": { "$ref": "#/components/schemas/booleanType" },
          "Path": { "$ref": "#/components/schemas/policyPathType" },
          "PermissionsBoundaryUsageCount": { "$ref": "#/components/schemas/attachmentCountType" },
          "PolicyId": { "$ref": "#/components/schemas/idType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "UpdateDate": { "$ref": "#/components/schemas/dateType" }
        },
        "type": "object"
      },
      "PolicyDetail": {
        "description": "<p>Contains information about an IAM policy, including the policy document.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>",
        "properties": {
          "PolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" }
        },
        "type": "object"
      },
      "PolicyEvaluationDecisionType": { "enum": ["allowed", "explicitDeny", "implicitDeny"], "type": "string" },
      "PolicyEvaluationException": {},
      "PolicyGrantingServiceAccess": {
        "description": "<p>Contains details about the permissions policies that are attached to the specified identity (user, group, or role).</p> <p>This data type is an element of the <a>ListPoliciesGrantingServiceAccessEntry</a> object.</p>",
        "properties": {
          "EntityName": { "$ref": "#/components/schemas/entityNameType" },
          "EntityType": { "$ref": "#/components/schemas/policyOwnerEntityType" },
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "PolicyType": { "$ref": "#/components/schemas/policyType" }
        },
        "required": ["PolicyName", "PolicyType"],
        "type": "object"
      },
      "PolicyGroup": {
        "description": "<p>Contains information about a group that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
        "properties": {
          "GroupId": { "$ref": "#/components/schemas/idType" },
          "GroupName": { "$ref": "#/components/schemas/groupNameType" }
        },
        "type": "object"
      },
      "PolicyGroupListType": { "items": { "$ref": "#/components/schemas/PolicyGroup" }, "type": "array" },
      "PolicyIdentifierType": { "type": "string" },
      "PolicyNotAttachableException": {},
      "PolicyRole": {
        "description": "<p>Contains information about a role that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
        "properties": {
          "RoleId": { "$ref": "#/components/schemas/idType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "type": "object"
      },
      "PolicyRoleListType": { "items": { "$ref": "#/components/schemas/PolicyRole" }, "type": "array" },
      "PolicySourceType": {
        "enum": ["user", "group", "role", "aws-managed", "user-managed", "resource", "none"],
        "type": "string"
      },
      "PolicyUsageType": {
        "description": "<p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html\">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>",
        "enum": ["PermissionsPolicy", "PermissionsBoundary"],
        "type": "string"
      },
      "PolicyUser": {
        "description": "<p>Contains information about a user that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
        "properties": {
          "UserId": { "$ref": "#/components/schemas/idType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "type": "object"
      },
      "PolicyUserListType": { "items": { "$ref": "#/components/schemas/PolicyUser" }, "type": "array" },
      "PolicyVersion": {
        "description": "<p>Contains information about a version of a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicyVersion</a>, <a>GetPolicyVersion</a>, <a>ListPolicyVersions</a>, and <a>GetAccountAuthorizationDetails</a> operations. </p> <p>For more information about managed policies, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
        "properties": {
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "Document": { "$ref": "#/components/schemas/policyDocumentType" },
          "IsDefaultVersion": { "$ref": "#/components/schemas/booleanType" },
          "VersionId": { "$ref": "#/components/schemas/policyVersionIdType" }
        },
        "type": "object"
      },
      "Position": {
        "description": "<p>Contains the row and column of a location of a <code>Statement</code> element in a policy document.</p> <p>This data type is used as a member of the <code> <a>Statement</a> </code> type.</p>",
        "properties": {
          "Column": { "$ref": "#/components/schemas/ColumnNumber" },
          "Line": { "$ref": "#/components/schemas/LineNumber" }
        },
        "type": "object"
      },
      "PutGroupPolicyRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "PolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" }
        },
        "required": ["GroupName", "PolicyName", "PolicyDocument"],
        "type": "object"
      },
      "PutRolePermissionsBoundaryRequest": {
        "properties": {
          "PermissionsBoundary": { "$ref": "#/components/schemas/arnType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName", "PermissionsBoundary"],
        "type": "object"
      },
      "PutRolePolicyRequest": {
        "properties": {
          "PolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName", "PolicyName", "PolicyDocument"],
        "type": "object"
      },
      "PutUserPermissionsBoundaryRequest": {
        "properties": {
          "PermissionsBoundary": { "$ref": "#/components/schemas/arnType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "PermissionsBoundary"],
        "type": "object"
      },
      "PutUserPolicyRequest": {
        "properties": {
          "PolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "PolicyName": { "$ref": "#/components/schemas/policyNameType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName", "PolicyName", "PolicyDocument"],
        "type": "object"
      },
      "ReasonType": { "maxLength": 1000, "type": "string" },
      "RegionNameType": { "maxLength": 100, "minLength": 1, "type": "string" },
      "RemoveClientIDFromOpenIDConnectProviderRequest": {
        "properties": {
          "ClientID": { "$ref": "#/components/schemas/clientIDType" },
          "OpenIDConnectProviderArn": { "$ref": "#/components/schemas/arnType" }
        },
        "required": ["OpenIDConnectProviderArn", "ClientID"],
        "type": "object"
      },
      "RemoveRoleFromInstanceProfileRequest": {
        "properties": {
          "InstanceProfileName": { "$ref": "#/components/schemas/instanceProfileNameType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["InstanceProfileName", "RoleName"],
        "type": "object"
      },
      "RemoveUserFromGroupRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["GroupName", "UserName"],
        "type": "object"
      },
      "ReportContentType": { "type": "string" },
      "ReportFormatType": { "enum": ["text/csv"], "type": "string" },
      "ReportGenerationLimitExceededException": {},
      "ReportStateDescriptionType": { "type": "string" },
      "ReportStateType": { "enum": ["STARTED", "INPROGRESS", "COMPLETE"], "type": "string" },
      "ResetServiceSpecificCredentialRequest": {
        "properties": {
          "ServiceSpecificCredentialId": { "$ref": "#/components/schemas/serviceSpecificCredentialId" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["ServiceSpecificCredentialId"],
        "type": "object"
      },
      "ResetServiceSpecificCredentialResponse": {
        "properties": { "ServiceSpecificCredential": { "$ref": "#/components/schemas/ServiceSpecificCredential" } },
        "type": "object"
      },
      "ResourceHandlingOptionType": { "maxLength": 64, "minLength": 1, "type": "string" },
      "ResourceNameListType": { "items": { "$ref": "#/components/schemas/ResourceNameType" }, "type": "array" },
      "ResourceNameType": { "maxLength": 2048, "minLength": 1, "type": "string" },
      "ResourceSpecificResult": {
        "description": "<p>Contains the result of the simulation of a single API operation call on a single resource.</p> <p>This data type is used by a member of the <a>EvaluationResult</a> data type.</p>",
        "properties": {
          "EvalDecisionDetails": { "$ref": "#/components/schemas/EvalDecisionDetailsType" },
          "EvalResourceDecision": { "$ref": "#/components/schemas/PolicyEvaluationDecisionType" },
          "EvalResourceName": { "$ref": "#/components/schemas/ResourceNameType" },
          "MatchedStatements": { "$ref": "#/components/schemas/StatementListType" },
          "MissingContextValues": { "$ref": "#/components/schemas/ContextKeyNamesResultListType" }
        },
        "required": ["EvalResourceName", "EvalResourceDecision"],
        "type": "object"
      },
      "ResourceSpecificResultListType": {
        "items": { "$ref": "#/components/schemas/ResourceSpecificResult" },
        "type": "array"
      },
      "ResyncMFADeviceRequest": {
        "properties": {
          "AuthenticationCode1": { "$ref": "#/components/schemas/authenticationCodeType" },
          "AuthenticationCode2": { "$ref": "#/components/schemas/authenticationCodeType" },
          "SerialNumber": { "$ref": "#/components/schemas/serialNumberType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName", "SerialNumber", "AuthenticationCode1", "AuthenticationCode2"],
        "type": "object"
      },
      "Role": {
        "description": "Contains information about an IAM role. This structure is returned as a response element in several API operations that interact with roles.",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "AssumeRolePolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "Description": { "$ref": "#/components/schemas/roleDescriptionType" },
          "MaxSessionDuration": { "$ref": "#/components/schemas/roleMaxSessionDurationType" },
          "Path": { "$ref": "#/components/schemas/pathType" },
          "PermissionsBoundary": { "$ref": "#/components/schemas/AttachedPermissionsBoundary" },
          "RoleId": { "$ref": "#/components/schemas/idType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" },
          "Tags": { "$ref": "#/components/schemas/tagListType" }
        },
        "required": ["Path", "RoleName", "RoleId", "Arn", "CreateDate"],
        "type": "object"
      },
      "RoleDetail": {
        "description": "<p>Contains information about an IAM role, including all of the role's policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "AssumeRolePolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "AttachedManagedPolicies": { "$ref": "#/components/schemas/attachedPoliciesListType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "InstanceProfileList": { "$ref": "#/components/schemas/instanceProfileListType" },
          "Path": { "$ref": "#/components/schemas/pathType" },
          "PermissionsBoundary": { "$ref": "#/components/schemas/AttachedPermissionsBoundary" },
          "RoleId": { "$ref": "#/components/schemas/idType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" },
          "RolePolicyList": { "$ref": "#/components/schemas/policyDetailListType" },
          "Tags": { "$ref": "#/components/schemas/tagListType" }
        },
        "type": "object"
      },
      "RoleUsageListType": { "items": { "$ref": "#/components/schemas/RoleUsageType" }, "type": "array" },
      "RoleUsageType": {
        "description": "<p>An object that contains details about how a service-linked role is used, if that information is returned by the service.</p> <p>This data type is used as a response element in the <a>GetServiceLinkedRoleDeletionStatus</a> operation.</p>",
        "properties": {
          "Region": { "$ref": "#/components/schemas/RegionNameType" },
          "Resources": { "$ref": "#/components/schemas/ArnListType" }
        },
        "type": "object"
      },
      "SAMLMetadataDocumentType": { "maxLength": 10000000, "minLength": 1000, "type": "string" },
      "SAMLProviderListEntry": {
        "description": "Contains the list of SAML providers for this account.",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "ValidUntil": { "$ref": "#/components/schemas/dateType" }
        },
        "type": "object"
      },
      "SAMLProviderListType": { "items": { "$ref": "#/components/schemas/SAMLProviderListEntry" }, "type": "array" },
      "SAMLProviderNameType": { "maxLength": 128, "minLength": 1, "pattern": "[\\w._-]+", "type": "string" },
      "SSHPublicKey": {
        "description": "<p>Contains information about an SSH public key.</p> <p>This data type is used as a response element in the <a>GetSSHPublicKey</a> and <a>UploadSSHPublicKey</a> operations. </p>",
        "properties": {
          "Fingerprint": { "$ref": "#/components/schemas/publicKeyFingerprintType" },
          "SSHPublicKeyBody": { "$ref": "#/components/schemas/publicKeyMaterialType" },
          "SSHPublicKeyId": { "$ref": "#/components/schemas/publicKeyIdType" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UploadDate": { "$ref": "#/components/schemas/dateType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "SSHPublicKeyId", "Fingerprint", "SSHPublicKeyBody", "Status"],
        "type": "object"
      },
      "SSHPublicKeyListType": { "items": { "$ref": "#/components/schemas/SSHPublicKeyMetadata" }, "type": "array" },
      "SSHPublicKeyMetadata": {
        "description": "<p>Contains information about an SSH public key, without the key's body or fingerprint.</p> <p>This data type is used as a response element in the <a>ListSSHPublicKeys</a> operation.</p>",
        "properties": {
          "SSHPublicKeyId": { "$ref": "#/components/schemas/publicKeyIdType" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UploadDate": { "$ref": "#/components/schemas/dateType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "SSHPublicKeyId", "Status", "UploadDate"],
        "type": "object"
      },
      "ServerCertificate": {
        "description": "<p>Contains information about a server certificate.</p> <p> This data type is used as a response element in the <a>GetServerCertificate</a> operation. </p>",
        "properties": {
          "CertificateBody": { "$ref": "#/components/schemas/certificateBodyType" },
          "CertificateChain": { "$ref": "#/components/schemas/certificateChainType" },
          "ServerCertificateMetadata": { "$ref": "#/components/schemas/ServerCertificateMetadata" }
        },
        "required": ["ServerCertificateMetadata", "CertificateBody"],
        "type": "object"
      },
      "ServerCertificateMetadata": {
        "description": "<p>Contains information about a server certificate without its certificate body, certificate chain, and private key.</p> <p> This data type is used as a response element in the <a>UploadServerCertificate</a> and <a>ListServerCertificates</a> operations. </p>",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "Expiration": { "$ref": "#/components/schemas/dateType" },
          "Path": { "$ref": "#/components/schemas/pathType" },
          "ServerCertificateId": { "$ref": "#/components/schemas/idType" },
          "ServerCertificateName": { "$ref": "#/components/schemas/serverCertificateNameType" },
          "UploadDate": { "$ref": "#/components/schemas/dateType" }
        },
        "required": ["Path", "ServerCertificateName", "ServerCertificateId", "Arn"],
        "type": "object"
      },
      "ServiceFailureException": {},
      "ServiceLastAccessed": {
        "description": "<p>Contains details about the most recent attempt to access the service.</p> <p>This data type is used as a response element in the <a>GetServiceLastAccessedDetails</a> operation.</p>",
        "properties": {
          "LastAuthenticated": { "$ref": "#/components/schemas/dateType" },
          "LastAuthenticatedEntity": { "$ref": "#/components/schemas/arnType" },
          "ServiceName": { "$ref": "#/components/schemas/serviceNameType" },
          "ServiceNamespace": { "$ref": "#/components/schemas/serviceNamespaceType" },
          "TotalAuthenticatedEntities": { "$ref": "#/components/schemas/integerType" }
        },
        "required": ["ServiceName", "ServiceNamespace"],
        "type": "object"
      },
      "ServiceNotSupportedException": {},
      "ServiceSpecificCredential": {
        "description": "Contains the details of a service-specific credential.",
        "properties": {
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "ServiceName": { "$ref": "#/components/schemas/serviceName" },
          "ServicePassword": { "$ref": "#/components/schemas/servicePassword" },
          "ServiceSpecificCredentialId": { "$ref": "#/components/schemas/serviceSpecificCredentialId" },
          "ServiceUserName": { "$ref": "#/components/schemas/serviceUserName" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": [
          "CreateDate",
          "ServiceName",
          "ServiceUserName",
          "ServicePassword",
          "ServiceSpecificCredentialId",
          "UserName",
          "Status"
        ],
        "type": "object"
      },
      "ServiceSpecificCredentialMetadata": {
        "description": "Contains additional details about a service-specific credential.",
        "properties": {
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "ServiceName": { "$ref": "#/components/schemas/serviceName" },
          "ServiceSpecificCredentialId": { "$ref": "#/components/schemas/serviceSpecificCredentialId" },
          "ServiceUserName": { "$ref": "#/components/schemas/serviceUserName" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": [
          "UserName",
          "Status",
          "ServiceUserName",
          "CreateDate",
          "ServiceSpecificCredentialId",
          "ServiceName"
        ],
        "type": "object"
      },
      "ServiceSpecificCredentialsListType": {
        "items": { "$ref": "#/components/schemas/ServiceSpecificCredentialMetadata" },
        "type": "array"
      },
      "ServicesLastAccessed": { "items": { "$ref": "#/components/schemas/ServiceLastAccessed" }, "type": "array" },
      "SetDefaultPolicyVersionRequest": {
        "properties": {
          "PolicyArn": { "$ref": "#/components/schemas/arnType" },
          "VersionId": { "$ref": "#/components/schemas/policyVersionIdType" }
        },
        "required": ["PolicyArn", "VersionId"],
        "type": "object"
      },
      "SetSecurityTokenServicePreferencesRequest": {
        "properties": { "GlobalEndpointTokenVersion": { "$ref": "#/components/schemas/globalEndpointTokenVersion" } },
        "required": ["GlobalEndpointTokenVersion"],
        "type": "object"
      },
      "SigningCertificate": {
        "description": "<p>Contains information about an X.509 signing certificate.</p> <p>This data type is used as a response element in the <a>UploadSigningCertificate</a> and <a>ListSigningCertificates</a> operations. </p>",
        "properties": {
          "CertificateBody": { "$ref": "#/components/schemas/certificateBodyType" },
          "CertificateId": { "$ref": "#/components/schemas/certificateIdType" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UploadDate": { "$ref": "#/components/schemas/dateType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "CertificateId", "CertificateBody", "Status"],
        "type": "object"
      },
      "SimulateCustomPolicyRequest": {
        "properties": {
          "ActionNames": { "$ref": "#/components/schemas/ActionNameListType" },
          "CallerArn": { "$ref": "#/components/schemas/ResourceNameType" },
          "ContextEntries": { "$ref": "#/components/schemas/ContextEntryListType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PolicyInputList": { "$ref": "#/components/schemas/SimulationPolicyListType" },
          "ResourceArns": { "$ref": "#/components/schemas/ResourceNameListType" },
          "ResourceHandlingOption": { "$ref": "#/components/schemas/ResourceHandlingOptionType" },
          "ResourceOwner": { "$ref": "#/components/schemas/ResourceNameType" },
          "ResourcePolicy": { "$ref": "#/components/schemas/policyDocumentType" }
        },
        "required": ["PolicyInputList", "ActionNames"],
        "type": "object"
      },
      "SimulatePolicyResponse": {
        "description": "Contains the response to a successful <a>SimulatePrincipalPolicy</a> or <a>SimulateCustomPolicy</a> request.",
        "properties": {
          "EvaluationResults": { "$ref": "#/components/schemas/EvaluationResultsListType" },
          "IsTruncated": { "$ref": "#/components/schemas/booleanType" },
          "Marker": { "$ref": "#/components/schemas/responseMarkerType" }
        },
        "type": "object"
      },
      "SimulatePrincipalPolicyRequest": {
        "properties": {
          "ActionNames": { "$ref": "#/components/schemas/ActionNameListType" },
          "CallerArn": { "$ref": "#/components/schemas/ResourceNameType" },
          "ContextEntries": { "$ref": "#/components/schemas/ContextEntryListType" },
          "Marker": { "$ref": "#/components/schemas/markerType" },
          "MaxItems": { "$ref": "#/components/schemas/maxItemsType" },
          "PolicyInputList": { "$ref": "#/components/schemas/SimulationPolicyListType" },
          "PolicySourceArn": { "$ref": "#/components/schemas/arnType" },
          "ResourceArns": { "$ref": "#/components/schemas/ResourceNameListType" },
          "ResourceHandlingOption": { "$ref": "#/components/schemas/ResourceHandlingOptionType" },
          "ResourceOwner": { "$ref": "#/components/schemas/ResourceNameType" },
          "ResourcePolicy": { "$ref": "#/components/schemas/policyDocumentType" }
        },
        "required": ["PolicySourceArn", "ActionNames"],
        "type": "object"
      },
      "SimulationPolicyListType": { "items": { "$ref": "#/components/schemas/policyDocumentType" }, "type": "array" },
      "Statement": {
        "description": "<p>Contains a reference to a <code>Statement</code> element in a policy document that determines the result of the simulation.</p> <p>This data type is used by the <code>MatchedStatements</code> member of the <code> <a>EvaluationResult</a> </code> type.</p>",
        "properties": {
          "EndPosition": { "$ref": "#/components/schemas/Position" },
          "SourcePolicyId": { "$ref": "#/components/schemas/PolicyIdentifierType" },
          "SourcePolicyType": { "$ref": "#/components/schemas/PolicySourceType" },
          "StartPosition": { "$ref": "#/components/schemas/Position" }
        },
        "type": "object"
      },
      "StatementListType": { "items": { "$ref": "#/components/schemas/Statement" }, "type": "array" },
      "Tag": {
        "description": "A structure that represents user-provided metadata that can be associated with a resource such as an IAM user or role. For more information about tagging, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\">Tagging IAM Identities</a> in the <i>IAM User Guide</i>.",
        "properties": {
          "Key": { "$ref": "#/components/schemas/tagKeyType" },
          "Value": { "$ref": "#/components/schemas/tagValueType" }
        },
        "required": ["Key", "Value"],
        "type": "object"
      },
      "TagRoleRequest": {
        "properties": {
          "RoleName": { "$ref": "#/components/schemas/roleNameType" },
          "Tags": { "$ref": "#/components/schemas/tagListType" }
        },
        "required": ["RoleName", "Tags"],
        "type": "object"
      },
      "TagUserRequest": {
        "properties": {
          "Tags": { "$ref": "#/components/schemas/tagListType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName", "Tags"],
        "type": "object"
      },
      "UnmodifiableEntityException": {},
      "UnrecognizedPublicKeyEncodingException": {},
      "UntagRoleRequest": {
        "properties": {
          "RoleName": { "$ref": "#/components/schemas/roleNameType" },
          "TagKeys": { "$ref": "#/components/schemas/tagKeyListType" }
        },
        "required": ["RoleName", "TagKeys"],
        "type": "object"
      },
      "UntagUserRequest": {
        "properties": {
          "TagKeys": { "$ref": "#/components/schemas/tagKeyListType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName", "TagKeys"],
        "type": "object"
      },
      "UpdateAccessKeyRequest": {
        "properties": {
          "AccessKeyId": { "$ref": "#/components/schemas/accessKeyIdType" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["AccessKeyId", "Status"],
        "type": "object"
      },
      "UpdateAccountPasswordPolicyRequest": {
        "properties": {
          "AllowUsersToChangePassword": { "$ref": "#/components/schemas/booleanType" },
          "HardExpiry": { "$ref": "#/components/schemas/booleanObjectType" },
          "MaxPasswordAge": { "$ref": "#/components/schemas/maxPasswordAgeType" },
          "MinimumPasswordLength": { "$ref": "#/components/schemas/minimumPasswordLengthType" },
          "PasswordReusePrevention": { "$ref": "#/components/schemas/passwordReusePreventionType" },
          "RequireLowercaseCharacters": { "$ref": "#/components/schemas/booleanType" },
          "RequireNumbers": { "$ref": "#/components/schemas/booleanType" },
          "RequireSymbols": { "$ref": "#/components/schemas/booleanType" },
          "RequireUppercaseCharacters": { "$ref": "#/components/schemas/booleanType" }
        },
        "type": "object"
      },
      "UpdateAssumeRolePolicyRequest": {
        "properties": {
          "PolicyDocument": { "$ref": "#/components/schemas/policyDocumentType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName", "PolicyDocument"],
        "type": "object"
      },
      "UpdateGroupRequest": {
        "properties": {
          "GroupName": { "$ref": "#/components/schemas/groupNameType" },
          "NewGroupName": { "$ref": "#/components/schemas/groupNameType" },
          "NewPath": { "$ref": "#/components/schemas/pathType" }
        },
        "required": ["GroupName"],
        "type": "object"
      },
      "UpdateLoginProfileRequest": {
        "properties": {
          "Password": { "$ref": "#/components/schemas/passwordType" },
          "PasswordResetRequired": { "$ref": "#/components/schemas/booleanObjectType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName"],
        "type": "object"
      },
      "UpdateOpenIDConnectProviderThumbprintRequest": {
        "properties": {
          "OpenIDConnectProviderArn": { "$ref": "#/components/schemas/arnType" },
          "ThumbprintList": { "$ref": "#/components/schemas/thumbprintListType" }
        },
        "required": ["OpenIDConnectProviderArn", "ThumbprintList"],
        "type": "object"
      },
      "UpdateRoleDescriptionRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/roleDescriptionType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName", "Description"],
        "type": "object"
      },
      "UpdateRoleDescriptionResponse": {
        "properties": { "Role": { "$ref": "#/components/schemas/Role" } },
        "type": "object"
      },
      "UpdateRoleRequest": {
        "properties": {
          "Description": { "$ref": "#/components/schemas/roleDescriptionType" },
          "MaxSessionDuration": { "$ref": "#/components/schemas/roleMaxSessionDurationType" },
          "RoleName": { "$ref": "#/components/schemas/roleNameType" }
        },
        "required": ["RoleName"],
        "type": "object"
      },
      "UpdateRoleResponse": { "properties": {}, "type": "object" },
      "UpdateSAMLProviderRequest": {
        "properties": {
          "SAMLMetadataDocument": { "$ref": "#/components/schemas/SAMLMetadataDocumentType" },
          "SAMLProviderArn": { "$ref": "#/components/schemas/arnType" }
        },
        "required": ["SAMLMetadataDocument", "SAMLProviderArn"],
        "type": "object"
      },
      "UpdateSAMLProviderResponse": {
        "description": "Contains the response to a successful <a>UpdateSAMLProvider</a> request. ",
        "properties": { "SAMLProviderArn": { "$ref": "#/components/schemas/arnType" } },
        "type": "object"
      },
      "UpdateSSHPublicKeyRequest": {
        "properties": {
          "SSHPublicKeyId": { "$ref": "#/components/schemas/publicKeyIdType" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "SSHPublicKeyId", "Status"],
        "type": "object"
      },
      "UpdateServerCertificateRequest": {
        "properties": {
          "NewPath": { "$ref": "#/components/schemas/pathType" },
          "NewServerCertificateName": { "$ref": "#/components/schemas/serverCertificateNameType" },
          "ServerCertificateName": { "$ref": "#/components/schemas/serverCertificateNameType" }
        },
        "required": ["ServerCertificateName"],
        "type": "object"
      },
      "UpdateServiceSpecificCredentialRequest": {
        "properties": {
          "ServiceSpecificCredentialId": { "$ref": "#/components/schemas/serviceSpecificCredentialId" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["ServiceSpecificCredentialId", "Status"],
        "type": "object"
      },
      "UpdateSigningCertificateRequest": {
        "properties": {
          "CertificateId": { "$ref": "#/components/schemas/certificateIdType" },
          "Status": { "$ref": "#/components/schemas/statusType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["CertificateId", "Status"],
        "type": "object"
      },
      "UpdateUserRequest": {
        "properties": {
          "NewPath": { "$ref": "#/components/schemas/pathType" },
          "NewUserName": { "$ref": "#/components/schemas/userNameType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["UserName"],
        "type": "object"
      },
      "UploadSSHPublicKeyRequest": {
        "properties": {
          "SSHPublicKeyBody": { "$ref": "#/components/schemas/publicKeyMaterialType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["UserName", "SSHPublicKeyBody"],
        "type": "object"
      },
      "UploadSSHPublicKeyResponse": {
        "description": "Contains the response to a successful <a>UploadSSHPublicKey</a> request.",
        "properties": { "SSHPublicKey": { "$ref": "#/components/schemas/SSHPublicKey" } },
        "type": "object"
      },
      "UploadServerCertificateRequest": {
        "properties": {
          "CertificateBody": { "$ref": "#/components/schemas/certificateBodyType" },
          "CertificateChain": { "$ref": "#/components/schemas/certificateChainType" },
          "Path": { "$ref": "#/components/schemas/pathType" },
          "PrivateKey": { "$ref": "#/components/schemas/privateKeyType" },
          "ServerCertificateName": { "$ref": "#/components/schemas/serverCertificateNameType" }
        },
        "required": ["ServerCertificateName", "CertificateBody", "PrivateKey"],
        "type": "object"
      },
      "UploadServerCertificateResponse": {
        "description": "Contains the response to a successful <a>UploadServerCertificate</a> request. ",
        "example": {
          "ServerCertificateMetadata": {
            "Arn": "arn:aws:iam::123456789012:server-certificate/company/servercerts/ProdServerCert",
            "Expiration": "2012-05-08T01:02:03.004Z",
            "Path": "/company/servercerts/",
            "ServerCertificateId": "ASCA1111111111EXAMPLE",
            "ServerCertificateName": "ProdServerCert",
            "UploadDate": "2010-05-08T01:02:03.004Z"
          }
        },
        "properties": { "ServerCertificateMetadata": { "$ref": "#/components/schemas/ServerCertificateMetadata" } },
        "type": "object"
      },
      "UploadSigningCertificateRequest": {
        "properties": {
          "CertificateBody": { "$ref": "#/components/schemas/certificateBodyType" },
          "UserName": { "$ref": "#/components/schemas/existingUserNameType" }
        },
        "required": ["CertificateBody"],
        "type": "object"
      },
      "UploadSigningCertificateResponse": {
        "description": "Contains the response to a successful <a>UploadSigningCertificate</a> request. ",
        "example": {
          "Certificate": {
            "CertificateBody": "-----BEGIN CERTIFICATE-----<certificate-body>-----END CERTIFICATE-----",
            "CertificateId": "ID123456789012345EXAMPLE",
            "Status": "Active",
            "UploadDate": "2015-06-06T21:40:08.121Z",
            "UserName": "Bob"
          }
        },
        "properties": { "Certificate": { "$ref": "#/components/schemas/SigningCertificate" } },
        "required": ["Certificate"],
        "type": "object"
      },
      "User": {
        "description": "<p>Contains information about an IAM user entity.</p> <p>This data type is used as a response element in the following operations:</p> <ul> <li> <p> <a>CreateUser</a> </p> </li> <li> <p> <a>GetUser</a> </p> </li> <li> <p> <a>ListUsers</a> </p> </li> </ul>",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "PasswordLastUsed": { "$ref": "#/components/schemas/dateType" },
          "Path": { "$ref": "#/components/schemas/pathType" },
          "PermissionsBoundary": { "$ref": "#/components/schemas/AttachedPermissionsBoundary" },
          "Tags": { "$ref": "#/components/schemas/tagListType" },
          "UserId": { "$ref": "#/components/schemas/idType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" }
        },
        "required": ["Path", "UserName", "UserId", "Arn", "CreateDate"],
        "type": "object"
      },
      "UserDetail": {
        "description": "<p>Contains information about an IAM user, including all the user's policies and all the IAM groups the user is in.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>",
        "properties": {
          "Arn": { "$ref": "#/components/schemas/arnType" },
          "AttachedManagedPolicies": { "$ref": "#/components/schemas/attachedPoliciesListType" },
          "CreateDate": { "$ref": "#/components/schemas/dateType" },
          "GroupList": { "$ref": "#/components/schemas/groupNameListType" },
          "Path": { "$ref": "#/components/schemas/pathType" },
          "PermissionsBoundary": { "$ref": "#/components/schemas/AttachedPermissionsBoundary" },
          "Tags": { "$ref": "#/components/schemas/tagListType" },
          "UserId": { "$ref": "#/components/schemas/idType" },
          "UserName": { "$ref": "#/components/schemas/userNameType" },
          "UserPolicyList": { "$ref": "#/components/schemas/policyDetailListType" }
        },
        "type": "object"
      },
      "VirtualMFADevice": {
        "description": "Contains information about a virtual MFA device.",
        "properties": {
          "Base32StringSeed": { "$ref": "#/components/schemas/BootstrapDatum" },
          "EnableDate": { "$ref": "#/components/schemas/dateType" },
          "QRCodePNG": { "$ref": "#/components/schemas/BootstrapDatum" },
          "SerialNumber": { "$ref": "#/components/schemas/serialNumberType" },
          "User": { "$ref": "#/components/schemas/User" }
        },
        "required": ["SerialNumber"],
        "type": "object"
      },
      "accessKeyIdType": { "maxLength": 128, "minLength": 16, "pattern": "[\\w]+", "type": "string" },
      "accessKeyMetadataListType": {
        "description": "<p>Contains a list of access key metadata.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> operation.</p>",
        "items": { "$ref": "#/components/schemas/AccessKeyMetadata" },
        "type": "array"
      },
      "accessKeySecretType": { "format": "password", "type": "string" },
      "accountAliasListType": { "items": { "$ref": "#/components/schemas/accountAliasType" }, "type": "array" },
      "accountAliasType": {
        "maxLength": 63,
        "minLength": 3,
        "pattern": "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$",
        "type": "string"
      },
      "arnType": {
        "description": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>",
        "maxLength": 2048,
        "minLength": 20,
        "type": "string"
      },
      "assignmentStatusType": { "enum": ["Assigned", "Unassigned", "Any"], "type": "string" },
      "attachedPoliciesListType": { "items": { "$ref": "#/components/schemas/AttachedPolicy" }, "type": "array" },
      "attachmentCountType": { "type": "integer" },
      "authenticationCodeType": { "maxLength": 6, "minLength": 6, "pattern": "[\\d]+", "type": "string" },
      "booleanObjectType": { "type": "boolean" },
      "booleanType": { "type": "boolean" },
      "certificateBodyType": {
        "maxLength": 16384,
        "minLength": 1,
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "type": "string"
      },
      "certificateChainType": {
        "maxLength": 2097152,
        "minLength": 1,
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "type": "string"
      },
      "certificateIdType": { "maxLength": 128, "minLength": 24, "pattern": "[\\w]+", "type": "string" },
      "certificateListType": {
        "description": "<p>Contains a list of signing certificates.</p> <p>This data type is used as a response element in the <a>ListSigningCertificates</a> operation.</p>",
        "items": { "$ref": "#/components/schemas/SigningCertificate" },
        "type": "array"
      },
      "clientIDListType": { "items": { "$ref": "#/components/schemas/clientIDType" }, "type": "array" },
      "clientIDType": { "maxLength": 255, "minLength": 1, "type": "string" },
      "customSuffixType": { "maxLength": 64, "minLength": 1, "pattern": "[\\w+=,.@-]+", "type": "string" },
      "dateType": { "format": "date-time", "type": "string" },
      "encodingType": { "enum": ["SSH", "PEM"], "type": "string" },
      "entityDetailsListType": { "items": { "$ref": "#/components/schemas/EntityDetails" }, "type": "array" },
      "entityListType": { "items": { "$ref": "#/components/schemas/EntityType" }, "type": "array" },
      "entityNameType": { "maxLength": 128, "minLength": 1, "pattern": "[\\w+=,.@-]+", "type": "string" },
      "existingUserNameType": { "maxLength": 128, "minLength": 1, "pattern": "[\\w+=,.@-]+", "type": "string" },
      "globalEndpointTokenVersion": { "enum": ["v1Token", "v2Token"], "type": "string" },
      "groupDetailListType": { "items": { "$ref": "#/components/schemas/GroupDetail" }, "type": "array" },
      "groupListType": {
        "description": "<p>Contains a list of IAM groups.</p> <p>This data type is used as a response element in the <a>ListGroups</a> operation.</p>",
        "items": { "$ref": "#/components/schemas/Group" },
        "type": "array"
      },
      "groupNameListType": { "items": { "$ref": "#/components/schemas/groupNameType" }, "type": "array" },
      "groupNameType": { "maxLength": 128, "minLength": 1, "pattern": "[\\w+=,.@-]+", "type": "string" },
      "idType": { "maxLength": 128, "minLength": 16, "pattern": "[\\w]+", "type": "string" },
      "instanceProfileListType": {
        "description": "Contains a list of instance profiles.",
        "items": { "$ref": "#/components/schemas/InstanceProfile" },
        "type": "array"
      },
      "instanceProfileNameType": { "maxLength": 128, "minLength": 1, "pattern": "[\\w+=,.@-]+", "type": "string" },
      "integerType": { "type": "integer" },
      "jobIDType": { "maxLength": 36, "minLength": 36, "type": "string" },
      "jobStatusType": { "enum": ["IN_PROGRESS", "COMPLETED", "FAILED"], "type": "string" },
      "listPolicyGrantingServiceAccessResponseListType": {
        "items": { "$ref": "#/components/schemas/ListPoliciesGrantingServiceAccessEntry" },
        "type": "array"
      },
      "markerType": { "maxLength": 320, "minLength": 1, "pattern": "[\\u0020-\\u00FF]+", "type": "string" },
      "maxItemsType": { "maximum": 1000, "minimum": 1, "type": "integer" },
      "maxPasswordAgeType": { "maximum": 1095, "minimum": 1, "type": "integer" },
      "mfaDeviceListType": {
        "description": "<p>Contains a list of MFA devices.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> and <a>ListVirtualMFADevices</a> operations. </p>",
        "items": { "$ref": "#/components/schemas/MFADevice" },
        "type": "array"
      },
      "minimumPasswordLengthType": { "maximum": 128, "minimum": 6, "type": "integer" },
      "organizationsEntityPathType": {
        "maxLength": 427,
        "minLength": 19,
        "pattern": "^o-[0-9a-z]{10,32}\\/r-[0-9a-z]{4,32}[0-9a-z-\\/]*",
        "type": "string"
      },
      "organizationsPolicyIdType": { "pattern": "^p-[0-9a-zA-Z_]{8,128}$", "type": "string" },
      "passwordReusePreventionType": { "maximum": 24, "minimum": 1, "type": "integer" },
      "passwordType": {
        "format": "password",
        "maxLength": 128,
        "minLength": 1,
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "type": "string"
      },
      "pathPrefixType": { "maxLength": 512, "minLength": 1, "pattern": "\\u002F[\\u0021-\\u007F]*", "type": "string" },
      "pathType": {
        "maxLength": 512,
        "minLength": 1,
        "pattern": "(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)",
        "type": "string"
      },
      "policyDescriptionType": { "maxLength": 1000, "type": "string" },
      "policyDetailListType": { "items": { "$ref": "#/components/schemas/PolicyDetail" }, "type": "array" },
      "policyDocumentType": {
        "maxLength": 131072,
        "minLength": 1,
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "type": "string"
      },
      "policyDocumentVersionListType": { "items": { "$ref": "#/components/schemas/PolicyVersion" }, "type": "array" },
      "policyGrantingServiceAccessListType": {
        "items": { "$ref": "#/components/schemas/PolicyGrantingServiceAccess" },
        "type": "array"
      },
      "policyListType": { "items": { "$ref": "#/components/schemas/Policy" }, "type": "array" },
      "policyNameListType": {
        "description": "<p>Contains a list of policy names.</p> <p>This data type is used as a response element in the <a>ListPolicies</a> operation.</p>",
        "items": { "$ref": "#/components/schemas/policyNameType" },
        "type": "array"
      },
      "policyNameType": { "maxLength": 128, "minLength": 1, "pattern": "[\\w+=,.@-]+", "type": "string" },
      "policyOwnerEntityType": { "enum": ["USER", "ROLE", "GROUP"], "type": "string" },
      "policyPathType": {
        "maxLength": 512,
        "minLength": 1,
        "pattern": "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/",
        "type": "string"
      },
      "policyScopeType": { "enum": ["All", "AWS", "Local"], "type": "string" },
      "policyType": { "enum": ["INLINE", "MANAGED"], "type": "string" },
      "policyVersionIdType": { "pattern": "v[1-9][0-9]*(\\.[A-Za-z0-9-]*)?", "type": "string" },
      "privateKeyType": {
        "format": "password",
        "maxLength": 16384,
        "minLength": 1,
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "type": "string"
      },
      "publicKeyFingerprintType": { "maxLength": 48, "minLength": 48, "pattern": "[:\\w]+", "type": "string" },
      "publicKeyIdType": { "maxLength": 128, "minLength": 20, "pattern": "[\\w]+", "type": "string" },
      "publicKeyMaterialType": {
        "maxLength": 16384,
        "minLength": 1,
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "type": "string"
      },
      "responseMarkerType": { "type": "string" },
      "roleDescriptionType": {
        "maxLength": 1000,
        "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
        "type": "string"
      },
      "roleDetailListType": { "items": { "$ref": "#/components/schemas/RoleDetail" }, "type": "array" },
      "roleListType": {
        "description": "<p>Contains a list of IAM roles.</p> <p>This data type is used as a response element in the <a>ListRoles</a> operation.</p>",
        "items": { "$ref": "#/components/schemas/Role" },
        "type": "array"
      },
      "roleMaxSessionDurationType": { "maximum": 43200, "minimum": 3600, "type": "integer" },
      "roleNameType": { "maxLength": 64, "minLength": 1, "pattern": "[\\w+=,.@-]+", "type": "string" },
      "serialNumberType": { "maxLength": 256, "minLength": 9, "pattern": "[\\w+=/:,.@-]+", "type": "string" },
      "serverCertificateMetadataListType": {
        "items": { "$ref": "#/components/schemas/ServerCertificateMetadata" },
        "type": "array"
      },
      "serverCertificateNameType": { "maxLength": 128, "minLength": 1, "pattern": "[\\w+=,.@-]+", "type": "string" },
      "serviceName": { "type": "string" },
      "serviceNameType": { "type": "string" },
      "serviceNamespaceListType": {
        "items": { "$ref": "#/components/schemas/serviceNamespaceType" },
        "maxItems": 200,
        "minItems": 1,
        "type": "array"
      },
      "serviceNamespaceType": { "maxLength": 64, "minLength": 1, "pattern": "[\\w-]*", "type": "string" },
      "servicePassword": { "format": "password", "type": "string" },
      "serviceSpecificCredentialId": { "maxLength": 128, "minLength": 20, "pattern": "[\\w]+", "type": "string" },
      "serviceUserName": { "maxLength": 200, "minLength": 17, "pattern": "[\\w+=,.@-]+", "type": "string" },
      "sortKeyType": {
        "enum": [
          "SERVICE_NAMESPACE_ASCENDING",
          "SERVICE_NAMESPACE_DESCENDING",
          "LAST_AUTHENTICATED_TIME_ASCENDING",
          "LAST_AUTHENTICATED_TIME_DESCENDING"
        ],
        "type": "string"
      },
      "statusType": { "enum": ["Active", "Inactive"], "type": "string" },
      "stringType": { "type": "string" },
      "summaryKeyType": {
        "enum": [
          "Users",
          "UsersQuota",
          "Groups",
          "GroupsQuota",
          "ServerCertificates",
          "ServerCertificatesQuota",
          "UserPolicySizeQuota",
          "GroupPolicySizeQuota",
          "GroupsPerUserQuota",
          "SigningCertificatesPerUserQuota",
          "AccessKeysPerUserQuota",
          "MFADevices",
          "MFADevicesInUse",
          "AccountMFAEnabled",
          "AccountAccessKeysPresent",
          "AccountSigningCertificatesPresent",
          "AttachedPoliciesPerGroupQuota",
          "AttachedPoliciesPerRoleQuota",
          "AttachedPoliciesPerUserQuota",
          "Policies",
          "PoliciesQuota",
          "PolicySizeQuota",
          "PolicyVersionsInUse",
          "PolicyVersionsInUseQuota",
          "VersionsPerPolicyQuota",
          "GlobalEndpointTokenVersion"
        ],
        "type": "string"
      },
      "summaryMapType": {
        "additionalProperties": { "$ref": "#/components/schemas/summaryValueType" },
        "type": "object"
      },
      "summaryValueType": { "type": "integer" },
      "tagKeyListType": { "items": { "$ref": "#/components/schemas/tagKeyType" }, "maxItems": 50, "type": "array" },
      "tagKeyType": {
        "maxLength": 128,
        "minLength": 1,
        "pattern": "[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+",
        "type": "string"
      },
      "tagListType": { "items": { "$ref": "#/components/schemas/Tag" }, "maxItems": 50, "type": "array" },
      "tagValueType": {
        "maxLength": 256,
        "minLength": 0,
        "pattern": "[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*",
        "type": "string"
      },
      "thumbprintListType": {
        "description": "Contains a list of thumbprints of identity provider server certificates.",
        "items": { "$ref": "#/components/schemas/thumbprintType" },
        "type": "array"
      },
      "thumbprintType": {
        "description": "<p>Contains a thumbprint for an identity provider's server certificate.</p> <p>The identity provider's server certificate thumbprint is the hex-encoded SHA-1 hash value of the self-signed X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string.</p>",
        "maxLength": 40,
        "minLength": 40,
        "type": "string"
      },
      "userDetailListType": { "items": { "$ref": "#/components/schemas/UserDetail" }, "type": "array" },
      "userListType": {
        "description": "<p>Contains a list of users.</p> <p>This data type is used as a response element in the <a>GetGroup</a> and <a>ListUsers</a> operations. </p>",
        "items": { "$ref": "#/components/schemas/User" },
        "type": "array"
      },
      "userNameType": { "maxLength": 64, "minLength": 1, "pattern": "[\\w+=,.@-]+", "type": "string" },
      "virtualMFADeviceListType": { "items": { "$ref": "#/components/schemas/VirtualMFADevice" }, "type": "array" },
      "virtualMFADeviceName": { "minLength": 1, "pattern": "[\\w+=,.@-]+", "type": "string" }
    }
  }
}
