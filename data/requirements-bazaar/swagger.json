{
  "swagger": "2.0",
  "info": {
    "description": "Requirements Bazaar project",
    "version": "0.6",
    "title": "Requirements Bazaar",
    "termsOfService": "http://requirements-bazaar.org",
    "contact": {
      "name": "Requirements Bazaar Dev Team",
      "url": "http://requirements-bazaar.org",
      "email": "info@requirements-bazaar.org"
    },
    "license": { "name": "Apache2", "url": "http://requirements-bazaar.org/license" }
  },
  "basePath": "/bazaar/",
  "tags": [
    { "name": "requirements" },
    { "name": "users" },
    { "name": "categories" },
    { "name": "projects" },
    { "name": "attachments" },
    { "name": "comments" }
  ],
  "schemes": ["https"],
  "paths": {
    "/attachments": {
      "post": {
        "tags": ["attachments"],
        "summary": "This method allows to create a new attachment.",
        "description": "",
        "operationId": "createAttachment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Attachment entity as JSON",
            "required": true,
            "schema": { "$ref": "#/definitions/Attachment" }
          }
        ],
        "responses": {
          "201": { "description": "Returns the created attachment", "schema": { "$ref": "#/definitions/Attachment" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/attachments/{attachmentId}": {
      "get": {
        "tags": ["attachments"],
        "summary": "This method allows to retrieve a certain attachment",
        "description": "",
        "operationId": "getAttachment",
        "produces": ["application/json"],
        "parameters": [
          { "name": "attachmentId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns a certain attachment", "schema": { "$ref": "#/definitions/Attachment" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["attachments"],
        "summary": "This method deletes a specific attachment.",
        "description": "",
        "operationId": "deleteAttachment",
        "produces": ["application/json"],
        "parameters": [
          { "name": "attachmentId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns the deleted attachment", "schema": { "$ref": "#/definitions/Attachment" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/categories": {
      "post": {
        "tags": ["categories"],
        "summary": "This method allows to create a new category under a given a project.",
        "description": "",
        "operationId": "createCategory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category entity",
            "required": true,
            "schema": { "$ref": "#/definitions/Category" }
          }
        ],
        "responses": {
          "201": { "description": "Returns the created category", "schema": { "$ref": "#/definitions/Category" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/categories/{categoryId}": {
      "get": {
        "tags": ["categories"],
        "summary": "This method allows to retrieve a certain category.",
        "description": "",
        "operationId": "getCategory",
        "produces": ["application/json"],
        "parameters": [{ "name": "categoryId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "200": { "description": "Returns a certain category", "schema": { "$ref": "#/definitions/Category" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "put": {
        "tags": ["categories"],
        "summary": "This method allows to update a certain category.",
        "description": "",
        "operationId": "updateCategory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          { "name": "categoryId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "in": "body",
            "name": "body",
            "description": "Category entity",
            "required": true,
            "schema": { "$ref": "#/definitions/Category" }
          }
        ],
        "responses": {
          "200": { "description": "Returns the updated category", "schema": { "$ref": "#/definitions/Category" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["categories"],
        "summary": "This method deletes a specific category.",
        "description": "",
        "operationId": "deleteCategory",
        "produces": ["application/json"],
        "parameters": [{ "name": "categoryId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "200": { "description": "Returns the deleted category", "schema": { "$ref": "#/definitions/Category" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/categories/{categoryId}/contributors": {
      "get": {
        "tags": ["categories"],
        "summary": "This method returns the list of contributors for a specific category.",
        "description": "",
        "operationId": "getContributorsForCategory",
        "produces": ["application/json"],
        "parameters": [{ "name": "categoryId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "200": {
            "description": "Returns a list of contributors for a given category",
            "schema": { "$ref": "#/definitions/CategoryContributors" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/categories/{categoryId}/followers": {
      "get": {
        "tags": ["categories"],
        "summary": "This method returns the list of followers for a specific category.",
        "description": "",
        "operationId": "getFollowersForCategory",
        "produces": ["application/json"],
        "parameters": [
          { "name": "categoryId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Elements of comments by page",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of followers for a given category",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/User" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "post": {
        "tags": ["categories"],
        "summary": "This method add the current user to the followers list of a given category.",
        "description": "",
        "operationId": "followCategory",
        "produces": ["application/json"],
        "parameters": [{ "name": "categoryId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "201": { "description": "Returns the category", "schema": { "$ref": "#/definitions/Category" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["categories"],
        "summary": "This method removes the current user from a followers list of a given category.",
        "description": "",
        "operationId": "unfollowCategory",
        "produces": ["application/json"],
        "parameters": [{ "name": "categoryId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "200": { "description": "Returns the category", "schema": { "$ref": "#/definitions/Category" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/categories/{categoryId}/requirements": {
      "get": {
        "tags": ["categories"],
        "summary": "This method returns the list of requirements for a specific category.",
        "description": "",
        "operationId": "getRequirementsForCategory",
        "produces": ["application/json"],
        "parameters": [
          { "name": "categoryId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Elements of requirements by page",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          { "name": "search", "in": "query", "description": "Search filter", "required": false, "type": "string" },
          {
            "name": "state",
            "in": "query",
            "description": "State filter",
            "required": false,
            "type": "string",
            "default": "all",
            "enum": ["all", "open", "realized"]
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["date", "last_activity", "name", "vote", "comment", "follower", "realized"],
              "default": "date"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of requirements for a given project",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/Category" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/categories/{categoryId}/statistics": {
      "get": {
        "tags": ["categories"],
        "summary": "This method allows to retrieve statistics for one category.",
        "description": "",
        "operationId": "getStatisticsForCategory",
        "produces": ["application/json"],
        "parameters": [
          { "name": "categoryId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "since",
            "in": "query",
            "description": "Since timestamp, ISO-8601 e.g. 2017-12-30 or 2017-12-30T18:30:00Z",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Returns statistics", "schema": { "$ref": "#/definitions/Statistic" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/comments": {
      "post": {
        "tags": ["comments"],
        "summary": "This method allows to create a new comment.",
        "description": "",
        "operationId": "createComment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Comment entity",
            "required": true,
            "schema": { "$ref": "#/definitions/Comment" }
          }
        ],
        "responses": {
          "201": { "description": "Returns the created comment", "schema": { "$ref": "#/definitions/Comment" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/comments/{commentId}": {
      "get": {
        "tags": ["comments"],
        "summary": "This method allows to retrieve a certain comment",
        "description": "",
        "operationId": "getComment",
        "produces": ["application/json"],
        "parameters": [{ "name": "commentId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "200": { "description": "Returns a certain comment", "schema": { "$ref": "#/definitions/Comment" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["comments"],
        "summary": "This method deletes a specific comment.",
        "description": "",
        "operationId": "deleteComment",
        "produces": ["application/json"],
        "parameters": [{ "name": "commentId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "200": { "description": "Returns the deleted comment", "schema": { "$ref": "#/definitions/Comment" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/notifications": {
      "post": {
        "summary": "This method sends all notifications (emails) in the waiting queue. Run this method before shutting down Requirements Bazaar.",
        "description": "",
        "operationId": "sendNotifications",
        "parameters": [],
        "responses": {
          "201": { "description": "Notifications send" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/projects": {
      "get": {
        "tags": ["projects"],
        "summary": "This method returns the list of projects on the server.",
        "description": "",
        "operationId": "getProjects",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Elements of project by page",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          { "name": "search", "in": "query", "description": "Search filter", "required": false, "type": "string" },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["name", "date", "last_activity", "requirement", "follower"],
              "default": "name"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "List of projects",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/Project" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "post": {
        "tags": ["projects"],
        "summary": "This method allows to create a new project.",
        "description": "",
        "operationId": "createProject",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Project entity",
            "required": true,
            "schema": { "$ref": "#/definitions/Project" }
          }
        ],
        "responses": {
          "201": { "description": "Returns the created project", "schema": { "$ref": "#/definitions/Project" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/projects/{projectId}": {
      "get": {
        "tags": ["projects"],
        "summary": "This method allows to retrieve a certain project.",
        "description": "",
        "operationId": "getProject",
        "produces": ["application/json"],
        "parameters": [{ "name": "projectId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "200": { "description": "Returns a certain project", "schema": { "$ref": "#/definitions/Project" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "put": {
        "tags": ["projects"],
        "summary": "This method allows to update a certain project.",
        "description": "",
        "operationId": "updateProject",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          { "name": "projectId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "in": "body",
            "name": "body",
            "description": "Project entity",
            "required": true,
            "schema": { "$ref": "#/definitions/Project" }
          }
        ],
        "responses": {
          "200": { "description": "Returns the updated project", "schema": { "$ref": "#/definitions/Project" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/projects/{projectId}/categories": {
      "get": {
        "tags": ["projects"],
        "summary": "This method returns the list of categories under a given project.",
        "description": "",
        "operationId": "getCategoriesForProject",
        "produces": ["application/json"],
        "parameters": [
          { "name": "projectId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Elements of categories by page",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          { "name": "search", "in": "query", "description": "Search filter", "required": false, "type": "string" },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["name", "date", "last_activity", "requirement", "follower"],
              "default": "name"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of categories for a given project",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/Category" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/projects/{projectId}/contributors": {
      "get": {
        "tags": ["projects"],
        "summary": "This method returns the list of contributors for a specific project.",
        "description": "",
        "operationId": "getContributorsForProject",
        "produces": ["application/json"],
        "parameters": [{ "name": "projectId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "200": {
            "description": "Returns a list of contributors for a given project",
            "schema": { "$ref": "#/definitions/ProjectContributors" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/projects/{projectId}/followers": {
      "get": {
        "tags": ["projects"],
        "summary": "This method returns the list of followers for a specific project.",
        "description": "",
        "operationId": "getFollowersForProject",
        "produces": ["application/json"],
        "parameters": [
          { "name": "projectId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Elements of comments by page",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of followers for a given project",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/User" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "post": {
        "tags": ["projects"],
        "summary": "This method add the current user to the followers list of a given project.",
        "description": "",
        "operationId": "followProject",
        "produces": ["application/json"],
        "parameters": [{ "name": "projectId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "201": { "description": "Returns the project", "schema": { "$ref": "#/definitions/Project" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["projects"],
        "summary": "This method removes the current user from a followers list of a given project.",
        "description": "",
        "operationId": "unfollowProject",
        "produces": ["application/json"],
        "parameters": [{ "name": "projectId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "200": { "description": "Returns the project", "schema": { "$ref": "#/definitions/Project" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/projects/{projectId}/requirements": {
      "get": {
        "tags": ["projects"],
        "summary": "This method returns the list of requirements for a specific project.",
        "description": "",
        "operationId": "getRequirementsForProject",
        "produces": ["application/json"],
        "parameters": [
          { "name": "projectId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Elements of requirements by page",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          { "name": "search", "in": "query", "description": "Search filter", "required": false, "type": "string" },
          {
            "name": "state",
            "in": "query",
            "description": "State filter",
            "required": false,
            "type": "string",
            "default": "all",
            "enum": ["all", "open", "realized"]
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["date", "last_activity", "name", "vote", "comment", "follower", "realized"],
              "default": "date"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of requirements for a given project",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/Requirement" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/projects/{projectId}/statistics": {
      "get": {
        "tags": ["projects"],
        "summary": "This method allows to retrieve statistics for one project.",
        "description": "",
        "operationId": "getStatisticsForProject",
        "produces": ["application/json"],
        "parameters": [
          { "name": "projectId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "since",
            "in": "query",
            "description": "Since timestamp, ISO-8601 e.g. 2017-12-30 or 2017-12-30T18:30:00Z",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Returns statistics", "schema": { "$ref": "#/definitions/Statistic" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements": {
      "post": {
        "tags": ["requirements"],
        "summary": "This method allows to create a new requirement.",
        "description": "",
        "operationId": "createRequirement",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Requirement entity",
            "required": true,
            "schema": { "$ref": "#/definitions/Requirement" }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the created requirement",
            "schema": { "$ref": "#/definitions/Requirement" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements/{requirementId}": {
      "get": {
        "tags": ["requirements"],
        "summary": "This method returns a specific requirement.",
        "description": "",
        "operationId": "getRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns a certain requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "put": {
        "tags": ["requirements"],
        "summary": "This method updates a specific requirement.",
        "description": "",
        "operationId": "updateRequirement",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "in": "body",
            "name": "body",
            "description": "Requirement entity",
            "required": true,
            "schema": { "$ref": "#/definitions/Requirement" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated requirement",
            "schema": { "$ref": "#/definitions/Requirement" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["requirements"],
        "summary": "This method deletes a specific requirement.",
        "description": "",
        "operationId": "deleteRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": {
            "description": "Returns the deleted requirement",
            "schema": { "$ref": "#/definitions/Requirement" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements/{requirementId}/attachments": {
      "get": {
        "tags": ["requirements"],
        "summary": "This method returns the list of attachments for a specific requirement.",
        "description": "",
        "operationId": "getAttachmentsForRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Elements of comments by page",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of attachments for a given requirement",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/Attachment" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements/{requirementId}/comments": {
      "get": {
        "tags": ["requirements"],
        "summary": "This method returns the list of comments for a specific requirement.",
        "description": "",
        "operationId": "getCommentsForRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Elements of comments by page",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of comments for a given requirement",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/Comment" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements/{requirementId}/contributors": {
      "get": {
        "tags": ["requirements"],
        "summary": "This method returns the list of contributors for a specific requirement.",
        "description": "",
        "operationId": "getContributorsForRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of contributors for a given requirement",
            "schema": { "$ref": "#/definitions/RequirementContributors" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements/{requirementId}/developers": {
      "get": {
        "tags": ["requirements"],
        "summary": "This method returns the list of developers for a specific requirement.",
        "description": "",
        "operationId": "getDevelopersForRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Elements of comments by page",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of developers for a given requirement",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/User" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "post": {
        "tags": ["requirements"],
        "summary": "This method add the current user to the developers list of a given requirement.",
        "description": "",
        "operationId": "developRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns the requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["requirements"],
        "summary": "This method remove the current user from a developers list of a given requirement.",
        "description": "",
        "operationId": "undevelopRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns the requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements/{requirementId}/followers": {
      "get": {
        "tags": ["requirements"],
        "summary": "This method returns the list of followers for a specific requirement.",
        "description": "",
        "operationId": "getFollowersForRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Elements of comments by page",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of followers for a given requirement",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/User" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "post": {
        "tags": ["requirements"],
        "summary": "This method add the current user to the followers list of a given requirement.",
        "description": "",
        "operationId": "followRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "201": { "description": "Returns the requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["requirements"],
        "summary": "This method removes the current user from a followers list of a given requirement.",
        "description": "",
        "operationId": "unfollowRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns the requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements/{requirementId}/leaddevelopers": {
      "post": {
        "tags": ["requirements"],
        "summary": "This method set the current user as lead developer for a given requirement.",
        "description": "",
        "operationId": "leaddevelopRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns the requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["requirements"],
        "summary": "This method removes the current user as lead developer for a given requirement.",
        "description": "",
        "operationId": "unleaddevelopRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns the requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements/{requirementId}/realized": {
      "post": {
        "tags": ["requirements"],
        "summary": "This method set the realized field to now for a given requirement.",
        "description": "",
        "operationId": "realize",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns the requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["requirements"],
        "summary": "This method removes the realized information for the given requirement.",
        "description": "",
        "operationId": "unrealize",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns the requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements/{requirementId}/statistics": {
      "get": {
        "tags": ["requirements"],
        "summary": "This method allows to retrieve statistics for one requirement.",
        "description": "",
        "operationId": "getStatisticsForRequirement",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "since",
            "in": "query",
            "description": "Since timestamp, ISO-8601 e.g. 2017-12-30 or 2017-12-30T18:30:00Z",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Returns statistics", "schema": { "$ref": "#/definitions/Statistic" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/requirements/{requirementId}/votes": {
      "post": {
        "tags": ["requirements"],
        "summary": "This method creates a vote for the given requirement in the name of the current user.",
        "description": "",
        "operationId": "vote",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "name": "direction",
            "in": "query",
            "description": "Vote direction",
            "required": false,
            "type": "string",
            "default": "up",
            "enum": ["up", "down"]
          }
        ],
        "responses": {
          "200": { "description": "Returns the requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "delete": {
        "tags": ["requirements"],
        "summary": "This method removes the vote of the given requirement made by the current user.",
        "description": "",
        "operationId": "unvote",
        "produces": ["application/json"],
        "parameters": [
          { "name": "requirementId", "in": "path", "required": true, "type": "integer", "format": "int32" }
        ],
        "responses": {
          "200": { "description": "Returns the requirement", "schema": { "$ref": "#/definitions/Requirement" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/statistics": {
      "get": {
        "summary": "This method allows to retrieve statistics over all projects.",
        "description": "",
        "operationId": "getStatistics",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "description": "Since timestamp, ISO-8601 e.g. 2017-12-30 or 2017-12-30T18:30:00Z",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Returns statistics", "schema": { "$ref": "#/definitions/Statistic" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "This method allows to retrieve the active user.",
        "description": "",
        "operationId": "getActiveUser",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": { "description": "Returns the active user", "schema": { "$ref": "#/definitions/User" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": ["users"],
        "summary": "This method allows to retrieve a certain user.",
        "description": "",
        "operationId": "getUser",
        "produces": ["application/json"],
        "parameters": [{ "name": "userId", "in": "path", "required": true, "type": "integer", "format": "int32" }],
        "responses": {
          "200": { "description": "Returns a certain user", "schema": { "$ref": "#/definitions/User" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      },
      "put": {
        "tags": ["users"],
        "summary": "This method allows to update the user profile.",
        "description": "",
        "operationId": "updateUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "type": "integer", "format": "int32" },
          {
            "in": "body",
            "name": "body",
            "description": "User entity as JSON",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "200": { "description": "Returns the updated user", "schema": { "$ref": "#/definitions/User" } },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server problems" },
          "404": { "description": "Not found" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    },
    "/version": {
      "get": {
        "summary": "This method allows to retrieve the service name version.",
        "description": "",
        "operationId": "getServiceNameVersion",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": { "description": "Returns service name version" },
          "500": { "description": "Internal server problems" }
        },
        "security": [{ "defaultProvider": ["openid", "email", "profile"] }]
      }
    }
  },
  "securityDefinitions": {
    "defaultProvider": {
      "type": "oauth2",
      "authorizationUrl": "https://api.learning-layers.eu/o/oauth2/authorize",
      "flow": "implicit",
      "scopes": { "openid": "Access Identity", "profile": "Access Profile Data", "email": "Access E-Mail-Address" }
    }
  },
  "definitions": {
    "Requirement": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "description": { "type": "string" },
        "realized": { "type": "string", "format": "date-time" },
        "projectId": { "type": "integer", "format": "int32" },
        "creator": { "$ref": "#/definitions/User" },
        "leadDeveloper": { "$ref": "#/definitions/User" },
        "categories": { "type": "array", "items": { "$ref": "#/definitions/Category" } },
        "attachments": { "type": "array", "items": { "$ref": "#/definitions/Attachment" } },
        "creationDate": { "type": "string", "format": "date-time" },
        "lastUpdatedDate": { "type": "string", "format": "date-time" },
        "numberOfComments": { "type": "integer", "format": "int32" },
        "numberOfAttachments": { "type": "integer", "format": "int32" },
        "numberOfFollowers": { "type": "integer", "format": "int32" },
        "upVotes": { "type": "integer", "format": "int32" },
        "downVotes": { "type": "integer", "format": "int32" },
        "userVoted": { "type": "string", "enum": ["UP_VOTE", "DOWN_VOTE", "NO_VOTE"] },
        "isFollower": { "type": "boolean", "default": false },
        "isDeveloper": { "type": "boolean", "default": false },
        "isContributor": { "type": "boolean", "default": false }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "message": { "type": "string" },
        "replyToComment": { "type": "integer", "format": "int32" },
        "requirementId": { "type": "integer", "format": "int32" },
        "creator": { "$ref": "#/definitions/User" },
        "creationDate": { "type": "string", "format": "date-time" },
        "lastUpdatedDate": { "type": "string", "format": "date-time" }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "description": { "type": "string" },
        "visibility": { "type": "boolean", "default": false },
        "defaultCategoryId": { "type": "integer", "format": "int32" },
        "leader": { "$ref": "#/definitions/User" },
        "creationDate": { "type": "string", "format": "date-time" },
        "lastUpdatedDate": { "type": "string", "format": "date-time" },
        "numberOfCategories": { "type": "integer", "format": "int32" },
        "numberOfRequirements": { "type": "integer", "format": "int32" },
        "numberOfFollowers": { "type": "integer", "format": "int32" },
        "isFollower": { "type": "boolean", "default": false }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "description": { "type": "string" },
        "projectId": { "type": "integer", "format": "int32" },
        "leader": { "$ref": "#/definitions/User" },
        "creationDate": { "type": "string", "format": "date-time" },
        "lastUpdatedDate": { "type": "string", "format": "date-time" },
        "numberOfRequirements": { "type": "integer", "format": "int32" },
        "numberOfFollowers": { "type": "integer", "format": "int32" },
        "isFollower": { "type": "boolean", "default": false }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "userName": { "type": "string" },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "admin": { "type": "boolean", "default": false },
        "las2peerId": { "type": "integer", "format": "int64" },
        "profileImage": { "type": "string" },
        "emailLeadSubscription": { "type": "boolean", "default": false },
        "emailFollowSubscription": { "type": "boolean", "default": false },
        "creationDate": { "type": "string", "format": "date-time" },
        "lastUpdatedDate": { "type": "string", "format": "date-time" },
        "lastLoginDate": { "type": "string", "format": "date-time" }
      }
    },
    "Statistic": {
      "type": "object",
      "properties": {
        "numberOfProjects": { "type": "integer", "format": "int32" },
        "numberOfCategories": { "type": "integer", "format": "int32" },
        "numberOfRequirements": { "type": "integer", "format": "int32" },
        "numberOfComments": { "type": "integer", "format": "int32" },
        "numberOfAttachments": { "type": "integer", "format": "int32" },
        "numberOfVotes": { "type": "integer", "format": "int32" }
      }
    },
    "ProjectContributors": {
      "type": "object",
      "properties": {
        "leader": { "$ref": "#/definitions/User" },
        "categoryLeader": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "requirementCreator": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "leadDeveloper": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "developers": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "commentCreator": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "attachmentCreator": { "type": "array", "items": { "$ref": "#/definitions/User" } }
      }
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "description": { "type": "string" },
        "mimeType": { "type": "string" },
        "identifier": { "type": "string" },
        "fileUrl": { "type": "string" },
        "requirementId": { "type": "integer", "format": "int32" },
        "creator": { "$ref": "#/definitions/User" },
        "creationDate": { "type": "string", "format": "date-time" },
        "lastUpdatedDate": { "type": "string", "format": "date-time" }
      }
    },
    "CategoryContributors": {
      "type": "object",
      "properties": {
        "leader": { "$ref": "#/definitions/User" },
        "requirementCreator": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "leadDeveloper": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "developers": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "commentCreator": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "attachmentCreator": { "type": "array", "items": { "$ref": "#/definitions/User" } }
      }
    },
    "RequirementContributors": {
      "type": "object",
      "properties": {
        "creator": { "$ref": "#/definitions/User" },
        "leadDeveloper": { "$ref": "#/definitions/User" },
        "developers": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "commentCreator": { "type": "array", "items": { "$ref": "#/definitions/User" } },
        "attachmentCreator": { "type": "array", "items": { "$ref": "#/definitions/User" } }
      }
    }
  }
}
